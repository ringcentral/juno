var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __require = /* @__PURE__ */ ((x2) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x2, {
  get: (a2, b2) => (typeof require !== "undefined" ? require : a2)[b2]
}) : x2)(function(x2) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x2 + '" is not supported');
});
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module, desc) => {
  if (module && typeof module === "object" || typeof module === "function") {
    for (let key of __getOwnPropNames(module))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module) => {
  return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", module && module.__esModule && "default" in module ? { get: () => module.default, enumerable: true } : { value: module, enumerable: true })), module);
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};

// node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol2 = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol2 ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol2 ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol2 ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol2 ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol2 ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol2 ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol2 ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol2 ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol2 ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol2 ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol2 ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol2 ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol2 ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol2 ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol2 ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol2 ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol2 ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol2 ? Symbol.for("react.scope") : 60119;
        function isValidElementType2(type3) {
          return typeof type3 === "string" || typeof type3 === "function" || type3 === REACT_FRAGMENT_TYPE || type3 === REACT_CONCURRENT_MODE_TYPE || type3 === REACT_PROFILER_TYPE || type3 === REACT_STRICT_MODE_TYPE || type3 === REACT_SUSPENSE_TYPE || type3 === REACT_SUSPENSE_LIST_TYPE || typeof type3 === "object" && type3 !== null && (type3.$$typeof === REACT_LAZY_TYPE || type3.$$typeof === REACT_MEMO_TYPE || type3.$$typeof === REACT_PROVIDER_TYPE || type3.$$typeof === REACT_CONTEXT_TYPE || type3.$$typeof === REACT_FORWARD_REF_TYPE || type3.$$typeof === REACT_FUNDAMENTAL_TYPE || type3.$$typeof === REACT_RESPONDER_TYPE || type3.$$typeof === REACT_SCOPE_TYPE || type3.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object3) {
          if (typeof object3 === "object" && object3 !== null) {
            var $$typeof = object3.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type3 = object3.type;
                switch (type3) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type3;
                  default:
                    var $$typeofType = type3 && type3.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef2 = REACT_FORWARD_REF_TYPE;
        var Fragment13 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo2 = REACT_MEMO_TYPE;
        var Portal3 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object3) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object3) || typeOf(object3) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object3) {
          return typeOf(object3) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer2(object3) {
          return typeOf(object3) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object3) {
          return typeOf(object3) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object3) {
          return typeof object3 === "object" && object3 !== null && object3.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef2(object3) {
          return typeOf(object3) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment11(object3) {
          return typeOf(object3) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object3) {
          return typeOf(object3) === REACT_LAZY_TYPE;
        }
        function isMemo(object3) {
          return typeOf(object3) === REACT_MEMO_TYPE;
        }
        function isPortal(object3) {
          return typeOf(object3) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object3) {
          return typeOf(object3) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object3) {
          return typeOf(object3) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object3) {
          return typeOf(object3) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef2;
        exports.Fragment = Fragment13;
        exports.Lazy = Lazy;
        exports.Memo = Memo2;
        exports.Portal = Portal3;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer2;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef2;
        exports.isFragment = isFragment11;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType2;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/prop-types/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/prop-types/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty2 = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i2 = 0; i2 < 10; i2++) {
          test2["_" + String.fromCharCode(i2)] = i2;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
          return test2[n2];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s2 = 1; s2 < arguments.length; s2++) {
        from = Object(arguments[s2]);
        for (var key in from) {
          if (hasOwnProperty2.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i2 = 0; i2 < symbols.length; i2++) {
            if (propIsEnumerable.call(from, symbols[i2])) {
              to[symbols[i2]] = from[symbols[i2]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = Function.call.bind(Object.prototype.hasOwnProperty);
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x2) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values6, location, componentName2, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error4;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName2 || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.");
                err.name = "Invariant Violation";
                throw err;
              }
              error4 = typeSpecs[typeSpecName](values6, typeSpecName, componentName2, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error4 = ex;
            }
            if (error4 && !(error4 instanceof Error)) {
              printWarning((componentName2 || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error4 + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
            }
            if (error4 instanceof Error && !(error4.message in loggedTypeFailures)) {
              loggedTypeFailures[error4.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning("Failed " + location + " type: " + error4.message + (stack != null ? stack : ""));
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var checkPropTypes = require_checkPropTypes();
    var has = Function.call.bind(Object.prototype.hasOwnProperty);
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x2) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement20, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is3(x2, y2) {
        if (x2 === y2) {
          return x2 !== 0 || 1 / x2 === 1 / y2;
        } else {
          return x2 !== x2 && y2 !== y2;
        }
      }
      function PropTypeError(message) {
        this.message = message;
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName2, location, propFullName, secret) {
          componentName2 = componentName2 || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName2 + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName2 + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName2 + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName2 + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName2, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName2, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName2 + "`, expected ") + ("`" + expectedType + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName2, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName2 + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName2 + "`, expected an array."));
          }
          for (var i2 = 0; i2 < propValue.length; i2++) {
            var error4 = typeChecker(propValue, i2, componentName2, location, propFullName + "[" + i2 + "]", ReactPropTypesSecret);
            if (error4 instanceof Error) {
              return error4;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName2, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement20(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName2 + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName2, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName2 + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName2, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName2 + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName2, location, propFullName) {
          var propValue = props[propName];
          for (var i2 = 0; i2 < expectedValues.length; i2++) {
            if (is3(propValue, expectedValues[i2])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type3 = getPreciseType(value);
            if (type3 === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName2 + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName2, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName2 + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName2 + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error4 = typeChecker(propValue, key, componentName2, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error4 instanceof Error) {
                return error4;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
          var checker = arrayOfTypeCheckers[i2];
          if (typeof checker !== "function") {
            printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i2 + ".");
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName2, location, propFullName) {
          for (var i3 = 0; i3 < arrayOfTypeCheckers.length; i3++) {
            var checker2 = arrayOfTypeCheckers[i3];
            if (checker2(props, propName, componentName2, location, propFullName, ReactPropTypesSecret) == null) {
              return null;
            }
          }
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName2 + "`."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName2, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName2 + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName2, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName2 + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (!checker) {
              continue;
            }
            var error4 = checker(propValue, key, componentName2, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error4) {
              return error4;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName2, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName2 + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (!checker) {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName2 + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
            }
            var error4 = checker(propValue, key, componentName2, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error4) {
              return error4;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement20(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type3 = getPreciseType(value);
        switch (type3) {
          case "array":
          case "object":
            return "an " + type3;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type3;
          default:
            return type3;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development2 = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        var REACT_FRAGMENT_TYPE = 60107;
        var REACT_STRICT_MODE_TYPE = 60108;
        var REACT_PROFILER_TYPE = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        var REACT_SUSPENSE_TYPE = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
          REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
          REACT_PROFILER_TYPE = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        var enableScopeAPI = false;
        function isValidElementType2(type3) {
          if (typeof type3 === "string" || typeof type3 === "function") {
            return true;
          }
          if (type3 === REACT_FRAGMENT_TYPE || type3 === REACT_PROFILER_TYPE || type3 === REACT_DEBUG_TRACING_MODE_TYPE || type3 === REACT_STRICT_MODE_TYPE || type3 === REACT_SUSPENSE_TYPE || type3 === REACT_SUSPENSE_LIST_TYPE || type3 === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
            return true;
          }
          if (typeof type3 === "object" && type3 !== null) {
            if (type3.$$typeof === REACT_LAZY_TYPE || type3.$$typeof === REACT_MEMO_TYPE || type3.$$typeof === REACT_PROVIDER_TYPE || type3.$$typeof === REACT_CONTEXT_TYPE || type3.$$typeof === REACT_FORWARD_REF_TYPE || type3.$$typeof === REACT_FUNDAMENTAL_TYPE || type3.$$typeof === REACT_BLOCK_TYPE || type3[0] === REACT_SERVER_BLOCK_TYPE) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object3) {
          if (typeof object3 === "object" && object3 !== null) {
            var $$typeof = object3.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type3 = object3.type;
                switch (type3) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type3;
                  default:
                    var $$typeofType = type3 && type3.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef2 = REACT_FORWARD_REF_TYPE;
        var Fragment13 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo2 = REACT_MEMO_TYPE;
        var Portal3 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object3) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object3) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer2(object3) {
          return typeOf(object3) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object3) {
          return typeOf(object3) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object3) {
          return typeof object3 === "object" && object3 !== null && object3.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef2(object3) {
          return typeOf(object3) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment11(object3) {
          return typeOf(object3) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object3) {
          return typeOf(object3) === REACT_LAZY_TYPE;
        }
        function isMemo(object3) {
          return typeOf(object3) === REACT_MEMO_TYPE;
        }
        function isPortal(object3) {
          return typeOf(object3) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object3) {
          return typeOf(object3) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object3) {
          return typeOf(object3) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object3) {
          return typeOf(object3) === REACT_SUSPENSE_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef2;
        exports.Fragment = Fragment13;
        exports.Lazy = Lazy;
        exports.Memo = Memo2;
        exports.Portal = Portal3;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer2;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef2;
        exports.isFragment = isFragment11;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType2;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is2 = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development2();
    }
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development3 = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol2 = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol2 ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol2 ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol2 ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol2 ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol2 ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol2 ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol2 ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol2 ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol2 ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol2 ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol2 ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol2 ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol2 ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol2 ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol2 ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol2 ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol2 ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol2 ? Symbol.for("react.scope") : 60119;
        function isValidElementType2(type3) {
          return typeof type3 === "string" || typeof type3 === "function" || type3 === REACT_FRAGMENT_TYPE || type3 === REACT_CONCURRENT_MODE_TYPE || type3 === REACT_PROFILER_TYPE || type3 === REACT_STRICT_MODE_TYPE || type3 === REACT_SUSPENSE_TYPE || type3 === REACT_SUSPENSE_LIST_TYPE || typeof type3 === "object" && type3 !== null && (type3.$$typeof === REACT_LAZY_TYPE || type3.$$typeof === REACT_MEMO_TYPE || type3.$$typeof === REACT_PROVIDER_TYPE || type3.$$typeof === REACT_CONTEXT_TYPE || type3.$$typeof === REACT_FORWARD_REF_TYPE || type3.$$typeof === REACT_FUNDAMENTAL_TYPE || type3.$$typeof === REACT_RESPONDER_TYPE || type3.$$typeof === REACT_SCOPE_TYPE || type3.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object3) {
          if (typeof object3 === "object" && object3 !== null) {
            var $$typeof = object3.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type3 = object3.type;
                switch (type3) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type3;
                  default:
                    var $$typeofType = type3 && type3.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef2 = REACT_FORWARD_REF_TYPE;
        var Fragment13 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo2 = REACT_MEMO_TYPE;
        var Portal3 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object3) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object3) || typeOf(object3) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object3) {
          return typeOf(object3) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer2(object3) {
          return typeOf(object3) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object3) {
          return typeOf(object3) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object3) {
          return typeof object3 === "object" && object3 !== null && object3.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef2(object3) {
          return typeOf(object3) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment11(object3) {
          return typeOf(object3) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object3) {
          return typeOf(object3) === REACT_LAZY_TYPE;
        }
        function isMemo(object3) {
          return typeOf(object3) === REACT_MEMO_TYPE;
        }
        function isPortal(object3) {
          return typeOf(object3) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object3) {
          return typeOf(object3) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object3) {
          return typeOf(object3) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object3) {
          return typeOf(object3) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef2;
        exports.Fragment = Fragment13;
        exports.Lazy = Lazy;
        exports.Memo = Memo2;
        exports.Portal = Portal3;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer2;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef2;
        exports.isFragment = isFragment11;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType2;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/index.js
var require_react_is3 = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development3();
    }
  }
});

// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
    "use strict";
    var reactIs = require_react_is3();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var MEMO_STATICS = {
      "$$typeof": true,
      compare: true,
      defaultProps: true,
      displayName: true,
      propTypes: true,
      type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
      if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
      }
      return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
    }
    var defineProperty2 = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics4(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
          var inheritedComponent = getPrototypeOf(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype) {
            hoistNonReactStatics4(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys3 = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys3 = keys3.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i2 = 0; i2 < keys3.length; ++i2) {
          var key = keys3[i2];
          if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
            var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
            try {
              defineProperty2(targetComponent, key, descriptor);
            } catch (e2) {
            }
          }
        }
      }
      return targetComponent;
    }
    module.exports = hoistNonReactStatics4;
  }
});

// node_modules/shallowequal/index.js
var require_shallowequal = __commonJS({
  "node_modules/shallowequal/index.js"(exports, module) {
    module.exports = function shallowEqual3(objA, objB, compare, compareContext) {
      var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
      if (ret !== void 0) {
        return !!ret;
      }
      if (objA === objB) {
        return true;
      }
      if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
        return false;
      }
      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);
      if (keysA.length !== keysB.length) {
        return false;
      }
      var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
      for (var idx = 0; idx < keysA.length; idx++) {
        var key = keysA[idx];
        if (!bHasOwnProperty(key)) {
          return false;
        }
        var valueA = objA[key];
        var valueB = objB[key];
        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
        if (ret === false || ret === void 0 && valueA !== valueB) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "node_modules/lodash/isArray.js"(exports, module) {
    var isArray2 = Array.isArray;
    module.exports = isArray2;
  }
});

// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "node_modules/lodash/_freeGlobal.js"(exports, module) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// node_modules/lodash/_root.js
var require_root = __commonJS({
  "node_modules/lodash/_root.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "node_modules/lodash/_Symbol.js"(exports, module) {
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "node_modules/lodash/_arrayMap.js"(exports, module) {
    function arrayMap(array, iteratee) {
      var index4 = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index4 < length) {
        result[index4] = iteratee(array[index4], index4, array);
      }
      return result;
    }
    module.exports = arrayMap;
  }
});

// node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "node_modules/lodash/_getRawTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty2.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e2) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "node_modules/lodash/_objectToString.js"(exports, module) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "node_modules/lodash/_baseGetTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "node_modules/lodash/isObjectLike.js"(exports, module) {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  }
});

// node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/lodash/isSymbol.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/lodash/_baseToString.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray2 = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray2(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/lodash/toString.js"(exports, module) {
    var baseToString = require_baseToString();
    function toString2(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString2;
  }
});

// node_modules/lodash/uniqueId.js
var require_uniqueId = __commonJS({
  "node_modules/lodash/uniqueId.js"(exports, module) {
    var toString2 = require_toString();
    var idCounter = 0;
    function uniqueId4(prefix4) {
      var id3 = ++idCounter;
      return toString2(prefix4) + id3;
    }
    module.exports = uniqueId4;
  }
});

// node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "node_modules/lodash/isObject.js"(exports, module) {
    function isObject(value) {
      var type3 = typeof value;
      return value != null && (type3 == "object" || type3 == "function");
    }
    module.exports = isObject;
  }
});

// node_modules/lodash/now.js
var require_now = __commonJS({
  "node_modules/lodash/now.js"(exports, module) {
    var root = require_root();
    var now2 = function() {
      return root.Date.now();
    };
    module.exports = now2;
  }
});

// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string3) {
      var index4 = string3.length;
      while (index4-- && reWhitespace.test(string3.charAt(index4))) {
      }
      return index4;
    }
    module.exports = trimmedEndIndex;
  }
});

// node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "node_modules/lodash/_baseTrim.js"(exports, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string3) {
      return string3 ? string3.slice(0, trimmedEndIndex(string3) + 1).replace(reTrimStart, "") : string3;
    }
    module.exports = baseTrim;
  }
});

// node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "node_modules/lodash/toNumber.js"(exports, module) {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// node_modules/lodash/debounce.js
var require_debounce = __commonJS({
  "node_modules/lodash/debounce.js"(exports, module) {
    var isObject = require_isObject();
    var now2 = require_now();
    var toNumber = require_toNumber();
    var FUNC_ERROR_TEXT = "Expected a function";
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function debounce5(func4, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func4 != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func4.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now2();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush3() {
        return timerId === void 0 ? result : trailingEdge(now2());
      }
      function debounced() {
        var time = now2(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush3;
      return debounced;
    }
    module.exports = debounce5;
  }
});

// node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "node_modules/lodash/_overArg.js"(exports, module) {
    function overArg(func4, transform4) {
      return function(arg) {
        return func4(transform4(arg));
      };
    }
    module.exports = overArg;
  }
});

// node_modules/lodash/_getPrototype.js
var require_getPrototype = __commonJS({
  "node_modules/lodash/_getPrototype.js"(exports, module) {
    var overArg = require_overArg();
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    module.exports = getPrototype;
  }
});

// node_modules/lodash/isPlainObject.js
var require_isPlainObject = __commonJS({
  "node_modules/lodash/isPlainObject.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var getPrototype = require_getPrototype();
    var isObjectLike = require_isObjectLike();
    var objectTag = "[object Object]";
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    function isPlainObject5(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty2.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module.exports = isPlainObject5;
  }
});

// node_modules/@material-ui/core/utils/getScrollbarSize.js
var require_getScrollbarSize = __commonJS({
  "node_modules/@material-ui/core/utils/getScrollbarSize.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getScrollbarSize3;
    function getScrollbarSize3() {
      var scrollDiv = document.createElement("div");
      scrollDiv.style.width = "99px";
      scrollDiv.style.height = "99px";
      scrollDiv.style.position = "absolute";
      scrollDiv.style.top = "-9999px";
      scrollDiv.style.overflow = "scroll";
      document.body.appendChild(scrollDiv);
      var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
      document.body.removeChild(scrollDiv);
      return scrollbarSize;
    }
  }
});

// node_modules/@material-ui/core/InputBase/utils.js
var require_utils = __commonJS({
  "node_modules/@material-ui/core/InputBase/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.hasValue = hasValue3;
    exports.isFilled = isFilled4;
    exports.isAdornedStart = isAdornedStart2;
    function hasValue3(value) {
      return value != null && !(Array.isArray(value) && value.length === 0);
    }
    function isFilled4(obj) {
      var SSR = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      return obj && (hasValue3(obj.value) && obj.value !== "" || SSR && hasValue3(obj.defaultValue) && obj.defaultValue !== "");
    }
    function isAdornedStart2(obj) {
      return obj.startAdornment;
    }
  }
});

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/lodash/_listCacheClear.js"(exports, module) {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/lodash/eq.js"(exports, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/lodash/_assocIndexOf.js"(exports, module) {
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/lodash/_listCacheDelete.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index4 = assocIndexOf(data, key);
      if (index4 < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index4 == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index4, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/lodash/_listCacheGet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index4 = assocIndexOf(data, key);
      return index4 < 0 ? void 0 : data[index4][1];
    }
    module.exports = listCacheGet;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/lodash/_listCacheHas.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/lodash/_listCacheSet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index4 = assocIndexOf(data, key);
      if (index4 < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index4][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/lodash/_ListCache.js"(exports, module) {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index4 = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index4 < length) {
        var entry = entries[index4];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "node_modules/lodash/_stackClear.js"(exports, module) {
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "node_modules/lodash/_stackDelete.js"(exports, module) {
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "node_modules/lodash/_stackGet.js"(exports, module) {
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "node_modules/lodash/_stackHas.js"(exports, module) {
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  }
});

// node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "node_modules/lodash/isFunction.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction3(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction3;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/lodash/_coreJsData.js"(exports, module) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/lodash/_isMasked.js"(exports, module) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func4) {
      return !!maskSrcKey && maskSrcKey in func4;
    }
    module.exports = isMasked;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/lodash/_toSource.js"(exports, module) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func4) {
      if (func4 != null) {
        try {
          return funcToString.call(func4);
        } catch (e2) {
        }
        try {
          return func4 + "";
        } catch (e2) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/lodash/_baseIsNative.js"(exports, module) {
    var isFunction3 = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction3(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/lodash/_getValue.js"(exports, module) {
    function getValue4(object3, key) {
      return object3 == null ? void 0 : object3[key];
    }
    module.exports = getValue4;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/lodash/_getNative.js"(exports, module) {
    var baseIsNative = require_baseIsNative();
    var getValue4 = require_getValue();
    function getNative(object3, key) {
      var value = getValue4(object3, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/lodash/_Map.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Map2 = getNative(root, "Map");
    module.exports = Map2;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/lodash/_nativeCreate.js"(exports, module) {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/lodash/_hashClear.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/lodash/_hashDelete.js"(exports, module) {
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/lodash/_hashGet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty2.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/lodash/_hashHas.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty2.call(data, key);
    }
    module.exports = hashHas;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/lodash/_hashSet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/lodash/_Hash.js"(exports, module) {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash2(entries) {
      var index4 = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index4 < length) {
        var entry = entries[index4];
        this.set(entry[0], entry[1]);
      }
    }
    Hash2.prototype.clear = hashClear;
    Hash2.prototype["delete"] = hashDelete;
    Hash2.prototype.get = hashGet;
    Hash2.prototype.has = hashHas;
    Hash2.prototype.set = hashSet;
    module.exports = Hash2;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/lodash/_mapCacheClear.js"(exports, module) {
    var Hash2 = require_Hash();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash2(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash2()
      };
    }
    module.exports = mapCacheClear;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/lodash/_isKeyable.js"(exports, module) {
    function isKeyable(value) {
      var type3 = typeof value;
      return type3 == "string" || type3 == "number" || type3 == "symbol" || type3 == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/lodash/_getMapData.js"(exports, module) {
    var isKeyable = require_isKeyable();
    function getMapData(map2, key) {
      var data = map2.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/lodash/_mapCacheGet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/lodash/_mapCacheHas.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/lodash/_mapCacheSet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/lodash/_MapCache.js"(exports, module) {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index4 = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index4 < length) {
        var entry = entries[index4];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "node_modules/lodash/_stackSet.js"(exports, module) {
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "node_modules/lodash/_Stack.js"(exports, module) {
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    function arrayEach(array, iteratee) {
      var index4 = -1, length = array == null ? 0 : array.length;
      while (++index4 < length) {
        if (iteratee(array[index4], index4, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/lodash/_defineProperty.js"(exports, module) {
    var getNative = require_getNative();
    var defineProperty2 = function() {
      try {
        var func4 = getNative(Object, "defineProperty");
        func4({}, "", {});
        return func4;
      } catch (e2) {
      }
    }();
    module.exports = defineProperty2;
  }
});

// node_modules/lodash/_baseAssignValue.js
var require_baseAssignValue = __commonJS({
  "node_modules/lodash/_baseAssignValue.js"(exports, module) {
    var defineProperty2 = require_defineProperty();
    function baseAssignValue(object3, key, value) {
      if (key == "__proto__" && defineProperty2) {
        defineProperty2(object3, key, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object3[key] = value;
      }
    }
    module.exports = baseAssignValue;
  }
});

// node_modules/lodash/_assignValue.js
var require_assignValue = __commonJS({
  "node_modules/lodash/_assignValue.js"(exports, module) {
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function assignValue(object3, key, value) {
      var objValue = object3[key];
      if (!(hasOwnProperty2.call(object3, key) && eq(objValue, value)) || value === void 0 && !(key in object3)) {
        baseAssignValue(object3, key, value);
      }
    }
    module.exports = assignValue;
  }
});

// node_modules/lodash/_copyObject.js
var require_copyObject = __commonJS({
  "node_modules/lodash/_copyObject.js"(exports, module) {
    var assignValue = require_assignValue();
    var baseAssignValue = require_baseAssignValue();
    function copyObject(source, props, object3, customizer) {
      var isNew = !object3;
      object3 || (object3 = {});
      var index4 = -1, length = props.length;
      while (++index4 < length) {
        var key = props[index4];
        var newValue = customizer ? customizer(object3[key], source[key], key, object3, source) : void 0;
        if (newValue === void 0) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object3, key, newValue);
        } else {
          assignValue(object3, key, newValue);
        }
      }
      return object3;
    }
    module.exports = copyObject;
  }
});

// node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "node_modules/lodash/_baseTimes.js"(exports, module) {
    function baseTimes(n2, iteratee) {
      var index4 = -1, result = Array(n2);
      while (++index4 < n2) {
        result[index4] = iteratee(index4);
      }
      return result;
    }
    module.exports = baseTimes;
  }
});

// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "node_modules/lodash/_baseIsArguments.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  }
});

// node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/lodash/isArguments.js"(exports, module) {
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty2.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  }
});

// node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "node_modules/lodash/stubFalse.js"(exports, module) {
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  }
});

// node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "node_modules/lodash/isBuffer.js"(exports, module) {
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  }
});

// node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "node_modules/lodash/_isIndex.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type3 = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type3 == "number" || type3 != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "node_modules/lodash/isLength.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  }
});

// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "node_modules/lodash/_baseIsTypedArray.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  }
});

// node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "node_modules/lodash/_baseUnary.js"(exports, module) {
    function baseUnary(func4) {
      return function(value) {
        return func4(value);
      };
    }
    module.exports = baseUnary;
  }
});

// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "node_modules/lodash/_nodeUtil.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e2) {
      }
    }();
    module.exports = nodeUtil;
  }
});

// node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "node_modules/lodash/isTypedArray.js"(exports, module) {
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  }
});

// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "node_modules/lodash/_arrayLikeKeys.js"(exports, module) {
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray2 = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray2(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty2.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  }
});

// node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "node_modules/lodash/_isPrototype.js"(exports, module) {
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  }
});

// node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "node_modules/lodash/_nativeKeys.js"(exports, module) {
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module.exports = nativeKeys;
  }
});

// node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "node_modules/lodash/_baseKeys.js"(exports, module) {
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function baseKeys(object3) {
      if (!isPrototype(object3)) {
        return nativeKeys(object3);
      }
      var result = [];
      for (var key in Object(object3)) {
        if (hasOwnProperty2.call(object3, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeys;
  }
});

// node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "node_modules/lodash/isArrayLike.js"(exports, module) {
    var isFunction3 = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction3(value);
    }
    module.exports = isArrayLike;
  }
});

// node_modules/lodash/keys.js
var require_keys = __commonJS({
  "node_modules/lodash/keys.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys3(object3) {
      return isArrayLike(object3) ? arrayLikeKeys(object3) : baseKeys(object3);
    }
    module.exports = keys3;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports, module) {
    var copyObject = require_copyObject();
    var keys3 = require_keys();
    function baseAssign(object3, source) {
      return object3 && copyObject(source, keys3(source), object3);
    }
    module.exports = baseAssign;
  }
});

// node_modules/lodash/_nativeKeysIn.js
var require_nativeKeysIn = __commonJS({
  "node_modules/lodash/_nativeKeysIn.js"(exports, module) {
    function nativeKeysIn(object3) {
      var result = [];
      if (object3 != null) {
        for (var key in Object(object3)) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = nativeKeysIn;
  }
});

// node_modules/lodash/_baseKeysIn.js
var require_baseKeysIn = __commonJS({
  "node_modules/lodash/_baseKeysIn.js"(exports, module) {
    var isObject = require_isObject();
    var isPrototype = require_isPrototype();
    var nativeKeysIn = require_nativeKeysIn();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function baseKeysIn(object3) {
      if (!isObject(object3)) {
        return nativeKeysIn(object3);
      }
      var isProto = isPrototype(object3), result = [];
      for (var key in object3) {
        if (!(key == "constructor" && (isProto || !hasOwnProperty2.call(object3, key)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeysIn;
  }
});

// node_modules/lodash/keysIn.js
var require_keysIn = __commonJS({
  "node_modules/lodash/keysIn.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeysIn = require_baseKeysIn();
    var isArrayLike = require_isArrayLike();
    function keysIn(object3) {
      return isArrayLike(object3) ? arrayLikeKeys(object3, true) : baseKeysIn(object3);
    }
    module.exports = keysIn;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object3, source) {
      return object3 && copyObject(source, keysIn(source), object3);
    }
    module.exports = baseAssignIn;
  }
});

// node_modules/lodash/_cloneBuffer.js
var require_cloneBuffer = __commonJS({
  "node_modules/lodash/_cloneBuffer.js"(exports, module) {
    var root = require_root();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module.exports = cloneBuffer;
  }
});

// node_modules/lodash/_copyArray.js
var require_copyArray = __commonJS({
  "node_modules/lodash/_copyArray.js"(exports, module) {
    function copyArray(source, array) {
      var index4 = -1, length = source.length;
      array || (array = Array(length));
      while (++index4 < length) {
        array[index4] = source[index4];
      }
      return array;
    }
    module.exports = copyArray;
  }
});

// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "node_modules/lodash/_arrayFilter.js"(exports, module) {
    function arrayFilter(array, predicate) {
      var index4 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index4 < length) {
        var value = array[index4];
        if (predicate(value, index4, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  }
});

// node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "node_modules/lodash/stubArray.js"(exports, module) {
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  }
});

// node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "node_modules/lodash/_getSymbols.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object3) {
      if (object3 == null) {
        return [];
      }
      object3 = Object(object3);
      return arrayFilter(nativeGetSymbols(object3), function(symbol) {
        return propertyIsEnumerable.call(object3, symbol);
      });
    };
    module.exports = getSymbols;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object3) {
      return copyObject(source, getSymbols(source), object3);
    }
    module.exports = copySymbols;
  }
});

// node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "node_modules/lodash/_arrayPush.js"(exports, module) {
    function arrayPush(array, values6) {
      var index4 = -1, length = values6.length, offset7 = array.length;
      while (++index4 < length) {
        array[offset7 + index4] = values6[index4];
      }
      return array;
    }
    module.exports = arrayPush;
  }
});

// node_modules/lodash/_getSymbolsIn.js
var require_getSymbolsIn = __commonJS({
  "node_modules/lodash/_getSymbolsIn.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var getPrototype = require_getPrototype();
    var getSymbols = require_getSymbols();
    var stubArray = require_stubArray();
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object3) {
      var result = [];
      while (object3) {
        arrayPush(result, getSymbols(object3));
        object3 = getPrototype(object3);
      }
      return result;
    };
    module.exports = getSymbolsIn;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object3) {
      return copyObject(source, getSymbolsIn(source), object3);
    }
    module.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "node_modules/lodash/_baseGetAllKeys.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isArray2 = require_isArray();
    function baseGetAllKeys(object3, keysFunc, symbolsFunc) {
      var result = keysFunc(object3);
      return isArray2(object3) ? result : arrayPush(result, symbolsFunc(object3));
    }
    module.exports = baseGetAllKeys;
  }
});

// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "node_modules/lodash/_getAllKeys.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys3 = require_keys();
    function getAllKeys(object3) {
      return baseGetAllKeys(object3, keys3, getSymbols);
    }
    module.exports = getAllKeys;
  }
});

// node_modules/lodash/_getAllKeysIn.js
var require_getAllKeysIn = __commonJS({
  "node_modules/lodash/_getAllKeysIn.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn = require_keysIn();
    function getAllKeysIn(object3) {
      return baseGetAllKeys(object3, keysIn, getSymbolsIn);
    }
    module.exports = getAllKeysIn;
  }
});

// node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "node_modules/lodash/_DataView.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var DataView = getNative(root, "DataView");
    module.exports = DataView;
  }
});

// node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "node_modules/lodash/_Promise.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module.exports = Promise2;
  }
});

// node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "node_modules/lodash/_Set.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Set2 = getNative(root, "Set");
    module.exports = Set2;
  }
});

// node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "node_modules/lodash/_WeakMap.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap2 = getNative(root, "WeakMap");
    module.exports = WeakMap2;
  }
});

// node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "node_modules/lodash/_getTag.js"(exports, module) {
    var DataView = require_DataView();
    var Map2 = require_Map();
    var Promise2 = require_Promise();
    var Set2 = require_Set();
    var WeakMap2 = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports, module) {
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function initCloneArray(array) {
      var length = array.length, result = new array.constructor(length);
      if (length && typeof array[0] == "string" && hasOwnProperty2.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "node_modules/lodash/_Uint8Array.js"(exports, module) {
    var root = require_root();
    var Uint8Array2 = root.Uint8Array;
    module.exports = Uint8Array2;
  }
});

// node_modules/lodash/_cloneArrayBuffer.js
var require_cloneArrayBuffer = __commonJS({
  "node_modules/lodash/_cloneArrayBuffer.js"(exports, module) {
    var Uint8Array2 = require_Uint8Array();
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array2(result).set(new Uint8Array2(arrayBuffer));
      return result;
    }
    module.exports = cloneArrayBuffer;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports, module) {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  }
});

// node_modules/lodash/_cloneTypedArray.js
var require_cloneTypedArray = __commonJS({
  "node_modules/lodash/_cloneTypedArray.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    module.exports = cloneTypedArray;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object3, tag, isDeep) {
      var Ctor = object3.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object3);
        case boolTag:
        case dateTag:
          return new Ctor(+object3);
        case dataViewTag:
          return cloneDataView(object3, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object3, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object3);
        case regexpTag:
          return cloneRegExp(object3);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object3);
      }
    }
    module.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseCreate.js
var require_baseCreate = __commonJS({
  "node_modules/lodash/_baseCreate.js"(exports, module) {
    var isObject = require_isObject();
    var objectCreate = Object.create;
    var baseCreate = function() {
      function object3() {
      }
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object3.prototype = proto;
        var result = new object3();
        object3.prototype = void 0;
        return result;
      };
    }();
    module.exports = baseCreate;
  }
});

// node_modules/lodash/_initCloneObject.js
var require_initCloneObject = __commonJS({
  "node_modules/lodash/_initCloneObject.js"(exports, module) {
    var baseCreate = require_baseCreate();
    var getPrototype = require_getPrototype();
    var isPrototype = require_isPrototype();
    function initCloneObject(object3) {
      return typeof object3.constructor == "function" && !isPrototype(object3) ? baseCreate(getPrototype(object3)) : {};
    }
    module.exports = initCloneObject;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports, module) {
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports, module) {
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports, module) {
    var Stack = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray2 = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject = require_isObject();
    var isSet = require_isSet();
    var keys3 = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key, object3, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object3 ? customizer(value, key, object3, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray2(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object3) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object3 ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key2) {
          result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys3;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key2) {
        if (props) {
          key2 = subValue;
          subValue = value[key2];
        }
        assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  }
});

// node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/lodash/_isKey.js"(exports, module) {
    var isArray2 = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object3) {
      if (isArray2(value)) {
        return false;
      }
      var type3 = typeof value;
      if (type3 == "number" || type3 == "symbol" || type3 == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object3 != null && value in Object(object3);
    }
    module.exports = isKey;
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize5(func4, resolver) {
      if (typeof func4 != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache3 = memoized.cache;
        if (cache3.has(key)) {
          return cache3.get(key);
        }
        var result = func4.apply(this, args);
        memoized.cache = cache3.set(key, result) || cache3;
        return result;
      };
      memoized.cache = new (memoize5.Cache || MapCache)();
      return memoized;
    }
    memoize5.Cache = MapCache;
    module.exports = memoize5;
  }
});

// node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/lodash/_memoizeCapped.js"(exports, module) {
    var memoize5 = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func4) {
      var result = memoize5(func4, function(key) {
        if (cache3.size === MAX_MEMOIZE_SIZE) {
          cache3.clear();
        }
        return key;
      });
      var cache3 = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/lodash/_stringToPath.js"(exports, module) {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string3) {
      var result = [];
      if (string3.charCodeAt(0) === 46) {
        result.push("");
      }
      string3.replace(rePropName, function(match2, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match2);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/lodash/_castPath.js"(exports, module) {
    var isArray2 = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString2 = require_toString();
    function castPath(value, object3) {
      if (isArray2(value)) {
        return value;
      }
      return isKey(value, object3) ? [value] : stringToPath(toString2(value));
    }
    module.exports = castPath;
  }
});

// node_modules/lodash/last.js
var require_last = __commonJS({
  "node_modules/lodash/last.js"(exports, module) {
    function last2(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : void 0;
    }
    module.exports = last2;
  }
});

// node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/lodash/_toKey.js"(exports, module) {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/lodash/_baseGet.js"(exports, module) {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object3, path) {
      path = castPath(path, object3);
      var index4 = 0, length = path.length;
      while (object3 != null && index4 < length) {
        object3 = object3[toKey(path[index4++])];
      }
      return index4 && index4 == length ? object3 : void 0;
    }
    module.exports = baseGet;
  }
});

// node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "node_modules/lodash/_baseSlice.js"(exports, module) {
    function baseSlice(array, start3, end2) {
      var index4 = -1, length = array.length;
      if (start3 < 0) {
        start3 = -start3 > length ? 0 : length + start3;
      }
      end2 = end2 > length ? length : end2;
      if (end2 < 0) {
        end2 += length;
      }
      length = start3 > end2 ? 0 : end2 - start3 >>> 0;
      start3 >>>= 0;
      var result = Array(length);
      while (++index4 < length) {
        result[index4] = array[index4 + start3];
      }
      return result;
    }
    module.exports = baseSlice;
  }
});

// node_modules/lodash/_parent.js
var require_parent = __commonJS({
  "node_modules/lodash/_parent.js"(exports, module) {
    var baseGet = require_baseGet();
    var baseSlice = require_baseSlice();
    function parent(object3, path) {
      return path.length < 2 ? object3 : baseGet(object3, baseSlice(path, 0, -1));
    }
    module.exports = parent;
  }
});

// node_modules/lodash/_baseUnset.js
var require_baseUnset = __commonJS({
  "node_modules/lodash/_baseUnset.js"(exports, module) {
    var castPath = require_castPath();
    var last2 = require_last();
    var parent = require_parent();
    var toKey = require_toKey();
    function baseUnset(object3, path) {
      path = castPath(path, object3);
      object3 = parent(object3, path);
      return object3 == null || delete object3[toKey(last2(path))];
    }
    module.exports = baseUnset;
  }
});

// node_modules/lodash/_customOmitClone.js
var require_customOmitClone = __commonJS({
  "node_modules/lodash/_customOmitClone.js"(exports, module) {
    var isPlainObject5 = require_isPlainObject();
    function customOmitClone(value) {
      return isPlainObject5(value) ? void 0 : value;
    }
    module.exports = customOmitClone;
  }
});

// node_modules/lodash/_isFlattenable.js
var require_isFlattenable = __commonJS({
  "node_modules/lodash/_isFlattenable.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var isArguments = require_isArguments();
    var isArray2 = require_isArray();
    var spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : void 0;
    function isFlattenable(value) {
      return isArray2(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }
    module.exports = isFlattenable;
  }
});

// node_modules/lodash/_baseFlatten.js
var require_baseFlatten = __commonJS({
  "node_modules/lodash/_baseFlatten.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isFlattenable = require_isFlattenable();
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index4 = -1, length = array.length;
      predicate || (predicate = isFlattenable);
      result || (result = []);
      while (++index4 < length) {
        var value = array[index4];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }
    module.exports = baseFlatten;
  }
});

// node_modules/lodash/flatten.js
var require_flatten = __commonJS({
  "node_modules/lodash/flatten.js"(exports, module) {
    var baseFlatten = require_baseFlatten();
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }
    module.exports = flatten;
  }
});

// node_modules/lodash/_apply.js
var require_apply = __commonJS({
  "node_modules/lodash/_apply.js"(exports, module) {
    function apply3(func4, thisArg, args) {
      switch (args.length) {
        case 0:
          return func4.call(thisArg);
        case 1:
          return func4.call(thisArg, args[0]);
        case 2:
          return func4.call(thisArg, args[0], args[1]);
        case 3:
          return func4.call(thisArg, args[0], args[1], args[2]);
      }
      return func4.apply(thisArg, args);
    }
    module.exports = apply3;
  }
});

// node_modules/lodash/_overRest.js
var require_overRest = __commonJS({
  "node_modules/lodash/_overRest.js"(exports, module) {
    var apply3 = require_apply();
    var nativeMax = Math.max;
    function overRest(func4, start3, transform4) {
      start3 = nativeMax(start3 === void 0 ? func4.length - 1 : start3, 0);
      return function() {
        var args = arguments, index4 = -1, length = nativeMax(args.length - start3, 0), array = Array(length);
        while (++index4 < length) {
          array[index4] = args[start3 + index4];
        }
        index4 = -1;
        var otherArgs = Array(start3 + 1);
        while (++index4 < start3) {
          otherArgs[index4] = args[index4];
        }
        otherArgs[start3] = transform4(array);
        return apply3(func4, this, otherArgs);
      };
    }
    module.exports = overRest;
  }
});

// node_modules/lodash/constant.js
var require_constant = __commonJS({
  "node_modules/lodash/constant.js"(exports, module) {
    function constant(value) {
      return function() {
        return value;
      };
    }
    module.exports = constant;
  }
});

// node_modules/lodash/identity.js
var require_identity = __commonJS({
  "node_modules/lodash/identity.js"(exports, module) {
    function identity2(value) {
      return value;
    }
    module.exports = identity2;
  }
});

// node_modules/lodash/_baseSetToString.js
var require_baseSetToString = __commonJS({
  "node_modules/lodash/_baseSetToString.js"(exports, module) {
    var constant = require_constant();
    var defineProperty2 = require_defineProperty();
    var identity2 = require_identity();
    var baseSetToString = !defineProperty2 ? identity2 : function(func4, string3) {
      return defineProperty2(func4, "toString", {
        "configurable": true,
        "enumerable": false,
        "value": constant(string3),
        "writable": true
      });
    };
    module.exports = baseSetToString;
  }
});

// node_modules/lodash/_shortOut.js
var require_shortOut = __commonJS({
  "node_modules/lodash/_shortOut.js"(exports, module) {
    var HOT_COUNT = 800;
    var HOT_SPAN = 16;
    var nativeNow = Date.now;
    function shortOut(func4) {
      var count2 = 0, lastCalled = 0;
      return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count2 >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count2 = 0;
        }
        return func4.apply(void 0, arguments);
      };
    }
    module.exports = shortOut;
  }
});

// node_modules/lodash/_setToString.js
var require_setToString = __commonJS({
  "node_modules/lodash/_setToString.js"(exports, module) {
    var baseSetToString = require_baseSetToString();
    var shortOut = require_shortOut();
    var setToString = shortOut(baseSetToString);
    module.exports = setToString;
  }
});

// node_modules/lodash/_flatRest.js
var require_flatRest = __commonJS({
  "node_modules/lodash/_flatRest.js"(exports, module) {
    var flatten = require_flatten();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function flatRest(func4) {
      return setToString(overRest(func4, void 0, flatten), func4 + "");
    }
    module.exports = flatRest;
  }
});

// node_modules/lodash/omit.js
var require_omit = __commonJS({
  "node_modules/lodash/omit.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseClone = require_baseClone();
    var baseUnset = require_baseUnset();
    var castPath = require_castPath();
    var copyObject = require_copyObject();
    var customOmitClone = require_customOmitClone();
    var flatRest = require_flatRest();
    var getAllKeysIn = require_getAllKeysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var omit5 = flatRest(function(object3, paths) {
      var result = {};
      if (object3 == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object3);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object3, getAllKeysIn(object3), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });
    module.exports = omit5;
  }
});

// node_modules/lodash/_baseSet.js
var require_baseSet = __commonJS({
  "node_modules/lodash/_baseSet.js"(exports, module) {
    var assignValue = require_assignValue();
    var castPath = require_castPath();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    var toKey = require_toKey();
    function baseSet(object3, path, value, customizer) {
      if (!isObject(object3)) {
        return object3;
      }
      path = castPath(path, object3);
      var index4 = -1, length = path.length, lastIndex = length - 1, nested = object3;
      while (nested != null && ++index4 < length) {
        var key = toKey(path[index4]), newValue = value;
        if (key === "__proto__" || key === "constructor" || key === "prototype") {
          return object3;
        }
        if (index4 != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : void 0;
          if (newValue === void 0) {
            newValue = isObject(objValue) ? objValue : isIndex(path[index4 + 1]) ? [] : {};
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object3;
    }
    module.exports = baseSet;
  }
});

// node_modules/lodash/_basePickBy.js
var require_basePickBy = __commonJS({
  "node_modules/lodash/_basePickBy.js"(exports, module) {
    var baseGet = require_baseGet();
    var baseSet = require_baseSet();
    var castPath = require_castPath();
    function basePickBy(object3, paths, predicate) {
      var index4 = -1, length = paths.length, result = {};
      while (++index4 < length) {
        var path = paths[index4], value = baseGet(object3, path);
        if (predicate(value, path)) {
          baseSet(result, castPath(path, object3), value);
        }
      }
      return result;
    }
    module.exports = basePickBy;
  }
});

// node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "node_modules/lodash/_baseHasIn.js"(exports, module) {
    function baseHasIn(object3, key) {
      return object3 != null && key in Object(object3);
    }
    module.exports = baseHasIn;
  }
});

// node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "node_modules/lodash/_hasPath.js"(exports, module) {
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray2 = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object3, path, hasFunc) {
      path = castPath(path, object3);
      var index4 = -1, length = path.length, result = false;
      while (++index4 < length) {
        var key = toKey(path[index4]);
        if (!(result = object3 != null && hasFunc(object3, key))) {
          break;
        }
        object3 = object3[key];
      }
      if (result || ++index4 != length) {
        return result;
      }
      length = object3 == null ? 0 : object3.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray2(object3) || isArguments(object3));
    }
    module.exports = hasPath;
  }
});

// node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "node_modules/lodash/hasIn.js"(exports, module) {
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object3, path) {
      return object3 != null && hasPath(object3, path, baseHasIn);
    }
    module.exports = hasIn;
  }
});

// node_modules/lodash/_basePick.js
var require_basePick = __commonJS({
  "node_modules/lodash/_basePick.js"(exports, module) {
    var basePickBy = require_basePickBy();
    var hasIn = require_hasIn();
    function basePick(object3, paths) {
      return basePickBy(object3, paths, function(value, path) {
        return hasIn(object3, path);
      });
    }
    module.exports = basePick;
  }
});

// node_modules/lodash/pick.js
var require_pick = __commonJS({
  "node_modules/lodash/pick.js"(exports, module) {
    var basePick = require_basePick();
    var flatRest = require_flatRest();
    var pick2 = flatRest(function(object3, paths) {
      return object3 == null ? {} : basePick(object3, paths);
    });
    module.exports = pick2;
  }
});

// node_modules/lodash/throttle.js
var require_throttle = __commonJS({
  "node_modules/lodash/throttle.js"(exports, module) {
    var debounce5 = require_debounce();
    var isObject = require_isObject();
    var FUNC_ERROR_TEXT = "Expected a function";
    function throttle4(func4, wait, options) {
      var leading = true, trailing = true;
      if (typeof func4 != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      return debounce5(func4, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    module.exports = throttle4;
  }
});

// node_modules/focus-visible/dist/focus-visible.js
var require_focus_visible = __commonJS({
  "node_modules/focus-visible/dist/focus-visible.js"(exports, module) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory() : typeof define === "function" && define.amd ? define(factory) : factory();
    })(exports, function() {
      "use strict";
      function applyFocusVisiblePolyfill(scope) {
        var hadKeyboardEvent2 = true;
        var hadFocusVisibleRecently2 = false;
        var hadFocusVisibleRecentlyTimeout2 = null;
        var inputTypesAllowlist = {
          text: true,
          search: true,
          url: true,
          tel: true,
          email: true,
          password: true,
          number: true,
          date: true,
          month: true,
          week: true,
          time: true,
          datetime: true,
          "datetime-local": true
        };
        function isValidFocusTarget(el2) {
          if (el2 && el2 !== document && el2.nodeName !== "HTML" && el2.nodeName !== "BODY" && "classList" in el2 && "contains" in el2.classList) {
            return true;
          }
          return false;
        }
        function focusTriggersKeyboardModality2(el2) {
          var type3 = el2.type;
          var tagName = el2.tagName;
          if (tagName === "INPUT" && inputTypesAllowlist[type3] && !el2.readOnly) {
            return true;
          }
          if (tagName === "TEXTAREA" && !el2.readOnly) {
            return true;
          }
          if (el2.isContentEditable) {
            return true;
          }
          return false;
        }
        function addFocusVisibleClass(el2) {
          if (el2.classList.contains("focus-visible")) {
            return;
          }
          el2.classList.add("focus-visible");
          el2.setAttribute("data-focus-visible-added", "");
        }
        function removeFocusVisibleClass(el2) {
          if (!el2.hasAttribute("data-focus-visible-added")) {
            return;
          }
          el2.classList.remove("focus-visible");
          el2.removeAttribute("data-focus-visible-added");
        }
        function onKeyDown(e2) {
          if (e2.metaKey || e2.altKey || e2.ctrlKey) {
            return;
          }
          if (isValidFocusTarget(scope.activeElement)) {
            addFocusVisibleClass(scope.activeElement);
          }
          hadKeyboardEvent2 = true;
        }
        function onPointerDown(e2) {
          hadKeyboardEvent2 = false;
        }
        function onFocus(e2) {
          if (!isValidFocusTarget(e2.target)) {
            return;
          }
          if (hadKeyboardEvent2 || focusTriggersKeyboardModality2(e2.target)) {
            addFocusVisibleClass(e2.target);
          }
        }
        function onBlur(e2) {
          if (!isValidFocusTarget(e2.target)) {
            return;
          }
          if (e2.target.classList.contains("focus-visible") || e2.target.hasAttribute("data-focus-visible-added")) {
            hadFocusVisibleRecently2 = true;
            window.clearTimeout(hadFocusVisibleRecentlyTimeout2);
            hadFocusVisibleRecentlyTimeout2 = window.setTimeout(function() {
              hadFocusVisibleRecently2 = false;
            }, 100);
            removeFocusVisibleClass(e2.target);
          }
        }
        function onVisibilityChange(e2) {
          if (document.visibilityState === "hidden") {
            if (hadFocusVisibleRecently2) {
              hadKeyboardEvent2 = true;
            }
            addInitialPointerMoveListeners();
          }
        }
        function addInitialPointerMoveListeners() {
          document.addEventListener("mousemove", onInitialPointerMove);
          document.addEventListener("mousedown", onInitialPointerMove);
          document.addEventListener("mouseup", onInitialPointerMove);
          document.addEventListener("pointermove", onInitialPointerMove);
          document.addEventListener("pointerdown", onInitialPointerMove);
          document.addEventListener("pointerup", onInitialPointerMove);
          document.addEventListener("touchmove", onInitialPointerMove);
          document.addEventListener("touchstart", onInitialPointerMove);
          document.addEventListener("touchend", onInitialPointerMove);
        }
        function removeInitialPointerMoveListeners() {
          document.removeEventListener("mousemove", onInitialPointerMove);
          document.removeEventListener("mousedown", onInitialPointerMove);
          document.removeEventListener("mouseup", onInitialPointerMove);
          document.removeEventListener("pointermove", onInitialPointerMove);
          document.removeEventListener("pointerdown", onInitialPointerMove);
          document.removeEventListener("pointerup", onInitialPointerMove);
          document.removeEventListener("touchmove", onInitialPointerMove);
          document.removeEventListener("touchstart", onInitialPointerMove);
          document.removeEventListener("touchend", onInitialPointerMove);
        }
        function onInitialPointerMove(e2) {
          if (e2.target.nodeName && e2.target.nodeName.toLowerCase() === "html") {
            return;
          }
          hadKeyboardEvent2 = false;
          removeInitialPointerMoveListeners();
        }
        document.addEventListener("keydown", onKeyDown, true);
        document.addEventListener("mousedown", onPointerDown, true);
        document.addEventListener("pointerdown", onPointerDown, true);
        document.addEventListener("touchstart", onPointerDown, true);
        document.addEventListener("visibilitychange", onVisibilityChange, true);
        addInitialPointerMoveListeners();
        scope.addEventListener("focus", onFocus, true);
        scope.addEventListener("blur", onBlur, true);
        if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) {
          scope.host.setAttribute("data-js-focus-visible", "");
        } else if (scope.nodeType === Node.DOCUMENT_NODE) {
          document.documentElement.classList.add("js-focus-visible");
          document.documentElement.setAttribute("data-js-focus-visible", "");
        }
      }
      if (typeof window !== "undefined" && typeof document !== "undefined") {
        window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill;
        var event;
        try {
          event = new CustomEvent("focus-visible-polyfill-ready");
        } catch (error4) {
          event = document.createEvent("CustomEvent");
          event.initCustomEvent("focus-visible-polyfill-ready", false, false, {});
        }
        window.dispatchEvent(event);
      }
      if (typeof document !== "undefined") {
        applyFocusVisiblePolyfill(document);
      }
    });
  }
});

// node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get4(object3, path, defaultValue) {
      var result = object3 == null ? void 0 : baseGet(object3, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get4;
  }
});

// node_modules/@material-ui/core/transitions/utils.js
var require_utils2 = __commonJS({
  "node_modules/@material-ui/core/transitions/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getTransitionProps = getTransitionProps3;
    exports.reflow = void 0;
    var reflow4 = function reflow5(node4) {
      return node4.scrollTop;
    };
    exports.reflow = reflow4;
    function getTransitionProps3(props, options) {
      var timeout2 = props.timeout, _props$style = props.style, style3 = _props$style === void 0 ? {} : _props$style;
      return {
        duration: style3.transitionDuration || typeof timeout2 === "number" ? timeout2 : timeout2[options.mode] || 0,
        delay: style3.transitionDelay
      };
    }
  }
});

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }
    module.exports = _interopRequireDefault;
    module.exports["default"] = module.exports, module.exports.__esModule = true;
  }
});

// node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js
var require_objectWithoutPropertiesLoose = __commonJS({
  "node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"(exports, module) {
    function _objectWithoutPropertiesLoose3(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i2;
      for (i2 = 0; i2 < sourceKeys.length; i2++) {
        key = sourceKeys[i2];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    module.exports = _objectWithoutPropertiesLoose3;
    module.exports["default"] = module.exports, module.exports.__esModule = true;
  }
});

// node_modules/@babel/runtime/helpers/objectWithoutProperties.js
var require_objectWithoutProperties = __commonJS({
  "node_modules/@babel/runtime/helpers/objectWithoutProperties.js"(exports, module) {
    var objectWithoutPropertiesLoose = require_objectWithoutPropertiesLoose();
    function _objectWithoutProperties2(source, excluded) {
      if (source == null)
        return {};
      var target = objectWithoutPropertiesLoose(source, excluded);
      var key, i2;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
          key = sourceSymbolKeys[i2];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    module.exports = _objectWithoutProperties2;
    module.exports["default"] = module.exports, module.exports.__esModule = true;
  }
});

// node_modules/@material-ui/core/styles/transitions.js
var require_transitions = __commonJS({
  "node_modules/@material-ui/core/styles/transitions.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.duration = exports.easing = void 0;
    var _objectWithoutProperties2 = _interopRequireDefault(require_objectWithoutProperties());
    var easing3 = {
      easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
      easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
      easeIn: "cubic-bezier(0.4, 0, 1, 1)",
      sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
    };
    exports.easing = easing3;
    var duration5 = {
      shortest: 150,
      shorter: 200,
      short: 250,
      standard: 300,
      complex: 375,
      enteringScreen: 225,
      leavingScreen: 195
    };
    exports.duration = duration5;
    function formatMs2(milliseconds) {
      return "".concat(Math.round(milliseconds), "ms");
    }
    var _default = {
      easing: easing3,
      duration: duration5,
      create: function create3() {
        var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ["all"];
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var _options$duration = options.duration, durationOption = _options$duration === void 0 ? duration5.standard : _options$duration, _options$easing = options.easing, easingOption = _options$easing === void 0 ? easing3.easeInOut : _options$easing, _options$delay = options.delay, delay = _options$delay === void 0 ? 0 : _options$delay, other = (0, _objectWithoutProperties2.default)(options, ["duration", "easing", "delay"]);
        if (true) {
          var isString4 = function isString5(value) {
            return typeof value === "string";
          };
          var isNumber2 = function isNumber3(value) {
            return !isNaN(parseFloat(value));
          };
          if (!isString4(props) && !Array.isArray(props)) {
            console.error('Material-UI: Argument "props" must be a string or Array.');
          }
          if (!isNumber2(durationOption) && !isString4(durationOption)) {
            console.error('Material-UI: Argument "duration" must be a number or a string but found '.concat(durationOption, "."));
          }
          if (!isString4(easingOption)) {
            console.error('Material-UI: Argument "easing" must be a string.');
          }
          if (!isNumber2(delay) && !isString4(delay)) {
            console.error('Material-UI: Argument "delay" must be a number or a string.');
          }
          if (Object.keys(other).length !== 0) {
            console.error("Material-UI: Unrecognized argument(s) [".concat(Object.keys(other).join(","), "]."));
          }
        }
        return (Array.isArray(props) ? props : [props]).map(function(animatedProp) {
          return "".concat(animatedProp, " ").concat(typeof durationOption === "string" ? durationOption : formatMs2(durationOption), " ").concat(easingOption, " ").concat(typeof delay === "string" ? delay : formatMs2(delay));
        }).join(",");
      },
      getAutoHeightDuration: function getAutoHeightDuration2(height2) {
        if (!height2) {
          return 0;
        }
        var constant = height2 / 36;
        return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
      }
    };
    exports.default = _default;
  }
});

// node_modules/lodash/isString.js
var require_isString = __commonJS({
  "node_modules/lodash/isString.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isArray2 = require_isArray();
    var isObjectLike = require_isObjectLike();
    var stringTag = "[object String]";
    function isString4(value) {
      return typeof value == "string" || !isArray2(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }
    module.exports = isString4;
  }
});

// node_modules/moment/moment.js
var require_moment = __commonJS({
  "node_modules/moment/moment.js"(exports, module) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory() : typeof define === "function" && define.amd ? define(factory) : global2.moment = factory();
    })(exports, function() {
      "use strict";
      var hookCallback;
      function hooks() {
        return hookCallback.apply(null, arguments);
      }
      function setHookCallback(callback) {
        hookCallback = callback;
      }
      function isArray2(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
      }
      function isObject(input) {
        return input != null && Object.prototype.toString.call(input) === "[object Object]";
      }
      function hasOwnProp(a2, b2) {
        return Object.prototype.hasOwnProperty.call(a2, b2);
      }
      function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
          return Object.getOwnPropertyNames(obj).length === 0;
        } else {
          var k2;
          for (k2 in obj) {
            if (hasOwnProp(obj, k2)) {
              return false;
            }
          }
          return true;
        }
      }
      function isUndefined(input) {
        return input === void 0;
      }
      function isNumber2(input) {
        return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
      }
      function isDate2(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
      }
      function map2(arr, fn) {
        var res = [], i2;
        for (i2 = 0; i2 < arr.length; ++i2) {
          res.push(fn(arr[i2], i2));
        }
        return res;
      }
      function extend(a2, b2) {
        for (var i2 in b2) {
          if (hasOwnProp(b2, i2)) {
            a2[i2] = b2[i2];
          }
        }
        if (hasOwnProp(b2, "toString")) {
          a2.toString = b2.toString;
        }
        if (hasOwnProp(b2, "valueOf")) {
          a2.valueOf = b2.valueOf;
        }
        return a2;
      }
      function createUTC(input, format2, locale2, strict) {
        return createLocalOrUTC(input, format2, locale2, strict, true).utc();
      }
      function defaultParsingFlags() {
        return {
          empty: false,
          unusedTokens: [],
          unusedInput: [],
          overflow: -2,
          charsLeftOver: 0,
          nullInput: false,
          invalidEra: null,
          invalidMonth: null,
          invalidFormat: false,
          userInvalidated: false,
          iso: false,
          parsedDateParts: [],
          era: null,
          meridiem: null,
          rfc2822: false,
          weekdayMismatch: false
        };
      }
      function getParsingFlags(m) {
        if (m._pf == null) {
          m._pf = defaultParsingFlags();
        }
        return m._pf;
      }
      var some;
      if (Array.prototype.some) {
        some = Array.prototype.some;
      } else {
        some = function(fun) {
          var t2 = Object(this), len = t2.length >>> 0, i2;
          for (i2 = 0; i2 < len; i2++) {
            if (i2 in t2 && fun.call(this, t2[i2], i2, t2)) {
              return true;
            }
          }
          return false;
        };
      }
      function isValid(m) {
        if (m._isValid == null) {
          var flags = getParsingFlags(m), parsedParts = some.call(flags.parsedDateParts, function(i2) {
            return i2 != null;
          }), isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
          if (m._strict) {
            isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === void 0;
          }
          if (Object.isFrozen == null || !Object.isFrozen(m)) {
            m._isValid = isNowValid;
          } else {
            return isNowValid;
          }
        }
        return m._isValid;
      }
      function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
          extend(getParsingFlags(m), flags);
        } else {
          getParsingFlags(m).userInvalidated = true;
        }
        return m;
      }
      var momentProperties = hooks.momentProperties = [], updateInProgress = false;
      function copyConfig(to2, from2) {
        var i2, prop2, val;
        if (!isUndefined(from2._isAMomentObject)) {
          to2._isAMomentObject = from2._isAMomentObject;
        }
        if (!isUndefined(from2._i)) {
          to2._i = from2._i;
        }
        if (!isUndefined(from2._f)) {
          to2._f = from2._f;
        }
        if (!isUndefined(from2._l)) {
          to2._l = from2._l;
        }
        if (!isUndefined(from2._strict)) {
          to2._strict = from2._strict;
        }
        if (!isUndefined(from2._tzm)) {
          to2._tzm = from2._tzm;
        }
        if (!isUndefined(from2._isUTC)) {
          to2._isUTC = from2._isUTC;
        }
        if (!isUndefined(from2._offset)) {
          to2._offset = from2._offset;
        }
        if (!isUndefined(from2._pf)) {
          to2._pf = getParsingFlags(from2);
        }
        if (!isUndefined(from2._locale)) {
          to2._locale = from2._locale;
        }
        if (momentProperties.length > 0) {
          for (i2 = 0; i2 < momentProperties.length; i2++) {
            prop2 = momentProperties[i2];
            val = from2[prop2];
            if (!isUndefined(val)) {
              to2[prop2] = val;
            }
          }
        }
        return to2;
      }
      function Moment(config2) {
        copyConfig(this, config2);
        this._d = new Date(config2._d != null ? config2._d.getTime() : NaN);
        if (!this.isValid()) {
          this._d = new Date(NaN);
        }
        if (updateInProgress === false) {
          updateInProgress = true;
          hooks.updateOffset(this);
          updateInProgress = false;
        }
      }
      function isMoment(obj) {
        return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
      }
      function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
          console.warn("Deprecation warning: " + msg);
        }
      }
      function deprecate(msg, fn) {
        var firstTime = true;
        return extend(function() {
          if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
          }
          if (firstTime) {
            var args = [], arg, i2, key;
            for (i2 = 0; i2 < arguments.length; i2++) {
              arg = "";
              if (typeof arguments[i2] === "object") {
                arg += "\n[" + i2 + "] ";
                for (key in arguments[0]) {
                  if (hasOwnProp(arguments[0], key)) {
                    arg += key + ": " + arguments[0][key] + ", ";
                  }
                }
                arg = arg.slice(0, -2);
              } else {
                arg = arguments[i2];
              }
              args.push(arg);
            }
            warn(msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack);
            firstTime = false;
          }
          return fn.apply(this, arguments);
        }, fn);
      }
      var deprecations = {};
      function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
          hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
          warn(msg);
          deprecations[name] = true;
        }
      }
      hooks.suppressDeprecationWarnings = false;
      hooks.deprecationHandler = null;
      function isFunction3(input) {
        return typeof Function !== "undefined" && input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
      }
      function set2(config2) {
        var prop2, i2;
        for (i2 in config2) {
          if (hasOwnProp(config2, i2)) {
            prop2 = config2[i2];
            if (isFunction3(prop2)) {
              this[i2] = prop2;
            } else {
              this["_" + i2] = prop2;
            }
          }
        }
        this._config = config2;
        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source);
      }
      function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop2;
        for (prop2 in childConfig) {
          if (hasOwnProp(childConfig, prop2)) {
            if (isObject(parentConfig[prop2]) && isObject(childConfig[prop2])) {
              res[prop2] = {};
              extend(res[prop2], parentConfig[prop2]);
              extend(res[prop2], childConfig[prop2]);
            } else if (childConfig[prop2] != null) {
              res[prop2] = childConfig[prop2];
            } else {
              delete res[prop2];
            }
          }
        }
        for (prop2 in parentConfig) {
          if (hasOwnProp(parentConfig, prop2) && !hasOwnProp(childConfig, prop2) && isObject(parentConfig[prop2])) {
            res[prop2] = extend({}, res[prop2]);
          }
        }
        return res;
      }
      function Locale(config2) {
        if (config2 != null) {
          this.set(config2);
        }
      }
      var keys3;
      if (Object.keys) {
        keys3 = Object.keys;
      } else {
        keys3 = function(obj) {
          var i2, res = [];
          for (i2 in obj) {
            if (hasOwnProp(obj, i2)) {
              res.push(i2);
            }
          }
          return res;
        };
      }
      var defaultCalendar = {
        sameDay: "[Today at] LT",
        nextDay: "[Tomorrow at] LT",
        nextWeek: "dddd [at] LT",
        lastDay: "[Yesterday at] LT",
        lastWeek: "[Last] dddd [at] LT",
        sameElse: "L"
      };
      function calendar(key, mom, now3) {
        var output = this._calendar[key] || this._calendar["sameElse"];
        return isFunction3(output) ? output.call(mom, now3) : output;
      }
      function zeroFill(number, targetLength, forceSign) {
        var absNumber = "" + Math.abs(number), zerosToFill = targetLength - absNumber.length, sign2 = number >= 0;
        return (sign2 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
      }
      var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, formatFunctions = {}, formatTokenFunctions = {};
      function addFormatToken(token2, padded, ordinal2, callback) {
        var func4 = callback;
        if (typeof callback === "string") {
          func4 = function() {
            return this[callback]();
          };
        }
        if (token2) {
          formatTokenFunctions[token2] = func4;
        }
        if (padded) {
          formatTokenFunctions[padded[0]] = function() {
            return zeroFill(func4.apply(this, arguments), padded[1], padded[2]);
          };
        }
        if (ordinal2) {
          formatTokenFunctions[ordinal2] = function() {
            return this.localeData().ordinal(func4.apply(this, arguments), token2);
          };
        }
      }
      function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
          return input.replace(/^\[|\]$/g, "");
        }
        return input.replace(/\\/g, "");
      }
      function makeFormatFunction(format2) {
        var array = format2.match(formattingTokens), i2, length;
        for (i2 = 0, length = array.length; i2 < length; i2++) {
          if (formatTokenFunctions[array[i2]]) {
            array[i2] = formatTokenFunctions[array[i2]];
          } else {
            array[i2] = removeFormattingTokens(array[i2]);
          }
        }
        return function(mom) {
          var output = "", i3;
          for (i3 = 0; i3 < length; i3++) {
            output += isFunction3(array[i3]) ? array[i3].call(mom, format2) : array[i3];
          }
          return output;
        };
      }
      function formatMoment(m, format2) {
        if (!m.isValid()) {
          return m.localeData().invalidDate();
        }
        format2 = expandFormat(format2, m.localeData());
        formatFunctions[format2] = formatFunctions[format2] || makeFormatFunction(format2);
        return formatFunctions[format2](m);
      }
      function expandFormat(format2, locale2) {
        var i2 = 5;
        function replaceLongDateFormatTokens(input) {
          return locale2.longDateFormat(input) || input;
        }
        localFormattingTokens.lastIndex = 0;
        while (i2 >= 0 && localFormattingTokens.test(format2)) {
          format2 = format2.replace(localFormattingTokens, replaceLongDateFormatTokens);
          localFormattingTokens.lastIndex = 0;
          i2 -= 1;
        }
        return format2;
      }
      var defaultLongDateFormat = {
        LTS: "h:mm:ss A",
        LT: "h:mm A",
        L: "MM/DD/YYYY",
        LL: "MMMM D, YYYY",
        LLL: "MMMM D, YYYY h:mm A",
        LLLL: "dddd, MMMM D, YYYY h:mm A"
      };
      function longDateFormat(key) {
        var format2 = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];
        if (format2 || !formatUpper) {
          return format2;
        }
        this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function(tok) {
          if (tok === "MMMM" || tok === "MM" || tok === "DD" || tok === "dddd") {
            return tok.slice(1);
          }
          return tok;
        }).join("");
        return this._longDateFormat[key];
      }
      var defaultInvalidDate = "Invalid date";
      function invalidDate() {
        return this._invalidDate;
      }
      var defaultOrdinal = "%d", defaultDayOfMonthOrdinalParse = /\d{1,2}/;
      function ordinal(number) {
        return this._ordinal.replace("%d", number);
      }
      var defaultRelativeTime = {
        future: "in %s",
        past: "%s ago",
        s: "a few seconds",
        ss: "%d seconds",
        m: "a minute",
        mm: "%d minutes",
        h: "an hour",
        hh: "%d hours",
        d: "a day",
        dd: "%d days",
        w: "a week",
        ww: "%d weeks",
        M: "a month",
        MM: "%d months",
        y: "a year",
        yy: "%d years"
      };
      function relativeTime(number, withoutSuffix, string3, isFuture) {
        var output = this._relativeTime[string3];
        return isFunction3(output) ? output(number, withoutSuffix, string3, isFuture) : output.replace(/%d/i, number);
      }
      function pastFuture(diff2, output) {
        var format2 = this._relativeTime[diff2 > 0 ? "future" : "past"];
        return isFunction3(format2) ? format2(output) : format2.replace(/%s/i, output);
      }
      var aliases2 = {};
      function addUnitAlias(unit3, shorthand) {
        var lowerCase = unit3.toLowerCase();
        aliases2[lowerCase] = aliases2[lowerCase + "s"] = aliases2[shorthand] = unit3;
      }
      function normalizeUnits(units2) {
        return typeof units2 === "string" ? aliases2[units2] || aliases2[units2.toLowerCase()] : void 0;
      }
      function normalizeObjectUnits(inputObject) {
        var normalizedInput = {}, normalizedProp, prop2;
        for (prop2 in inputObject) {
          if (hasOwnProp(inputObject, prop2)) {
            normalizedProp = normalizeUnits(prop2);
            if (normalizedProp) {
              normalizedInput[normalizedProp] = inputObject[prop2];
            }
          }
        }
        return normalizedInput;
      }
      var priorities = {};
      function addUnitPriority(unit3, priority) {
        priorities[unit3] = priority;
      }
      function getPrioritizedUnits(unitsObj) {
        var units2 = [], u21;
        for (u21 in unitsObj) {
          if (hasOwnProp(unitsObj, u21)) {
            units2.push({ unit: u21, priority: priorities[u21] });
          }
        }
        units2.sort(function(a2, b2) {
          return a2.priority - b2.priority;
        });
        return units2;
      }
      function isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
      }
      function absFloor(number) {
        if (number < 0) {
          return Math.ceil(number) || 0;
        } else {
          return Math.floor(number);
        }
      }
      function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion, value = 0;
        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
          value = absFloor(coercedNumber);
        }
        return value;
      }
      function makeGetSet(unit3, keepTime) {
        return function(value) {
          if (value != null) {
            set$1(this, unit3, value);
            hooks.updateOffset(this, keepTime);
            return this;
          } else {
            return get4(this, unit3);
          }
        };
      }
      function get4(mom, unit3) {
        return mom.isValid() ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit3]() : NaN;
      }
      function set$1(mom, unit3, value) {
        if (mom.isValid() && !isNaN(value)) {
          if (unit3 === "FullYear" && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
            value = toInt(value);
            mom._d["set" + (mom._isUTC ? "UTC" : "") + unit3](value, mom.month(), daysInMonth(value, mom.month()));
          } else {
            mom._d["set" + (mom._isUTC ? "UTC" : "") + unit3](value);
          }
        }
      }
      function stringGet(units2) {
        units2 = normalizeUnits(units2);
        if (isFunction3(this[units2])) {
          return this[units2]();
        }
        return this;
      }
      function stringSet(units2, value) {
        if (typeof units2 === "object") {
          units2 = normalizeObjectUnits(units2);
          var prioritized = getPrioritizedUnits(units2), i2;
          for (i2 = 0; i2 < prioritized.length; i2++) {
            this[prioritized[i2].unit](units2[prioritized[i2].unit]);
          }
        } else {
          units2 = normalizeUnits(units2);
          if (isFunction3(this[units2])) {
            return this[units2](value);
          }
        }
        return this;
      }
      var match1 = /\d/, match2 = /\d\d/, match3 = /\d{3}/, match4 = /\d{4}/, match6 = /[+-]?\d{6}/, match1to2 = /\d\d?/, match3to4 = /\d\d\d\d?/, match5to6 = /\d\d\d\d\d\d?/, match1to3 = /\d{1,3}/, match1to4 = /\d{1,4}/, match1to6 = /[+-]?\d{1,6}/, matchUnsigned = /\d+/, matchSigned = /[+-]?\d+/, matchOffset = /Z|[+-]\d\d:?\d\d/gi, matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, regexes;
      regexes = {};
      function addRegexToken(token2, regex, strictRegex) {
        regexes[token2] = isFunction3(regex) ? regex : function(isStrict, localeData2) {
          return isStrict && strictRegex ? strictRegex : regex;
        };
      }
      function getParseRegexForToken(token2, config2) {
        if (!hasOwnProp(regexes, token2)) {
          return new RegExp(unescapeFormat(token2));
        }
        return regexes[token2](config2._strict, config2._locale);
      }
      function unescapeFormat(s2) {
        return regexEscape(s2.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(matched, p1, p2, p3, p4) {
          return p1 || p2 || p3 || p4;
        }));
      }
      function regexEscape(s2) {
        return s2.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
      }
      var tokens = {};
      function addParseToken(token2, callback) {
        var i2, func4 = callback;
        if (typeof token2 === "string") {
          token2 = [token2];
        }
        if (isNumber2(callback)) {
          func4 = function(input, array) {
            array[callback] = toInt(input);
          };
        }
        for (i2 = 0; i2 < token2.length; i2++) {
          tokens[token2[i2]] = func4;
        }
      }
      function addWeekParseToken(token2, callback) {
        addParseToken(token2, function(input, array, config2, token3) {
          config2._w = config2._w || {};
          callback(input, config2._w, config2, token3);
        });
      }
      function addTimeToArrayFromToken(token2, input, config2) {
        if (input != null && hasOwnProp(tokens, token2)) {
          tokens[token2](input, config2._a, config2, token2);
        }
      }
      var YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6, WEEK = 7, WEEKDAY = 8;
      function mod(n2, x2) {
        return (n2 % x2 + x2) % x2;
      }
      var indexOf;
      if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
      } else {
        indexOf = function(o2) {
          var i2;
          for (i2 = 0; i2 < this.length; ++i2) {
            if (this[i2] === o2) {
              return i2;
            }
          }
          return -1;
        };
      }
      function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
          return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
      }
      addFormatToken("M", ["MM", 2], "Mo", function() {
        return this.month() + 1;
      });
      addFormatToken("MMM", 0, 0, function(format2) {
        return this.localeData().monthsShort(this, format2);
      });
      addFormatToken("MMMM", 0, 0, function(format2) {
        return this.localeData().months(this, format2);
      });
      addUnitAlias("month", "M");
      addUnitPriority("month", 8);
      addRegexToken("M", match1to2);
      addRegexToken("MM", match1to2, match2);
      addRegexToken("MMM", function(isStrict, locale2) {
        return locale2.monthsShortRegex(isStrict);
      });
      addRegexToken("MMMM", function(isStrict, locale2) {
        return locale2.monthsRegex(isStrict);
      });
      addParseToken(["M", "MM"], function(input, array) {
        array[MONTH] = toInt(input) - 1;
      });
      addParseToken(["MMM", "MMMM"], function(input, array, config2, token2) {
        var month = config2._locale.monthsParse(input, token2, config2._strict);
        if (month != null) {
          array[MONTH] = month;
        } else {
          getParsingFlags(config2).invalidMonth = input;
        }
      });
      var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord;
      function localeMonths(m, format2) {
        if (!m) {
          return isArray2(this._months) ? this._months : this._months["standalone"];
        }
        return isArray2(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format2) ? "format" : "standalone"][m.month()];
      }
      function localeMonthsShort(m, format2) {
        if (!m) {
          return isArray2(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
        }
        return isArray2(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format2) ? "format" : "standalone"][m.month()];
      }
      function handleStrictParse(monthName, format2, strict) {
        var i2, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
          for (i2 = 0; i2 < 12; ++i2) {
            mom = createUTC([2e3, i2]);
            this._shortMonthsParse[i2] = this.monthsShort(mom, "").toLocaleLowerCase();
            this._longMonthsParse[i2] = this.months(mom, "").toLocaleLowerCase();
          }
        }
        if (strict) {
          if (format2 === "MMM") {
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
          }
        } else {
          if (format2 === "MMM") {
            ii = indexOf.call(this._shortMonthsParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
          }
        }
      }
      function localeMonthsParse(monthName, format2, strict) {
        var i2, mom, regex;
        if (this._monthsParseExact) {
          return handleStrictParse.call(this, monthName, format2, strict);
        }
        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
        }
        for (i2 = 0; i2 < 12; i2++) {
          mom = createUTC([2e3, i2]);
          if (strict && !this._longMonthsParse[i2]) {
            this._longMonthsParse[i2] = new RegExp("^" + this.months(mom, "").replace(".", "") + "$", "i");
            this._shortMonthsParse[i2] = new RegExp("^" + this.monthsShort(mom, "").replace(".", "") + "$", "i");
          }
          if (!strict && !this._monthsParse[i2]) {
            regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
            this._monthsParse[i2] = new RegExp(regex.replace(".", ""), "i");
          }
          if (strict && format2 === "MMMM" && this._longMonthsParse[i2].test(monthName)) {
            return i2;
          } else if (strict && format2 === "MMM" && this._shortMonthsParse[i2].test(monthName)) {
            return i2;
          } else if (!strict && this._monthsParse[i2].test(monthName)) {
            return i2;
          }
        }
      }
      function setMonth(mom, value) {
        var dayOfMonth;
        if (!mom.isValid()) {
          return mom;
        }
        if (typeof value === "string") {
          if (/^\d+$/.test(value)) {
            value = toInt(value);
          } else {
            value = mom.localeData().monthsParse(value);
            if (!isNumber2(value)) {
              return mom;
            }
          }
        }
        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d["set" + (mom._isUTC ? "UTC" : "") + "Month"](value, dayOfMonth);
        return mom;
      }
      function getSetMonth(value) {
        if (value != null) {
          setMonth(this, value);
          hooks.updateOffset(this, true);
          return this;
        } else {
          return get4(this, "Month");
        }
      }
      function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
      }
      function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, "_monthsRegex")) {
            computeMonthsParse.call(this);
          }
          if (isStrict) {
            return this._monthsShortStrictRegex;
          } else {
            return this._monthsShortRegex;
          }
        } else {
          if (!hasOwnProp(this, "_monthsShortRegex")) {
            this._monthsShortRegex = defaultMonthsShortRegex;
          }
          return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
        }
      }
      function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, "_monthsRegex")) {
            computeMonthsParse.call(this);
          }
          if (isStrict) {
            return this._monthsStrictRegex;
          } else {
            return this._monthsRegex;
          }
        } else {
          if (!hasOwnProp(this, "_monthsRegex")) {
            this._monthsRegex = defaultMonthsRegex;
          }
          return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
        }
      }
      function computeMonthsParse() {
        function cmpLenRev(a2, b2) {
          return b2.length - a2.length;
        }
        var shortPieces = [], longPieces = [], mixedPieces = [], i2, mom;
        for (i2 = 0; i2 < 12; i2++) {
          mom = createUTC([2e3, i2]);
          shortPieces.push(this.monthsShort(mom, ""));
          longPieces.push(this.months(mom, ""));
          mixedPieces.push(this.months(mom, ""));
          mixedPieces.push(this.monthsShort(mom, ""));
        }
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i2 = 0; i2 < 12; i2++) {
          shortPieces[i2] = regexEscape(shortPieces[i2]);
          longPieces[i2] = regexEscape(longPieces[i2]);
        }
        for (i2 = 0; i2 < 24; i2++) {
          mixedPieces[i2] = regexEscape(mixedPieces[i2]);
        }
        this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
        this._monthsShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i");
      }
      addFormatToken("Y", 0, 0, function() {
        var y2 = this.year();
        return y2 <= 9999 ? zeroFill(y2, 4) : "+" + y2;
      });
      addFormatToken(0, ["YY", 2], 0, function() {
        return this.year() % 100;
      });
      addFormatToken(0, ["YYYY", 4], 0, "year");
      addFormatToken(0, ["YYYYY", 5], 0, "year");
      addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
      addUnitAlias("year", "y");
      addUnitPriority("year", 1);
      addRegexToken("Y", matchSigned);
      addRegexToken("YY", match1to2, match2);
      addRegexToken("YYYY", match1to4, match4);
      addRegexToken("YYYYY", match1to6, match6);
      addRegexToken("YYYYYY", match1to6, match6);
      addParseToken(["YYYYY", "YYYYYY"], YEAR);
      addParseToken("YYYY", function(input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
      });
      addParseToken("YY", function(input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
      });
      addParseToken("Y", function(input, array) {
        array[YEAR] = parseInt(input, 10);
      });
      function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
      }
      hooks.parseTwoDigitYear = function(input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
      };
      var getSetYear = makeGetSet("FullYear", true);
      function getIsLeapYear() {
        return isLeapYear(this.year());
      }
      function createDate(y2, m, d2, h2, M2, s2, ms2) {
        var date;
        if (y2 < 100 && y2 >= 0) {
          date = new Date(y2 + 400, m, d2, h2, M2, s2, ms2);
          if (isFinite(date.getFullYear())) {
            date.setFullYear(y2);
          }
        } else {
          date = new Date(y2, m, d2, h2, M2, s2, ms2);
        }
        return date;
      }
      function createUTCDate(y2) {
        var date, args;
        if (y2 < 100 && y2 >= 0) {
          args = Array.prototype.slice.call(arguments);
          args[0] = y2 + 400;
          date = new Date(Date.UTC.apply(null, args));
          if (isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y2);
          }
        } else {
          date = new Date(Date.UTC.apply(null, arguments));
        }
        return date;
      }
      function firstWeekOffset(year, dow, doy) {
        var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
        return -fwdlw + fwd - 1;
      }
      function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
        if (dayOfYear <= 0) {
          resYear = year - 1;
          resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
          resYear = year + 1;
          resDayOfYear = dayOfYear - daysInYear(year);
        } else {
          resYear = year;
          resDayOfYear = dayOfYear;
        }
        return {
          year: resYear,
          dayOfYear: resDayOfYear
        };
      }
      function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
        if (week < 1) {
          resYear = mom.year() - 1;
          resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
          resWeek = week - weeksInYear(mom.year(), dow, doy);
          resYear = mom.year() + 1;
        } else {
          resYear = mom.year();
          resWeek = week;
        }
        return {
          week: resWeek,
          year: resYear
        };
      }
      function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
      }
      addFormatToken("w", ["ww", 2], "wo", "week");
      addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
      addUnitAlias("week", "w");
      addUnitAlias("isoWeek", "W");
      addUnitPriority("week", 5);
      addUnitPriority("isoWeek", 5);
      addRegexToken("w", match1to2);
      addRegexToken("ww", match1to2, match2);
      addRegexToken("W", match1to2);
      addRegexToken("WW", match1to2, match2);
      addWeekParseToken(["w", "ww", "W", "WW"], function(input, week, config2, token2) {
        week[token2.substr(0, 1)] = toInt(input);
      });
      function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
      }
      var defaultLocaleWeek = {
        dow: 0,
        doy: 6
      };
      function localeFirstDayOfWeek() {
        return this._week.dow;
      }
      function localeFirstDayOfYear() {
        return this._week.doy;
      }
      function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, "d");
      }
      function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, "d");
      }
      addFormatToken("d", 0, "do", "day");
      addFormatToken("dd", 0, 0, function(format2) {
        return this.localeData().weekdaysMin(this, format2);
      });
      addFormatToken("ddd", 0, 0, function(format2) {
        return this.localeData().weekdaysShort(this, format2);
      });
      addFormatToken("dddd", 0, 0, function(format2) {
        return this.localeData().weekdays(this, format2);
      });
      addFormatToken("e", 0, 0, "weekday");
      addFormatToken("E", 0, 0, "isoWeekday");
      addUnitAlias("day", "d");
      addUnitAlias("weekday", "e");
      addUnitAlias("isoWeekday", "E");
      addUnitPriority("day", 11);
      addUnitPriority("weekday", 11);
      addUnitPriority("isoWeekday", 11);
      addRegexToken("d", match1to2);
      addRegexToken("e", match1to2);
      addRegexToken("E", match1to2);
      addRegexToken("dd", function(isStrict, locale2) {
        return locale2.weekdaysMinRegex(isStrict);
      });
      addRegexToken("ddd", function(isStrict, locale2) {
        return locale2.weekdaysShortRegex(isStrict);
      });
      addRegexToken("dddd", function(isStrict, locale2) {
        return locale2.weekdaysRegex(isStrict);
      });
      addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config2, token2) {
        var weekday = config2._locale.weekdaysParse(input, token2, config2._strict);
        if (weekday != null) {
          week.d = weekday;
        } else {
          getParsingFlags(config2).invalidWeekday = input;
        }
      });
      addWeekParseToken(["d", "e", "E"], function(input, week, config2, token2) {
        week[token2] = toInt(input);
      });
      function parseWeekday(input, locale2) {
        if (typeof input !== "string") {
          return input;
        }
        if (!isNaN(input)) {
          return parseInt(input, 10);
        }
        input = locale2.weekdaysParse(input);
        if (typeof input === "number") {
          return input;
        }
        return null;
      }
      function parseIsoWeekday(input, locale2) {
        if (typeof input === "string") {
          return locale2.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
      }
      function shiftWeekdays(ws, n2) {
        return ws.slice(n2, 7).concat(ws.slice(0, n2));
      }
      var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), defaultWeekdaysRegex = matchWord, defaultWeekdaysShortRegex = matchWord, defaultWeekdaysMinRegex = matchWord;
      function localeWeekdays(m, format2) {
        var weekdays = isArray2(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format2) ? "format" : "standalone"];
        return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;
      }
      function localeWeekdaysShort(m) {
        return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
      }
      function localeWeekdaysMin(m) {
        return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
      }
      function handleStrictParse$1(weekdayName, format2, strict) {
        var i2, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._minWeekdaysParse = [];
          for (i2 = 0; i2 < 7; ++i2) {
            mom = createUTC([2e3, 1]).day(i2);
            this._minWeekdaysParse[i2] = this.weekdaysMin(mom, "").toLocaleLowerCase();
            this._shortWeekdaysParse[i2] = this.weekdaysShort(mom, "").toLocaleLowerCase();
            this._weekdaysParse[i2] = this.weekdays(mom, "").toLocaleLowerCase();
          }
        }
        if (strict) {
          if (format2 === "dddd") {
            ii = indexOf.call(this._weekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else if (format2 === "ddd") {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          }
        } else {
          if (format2 === "dddd") {
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else if (format2 === "ddd") {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          }
        }
      }
      function localeWeekdaysParse(weekdayName, format2, strict) {
        var i2, mom, regex;
        if (this._weekdaysParseExact) {
          return handleStrictParse$1.call(this, weekdayName, format2, strict);
        }
        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._minWeekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._fullWeekdaysParse = [];
        }
        for (i2 = 0; i2 < 7; i2++) {
          mom = createUTC([2e3, 1]).day(i2);
          if (strict && !this._fullWeekdaysParse[i2]) {
            this._fullWeekdaysParse[i2] = new RegExp("^" + this.weekdays(mom, "").replace(".", "\\.?") + "$", "i");
            this._shortWeekdaysParse[i2] = new RegExp("^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$", "i");
            this._minWeekdaysParse[i2] = new RegExp("^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$", "i");
          }
          if (!this._weekdaysParse[i2]) {
            regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
            this._weekdaysParse[i2] = new RegExp(regex.replace(".", ""), "i");
          }
          if (strict && format2 === "dddd" && this._fullWeekdaysParse[i2].test(weekdayName)) {
            return i2;
          } else if (strict && format2 === "ddd" && this._shortWeekdaysParse[i2].test(weekdayName)) {
            return i2;
          } else if (strict && format2 === "dd" && this._minWeekdaysParse[i2].test(weekdayName)) {
            return i2;
          } else if (!strict && this._weekdaysParse[i2].test(weekdayName)) {
            return i2;
          }
        }
      }
      function getSetDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
          input = parseWeekday(input, this.localeData());
          return this.add(input - day, "d");
        } else {
          return day;
        }
      }
      function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, "d");
      }
      function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        if (input != null) {
          var weekday = parseIsoWeekday(input, this.localeData());
          return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
          return this.day() || 7;
        }
      }
      function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            computeWeekdaysParse.call(this);
          }
          if (isStrict) {
            return this._weekdaysStrictRegex;
          } else {
            return this._weekdaysRegex;
          }
        } else {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            this._weekdaysRegex = defaultWeekdaysRegex;
          }
          return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
        }
      }
      function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            computeWeekdaysParse.call(this);
          }
          if (isStrict) {
            return this._weekdaysShortStrictRegex;
          } else {
            return this._weekdaysShortRegex;
          }
        } else {
          if (!hasOwnProp(this, "_weekdaysShortRegex")) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
          }
          return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
      }
      function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            computeWeekdaysParse.call(this);
          }
          if (isStrict) {
            return this._weekdaysMinStrictRegex;
          } else {
            return this._weekdaysMinRegex;
          }
        } else {
          if (!hasOwnProp(this, "_weekdaysMinRegex")) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
          }
          return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
      }
      function computeWeekdaysParse() {
        function cmpLenRev(a2, b2) {
          return b2.length - a2.length;
        }
        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i2, mom, minp, shortp, longp;
        for (i2 = 0; i2 < 7; i2++) {
          mom = createUTC([2e3, 1]).day(i2);
          minp = regexEscape(this.weekdaysMin(mom, ""));
          shortp = regexEscape(this.weekdaysShort(mom, ""));
          longp = regexEscape(this.weekdays(mom, ""));
          minPieces.push(minp);
          shortPieces.push(shortp);
          longPieces.push(longp);
          mixedPieces.push(minp);
          mixedPieces.push(shortp);
          mixedPieces.push(longp);
        }
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;
        this._weekdaysStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
        this._weekdaysShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i");
        this._weekdaysMinStrictRegex = new RegExp("^(" + minPieces.join("|") + ")", "i");
      }
      function hFormat() {
        return this.hours() % 12 || 12;
      }
      function kFormat() {
        return this.hours() || 24;
      }
      addFormatToken("H", ["HH", 2], 0, "hour");
      addFormatToken("h", ["hh", 2], 0, hFormat);
      addFormatToken("k", ["kk", 2], 0, kFormat);
      addFormatToken("hmm", 0, 0, function() {
        return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
      });
      addFormatToken("hmmss", 0, 0, function() {
        return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });
      addFormatToken("Hmm", 0, 0, function() {
        return "" + this.hours() + zeroFill(this.minutes(), 2);
      });
      addFormatToken("Hmmss", 0, 0, function() {
        return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });
      function meridiem(token2, lowercase) {
        addFormatToken(token2, 0, 0, function() {
          return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
      }
      meridiem("a", true);
      meridiem("A", false);
      addUnitAlias("hour", "h");
      addUnitPriority("hour", 13);
      function matchMeridiem(isStrict, locale2) {
        return locale2._meridiemParse;
      }
      addRegexToken("a", matchMeridiem);
      addRegexToken("A", matchMeridiem);
      addRegexToken("H", match1to2);
      addRegexToken("h", match1to2);
      addRegexToken("k", match1to2);
      addRegexToken("HH", match1to2, match2);
      addRegexToken("hh", match1to2, match2);
      addRegexToken("kk", match1to2, match2);
      addRegexToken("hmm", match3to4);
      addRegexToken("hmmss", match5to6);
      addRegexToken("Hmm", match3to4);
      addRegexToken("Hmmss", match5to6);
      addParseToken(["H", "HH"], HOUR);
      addParseToken(["k", "kk"], function(input, array, config2) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
      });
      addParseToken(["a", "A"], function(input, array, config2) {
        config2._isPm = config2._locale.isPM(input);
        config2._meridiem = input;
      });
      addParseToken(["h", "hh"], function(input, array, config2) {
        array[HOUR] = toInt(input);
        getParsingFlags(config2).bigHour = true;
      });
      addParseToken("hmm", function(input, array, config2) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config2).bigHour = true;
      });
      addParseToken("hmmss", function(input, array, config2) {
        var pos1 = input.length - 4, pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config2).bigHour = true;
      });
      addParseToken("Hmm", function(input, array, config2) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
      });
      addParseToken("Hmmss", function(input, array, config2) {
        var pos1 = input.length - 4, pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
      });
      function localeIsPM(input) {
        return (input + "").toLowerCase().charAt(0) === "p";
      }
      var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i, getSetHour = makeGetSet("Hours", true);
      function localeMeridiem(hours2, minutes2, isLower) {
        if (hours2 > 11) {
          return isLower ? "pm" : "PM";
        } else {
          return isLower ? "am" : "AM";
        }
      }
      var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,
        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,
        week: defaultLocaleWeek,
        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,
        meridiemParse: defaultLocaleMeridiemParse
      };
      var locales = {}, localeFamilies = {}, globalLocale;
      function commonPrefix(arr1, arr2) {
        var i2, minl = Math.min(arr1.length, arr2.length);
        for (i2 = 0; i2 < minl; i2 += 1) {
          if (arr1[i2] !== arr2[i2]) {
            return i2;
          }
        }
        return minl;
      }
      function normalizeLocale(key) {
        return key ? key.toLowerCase().replace("_", "-") : key;
      }
      function chooseLocale(names) {
        var i2 = 0, j2, next, locale2, split2;
        while (i2 < names.length) {
          split2 = normalizeLocale(names[i2]).split("-");
          j2 = split2.length;
          next = normalizeLocale(names[i2 + 1]);
          next = next ? next.split("-") : null;
          while (j2 > 0) {
            locale2 = loadLocale(split2.slice(0, j2).join("-"));
            if (locale2) {
              return locale2;
            }
            if (next && next.length >= j2 && commonPrefix(split2, next) >= j2 - 1) {
              break;
            }
            j2--;
          }
          i2++;
        }
        return globalLocale;
      }
      function loadLocale(name) {
        var oldLocale = null, aliasedRequire;
        if (locales[name] === void 0 && typeof module !== "undefined" && module && module.exports) {
          try {
            oldLocale = globalLocale._abbr;
            aliasedRequire = __require;
            aliasedRequire("./locale/" + name);
            getSetGlobalLocale(oldLocale);
          } catch (e2) {
            locales[name] = null;
          }
        }
        return locales[name];
      }
      function getSetGlobalLocale(key, values6) {
        var data;
        if (key) {
          if (isUndefined(values6)) {
            data = getLocale(key);
          } else {
            data = defineLocale(key, values6);
          }
          if (data) {
            globalLocale = data;
          } else {
            if (typeof console !== "undefined" && console.warn) {
              console.warn("Locale " + key + " not found. Did you forget to load it?");
            }
          }
        }
        return globalLocale._abbr;
      }
      function defineLocale(name, config2) {
        if (config2 !== null) {
          var locale2, parentConfig = baseConfig;
          config2.abbr = name;
          if (locales[name] != null) {
            deprecateSimple("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.");
            parentConfig = locales[name]._config;
          } else if (config2.parentLocale != null) {
            if (locales[config2.parentLocale] != null) {
              parentConfig = locales[config2.parentLocale]._config;
            } else {
              locale2 = loadLocale(config2.parentLocale);
              if (locale2 != null) {
                parentConfig = locale2._config;
              } else {
                if (!localeFamilies[config2.parentLocale]) {
                  localeFamilies[config2.parentLocale] = [];
                }
                localeFamilies[config2.parentLocale].push({
                  name,
                  config: config2
                });
                return null;
              }
            }
          }
          locales[name] = new Locale(mergeConfigs(parentConfig, config2));
          if (localeFamilies[name]) {
            localeFamilies[name].forEach(function(x2) {
              defineLocale(x2.name, x2.config);
            });
          }
          getSetGlobalLocale(name);
          return locales[name];
        } else {
          delete locales[name];
          return null;
        }
      }
      function updateLocale(name, config2) {
        if (config2 != null) {
          var locale2, tmpLocale, parentConfig = baseConfig;
          if (locales[name] != null && locales[name].parentLocale != null) {
            locales[name].set(mergeConfigs(locales[name]._config, config2));
          } else {
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
              parentConfig = tmpLocale._config;
            }
            config2 = mergeConfigs(parentConfig, config2);
            if (tmpLocale == null) {
              config2.abbr = name;
            }
            locale2 = new Locale(config2);
            locale2.parentLocale = locales[name];
            locales[name] = locale2;
          }
          getSetGlobalLocale(name);
        } else {
          if (locales[name] != null) {
            if (locales[name].parentLocale != null) {
              locales[name] = locales[name].parentLocale;
              if (name === getSetGlobalLocale()) {
                getSetGlobalLocale(name);
              }
            } else if (locales[name] != null) {
              delete locales[name];
            }
          }
        }
        return locales[name];
      }
      function getLocale(key) {
        var locale2;
        if (key && key._locale && key._locale._abbr) {
          key = key._locale._abbr;
        }
        if (!key) {
          return globalLocale;
        }
        if (!isArray2(key)) {
          locale2 = loadLocale(key);
          if (locale2) {
            return locale2;
          }
          key = [key];
        }
        return chooseLocale(key);
      }
      function listLocales() {
        return keys3(locales);
      }
      function checkOverflow(m) {
        var overflow2, a2 = m._a;
        if (a2 && getParsingFlags(m).overflow === -2) {
          overflow2 = a2[MONTH] < 0 || a2[MONTH] > 11 ? MONTH : a2[DATE] < 1 || a2[DATE] > daysInMonth(a2[YEAR], a2[MONTH]) ? DATE : a2[HOUR] < 0 || a2[HOUR] > 24 || a2[HOUR] === 24 && (a2[MINUTE] !== 0 || a2[SECOND] !== 0 || a2[MILLISECOND] !== 0) ? HOUR : a2[MINUTE] < 0 || a2[MINUTE] > 59 ? MINUTE : a2[SECOND] < 0 || a2[SECOND] > 59 ? SECOND : a2[MILLISECOND] < 0 || a2[MILLISECOND] > 999 ? MILLISECOND : -1;
          if (getParsingFlags(m)._overflowDayOfYear && (overflow2 < YEAR || overflow2 > DATE)) {
            overflow2 = DATE;
          }
          if (getParsingFlags(m)._overflowWeeks && overflow2 === -1) {
            overflow2 = WEEK;
          }
          if (getParsingFlags(m)._overflowWeekday && overflow2 === -1) {
            overflow2 = WEEKDAY;
          }
          getParsingFlags(m).overflow = overflow2;
        }
        return m;
      }
      var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, tzRegex = /Z|[+-]\d\d(?::?\d\d)?/, isoDates = [
        ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
        ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
        ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
        ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
        ["YYYY-DDD", /\d{4}-\d{3}/],
        ["YYYY-MM", /\d{4}-\d\d/, false],
        ["YYYYYYMMDD", /[+-]\d{10}/],
        ["YYYYMMDD", /\d{8}/],
        ["GGGG[W]WWE", /\d{4}W\d{3}/],
        ["GGGG[W]WW", /\d{4}W\d{2}/, false],
        ["YYYYDDD", /\d{7}/],
        ["YYYYMM", /\d{6}/, false],
        ["YYYY", /\d{4}/, false]
      ], isoTimes = [
        ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
        ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
        ["HH:mm:ss", /\d\d:\d\d:\d\d/],
        ["HH:mm", /\d\d:\d\d/],
        ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
        ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
        ["HHmmss", /\d\d\d\d\d\d/],
        ["HHmm", /\d\d\d\d/],
        ["HH", /\d\d/]
      ], aspNetJsonRegex = /^\/?Date\((-?\d+)/i, rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
      };
      function configFromISO(config2) {
        var i2, l2, string3 = config2._i, match5 = extendedIsoRegex.exec(string3) || basicIsoRegex.exec(string3), allowTime, dateFormat, timeFormat, tzFormat;
        if (match5) {
          getParsingFlags(config2).iso = true;
          for (i2 = 0, l2 = isoDates.length; i2 < l2; i2++) {
            if (isoDates[i2][1].exec(match5[1])) {
              dateFormat = isoDates[i2][0];
              allowTime = isoDates[i2][2] !== false;
              break;
            }
          }
          if (dateFormat == null) {
            config2._isValid = false;
            return;
          }
          if (match5[3]) {
            for (i2 = 0, l2 = isoTimes.length; i2 < l2; i2++) {
              if (isoTimes[i2][1].exec(match5[3])) {
                timeFormat = (match5[2] || " ") + isoTimes[i2][0];
                break;
              }
            }
            if (timeFormat == null) {
              config2._isValid = false;
              return;
            }
          }
          if (!allowTime && timeFormat != null) {
            config2._isValid = false;
            return;
          }
          if (match5[4]) {
            if (tzRegex.exec(match5[4])) {
              tzFormat = "Z";
            } else {
              config2._isValid = false;
              return;
            }
          }
          config2._f = dateFormat + (timeFormat || "") + (tzFormat || "");
          configFromStringAndFormat(config2);
        } else {
          config2._isValid = false;
        }
      }
      function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
          untruncateYear(yearStr),
          defaultLocaleMonthsShort.indexOf(monthStr),
          parseInt(dayStr, 10),
          parseInt(hourStr, 10),
          parseInt(minuteStr, 10)
        ];
        if (secondStr) {
          result.push(parseInt(secondStr, 10));
        }
        return result;
      }
      function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
          return 2e3 + year;
        } else if (year <= 999) {
          return 1900 + year;
        }
        return year;
      }
      function preprocessRFC2822(s2) {
        return s2.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
      }
      function checkWeekday(weekdayStr, parsedInput, config2) {
        if (weekdayStr) {
          var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
          if (weekdayProvided !== weekdayActual) {
            getParsingFlags(config2).weekdayMismatch = true;
            config2._isValid = false;
            return false;
          }
        }
        return true;
      }
      function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
          return obsOffsets[obsOffset];
        } else if (militaryOffset) {
          return 0;
        } else {
          var hm = parseInt(numOffset, 10), m = hm % 100, h2 = (hm - m) / 100;
          return h2 * 60 + m;
        }
      }
      function configFromRFC2822(config2) {
        var match5 = rfc2822.exec(preprocessRFC2822(config2._i)), parsedArray;
        if (match5) {
          parsedArray = extractFromRFC2822Strings(match5[4], match5[3], match5[2], match5[5], match5[6], match5[7]);
          if (!checkWeekday(match5[1], parsedArray, config2)) {
            return;
          }
          config2._a = parsedArray;
          config2._tzm = calculateOffset(match5[8], match5[9], match5[10]);
          config2._d = createUTCDate.apply(null, config2._a);
          config2._d.setUTCMinutes(config2._d.getUTCMinutes() - config2._tzm);
          getParsingFlags(config2).rfc2822 = true;
        } else {
          config2._isValid = false;
        }
      }
      function configFromString(config2) {
        var matched = aspNetJsonRegex.exec(config2._i);
        if (matched !== null) {
          config2._d = new Date(+matched[1]);
          return;
        }
        configFromISO(config2);
        if (config2._isValid === false) {
          delete config2._isValid;
        } else {
          return;
        }
        configFromRFC2822(config2);
        if (config2._isValid === false) {
          delete config2._isValid;
        } else {
          return;
        }
        if (config2._strict) {
          config2._isValid = false;
        } else {
          hooks.createFromInputFallback(config2);
        }
      }
      hooks.createFromInputFallback = deprecate("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(config2) {
        config2._d = new Date(config2._i + (config2._useUTC ? " UTC" : ""));
      });
      function defaults2(a2, b2, c2) {
        if (a2 != null) {
          return a2;
        }
        if (b2 != null) {
          return b2;
        }
        return c2;
      }
      function currentDateArray(config2) {
        var nowValue = new Date(hooks.now());
        if (config2._useUTC) {
          return [
            nowValue.getUTCFullYear(),
            nowValue.getUTCMonth(),
            nowValue.getUTCDate()
          ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
      }
      function configFromArray(config2) {
        var i2, date, input = [], currentDate, expectedWeekday, yearToUse;
        if (config2._d) {
          return;
        }
        currentDate = currentDateArray(config2);
        if (config2._w && config2._a[DATE] == null && config2._a[MONTH] == null) {
          dayOfYearFromWeekInfo(config2);
        }
        if (config2._dayOfYear != null) {
          yearToUse = defaults2(config2._a[YEAR], currentDate[YEAR]);
          if (config2._dayOfYear > daysInYear(yearToUse) || config2._dayOfYear === 0) {
            getParsingFlags(config2)._overflowDayOfYear = true;
          }
          date = createUTCDate(yearToUse, 0, config2._dayOfYear);
          config2._a[MONTH] = date.getUTCMonth();
          config2._a[DATE] = date.getUTCDate();
        }
        for (i2 = 0; i2 < 3 && config2._a[i2] == null; ++i2) {
          config2._a[i2] = input[i2] = currentDate[i2];
        }
        for (; i2 < 7; i2++) {
          config2._a[i2] = input[i2] = config2._a[i2] == null ? i2 === 2 ? 1 : 0 : config2._a[i2];
        }
        if (config2._a[HOUR] === 24 && config2._a[MINUTE] === 0 && config2._a[SECOND] === 0 && config2._a[MILLISECOND] === 0) {
          config2._nextDay = true;
          config2._a[HOUR] = 0;
        }
        config2._d = (config2._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config2._useUTC ? config2._d.getUTCDay() : config2._d.getDay();
        if (config2._tzm != null) {
          config2._d.setUTCMinutes(config2._d.getUTCMinutes() - config2._tzm);
        }
        if (config2._nextDay) {
          config2._a[HOUR] = 24;
        }
        if (config2._w && typeof config2._w.d !== "undefined" && config2._w.d !== expectedWeekday) {
          getParsingFlags(config2).weekdayMismatch = true;
        }
      }
      function dayOfYearFromWeekInfo(config2) {
        var w2, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
        w2 = config2._w;
        if (w2.GG != null || w2.W != null || w2.E != null) {
          dow = 1;
          doy = 4;
          weekYear = defaults2(w2.GG, config2._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
          week = defaults2(w2.W, 1);
          weekday = defaults2(w2.E, 1);
          if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
          }
        } else {
          dow = config2._locale._week.dow;
          doy = config2._locale._week.doy;
          curWeek = weekOfYear(createLocal(), dow, doy);
          weekYear = defaults2(w2.gg, config2._a[YEAR], curWeek.year);
          week = defaults2(w2.w, curWeek.week);
          if (w2.d != null) {
            weekday = w2.d;
            if (weekday < 0 || weekday > 6) {
              weekdayOverflow = true;
            }
          } else if (w2.e != null) {
            weekday = w2.e + dow;
            if (w2.e < 0 || w2.e > 6) {
              weekdayOverflow = true;
            }
          } else {
            weekday = dow;
          }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
          getParsingFlags(config2)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
          getParsingFlags(config2)._overflowWeekday = true;
        } else {
          temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
          config2._a[YEAR] = temp.year;
          config2._dayOfYear = temp.dayOfYear;
        }
      }
      hooks.ISO_8601 = function() {
      };
      hooks.RFC_2822 = function() {
      };
      function configFromStringAndFormat(config2) {
        if (config2._f === hooks.ISO_8601) {
          configFromISO(config2);
          return;
        }
        if (config2._f === hooks.RFC_2822) {
          configFromRFC2822(config2);
          return;
        }
        config2._a = [];
        getParsingFlags(config2).empty = true;
        var string3 = "" + config2._i, i2, parsedInput, tokens2, token2, skipped, stringLength = string3.length, totalParsedInputLength = 0, era;
        tokens2 = expandFormat(config2._f, config2._locale).match(formattingTokens) || [];
        for (i2 = 0; i2 < tokens2.length; i2++) {
          token2 = tokens2[i2];
          parsedInput = (string3.match(getParseRegexForToken(token2, config2)) || [])[0];
          if (parsedInput) {
            skipped = string3.substr(0, string3.indexOf(parsedInput));
            if (skipped.length > 0) {
              getParsingFlags(config2).unusedInput.push(skipped);
            }
            string3 = string3.slice(string3.indexOf(parsedInput) + parsedInput.length);
            totalParsedInputLength += parsedInput.length;
          }
          if (formatTokenFunctions[token2]) {
            if (parsedInput) {
              getParsingFlags(config2).empty = false;
            } else {
              getParsingFlags(config2).unusedTokens.push(token2);
            }
            addTimeToArrayFromToken(token2, parsedInput, config2);
          } else if (config2._strict && !parsedInput) {
            getParsingFlags(config2).unusedTokens.push(token2);
          }
        }
        getParsingFlags(config2).charsLeftOver = stringLength - totalParsedInputLength;
        if (string3.length > 0) {
          getParsingFlags(config2).unusedInput.push(string3);
        }
        if (config2._a[HOUR] <= 12 && getParsingFlags(config2).bigHour === true && config2._a[HOUR] > 0) {
          getParsingFlags(config2).bigHour = void 0;
        }
        getParsingFlags(config2).parsedDateParts = config2._a.slice(0);
        getParsingFlags(config2).meridiem = config2._meridiem;
        config2._a[HOUR] = meridiemFixWrap(config2._locale, config2._a[HOUR], config2._meridiem);
        era = getParsingFlags(config2).era;
        if (era !== null) {
          config2._a[YEAR] = config2._locale.erasConvertYear(era, config2._a[YEAR]);
        }
        configFromArray(config2);
        checkOverflow(config2);
      }
      function meridiemFixWrap(locale2, hour, meridiem2) {
        var isPm;
        if (meridiem2 == null) {
          return hour;
        }
        if (locale2.meridiemHour != null) {
          return locale2.meridiemHour(hour, meridiem2);
        } else if (locale2.isPM != null) {
          isPm = locale2.isPM(meridiem2);
          if (isPm && hour < 12) {
            hour += 12;
          }
          if (!isPm && hour === 12) {
            hour = 0;
          }
          return hour;
        } else {
          return hour;
        }
      }
      function configFromStringAndArray(config2) {
        var tempConfig, bestMoment, scoreToBeat, i2, currentScore, validFormatFound, bestFormatIsValid = false;
        if (config2._f.length === 0) {
          getParsingFlags(config2).invalidFormat = true;
          config2._d = new Date(NaN);
          return;
        }
        for (i2 = 0; i2 < config2._f.length; i2++) {
          currentScore = 0;
          validFormatFound = false;
          tempConfig = copyConfig({}, config2);
          if (config2._useUTC != null) {
            tempConfig._useUTC = config2._useUTC;
          }
          tempConfig._f = config2._f[i2];
          configFromStringAndFormat(tempConfig);
          if (isValid(tempConfig)) {
            validFormatFound = true;
          }
          currentScore += getParsingFlags(tempConfig).charsLeftOver;
          currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
          getParsingFlags(tempConfig).score = currentScore;
          if (!bestFormatIsValid) {
            if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
              scoreToBeat = currentScore;
              bestMoment = tempConfig;
              if (validFormatFound) {
                bestFormatIsValid = true;
              }
            }
          } else {
            if (currentScore < scoreToBeat) {
              scoreToBeat = currentScore;
              bestMoment = tempConfig;
            }
          }
        }
        extend(config2, bestMoment || tempConfig);
      }
      function configFromObject(config2) {
        if (config2._d) {
          return;
        }
        var i2 = normalizeObjectUnits(config2._i), dayOrDate = i2.day === void 0 ? i2.date : i2.day;
        config2._a = map2([i2.year, i2.month, dayOrDate, i2.hour, i2.minute, i2.second, i2.millisecond], function(obj) {
          return obj && parseInt(obj, 10);
        });
        configFromArray(config2);
      }
      function createFromConfig(config2) {
        var res = new Moment(checkOverflow(prepareConfig(config2)));
        if (res._nextDay) {
          res.add(1, "d");
          res._nextDay = void 0;
        }
        return res;
      }
      function prepareConfig(config2) {
        var input = config2._i, format2 = config2._f;
        config2._locale = config2._locale || getLocale(config2._l);
        if (input === null || format2 === void 0 && input === "") {
          return createInvalid({ nullInput: true });
        }
        if (typeof input === "string") {
          config2._i = input = config2._locale.preparse(input);
        }
        if (isMoment(input)) {
          return new Moment(checkOverflow(input));
        } else if (isDate2(input)) {
          config2._d = input;
        } else if (isArray2(format2)) {
          configFromStringAndArray(config2);
        } else if (format2) {
          configFromStringAndFormat(config2);
        } else {
          configFromInput(config2);
        }
        if (!isValid(config2)) {
          config2._d = null;
        }
        return config2;
      }
      function configFromInput(config2) {
        var input = config2._i;
        if (isUndefined(input)) {
          config2._d = new Date(hooks.now());
        } else if (isDate2(input)) {
          config2._d = new Date(input.valueOf());
        } else if (typeof input === "string") {
          configFromString(config2);
        } else if (isArray2(input)) {
          config2._a = map2(input.slice(0), function(obj) {
            return parseInt(obj, 10);
          });
          configFromArray(config2);
        } else if (isObject(input)) {
          configFromObject(config2);
        } else if (isNumber2(input)) {
          config2._d = new Date(input);
        } else {
          hooks.createFromInputFallback(config2);
        }
      }
      function createLocalOrUTC(input, format2, locale2, strict, isUTC) {
        var c2 = {};
        if (format2 === true || format2 === false) {
          strict = format2;
          format2 = void 0;
        }
        if (locale2 === true || locale2 === false) {
          strict = locale2;
          locale2 = void 0;
        }
        if (isObject(input) && isObjectEmpty(input) || isArray2(input) && input.length === 0) {
          input = void 0;
        }
        c2._isAMomentObject = true;
        c2._useUTC = c2._isUTC = isUTC;
        c2._l = locale2;
        c2._i = input;
        c2._f = format2;
        c2._strict = strict;
        return createFromConfig(c2);
      }
      function createLocal(input, format2, locale2, strict) {
        return createLocalOrUTC(input, format2, locale2, strict, false);
      }
      var prototypeMin = deprecate("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
          return other < this ? this : other;
        } else {
          return createInvalid();
        }
      }), prototypeMax = deprecate("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
          return other > this ? this : other;
        } else {
          return createInvalid();
        }
      });
      function pickBy(fn, moments) {
        var res, i2;
        if (moments.length === 1 && isArray2(moments[0])) {
          moments = moments[0];
        }
        if (!moments.length) {
          return createLocal();
        }
        res = moments[0];
        for (i2 = 1; i2 < moments.length; ++i2) {
          if (!moments[i2].isValid() || moments[i2][fn](res)) {
            res = moments[i2];
          }
        }
        return res;
      }
      function min2() {
        var args = [].slice.call(arguments, 0);
        return pickBy("isBefore", args);
      }
      function max2() {
        var args = [].slice.call(arguments, 0);
        return pickBy("isAfter", args);
      }
      var now2 = function() {
        return Date.now ? Date.now() : +new Date();
      };
      var ordering = [
        "year",
        "quarter",
        "month",
        "week",
        "day",
        "hour",
        "minute",
        "second",
        "millisecond"
      ];
      function isDurationValid(m) {
        var key, unitHasDecimal = false, i2;
        for (key in m) {
          if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
            return false;
          }
        }
        for (i2 = 0; i2 < ordering.length; ++i2) {
          if (m[ordering[i2]]) {
            if (unitHasDecimal) {
              return false;
            }
            if (parseFloat(m[ordering[i2]]) !== toInt(m[ordering[i2]])) {
              unitHasDecimal = true;
            }
          }
        }
        return true;
      }
      function isValid$1() {
        return this._isValid;
      }
      function createInvalid$1() {
        return createDuration(NaN);
      }
      function Duration(duration5) {
        var normalizedInput = normalizeObjectUnits(duration5), years2 = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months2 = normalizedInput.month || 0, weeks2 = normalizedInput.week || normalizedInput.isoWeek || 0, days2 = normalizedInput.day || 0, hours2 = normalizedInput.hour || 0, minutes2 = normalizedInput.minute || 0, seconds2 = normalizedInput.second || 0, milliseconds2 = normalizedInput.millisecond || 0;
        this._isValid = isDurationValid(normalizedInput);
        this._milliseconds = +milliseconds2 + seconds2 * 1e3 + minutes2 * 6e4 + hours2 * 1e3 * 60 * 60;
        this._days = +days2 + weeks2 * 7;
        this._months = +months2 + quarters * 3 + years2 * 12;
        this._data = {};
        this._locale = getLocale();
        this._bubble();
      }
      function isDuration(obj) {
        return obj instanceof Duration;
      }
      function absRound(number) {
        if (number < 0) {
          return Math.round(-1 * number) * -1;
        } else {
          return Math.round(number);
        }
      }
      function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i2;
        for (i2 = 0; i2 < len; i2++) {
          if (dontConvert && array1[i2] !== array2[i2] || !dontConvert && toInt(array1[i2]) !== toInt(array2[i2])) {
            diffs++;
          }
        }
        return diffs + lengthDiff;
      }
      function offset7(token2, separator) {
        addFormatToken(token2, 0, 0, function() {
          var offset8 = this.utcOffset(), sign2 = "+";
          if (offset8 < 0) {
            offset8 = -offset8;
            sign2 = "-";
          }
          return sign2 + zeroFill(~~(offset8 / 60), 2) + separator + zeroFill(~~offset8 % 60, 2);
        });
      }
      offset7("Z", ":");
      offset7("ZZ", "");
      addRegexToken("Z", matchShortOffset);
      addRegexToken("ZZ", matchShortOffset);
      addParseToken(["Z", "ZZ"], function(input, array, config2) {
        config2._useUTC = true;
        config2._tzm = offsetFromString(matchShortOffset, input);
      });
      var chunkOffset = /([\+\-]|\d\d)/gi;
      function offsetFromString(matcher, string3) {
        var matches = (string3 || "").match(matcher), chunk, parts, minutes2;
        if (matches === null) {
          return null;
        }
        chunk = matches[matches.length - 1] || [];
        parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
        minutes2 = +(parts[1] * 60) + toInt(parts[2]);
        return minutes2 === 0 ? 0 : parts[0] === "+" ? minutes2 : -minutes2;
      }
      function cloneWithOffset(input, model) {
        var res, diff2;
        if (model._isUTC) {
          res = model.clone();
          diff2 = (isMoment(input) || isDate2(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
          res._d.setTime(res._d.valueOf() + diff2);
          hooks.updateOffset(res, false);
          return res;
        } else {
          return createLocal(input).local();
        }
      }
      function getDateOffset(m) {
        return -Math.round(m._d.getTimezoneOffset());
      }
      hooks.updateOffset = function() {
      };
      function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset8 = this._offset || 0, localAdjust;
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        if (input != null) {
          if (typeof input === "string") {
            input = offsetFromString(matchShortOffset, input);
            if (input === null) {
              return this;
            }
          } else if (Math.abs(input) < 16 && !keepMinutes) {
            input = input * 60;
          }
          if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
          }
          this._offset = input;
          this._isUTC = true;
          if (localAdjust != null) {
            this.add(localAdjust, "m");
          }
          if (offset8 !== input) {
            if (!keepLocalTime || this._changeInProgress) {
              addSubtract(this, createDuration(input - offset8, "m"), 1, false);
            } else if (!this._changeInProgress) {
              this._changeInProgress = true;
              hooks.updateOffset(this, true);
              this._changeInProgress = null;
            }
          }
          return this;
        } else {
          return this._isUTC ? offset8 : getDateOffset(this);
        }
      }
      function getSetZone(input, keepLocalTime) {
        if (input != null) {
          if (typeof input !== "string") {
            input = -input;
          }
          this.utcOffset(input, keepLocalTime);
          return this;
        } else {
          return -this.utcOffset();
        }
      }
      function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
      }
      function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
          this.utcOffset(0, keepLocalTime);
          this._isUTC = false;
          if (keepLocalTime) {
            this.subtract(getDateOffset(this), "m");
          }
        }
        return this;
      }
      function setOffsetToParsedOffset() {
        if (this._tzm != null) {
          this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === "string") {
          var tZone = offsetFromString(matchOffset, this._i);
          if (tZone != null) {
            this.utcOffset(tZone);
          } else {
            this.utcOffset(0, true);
          }
        }
        return this;
      }
      function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
          return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;
        return (this.utcOffset() - input) % 60 === 0;
      }
      function isDaylightSavingTime() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
      }
      function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
          return this._isDSTShifted;
        }
        var c2 = {}, other;
        copyConfig(c2, this);
        c2 = prepareConfig(c2);
        if (c2._a) {
          other = c2._isUTC ? createUTC(c2._a) : createLocal(c2._a);
          this._isDSTShifted = this.isValid() && compareArrays(c2._a, other.toArray()) > 0;
        } else {
          this._isDSTShifted = false;
        }
        return this._isDSTShifted;
      }
      function isLocal() {
        return this.isValid() ? !this._isUTC : false;
      }
      function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
      }
      function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
      }
      var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
      function createDuration(input, key) {
        var duration5 = input, match5 = null, sign2, ret, diffRes;
        if (isDuration(input)) {
          duration5 = {
            ms: input._milliseconds,
            d: input._days,
            M: input._months
          };
        } else if (isNumber2(input) || !isNaN(+input)) {
          duration5 = {};
          if (key) {
            duration5[key] = +input;
          } else {
            duration5.milliseconds = +input;
          }
        } else if (match5 = aspNetRegex.exec(input)) {
          sign2 = match5[1] === "-" ? -1 : 1;
          duration5 = {
            y: 0,
            d: toInt(match5[DATE]) * sign2,
            h: toInt(match5[HOUR]) * sign2,
            m: toInt(match5[MINUTE]) * sign2,
            s: toInt(match5[SECOND]) * sign2,
            ms: toInt(absRound(match5[MILLISECOND] * 1e3)) * sign2
          };
        } else if (match5 = isoRegex.exec(input)) {
          sign2 = match5[1] === "-" ? -1 : 1;
          duration5 = {
            y: parseIso(match5[2], sign2),
            M: parseIso(match5[3], sign2),
            w: parseIso(match5[4], sign2),
            d: parseIso(match5[5], sign2),
            h: parseIso(match5[6], sign2),
            m: parseIso(match5[7], sign2),
            s: parseIso(match5[8], sign2)
          };
        } else if (duration5 == null) {
          duration5 = {};
        } else if (typeof duration5 === "object" && ("from" in duration5 || "to" in duration5)) {
          diffRes = momentsDifference(createLocal(duration5.from), createLocal(duration5.to));
          duration5 = {};
          duration5.ms = diffRes.milliseconds;
          duration5.M = diffRes.months;
        }
        ret = new Duration(duration5);
        if (isDuration(input) && hasOwnProp(input, "_locale")) {
          ret._locale = input._locale;
        }
        if (isDuration(input) && hasOwnProp(input, "_isValid")) {
          ret._isValid = input._isValid;
        }
        return ret;
      }
      createDuration.fn = Duration.prototype;
      createDuration.invalid = createInvalid$1;
      function parseIso(inp, sign2) {
        var res = inp && parseFloat(inp.replace(",", "."));
        return (isNaN(res) ? 0 : res) * sign2;
      }
      function positiveMomentsDifference(base, other) {
        var res = {};
        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, "M").isAfter(other)) {
          --res.months;
        }
        res.milliseconds = +other - +base.clone().add(res.months, "M");
        return res;
      }
      function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
          return { milliseconds: 0, months: 0 };
        }
        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
          res = positiveMomentsDifference(base, other);
        } else {
          res = positiveMomentsDifference(other, base);
          res.milliseconds = -res.milliseconds;
          res.months = -res.months;
        }
        return res;
      }
      function createAdder(direction, name) {
        return function(val, period) {
          var dur, tmp;
          if (period !== null && !isNaN(+period)) {
            deprecateSimple(name, "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
            tmp = val;
            val = period;
            period = tmp;
          }
          dur = createDuration(val, period);
          addSubtract(this, dur, direction);
          return this;
        };
      }
      function addSubtract(mom, duration5, isAdding, updateOffset) {
        var milliseconds2 = duration5._milliseconds, days2 = absRound(duration5._days), months2 = absRound(duration5._months);
        if (!mom.isValid()) {
          return;
        }
        updateOffset = updateOffset == null ? true : updateOffset;
        if (months2) {
          setMonth(mom, get4(mom, "Month") + months2 * isAdding);
        }
        if (days2) {
          set$1(mom, "Date", get4(mom, "Date") + days2 * isAdding);
        }
        if (milliseconds2) {
          mom._d.setTime(mom._d.valueOf() + milliseconds2 * isAdding);
        }
        if (updateOffset) {
          hooks.updateOffset(mom, days2 || months2);
        }
      }
      var add3 = createAdder(1, "add"), subtract3 = createAdder(-1, "subtract");
      function isString4(input) {
        return typeof input === "string" || input instanceof String;
      }
      function isMomentInput(input) {
        return isMoment(input) || isDate2(input) || isString4(input) || isNumber2(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === void 0;
      }
      function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties2 = [
          "years",
          "year",
          "y",
          "months",
          "month",
          "M",
          "days",
          "day",
          "d",
          "dates",
          "date",
          "D",
          "hours",
          "hour",
          "h",
          "minutes",
          "minute",
          "m",
          "seconds",
          "second",
          "s",
          "milliseconds",
          "millisecond",
          "ms"
        ], i2, property;
        for (i2 = 0; i2 < properties2.length; i2 += 1) {
          property = properties2[i2];
          propertyTest = propertyTest || hasOwnProp(input, property);
        }
        return objectTest && propertyTest;
      }
      function isNumberOrStringArray(input) {
        var arrayTest = isArray2(input), dataTypeTest = false;
        if (arrayTest) {
          dataTypeTest = input.filter(function(item) {
            return !isNumber2(item) && isString4(input);
          }).length === 0;
        }
        return arrayTest && dataTypeTest;
      }
      function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties2 = [
          "sameDay",
          "nextDay",
          "lastDay",
          "nextWeek",
          "lastWeek",
          "sameElse"
        ], i2, property;
        for (i2 = 0; i2 < properties2.length; i2 += 1) {
          property = properties2[i2];
          propertyTest = propertyTest || hasOwnProp(input, property);
        }
        return objectTest && propertyTest;
      }
      function getCalendarFormat(myMoment, now3) {
        var diff2 = myMoment.diff(now3, "days", true);
        return diff2 < -6 ? "sameElse" : diff2 < -1 ? "lastWeek" : diff2 < 0 ? "lastDay" : diff2 < 1 ? "sameDay" : diff2 < 2 ? "nextDay" : diff2 < 7 ? "nextWeek" : "sameElse";
      }
      function calendar$1(time, formats) {
        if (arguments.length === 1) {
          if (!arguments[0]) {
            time = void 0;
            formats = void 0;
          } else if (isMomentInput(arguments[0])) {
            time = arguments[0];
            formats = void 0;
          } else if (isCalendarSpec(arguments[0])) {
            formats = arguments[0];
            time = void 0;
          }
        }
        var now3 = time || createLocal(), sod = cloneWithOffset(now3, this).startOf("day"), format2 = hooks.calendarFormat(this, sod) || "sameElse", output = formats && (isFunction3(formats[format2]) ? formats[format2].call(this, now3) : formats[format2]);
        return this.format(output || this.localeData().calendar(format2, this, createLocal(now3)));
      }
      function clone2() {
        return new Moment(this);
      }
      function isAfter(input, units2) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }
        units2 = normalizeUnits(units2) || "millisecond";
        if (units2 === "millisecond") {
          return this.valueOf() > localInput.valueOf();
        } else {
          return localInput.valueOf() < this.clone().startOf(units2).valueOf();
        }
      }
      function isBefore(input, units2) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }
        units2 = normalizeUnits(units2) || "millisecond";
        if (units2 === "millisecond") {
          return this.valueOf() < localInput.valueOf();
        } else {
          return this.clone().endOf(units2).valueOf() < localInput.valueOf();
        }
      }
      function isBetween(from2, to2, units2, inclusivity) {
        var localFrom = isMoment(from2) ? from2 : createLocal(from2), localTo = isMoment(to2) ? to2 : createLocal(to2);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
          return false;
        }
        inclusivity = inclusivity || "()";
        return (inclusivity[0] === "(" ? this.isAfter(localFrom, units2) : !this.isBefore(localFrom, units2)) && (inclusivity[1] === ")" ? this.isBefore(localTo, units2) : !this.isAfter(localTo, units2));
      }
      function isSame(input, units2) {
        var localInput = isMoment(input) ? input : createLocal(input), inputMs;
        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }
        units2 = normalizeUnits(units2) || "millisecond";
        if (units2 === "millisecond") {
          return this.valueOf() === localInput.valueOf();
        } else {
          inputMs = localInput.valueOf();
          return this.clone().startOf(units2).valueOf() <= inputMs && inputMs <= this.clone().endOf(units2).valueOf();
        }
      }
      function isSameOrAfter(input, units2) {
        return this.isSame(input, units2) || this.isAfter(input, units2);
      }
      function isSameOrBefore(input, units2) {
        return this.isSame(input, units2) || this.isBefore(input, units2);
      }
      function diff(input, units2, asFloat) {
        var that, zoneDelta, output;
        if (!this.isValid()) {
          return NaN;
        }
        that = cloneWithOffset(input, this);
        if (!that.isValid()) {
          return NaN;
        }
        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
        units2 = normalizeUnits(units2);
        switch (units2) {
          case "year":
            output = monthDiff(this, that) / 12;
            break;
          case "month":
            output = monthDiff(this, that);
            break;
          case "quarter":
            output = monthDiff(this, that) / 3;
            break;
          case "second":
            output = (this - that) / 1e3;
            break;
          case "minute":
            output = (this - that) / 6e4;
            break;
          case "hour":
            output = (this - that) / 36e5;
            break;
          case "day":
            output = (this - that - zoneDelta) / 864e5;
            break;
          case "week":
            output = (this - that - zoneDelta) / 6048e5;
            break;
          default:
            output = this - that;
        }
        return asFloat ? output : absFloor(output);
      }
      function monthDiff(a2, b2) {
        if (a2.date() < b2.date()) {
          return -monthDiff(b2, a2);
        }
        var wholeMonthDiff = (b2.year() - a2.year()) * 12 + (b2.month() - a2.month()), anchor = a2.clone().add(wholeMonthDiff, "months"), anchor2, adjust2;
        if (b2 - anchor < 0) {
          anchor2 = a2.clone().add(wholeMonthDiff - 1, "months");
          adjust2 = (b2 - anchor) / (anchor - anchor2);
        } else {
          anchor2 = a2.clone().add(wholeMonthDiff + 1, "months");
          adjust2 = (b2 - anchor) / (anchor2 - anchor);
        }
        return -(wholeMonthDiff + adjust2) || 0;
      }
      hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
      hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
      function toString2() {
        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
      }
      function toISOString(keepOffset) {
        if (!this.isValid()) {
          return null;
        }
        var utc = keepOffset !== true, m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
          return formatMoment(m, utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ");
        }
        if (isFunction3(Date.prototype.toISOString)) {
          if (utc) {
            return this.toDate().toISOString();
          } else {
            return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m, "Z"));
          }
        }
        return formatMoment(m, utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
      }
      function inspect() {
        if (!this.isValid()) {
          return "moment.invalid(/* " + this._i + " */)";
        }
        var func4 = "moment", zone = "", prefix4, year, datetime, suffix2;
        if (!this.isLocal()) {
          func4 = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
          zone = "Z";
        }
        prefix4 = "[" + func4 + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
        datetime = "-MM-DD[T]HH:mm:ss.SSS";
        suffix2 = zone + '[")]';
        return this.format(prefix4 + year + datetime + suffix2);
      }
      function format(inputString) {
        if (!inputString) {
          inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
      }
      function from(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }
      function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
      }
      function to(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }
      function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
      }
      function locale(key) {
        var newLocaleData;
        if (key === void 0) {
          return this._locale._abbr;
        } else {
          newLocaleData = getLocale(key);
          if (newLocaleData != null) {
            this._locale = newLocaleData;
          }
          return this;
        }
      }
      var lang = deprecate("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(key) {
        if (key === void 0) {
          return this.localeData();
        } else {
          return this.locale(key);
        }
      });
      function localeData() {
        return this._locale;
      }
      var MS_PER_SECOND = 1e3, MS_PER_MINUTE = 60 * MS_PER_SECOND, MS_PER_HOUR = 60 * MS_PER_MINUTE, MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
      function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
      }
      function localStartOfDate(y2, m, d2) {
        if (y2 < 100 && y2 >= 0) {
          return new Date(y2 + 400, m, d2) - MS_PER_400_YEARS;
        } else {
          return new Date(y2, m, d2).valueOf();
        }
      }
      function utcStartOfDate(y2, m, d2) {
        if (y2 < 100 && y2 >= 0) {
          return Date.UTC(y2 + 400, m, d2) - MS_PER_400_YEARS;
        } else {
          return Date.UTC(y2, m, d2);
        }
      }
      function startOf(units2) {
        var time, startOfDate;
        units2 = normalizeUnits(units2);
        if (units2 === void 0 || units2 === "millisecond" || !this.isValid()) {
          return this;
        }
        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
        switch (units2) {
          case "year":
            time = startOfDate(this.year(), 0, 1);
            break;
          case "quarter":
            time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
            break;
          case "month":
            time = startOfDate(this.year(), this.month(), 1);
            break;
          case "week":
            time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
            break;
          case "isoWeek":
            time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
            break;
          case "day":
          case "date":
            time = startOfDate(this.year(), this.month(), this.date());
            break;
          case "hour":
            time = this._d.valueOf();
            time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
            break;
          case "minute":
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_MINUTE);
            break;
          case "second":
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_SECOND);
            break;
        }
        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
      }
      function endOf(units2) {
        var time, startOfDate;
        units2 = normalizeUnits(units2);
        if (units2 === void 0 || units2 === "millisecond" || !this.isValid()) {
          return this;
        }
        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
        switch (units2) {
          case "year":
            time = startOfDate(this.year() + 1, 0, 1) - 1;
            break;
          case "quarter":
            time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
            break;
          case "month":
            time = startOfDate(this.year(), this.month() + 1, 1) - 1;
            break;
          case "week":
            time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
            break;
          case "isoWeek":
            time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
            break;
          case "day":
          case "date":
            time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
            break;
          case "hour":
            time = this._d.valueOf();
            time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
            break;
          case "minute":
            time = this._d.valueOf();
            time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
            break;
          case "second":
            time = this._d.valueOf();
            time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
            break;
        }
        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
      }
      function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 6e4;
      }
      function unix() {
        return Math.floor(this.valueOf() / 1e3);
      }
      function toDate() {
        return new Date(this.valueOf());
      }
      function toArray2() {
        var m = this;
        return [
          m.year(),
          m.month(),
          m.date(),
          m.hour(),
          m.minute(),
          m.second(),
          m.millisecond()
        ];
      }
      function toObject() {
        var m = this;
        return {
          years: m.year(),
          months: m.month(),
          date: m.date(),
          hours: m.hours(),
          minutes: m.minutes(),
          seconds: m.seconds(),
          milliseconds: m.milliseconds()
        };
      }
      function toJSON() {
        return this.isValid() ? this.toISOString() : null;
      }
      function isValid$2() {
        return isValid(this);
      }
      function parsingFlags() {
        return extend({}, getParsingFlags(this));
      }
      function invalidAt() {
        return getParsingFlags(this).overflow;
      }
      function creationData() {
        return {
          input: this._i,
          format: this._f,
          locale: this._locale,
          isUTC: this._isUTC,
          strict: this._strict
        };
      }
      addFormatToken("N", 0, 0, "eraAbbr");
      addFormatToken("NN", 0, 0, "eraAbbr");
      addFormatToken("NNN", 0, 0, "eraAbbr");
      addFormatToken("NNNN", 0, 0, "eraName");
      addFormatToken("NNNNN", 0, 0, "eraNarrow");
      addFormatToken("y", ["y", 1], "yo", "eraYear");
      addFormatToken("y", ["yy", 2], 0, "eraYear");
      addFormatToken("y", ["yyy", 3], 0, "eraYear");
      addFormatToken("y", ["yyyy", 4], 0, "eraYear");
      addRegexToken("N", matchEraAbbr);
      addRegexToken("NN", matchEraAbbr);
      addRegexToken("NNN", matchEraAbbr);
      addRegexToken("NNNN", matchEraName);
      addRegexToken("NNNNN", matchEraNarrow);
      addParseToken(["N", "NN", "NNN", "NNNN", "NNNNN"], function(input, array, config2, token2) {
        var era = config2._locale.erasParse(input, token2, config2._strict);
        if (era) {
          getParsingFlags(config2).era = era;
        } else {
          getParsingFlags(config2).invalidEra = input;
        }
      });
      addRegexToken("y", matchUnsigned);
      addRegexToken("yy", matchUnsigned);
      addRegexToken("yyy", matchUnsigned);
      addRegexToken("yyyy", matchUnsigned);
      addRegexToken("yo", matchEraYearOrdinal);
      addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
      addParseToken(["yo"], function(input, array, config2, token2) {
        var match5;
        if (config2._locale._eraYearOrdinalRegex) {
          match5 = input.match(config2._locale._eraYearOrdinalRegex);
        }
        if (config2._locale.eraYearOrdinalParse) {
          array[YEAR] = config2._locale.eraYearOrdinalParse(input, match5);
        } else {
          array[YEAR] = parseInt(input, 10);
        }
      });
      function localeEras(m, format2) {
        var i2, l2, date, eras = this._eras || getLocale("en")._eras;
        for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
          switch (typeof eras[i2].since) {
            case "string":
              date = hooks(eras[i2].since).startOf("day");
              eras[i2].since = date.valueOf();
              break;
          }
          switch (typeof eras[i2].until) {
            case "undefined":
              eras[i2].until = Infinity;
              break;
            case "string":
              date = hooks(eras[i2].until).startOf("day").valueOf();
              eras[i2].until = date.valueOf();
              break;
          }
        }
        return eras;
      }
      function localeErasParse(eraName, format2, strict) {
        var i2, l2, eras = this.eras(), name, abbr, narrow;
        eraName = eraName.toUpperCase();
        for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
          name = eras[i2].name.toUpperCase();
          abbr = eras[i2].abbr.toUpperCase();
          narrow = eras[i2].narrow.toUpperCase();
          if (strict) {
            switch (format2) {
              case "N":
              case "NN":
              case "NNN":
                if (abbr === eraName) {
                  return eras[i2];
                }
                break;
              case "NNNN":
                if (name === eraName) {
                  return eras[i2];
                }
                break;
              case "NNNNN":
                if (narrow === eraName) {
                  return eras[i2];
                }
                break;
            }
          } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
            return eras[i2];
          }
        }
      }
      function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? 1 : -1;
        if (year === void 0) {
          return hooks(era.since).year();
        } else {
          return hooks(era.since).year() + (year - era.offset) * dir;
        }
      }
      function getEraName() {
        var i2, l2, val, eras = this.localeData().eras();
        for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
          val = this.clone().startOf("day").valueOf();
          if (eras[i2].since <= val && val <= eras[i2].until) {
            return eras[i2].name;
          }
          if (eras[i2].until <= val && val <= eras[i2].since) {
            return eras[i2].name;
          }
        }
        return "";
      }
      function getEraNarrow() {
        var i2, l2, val, eras = this.localeData().eras();
        for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
          val = this.clone().startOf("day").valueOf();
          if (eras[i2].since <= val && val <= eras[i2].until) {
            return eras[i2].narrow;
          }
          if (eras[i2].until <= val && val <= eras[i2].since) {
            return eras[i2].narrow;
          }
        }
        return "";
      }
      function getEraAbbr() {
        var i2, l2, val, eras = this.localeData().eras();
        for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
          val = this.clone().startOf("day").valueOf();
          if (eras[i2].since <= val && val <= eras[i2].until) {
            return eras[i2].abbr;
          }
          if (eras[i2].until <= val && val <= eras[i2].since) {
            return eras[i2].abbr;
          }
        }
        return "";
      }
      function getEraYear() {
        var i2, l2, dir, val, eras = this.localeData().eras();
        for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
          dir = eras[i2].since <= eras[i2].until ? 1 : -1;
          val = this.clone().startOf("day").valueOf();
          if (eras[i2].since <= val && val <= eras[i2].until || eras[i2].until <= val && val <= eras[i2].since) {
            return (this.year() - hooks(eras[i2].since).year()) * dir + eras[i2].offset;
          }
        }
        return this.year();
      }
      function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, "_erasNameRegex")) {
          computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
      }
      function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, "_erasAbbrRegex")) {
          computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
      }
      function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, "_erasNarrowRegex")) {
          computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
      }
      function matchEraAbbr(isStrict, locale2) {
        return locale2.erasAbbrRegex(isStrict);
      }
      function matchEraName(isStrict, locale2) {
        return locale2.erasNameRegex(isStrict);
      }
      function matchEraNarrow(isStrict, locale2) {
        return locale2.erasNarrowRegex(isStrict);
      }
      function matchEraYearOrdinal(isStrict, locale2) {
        return locale2._eraYearOrdinalRegex || matchUnsigned;
      }
      function computeErasParse() {
        var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i2, l2, eras = this.eras();
        for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
          namePieces.push(regexEscape(eras[i2].name));
          abbrPieces.push(regexEscape(eras[i2].abbr));
          narrowPieces.push(regexEscape(eras[i2].narrow));
          mixedPieces.push(regexEscape(eras[i2].name));
          mixedPieces.push(regexEscape(eras[i2].abbr));
          mixedPieces.push(regexEscape(eras[i2].narrow));
        }
        this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i");
        this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i");
        this._erasNarrowRegex = new RegExp("^(" + narrowPieces.join("|") + ")", "i");
      }
      addFormatToken(0, ["gg", 2], 0, function() {
        return this.weekYear() % 100;
      });
      addFormatToken(0, ["GG", 2], 0, function() {
        return this.isoWeekYear() % 100;
      });
      function addWeekYearFormatToken(token2, getter) {
        addFormatToken(0, [token2, token2.length], 0, getter);
      }
      addWeekYearFormatToken("gggg", "weekYear");
      addWeekYearFormatToken("ggggg", "weekYear");
      addWeekYearFormatToken("GGGG", "isoWeekYear");
      addWeekYearFormatToken("GGGGG", "isoWeekYear");
      addUnitAlias("weekYear", "gg");
      addUnitAlias("isoWeekYear", "GG");
      addUnitPriority("weekYear", 1);
      addUnitPriority("isoWeekYear", 1);
      addRegexToken("G", matchSigned);
      addRegexToken("g", matchSigned);
      addRegexToken("GG", match1to2, match2);
      addRegexToken("gg", match1to2, match2);
      addRegexToken("GGGG", match1to4, match4);
      addRegexToken("gggg", match1to4, match4);
      addRegexToken("GGGGG", match1to6, match6);
      addRegexToken("ggggg", match1to6, match6);
      addWeekParseToken(["gggg", "ggggg", "GGGG", "GGGGG"], function(input, week, config2, token2) {
        week[token2.substr(0, 2)] = toInt(input);
      });
      addWeekParseToken(["gg", "GG"], function(input, week, config2, token2) {
        week[token2] = hooks.parseTwoDigitYear(input);
      });
      function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
      }
      function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
      }
      function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
      }
      function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
      }
      function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
      }
      function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
      }
      function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
          return weekOfYear(this, dow, doy).year;
        } else {
          weeksTarget = weeksInYear(input, dow, doy);
          if (week > weeksTarget) {
            week = weeksTarget;
          }
          return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
      }
      function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
      }
      addFormatToken("Q", 0, "Qo", "quarter");
      addUnitAlias("quarter", "Q");
      addUnitPriority("quarter", 7);
      addRegexToken("Q", match1);
      addParseToken("Q", function(input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
      });
      function getSetQuarter(input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
      }
      addFormatToken("D", ["DD", 2], "Do", "date");
      addUnitAlias("date", "D");
      addUnitPriority("date", 9);
      addRegexToken("D", match1to2);
      addRegexToken("DD", match1to2, match2);
      addRegexToken("Do", function(isStrict, locale2) {
        return isStrict ? locale2._dayOfMonthOrdinalParse || locale2._ordinalParse : locale2._dayOfMonthOrdinalParseLenient;
      });
      addParseToken(["D", "DD"], DATE);
      addParseToken("Do", function(input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
      });
      var getSetDayOfMonth = makeGetSet("Date", true);
      addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
      addUnitAlias("dayOfYear", "DDD");
      addUnitPriority("dayOfYear", 4);
      addRegexToken("DDD", match1to3);
      addRegexToken("DDDD", match3);
      addParseToken(["DDD", "DDDD"], function(input, array, config2) {
        config2._dayOfYear = toInt(input);
      });
      function getSetDayOfYear(input) {
        var dayOfYear = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
      }
      addFormatToken("m", ["mm", 2], 0, "minute");
      addUnitAlias("minute", "m");
      addUnitPriority("minute", 14);
      addRegexToken("m", match1to2);
      addRegexToken("mm", match1to2, match2);
      addParseToken(["m", "mm"], MINUTE);
      var getSetMinute = makeGetSet("Minutes", false);
      addFormatToken("s", ["ss", 2], 0, "second");
      addUnitAlias("second", "s");
      addUnitPriority("second", 15);
      addRegexToken("s", match1to2);
      addRegexToken("ss", match1to2, match2);
      addParseToken(["s", "ss"], SECOND);
      var getSetSecond = makeGetSet("Seconds", false);
      addFormatToken("S", 0, 0, function() {
        return ~~(this.millisecond() / 100);
      });
      addFormatToken(0, ["SS", 2], 0, function() {
        return ~~(this.millisecond() / 10);
      });
      addFormatToken(0, ["SSS", 3], 0, "millisecond");
      addFormatToken(0, ["SSSS", 4], 0, function() {
        return this.millisecond() * 10;
      });
      addFormatToken(0, ["SSSSS", 5], 0, function() {
        return this.millisecond() * 100;
      });
      addFormatToken(0, ["SSSSSS", 6], 0, function() {
        return this.millisecond() * 1e3;
      });
      addFormatToken(0, ["SSSSSSS", 7], 0, function() {
        return this.millisecond() * 1e4;
      });
      addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
        return this.millisecond() * 1e5;
      });
      addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
        return this.millisecond() * 1e6;
      });
      addUnitAlias("millisecond", "ms");
      addUnitPriority("millisecond", 16);
      addRegexToken("S", match1to3, match1);
      addRegexToken("SS", match1to3, match2);
      addRegexToken("SSS", match1to3, match3);
      var token, getSetMillisecond;
      for (token = "SSSS"; token.length <= 9; token += "S") {
        addRegexToken(token, matchUnsigned);
      }
      function parseMs(input, array) {
        array[MILLISECOND] = toInt(("0." + input) * 1e3);
      }
      for (token = "S"; token.length <= 9; token += "S") {
        addParseToken(token, parseMs);
      }
      getSetMillisecond = makeGetSet("Milliseconds", false);
      addFormatToken("z", 0, 0, "zoneAbbr");
      addFormatToken("zz", 0, 0, "zoneName");
      function getZoneAbbr() {
        return this._isUTC ? "UTC" : "";
      }
      function getZoneName() {
        return this._isUTC ? "Coordinated Universal Time" : "";
      }
      var proto = Moment.prototype;
      proto.add = add3;
      proto.calendar = calendar$1;
      proto.clone = clone2;
      proto.diff = diff;
      proto.endOf = endOf;
      proto.format = format;
      proto.from = from;
      proto.fromNow = fromNow;
      proto.to = to;
      proto.toNow = toNow;
      proto.get = stringGet;
      proto.invalidAt = invalidAt;
      proto.isAfter = isAfter;
      proto.isBefore = isBefore;
      proto.isBetween = isBetween;
      proto.isSame = isSame;
      proto.isSameOrAfter = isSameOrAfter;
      proto.isSameOrBefore = isSameOrBefore;
      proto.isValid = isValid$2;
      proto.lang = lang;
      proto.locale = locale;
      proto.localeData = localeData;
      proto.max = prototypeMax;
      proto.min = prototypeMin;
      proto.parsingFlags = parsingFlags;
      proto.set = stringSet;
      proto.startOf = startOf;
      proto.subtract = subtract3;
      proto.toArray = toArray2;
      proto.toObject = toObject;
      proto.toDate = toDate;
      proto.toISOString = toISOString;
      proto.inspect = inspect;
      if (typeof Symbol !== "undefined" && Symbol.for != null) {
        proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
          return "Moment<" + this.format() + ">";
        };
      }
      proto.toJSON = toJSON;
      proto.toString = toString2;
      proto.unix = unix;
      proto.valueOf = valueOf;
      proto.creationData = creationData;
      proto.eraName = getEraName;
      proto.eraNarrow = getEraNarrow;
      proto.eraAbbr = getEraAbbr;
      proto.eraYear = getEraYear;
      proto.year = getSetYear;
      proto.isLeapYear = getIsLeapYear;
      proto.weekYear = getSetWeekYear;
      proto.isoWeekYear = getSetISOWeekYear;
      proto.quarter = proto.quarters = getSetQuarter;
      proto.month = getSetMonth;
      proto.daysInMonth = getDaysInMonth;
      proto.week = proto.weeks = getSetWeek;
      proto.isoWeek = proto.isoWeeks = getSetISOWeek;
      proto.weeksInYear = getWeeksInYear;
      proto.weeksInWeekYear = getWeeksInWeekYear;
      proto.isoWeeksInYear = getISOWeeksInYear;
      proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
      proto.date = getSetDayOfMonth;
      proto.day = proto.days = getSetDayOfWeek;
      proto.weekday = getSetLocaleDayOfWeek;
      proto.isoWeekday = getSetISODayOfWeek;
      proto.dayOfYear = getSetDayOfYear;
      proto.hour = proto.hours = getSetHour;
      proto.minute = proto.minutes = getSetMinute;
      proto.second = proto.seconds = getSetSecond;
      proto.millisecond = proto.milliseconds = getSetMillisecond;
      proto.utcOffset = getSetOffset;
      proto.utc = setOffsetToUTC;
      proto.local = setOffsetToLocal;
      proto.parseZone = setOffsetToParsedOffset;
      proto.hasAlignedHourOffset = hasAlignedHourOffset;
      proto.isDST = isDaylightSavingTime;
      proto.isLocal = isLocal;
      proto.isUtcOffset = isUtcOffset;
      proto.isUtc = isUtc;
      proto.isUTC = isUtc;
      proto.zoneAbbr = getZoneAbbr;
      proto.zoneName = getZoneName;
      proto.dates = deprecate("dates accessor is deprecated. Use date instead.", getSetDayOfMonth);
      proto.months = deprecate("months accessor is deprecated. Use month instead", getSetMonth);
      proto.years = deprecate("years accessor is deprecated. Use year instead", getSetYear);
      proto.zone = deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", getSetZone);
      proto.isDSTShifted = deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", isDaylightSavingTimeShifted);
      function createUnix(input) {
        return createLocal(input * 1e3);
      }
      function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
      }
      function preParsePostFormat(string3) {
        return string3;
      }
      var proto$1 = Locale.prototype;
      proto$1.calendar = calendar;
      proto$1.longDateFormat = longDateFormat;
      proto$1.invalidDate = invalidDate;
      proto$1.ordinal = ordinal;
      proto$1.preparse = preParsePostFormat;
      proto$1.postformat = preParsePostFormat;
      proto$1.relativeTime = relativeTime;
      proto$1.pastFuture = pastFuture;
      proto$1.set = set2;
      proto$1.eras = localeEras;
      proto$1.erasParse = localeErasParse;
      proto$1.erasConvertYear = localeErasConvertYear;
      proto$1.erasAbbrRegex = erasAbbrRegex;
      proto$1.erasNameRegex = erasNameRegex;
      proto$1.erasNarrowRegex = erasNarrowRegex;
      proto$1.months = localeMonths;
      proto$1.monthsShort = localeMonthsShort;
      proto$1.monthsParse = localeMonthsParse;
      proto$1.monthsRegex = monthsRegex;
      proto$1.monthsShortRegex = monthsShortRegex;
      proto$1.week = localeWeek;
      proto$1.firstDayOfYear = localeFirstDayOfYear;
      proto$1.firstDayOfWeek = localeFirstDayOfWeek;
      proto$1.weekdays = localeWeekdays;
      proto$1.weekdaysMin = localeWeekdaysMin;
      proto$1.weekdaysShort = localeWeekdaysShort;
      proto$1.weekdaysParse = localeWeekdaysParse;
      proto$1.weekdaysRegex = weekdaysRegex;
      proto$1.weekdaysShortRegex = weekdaysShortRegex;
      proto$1.weekdaysMinRegex = weekdaysMinRegex;
      proto$1.isPM = localeIsPM;
      proto$1.meridiem = localeMeridiem;
      function get$1(format2, index4, field, setter) {
        var locale2 = getLocale(), utc = createUTC().set(setter, index4);
        return locale2[field](utc, format2);
      }
      function listMonthsImpl(format2, index4, field) {
        if (isNumber2(format2)) {
          index4 = format2;
          format2 = void 0;
        }
        format2 = format2 || "";
        if (index4 != null) {
          return get$1(format2, index4, field, "month");
        }
        var i2, out = [];
        for (i2 = 0; i2 < 12; i2++) {
          out[i2] = get$1(format2, i2, field, "month");
        }
        return out;
      }
      function listWeekdaysImpl(localeSorted, format2, index4, field) {
        if (typeof localeSorted === "boolean") {
          if (isNumber2(format2)) {
            index4 = format2;
            format2 = void 0;
          }
          format2 = format2 || "";
        } else {
          format2 = localeSorted;
          index4 = format2;
          localeSorted = false;
          if (isNumber2(format2)) {
            index4 = format2;
            format2 = void 0;
          }
          format2 = format2 || "";
        }
        var locale2 = getLocale(), shift4 = localeSorted ? locale2._week.dow : 0, i2, out = [];
        if (index4 != null) {
          return get$1(format2, (index4 + shift4) % 7, field, "day");
        }
        for (i2 = 0; i2 < 7; i2++) {
          out[i2] = get$1(format2, (i2 + shift4) % 7, field, "day");
        }
        return out;
      }
      function listMonths(format2, index4) {
        return listMonthsImpl(format2, index4, "months");
      }
      function listMonthsShort(format2, index4) {
        return listMonthsImpl(format2, index4, "monthsShort");
      }
      function listWeekdays(localeSorted, format2, index4) {
        return listWeekdaysImpl(localeSorted, format2, index4, "weekdays");
      }
      function listWeekdaysShort(localeSorted, format2, index4) {
        return listWeekdaysImpl(localeSorted, format2, index4, "weekdaysShort");
      }
      function listWeekdaysMin(localeSorted, format2, index4) {
        return listWeekdaysImpl(localeSorted, format2, index4, "weekdaysMin");
      }
      getSetGlobalLocale("en", {
        eras: [
          {
            since: "0001-01-01",
            until: Infinity,
            offset: 1,
            name: "Anno Domini",
            narrow: "AD",
            abbr: "AD"
          },
          {
            since: "0000-12-31",
            until: -Infinity,
            offset: 1,
            name: "Before Christ",
            narrow: "BC",
            abbr: "BC"
          }
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function(number) {
          var b2 = number % 10, output = toInt(number % 100 / 10) === 1 ? "th" : b2 === 1 ? "st" : b2 === 2 ? "nd" : b2 === 3 ? "rd" : "th";
          return number + output;
        }
      });
      hooks.lang = deprecate("moment.lang is deprecated. Use moment.locale instead.", getSetGlobalLocale);
      hooks.langData = deprecate("moment.langData is deprecated. Use moment.localeData instead.", getLocale);
      var mathAbs = Math.abs;
      function abs() {
        var data = this._data;
        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);
        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);
        return this;
      }
      function addSubtract$1(duration5, input, value, direction) {
        var other = createDuration(input, value);
        duration5._milliseconds += direction * other._milliseconds;
        duration5._days += direction * other._days;
        duration5._months += direction * other._months;
        return duration5._bubble();
      }
      function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
      }
      function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
      }
      function absCeil(number) {
        if (number < 0) {
          return Math.floor(number);
        } else {
          return Math.ceil(number);
        }
      }
      function bubble() {
        var milliseconds2 = this._milliseconds, days2 = this._days, months2 = this._months, data = this._data, seconds2, minutes2, hours2, years2, monthsFromDays;
        if (!(milliseconds2 >= 0 && days2 >= 0 && months2 >= 0 || milliseconds2 <= 0 && days2 <= 0 && months2 <= 0)) {
          milliseconds2 += absCeil(monthsToDays(months2) + days2) * 864e5;
          days2 = 0;
          months2 = 0;
        }
        data.milliseconds = milliseconds2 % 1e3;
        seconds2 = absFloor(milliseconds2 / 1e3);
        data.seconds = seconds2 % 60;
        minutes2 = absFloor(seconds2 / 60);
        data.minutes = minutes2 % 60;
        hours2 = absFloor(minutes2 / 60);
        data.hours = hours2 % 24;
        days2 += absFloor(hours2 / 24);
        monthsFromDays = absFloor(daysToMonths(days2));
        months2 += monthsFromDays;
        days2 -= absCeil(monthsToDays(monthsFromDays));
        years2 = absFloor(months2 / 12);
        months2 %= 12;
        data.days = days2;
        data.months = months2;
        data.years = years2;
        return this;
      }
      function daysToMonths(days2) {
        return days2 * 4800 / 146097;
      }
      function monthsToDays(months2) {
        return months2 * 146097 / 4800;
      }
      function as(units2) {
        if (!this.isValid()) {
          return NaN;
        }
        var days2, months2, milliseconds2 = this._milliseconds;
        units2 = normalizeUnits(units2);
        if (units2 === "month" || units2 === "quarter" || units2 === "year") {
          days2 = this._days + milliseconds2 / 864e5;
          months2 = this._months + daysToMonths(days2);
          switch (units2) {
            case "month":
              return months2;
            case "quarter":
              return months2 / 3;
            case "year":
              return months2 / 12;
          }
        } else {
          days2 = this._days + Math.round(monthsToDays(this._months));
          switch (units2) {
            case "week":
              return days2 / 7 + milliseconds2 / 6048e5;
            case "day":
              return days2 + milliseconds2 / 864e5;
            case "hour":
              return days2 * 24 + milliseconds2 / 36e5;
            case "minute":
              return days2 * 1440 + milliseconds2 / 6e4;
            case "second":
              return days2 * 86400 + milliseconds2 / 1e3;
            case "millisecond":
              return Math.floor(days2 * 864e5) + milliseconds2;
            default:
              throw new Error("Unknown unit " + units2);
          }
        }
      }
      function valueOf$1() {
        if (!this.isValid()) {
          return NaN;
        }
        return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
      }
      function makeAs(alias) {
        return function() {
          return this.as(alias);
        };
      }
      var asMilliseconds = makeAs("ms"), asSeconds = makeAs("s"), asMinutes = makeAs("m"), asHours = makeAs("h"), asDays = makeAs("d"), asWeeks = makeAs("w"), asMonths = makeAs("M"), asQuarters = makeAs("Q"), asYears = makeAs("y");
      function clone$1() {
        return createDuration(this);
      }
      function get$2(units2) {
        units2 = normalizeUnits(units2);
        return this.isValid() ? this[units2 + "s"]() : NaN;
      }
      function makeGetter(name) {
        return function() {
          return this.isValid() ? this._data[name] : NaN;
        };
      }
      var milliseconds = makeGetter("milliseconds"), seconds = makeGetter("seconds"), minutes = makeGetter("minutes"), hours = makeGetter("hours"), days = makeGetter("days"), months = makeGetter("months"), years = makeGetter("years");
      function weeks() {
        return absFloor(this.days() / 7);
      }
      var round4 = Math.round, thresholds = {
        ss: 44,
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        w: null,
        M: 11
      };
      function substituteTimeAgo(string3, number, withoutSuffix, isFuture, locale2) {
        return locale2.relativeTime(number || 1, !!withoutSuffix, string3, isFuture);
      }
      function relativeTime$1(posNegDuration, withoutSuffix, thresholds2, locale2) {
        var duration5 = createDuration(posNegDuration).abs(), seconds2 = round4(duration5.as("s")), minutes2 = round4(duration5.as("m")), hours2 = round4(duration5.as("h")), days2 = round4(duration5.as("d")), months2 = round4(duration5.as("M")), weeks2 = round4(duration5.as("w")), years2 = round4(duration5.as("y")), a2 = seconds2 <= thresholds2.ss && ["s", seconds2] || seconds2 < thresholds2.s && ["ss", seconds2] || minutes2 <= 1 && ["m"] || minutes2 < thresholds2.m && ["mm", minutes2] || hours2 <= 1 && ["h"] || hours2 < thresholds2.h && ["hh", hours2] || days2 <= 1 && ["d"] || days2 < thresholds2.d && ["dd", days2];
        if (thresholds2.w != null) {
          a2 = a2 || weeks2 <= 1 && ["w"] || weeks2 < thresholds2.w && ["ww", weeks2];
        }
        a2 = a2 || months2 <= 1 && ["M"] || months2 < thresholds2.M && ["MM", months2] || years2 <= 1 && ["y"] || ["yy", years2];
        a2[2] = withoutSuffix;
        a2[3] = +posNegDuration > 0;
        a2[4] = locale2;
        return substituteTimeAgo.apply(null, a2);
      }
      function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === void 0) {
          return round4;
        }
        if (typeof roundingFunction === "function") {
          round4 = roundingFunction;
          return true;
        }
        return false;
      }
      function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === void 0) {
          return false;
        }
        if (limit === void 0) {
          return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === "s") {
          thresholds.ss = limit - 1;
        }
        return true;
      }
      function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }
        var withSuffix = false, th = thresholds, locale2, output;
        if (typeof argWithSuffix === "object") {
          argThresholds = argWithSuffix;
          argWithSuffix = false;
        }
        if (typeof argWithSuffix === "boolean") {
          withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === "object") {
          th = Object.assign({}, thresholds, argThresholds);
          if (argThresholds.s != null && argThresholds.ss == null) {
            th.ss = argThresholds.s - 1;
          }
        }
        locale2 = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale2);
        if (withSuffix) {
          output = locale2.pastFuture(+this, output);
        }
        return locale2.postformat(output);
      }
      var abs$1 = Math.abs;
      function sign(x2) {
        return (x2 > 0) - (x2 < 0) || +x2;
      }
      function toISOString$1() {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }
        var seconds2 = abs$1(this._milliseconds) / 1e3, days2 = abs$1(this._days), months2 = abs$1(this._months), minutes2, hours2, years2, s2, total = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
        if (!total) {
          return "P0D";
        }
        minutes2 = absFloor(seconds2 / 60);
        hours2 = absFloor(minutes2 / 60);
        seconds2 %= 60;
        minutes2 %= 60;
        years2 = absFloor(months2 / 12);
        months2 %= 12;
        s2 = seconds2 ? seconds2.toFixed(3).replace(/\.?0+$/, "") : "";
        totalSign = total < 0 ? "-" : "";
        ymSign = sign(this._months) !== sign(total) ? "-" : "";
        daysSign = sign(this._days) !== sign(total) ? "-" : "";
        hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";
        return totalSign + "P" + (years2 ? ymSign + years2 + "Y" : "") + (months2 ? ymSign + months2 + "M" : "") + (days2 ? daysSign + days2 + "D" : "") + (hours2 || minutes2 || seconds2 ? "T" : "") + (hours2 ? hmsSign + hours2 + "H" : "") + (minutes2 ? hmsSign + minutes2 + "M" : "") + (seconds2 ? hmsSign + s2 + "S" : "");
      }
      var proto$2 = Duration.prototype;
      proto$2.isValid = isValid$1;
      proto$2.abs = abs;
      proto$2.add = add$1;
      proto$2.subtract = subtract$1;
      proto$2.as = as;
      proto$2.asMilliseconds = asMilliseconds;
      proto$2.asSeconds = asSeconds;
      proto$2.asMinutes = asMinutes;
      proto$2.asHours = asHours;
      proto$2.asDays = asDays;
      proto$2.asWeeks = asWeeks;
      proto$2.asMonths = asMonths;
      proto$2.asQuarters = asQuarters;
      proto$2.asYears = asYears;
      proto$2.valueOf = valueOf$1;
      proto$2._bubble = bubble;
      proto$2.clone = clone$1;
      proto$2.get = get$2;
      proto$2.milliseconds = milliseconds;
      proto$2.seconds = seconds;
      proto$2.minutes = minutes;
      proto$2.hours = hours;
      proto$2.days = days;
      proto$2.weeks = weeks;
      proto$2.months = months;
      proto$2.years = years;
      proto$2.humanize = humanize;
      proto$2.toISOString = toISOString$1;
      proto$2.toString = toISOString$1;
      proto$2.toJSON = toISOString$1;
      proto$2.locale = locale;
      proto$2.localeData = localeData;
      proto$2.toIsoString = deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", toISOString$1);
      proto$2.lang = lang;
      addFormatToken("X", 0, 0, "unix");
      addFormatToken("x", 0, 0, "valueOf");
      addRegexToken("x", matchSigned);
      addRegexToken("X", matchTimestamp);
      addParseToken("X", function(input, array, config2) {
        config2._d = new Date(parseFloat(input) * 1e3);
      });
      addParseToken("x", function(input, array, config2) {
        config2._d = new Date(toInt(input));
      });
      hooks.version = "2.29.1";
      setHookCallback(createLocal);
      hooks.fn = proto;
      hooks.min = min2;
      hooks.max = max2;
      hooks.now = now2;
      hooks.utc = createUTC;
      hooks.unix = createUnix;
      hooks.months = listMonths;
      hooks.isDate = isDate2;
      hooks.locale = getSetGlobalLocale;
      hooks.invalid = createInvalid;
      hooks.duration = createDuration;
      hooks.isMoment = isMoment;
      hooks.weekdays = listWeekdays;
      hooks.parseZone = createInZone;
      hooks.localeData = getLocale;
      hooks.isDuration = isDuration;
      hooks.monthsShort = listMonthsShort;
      hooks.weekdaysMin = listWeekdaysMin;
      hooks.defineLocale = defineLocale;
      hooks.updateLocale = updateLocale;
      hooks.locales = listLocales;
      hooks.weekdaysShort = listWeekdaysShort;
      hooks.normalizeUnits = normalizeUnits;
      hooks.relativeTimeRounding = getSetRelativeTimeRounding;
      hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
      hooks.calendarFormat = getCalendarFormat;
      hooks.prototype = proto;
      hooks.HTML5_FMT = {
        DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
        DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
        DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
        DATE: "YYYY-MM-DD",
        TIME: "HH:mm",
        TIME_SECONDS: "HH:mm:ss",
        TIME_MS: "HH:mm:ss.SSS",
        WEEK: "GGGG-[W]WW",
        MONTH: "YYYY-MM"
      };
      return hooks;
    });
  }
});

// node_modules/@material-ui/pickers/_helpers/utils.js
var require_utils3 = __commonJS({
  "node_modules/@material-ui/pickers/_helpers/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function arrayIncludes2(array, itemOrItems) {
      if (Array.isArray(itemOrItems)) {
        return itemOrItems.every(function(item) {
          return array.indexOf(item) !== -1;
        });
      }
      return array.indexOf(itemOrItems) !== -1;
    }
    exports.arrayIncludes = arrayIncludes2;
  }
});

// node_modules/@material-ui/pickers/_helpers/date-utils.js
var require_date_utils = __commonJS({
  "node_modules/@material-ui/pickers/_helpers/date-utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var utils_1 = require_utils3();
    exports.findClosestEnabledDate = function(_a) {
      var date = _a.date, utils = _a.utils, minDate = _a.minDate, maxDate = _a.maxDate, disableFuture = _a.disableFuture, disablePast = _a.disablePast, shouldDisableDate = _a.shouldDisableDate;
      var today = utils.startOfDay(utils.date());
      if (disablePast && utils.isBefore(minDate, today)) {
        minDate = today;
      }
      if (disableFuture && utils.isAfter(maxDate, today)) {
        maxDate = today;
      }
      var forward = date;
      var backward = date;
      if (utils.isBefore(date, minDate)) {
        forward = utils.date(minDate);
        backward = null;
      }
      if (utils.isAfter(date, maxDate)) {
        if (backward) {
          backward = utils.date(maxDate);
        }
        forward = null;
      }
      while (forward || backward) {
        if (forward && utils.isAfter(forward, maxDate)) {
          forward = null;
        }
        if (backward && utils.isBefore(backward, minDate)) {
          backward = null;
        }
        if (forward) {
          if (!shouldDisableDate(forward)) {
            return forward;
          }
          forward = utils.addDays(forward, 1);
        }
        if (backward) {
          if (!shouldDisableDate(backward)) {
            return backward;
          }
          backward = utils.addDays(backward, -1);
        }
      }
      return utils.date();
    };
    exports.isYearOnlyView = function(views) {
      return views.length === 1 && views[0] === "year";
    };
    exports.isYearAndMonthViews = function(views) {
      return views.length === 2 && utils_1.arrayIncludes(views, "month") && utils_1.arrayIncludes(views, "year");
    };
    exports.getFormatByViews = function(views, utils) {
      if (exports.isYearOnlyView(views)) {
        return utils.yearFormat;
      }
      if (exports.isYearAndMonthViews(views)) {
        return utils.yearMonthFormat;
      }
      return utils.dateFormat;
    };
  }
});

// node_modules/lodash/cloneDeep.js
var require_cloneDeep = __commonJS({
  "node_modules/lodash/cloneDeep.js"(exports, module) {
    var baseClone = require_baseClone();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_SYMBOLS_FLAG = 4;
    function cloneDeep2(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }
    module.exports = cloneDeep2;
  }
});

// node_modules/lodash/_baseValues.js
var require_baseValues = __commonJS({
  "node_modules/lodash/_baseValues.js"(exports, module) {
    var arrayMap = require_arrayMap();
    function baseValues(object3, props) {
      return arrayMap(props, function(key) {
        return object3[key];
      });
    }
    module.exports = baseValues;
  }
});

// node_modules/lodash/values.js
var require_values = __commonJS({
  "node_modules/lodash/values.js"(exports, module) {
    var baseValues = require_baseValues();
    var keys3 = require_keys();
    function values6(object3) {
      return object3 == null ? [] : baseValues(object3, keys3(object3));
    }
    module.exports = values6;
  }
});

// node_modules/lodash/_castSlice.js
var require_castSlice = __commonJS({
  "node_modules/lodash/_castSlice.js"(exports, module) {
    var baseSlice = require_baseSlice();
    function castSlice(array, start3, end2) {
      var length = array.length;
      end2 = end2 === void 0 ? length : end2;
      return !start3 && end2 >= length ? array : baseSlice(array, start3, end2);
    }
    module.exports = castSlice;
  }
});

// node_modules/lodash/_baseFindIndex.js
var require_baseFindIndex = __commonJS({
  "node_modules/lodash/_baseFindIndex.js"(exports, module) {
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index4 = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index4-- : ++index4 < length) {
        if (predicate(array[index4], index4, array)) {
          return index4;
        }
      }
      return -1;
    }
    module.exports = baseFindIndex;
  }
});

// node_modules/lodash/_baseIsNaN.js
var require_baseIsNaN = __commonJS({
  "node_modules/lodash/_baseIsNaN.js"(exports, module) {
    function baseIsNaN(value) {
      return value !== value;
    }
    module.exports = baseIsNaN;
  }
});

// node_modules/lodash/_strictIndexOf.js
var require_strictIndexOf = __commonJS({
  "node_modules/lodash/_strictIndexOf.js"(exports, module) {
    function strictIndexOf(array, value, fromIndex) {
      var index4 = fromIndex - 1, length = array.length;
      while (++index4 < length) {
        if (array[index4] === value) {
          return index4;
        }
      }
      return -1;
    }
    module.exports = strictIndexOf;
  }
});

// node_modules/lodash/_baseIndexOf.js
var require_baseIndexOf = __commonJS({
  "node_modules/lodash/_baseIndexOf.js"(exports, module) {
    var baseFindIndex = require_baseFindIndex();
    var baseIsNaN = require_baseIsNaN();
    var strictIndexOf = require_strictIndexOf();
    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    module.exports = baseIndexOf;
  }
});

// node_modules/lodash/_charsEndIndex.js
var require_charsEndIndex = __commonJS({
  "node_modules/lodash/_charsEndIndex.js"(exports, module) {
    var baseIndexOf = require_baseIndexOf();
    function charsEndIndex(strSymbols, chrSymbols) {
      var index4 = strSymbols.length;
      while (index4-- && baseIndexOf(chrSymbols, strSymbols[index4], 0) > -1) {
      }
      return index4;
    }
    module.exports = charsEndIndex;
  }
});

// node_modules/lodash/_asciiToArray.js
var require_asciiToArray = __commonJS({
  "node_modules/lodash/_asciiToArray.js"(exports, module) {
    function asciiToArray(string3) {
      return string3.split("");
    }
    module.exports = asciiToArray;
  }
});

// node_modules/lodash/_hasUnicode.js
var require_hasUnicode = __commonJS({
  "node_modules/lodash/_hasUnicode.js"(exports, module) {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsZWJ = "\\u200d";
    var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
    function hasUnicode(string3) {
      return reHasUnicode.test(string3);
    }
    module.exports = hasUnicode;
  }
});

// node_modules/lodash/_unicodeToArray.js
var require_unicodeToArray = __commonJS({
  "node_modules/lodash/_unicodeToArray.js"(exports, module) {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsAstral = "[" + rsAstralRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsZWJ = "\\u200d";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
    var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    function unicodeToArray(string3) {
      return string3.match(reUnicode) || [];
    }
    module.exports = unicodeToArray;
  }
});

// node_modules/lodash/_stringToArray.js
var require_stringToArray = __commonJS({
  "node_modules/lodash/_stringToArray.js"(exports, module) {
    var asciiToArray = require_asciiToArray();
    var hasUnicode = require_hasUnicode();
    var unicodeToArray = require_unicodeToArray();
    function stringToArray(string3) {
      return hasUnicode(string3) ? unicodeToArray(string3) : asciiToArray(string3);
    }
    module.exports = stringToArray;
  }
});

// node_modules/lodash/trimEnd.js
var require_trimEnd = __commonJS({
  "node_modules/lodash/trimEnd.js"(exports, module) {
    var baseToString = require_baseToString();
    var castSlice = require_castSlice();
    var charsEndIndex = require_charsEndIndex();
    var stringToArray = require_stringToArray();
    var toString2 = require_toString();
    var trimmedEndIndex = require_trimmedEndIndex();
    function trimEnd2(string3, chars, guard) {
      string3 = toString2(string3);
      if (string3 && (guard || chars === void 0)) {
        return string3.slice(0, trimmedEndIndex(string3) + 1);
      }
      if (!string3 || !(chars = baseToString(chars))) {
        return string3;
      }
      var strSymbols = stringToArray(string3), end2 = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
      return castSlice(strSymbols, 0, end2).join("");
    }
    module.exports = trimEnd2;
  }
});

// node_modules/lodash/isNumber.js
var require_isNumber = __commonJS({
  "node_modules/lodash/isNumber.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var numberTag = "[object Number]";
    function isNumber2(value) {
      return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
    }
    module.exports = isNumber2;
  }
});

// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "node_modules/lodash/_setCacheAdd.js"(exports, module) {
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  }
});

// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "node_modules/lodash/_setCacheHas.js"(exports, module) {
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  }
});

// node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "node_modules/lodash/_SetCache.js"(exports, module) {
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values6) {
      var index4 = -1, length = values6 == null ? 0 : values6.length;
      this.__data__ = new MapCache();
      while (++index4 < length) {
        this.add(values6[index4]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  }
});

// node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "node_modules/lodash/_arraySome.js"(exports, module) {
    function arraySome(array, predicate) {
      var index4 = -1, length = array == null ? 0 : array.length;
      while (++index4 < length) {
        if (predicate(array[index4], index4, array)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  }
});

// node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "node_modules/lodash/_cacheHas.js"(exports, module) {
    function cacheHas(cache3, key) {
      return cache3.has(key);
    }
    module.exports = cacheHas;
  }
});

// node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "node_modules/lodash/_equalArrays.js"(exports, module) {
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index4 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index4 < arrLength) {
        var arrValue = array[index4], othValue = other[index4];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index4, other, array, stack) : customizer(arrValue, othValue, index4, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  }
});

// node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "node_modules/lodash/_mapToArray.js"(exports, module) {
    function mapToArray(map2) {
      var index4 = -1, result = Array(map2.size);
      map2.forEach(function(value, key) {
        result[++index4] = [key, value];
      });
      return result;
    }
    module.exports = mapToArray;
  }
});

// node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "node_modules/lodash/_setToArray.js"(exports, module) {
    function setToArray(set2) {
      var index4 = -1, result = Array(set2.size);
      set2.forEach(function(value) {
        result[++index4] = value;
      });
      return result;
    }
    module.exports = setToArray;
  }
});

// node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "node_modules/lodash/_equalByTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var Uint8Array2 = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object3, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object3.byteLength != other.byteLength || object3.byteOffset != other.byteOffset) {
            return false;
          }
          object3 = object3.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object3.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object3), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object3, +other);
        case errorTag:
          return object3.name == other.name && object3.message == other.message;
        case regexpTag:
        case stringTag:
          return object3 == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object3.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object3);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object3, other);
          var result = equalArrays(convert(object3), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object3);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object3) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  }
});

// node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "node_modules/lodash/_equalObjects.js"(exports, module) {
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function equalObjects(object3, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object3), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index4 = objLength;
      while (index4--) {
        var key = objProps[index4];
        if (!(isPartial ? key in other : hasOwnProperty2.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object3);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object3;
      }
      var result = true;
      stack.set(object3, other);
      stack.set(other, object3);
      var skipCtor = isPartial;
      while (++index4 < objLength) {
        key = objProps[index4];
        var objValue = object3[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object3, stack) : customizer(objValue, othValue, key, object3, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object3.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object3 && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object3);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  }
});

// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "node_modules/lodash/_baseIsEqualDeep.js"(exports, module) {
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray2 = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object3, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray2(object3), othIsArr = isArray2(other), objTag = objIsArr ? arrayTag : getTag(object3), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object3)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object3) ? equalArrays(object3, other, bitmask, customizer, equalFunc, stack) : equalByTag(object3, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty2.call(object3, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty2.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object3.value() : object3, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object3, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  }
});

// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "node_modules/lodash/_baseIsEqual.js"(exports, module) {
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  }
});

// node_modules/lodash/isEqual.js
var require_isEqual = __commonJS({
  "node_modules/lodash/isEqual.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    function isEqual6(value, other) {
      return baseIsEqual(value, other);
    }
    module.exports = isEqual6;
  }
});

// framer/src/index.ts
var src_exports2 = {};
__export(src_exports2, {
  ARIA_SORT_VALUES: () => ARIA_SORT_VALUES,
  COLUMN_TEXT_ALIGN: () => COLUMN_TEXT_ALIGN,
  CSSTransition: () => CSSTransition_default,
  CheckboxStyle: () => CheckboxStyle,
  ClickAwayListener: () => ClickAwayListener_default,
  ConnectSymbol: () => ConnectSymbol,
  Connectable: () => Connectable,
  DEFAULT_FORMAT: () => DEFAULT_FORMAT,
  DEFAULT_GET_OPTION_LABEL: () => DEFAULT_GET_OPTION_LABEL,
  DEFAULT_KEY_TO_CHIPS: () => DEFAULT_KEY_TO_CHIPS,
  DEFAULT_LIMIT_CHIPS: () => DEFAULT_LIMIT_CHIPS,
  DialPadButton: () => DialPadButton,
  GroupedVirtuoso: () => GroupedVirtuoso,
  HALF_DAY_HOURS: () => HALF_DAY_HOURS,
  HOUR_MINUTES: () => HOUR_MINUTES,
  NumberPicker: () => NumberPicker,
  ONE_HOUR: () => ONE_HOUR,
  ORDER_TABLE_BY: () => ORDER_TABLE_BY,
  PortalManager: () => PortalManager,
  PortalStore: () => PortalStore,
  RcAccordion: () => RcAccordion,
  RcAccordionDetails: () => RcAccordionDetails,
  RcAccordionSummary: () => RcAccordionSummary,
  RcAlert: () => RcAlert,
  RcAppBar: () => RcAppBar,
  RcAutocompleteDefaultFilterOptions: () => RcAutocompleteDefaultFilterOptions,
  RcAvatar: () => ExportType,
  RcBackdrop: () => RcBackdrop,
  RcBadge: () => RcBadge,
  RcBox: () => RcBox,
  RcButton: () => RcButton,
  RcButtonBase: () => RcButtonBase,
  RcButtonGroup: () => RcButtonGroup,
  RcCard: () => RcCard,
  RcCardActionArea: () => RcCardActionArea,
  RcCardActions: () => RcCardActions,
  RcCardContent: () => RcCardContent,
  RcCardHeader: () => RcCardHeader,
  RcCardHoverActions: () => RcCardHoverActions,
  RcCardMedia: () => RcCardMedia,
  RcCardSelectionArea: () => RcCardSelectionArea,
  RcCheckbox: () => RcCheckbox,
  RcCheckboxClasses: () => RcCheckboxClasses,
  RcChip: () => RcChip,
  RcCircularProgress: () => RcCircularProgress,
  RcClasses: () => RcClasses,
  RcCollapse: () => RcCollapse,
  RcDatePicker: () => RcDatePicker,
  RcDatePickerClasses: () => RcDatePickerClasses,
  RcDefaultDarkTheme: () => RcDefaultDarkTheme,
  RcDefaultHighContrastTheme: () => RcDefaultHighContrastTheme,
  RcDetachedWindow: () => RcDetachedWindow,
  RcDetachedWindowStylesProvider: () => RcDetachedWindowStylesProvider,
  RcDialDelete: () => RcDialDelete,
  RcDialPad: () => RcDialPad,
  RcDialTextField: () => RcDialTextField,
  RcDialer: () => RcDialer,
  RcDialerPadSounds: () => RcDialerPadSounds_default,
  RcDialog: () => RcDialog,
  RcDialogActions: () => RcDialogActions,
  RcDialogContent: () => RcDialogContent,
  RcDialogContentText: () => RcDialogContentText,
  RcDialogContext: () => RcDialogContext,
  RcDialogTitle: () => RcDialogTitle,
  RcDivider: () => RcDivider,
  RcDownshift: () => ExportType2,
  RcDownshiftDefaultFilterOptions: () => RcDownshiftDefaultFilterOptions,
  RcDownshiftDefaultRenderNoOptions: () => RcDownshiftDefaultRenderNoOptions,
  RcDownshiftInput: () => RcDownshiftInput,
  RcDownshiftInputClasses: () => RcDownshiftInputClasses,
  RcDragDropContext: () => RcDragDropContext,
  RcDragHandle: () => RcDragHandle,
  RcDraggable: () => RcDraggable,
  RcDrawer: () => RcDrawer,
  RcDroppable: () => RcDroppable,
  RcFade: () => RcFade,
  RcForm: () => RcForm,
  RcFormContext: () => RcFormContext,
  RcFormControl: () => RcFormControl,
  RcFormControlLabel: () => RcFormControlLabel,
  RcFormGroup: () => RcFormGroup,
  RcFormHelperText: () => RcFormHelperText,
  RcFormLabel: () => RcFormLabel,
  RcGlobalScrollBarStyle: () => RcGlobalScrollBarStyle,
  RcGrid: () => RcGrid,
  RcGrow: () => RcGrow,
  RcHidden: () => RcHidden,
  RcHighlight: () => RcHighlight,
  RcIcon: () => RcIcon,
  RcIconButton: () => RcIconButton,
  RcIconButtonGroup: () => RcIconButtonGroup,
  RcIconService: () => RcIconService,
  RcImageView: () => RcImageView,
  RcInlineEditable: () => RcInlineEditable,
  RcInputLabel: () => RcInputLabel,
  RcLinearProgress: () => RcLinearProgress,
  RcLink: () => RcLink,
  RcList: () => RcList,
  RcListItem: () => RcListItem,
  RcListItemAvatar: () => RcListItemAvatar,
  RcListItemIcon: () => RcListItemIcon,
  RcListItemSecondaryAction: () => RcListItemSecondaryAction,
  RcListItemText: () => RcListItemText,
  RcListSubheader: () => RcListSubheader,
  RcLoading: () => RcLoading,
  RcMenu: () => RcMenu,
  RcMenuContext: () => RcMenuContext,
  RcMenuItem: () => RcMenuItem,
  RcMenuList: () => RcMenuList,
  RcMenuListContext: () => RcMenuListContext,
  RcMobileThemes: () => RcMobileThemes,
  RcOutlineTextFieldIconSizes: () => RcOutlineTextFieldIconSizes,
  RcPagination: () => RcPagination,
  RcPaginationItem: () => RcPaginationItem,
  RcPaper: () => RcPaper,
  RcPlainSelect: () => RcPlainSelect,
  RcPopover: () => RcPopover,
  RcPopper: () => RcPopper,
  RcPopupBox: () => RcPopupBox,
  RcPortal: () => RcPortal,
  RcPortalHost: () => RcPortalHost,
  RcPortalWindowContext: () => RcPortalWindowContext,
  RcPresence: () => RcPresence,
  RcRadio: () => RcRadio,
  RcRadioGroup: () => RcRadioGroup,
  RcRating: () => RcRating,
  RcResponsive: () => RcResponsive,
  RcResponsiveContext: () => RcResponsiveContext,
  RcSelect: () => RcSelect,
  RcSlide: () => RcSlide,
  RcSlider: () => RcSlider,
  RcSnackbar: () => RcSnackbar,
  RcSnackbarAction: () => RcSnackbarAction,
  RcSnackbarContent: () => RcSnackbarContent,
  RcSnackbarContentClasses: () => RcSnackbarContentClasses,
  RcSnackbarContentColors: () => RcSnackbarContentColors,
  RcSnackbarContentLineHeight: () => RcSnackbarContentLineHeight,
  RcSnackbarContentLoadingSizes: () => RcSnackbarContentLoadingSizes,
  RcSnackbarContentPaddings: () => RcSnackbarContentPaddings,
  RcSplitButton: () => RcSplitButton,
  RcStep: () => RcStep,
  RcStepButton: () => RcStepButton,
  RcStepConnector: () => RcStepConnector,
  RcStepIcon: () => RcStepIcon,
  RcStepLabel: () => RcStepLabel,
  RcStepper: () => RcStepper,
  RcSubMenu: () => RcSubMenu,
  RcSubMenuContext: () => RcSubMenuContext,
  RcSuggestionList: () => RcSuggestionList,
  RcSuggestionListClasses: () => RcSuggestionListClasses,
  RcSwitch: () => RcSwitch,
  RcSwitchClasses: () => RcSwitchClasses,
  RcTab: () => RcTab,
  RcTabContext: () => RcTabContext,
  RcTabList: () => RcTabList,
  RcTabPanel: () => RcTabPanel,
  RcTable: () => RcTable,
  RcTableBodyCellContent: () => RcTableBodyCellContent,
  RcTableHeadCell: () => RcTableHeadCell,
  RcTableHeadView: () => RcTableHeadView,
  RcTablePagination: () => RcTablePagination,
  RcTableRow: () => RcTableRow,
  RcTabs: () => RcTabs,
  RcTag: () => RcTag,
  RcText: () => RcText,
  RcTextField: () => RcTextField,
  RcTextWithEllipsis: () => RcTextWithEllipsis,
  RcTextarea: () => RcTextarea,
  RcThemeContext: () => RcThemeContext,
  RcThemeHandler: () => RcThemeHandler,
  RcThemeIds: () => RcThemeIds,
  RcThemeProvider: () => RcThemeProvider,
  RcThemeSwitcherDefaultTheme: () => RcThemeSwitcherDefaultTheme,
  RcThemeSwitcherProvider: () => RcThemeSwitcherProvider,
  RcThemes: () => RcThemes,
  RcThumbnail: () => RcThumbnail,
  RcTimePicker: () => ExportType3,
  RcTimePickerClasses: () => RcTimePickerClasses,
  RcTimePickerIconWidths: () => RcTimePickerIconWidths,
  RcTimePickerUtils: () => RcTimePickerUtils,
  RcToggleButton: () => RcToggleButton,
  RcToggleButtonGroup: () => RcToggleButtonGroup,
  RcToolbar: () => RcToolbar,
  RcTooltip: () => RcTooltip,
  RcTypography: () => RcTypography,
  RcVirtualizedDivider: () => RcVirtualizedDivider,
  RcVirtualizedMenu: () => RcVirtualizedMenu,
  RcVirtualizedMenuList: () => RcVirtualizedMenuList,
  RcVisuallyHidden: () => RcVisuallyHidden,
  RcZoom: () => RcZoom,
  RcZoomFrom: () => RcZoomFrom,
  RcZoomInFadeOut: () => RcZoomInFadeOut,
  ReplaceTransition: () => ReplaceTransition_default,
  SORT_ICON_CLASS: () => SORT_ICON_CLASS,
  SelectionView: () => SelectionView,
  StyleSheetManager: () => StyleSheetManager,
  StyledAvatar: () => StyledAvatar,
  StyledSortIconWrapper: () => StyledSortIconWrapper,
  StyledTable: () => StyledTable,
  StyledTableHeadCell: () => StyledTableHeadCell,
  StyledTableHeadCellContent: () => StyledTableHeadCellContent,
  StyledTableHeadText: () => StyledTableHeadText,
  StyledTableRow: () => StyledTableRow,
  SwitchStyle: () => SwitchStyle,
  SwitchTransition: () => SwitchTransition_default,
  TABLE_BORDER_TYPE: () => TABLE_BORDER_TYPE,
  TABLE_STICKY_TYPE: () => TABLE_STICKY_TYPE,
  TABLE_TYPE: () => TABLE_TYPE,
  TIME_GAP: () => TIME_GAP,
  TableWrapper: () => TableWrapper,
  ThemeConsumer: () => ThemeConsumer,
  ThemeProvider: () => ThemeProvider2,
  ThrottleScheduler: () => ThrottleScheduler,
  TimeBoundary: () => TimeBoundary,
  ToggleText: () => ToggleText,
  Transition: () => Transition_default,
  TransitionGroup: () => TransitionGroup_default,
  UniqIdUtil: () => UniqIdUtil,
  UnmountSymbol: () => UnmountSymbol,
  Virtuoso: () => Virtuoso,
  VirtuosoGrid: () => VirtuosoGrid,
  a11yKeyboard: () => a11yKeyboard,
  a11yKeyboardCode: () => a11yKeyboardCode,
  backgroundTransition: () => backgroundTransition,
  breakpointList: () => breakpointList,
  checkDefaultPrevented: () => checkDefaultPrevented,
  clearReactReferencesInNode: () => clearReactReferencesInNode,
  clearWindowSelection: () => clearWindowSelection,
  colorOptions: () => colorOptions,
  combineClasses: () => combineClasses,
  combineProps: () => combineProps,
  config: () => config_default,
  configure: () => configure,
  createGlobalStyle: () => createGlobalStyle,
  createPromise: () => createPromise,
  createTheme: () => createTheme_default2,
  css: () => css2,
  darken: () => darken2,
  deepmerge: () => deepmerge2,
  doAlpha: () => doAlpha,
  downshiftComponentName: () => downshiftComponentName,
  elevationOptions: () => elevationOptions,
  ellipsis: () => ellipsis,
  fakeBorder: () => fakeBorder,
  flexCenterStyle: () => flexCenterStyle,
  flexWidth: () => flexWidth,
  focusVisible: () => focusVisible,
  focusVisibleColor: () => focusVisibleColor,
  focusVisibleShadowStyle: () => focusVisibleShadowStyle,
  focusWithin: () => focusWithin,
  getAvatarColorTokenFromId: () => getAvatarColorTokenFromId,
  getAvatarShortName: () => getAvatarShortName,
  getContrastBgColor: () => getContrastBgColor,
  getDialPadValueOnlyRegex: () => getDialPadValueOnlyRegex,
  getFormattedTime: () => getFormattedTime,
  getHourAndMinute: () => getHourAndMinute,
  getMatchDetail: () => getMatchDetail,
  getNumberPickerBoundary: () => getNumberPickerBoundary,
  getPanelId: () => getPanelId,
  getParsePaletteColor: () => getParsePaletteColor,
  getPeriod: () => getPeriod,
  getRangeBoundary: () => getRangeBoundary,
  getRecoupHour: () => getRecoupHour,
  getResizeObserver: () => getResizeObserver,
  getScrollbarSize: () => getScrollbarSize2,
  getSelectionPosition: () => getSelectionPosition,
  getTabId: () => getTabId,
  getTimestamp: () => getTimestamp,
  getTimestampFromDate: () => getTimestampFromDate,
  getTimestampFromHourAndMin: () => getTimestampFromHourAndMin,
  getTransitionProps: () => getTransitionProps2,
  hasValue: () => hasValue2,
  iconList: () => icon_exports,
  iconOptions: () => iconOptions,
  isClick: () => isClick,
  isElmEqualOrContainRef: () => isElmEqualOrContainRef,
  isFilled: () => isFilled2,
  isItemCanSelected: () => isItemCanSelected,
  isOutOfRange: () => isOutOfRange,
  isRcElement: () => isRcElement,
  isRef: () => isRef,
  isShowJunoWarning: () => isShowJunoWarning,
  isUrl: () => isUrl,
  keyframes: () => keyframes,
  lastMinute: () => lastMinute,
  lightAlpha: () => lightAlpha,
  lighten: () => lighten2,
  lineClamp: () => lineClamp,
  logInDev: () => logInDev,
  minuteSource: () => minuteSource,
  moveIndexInTwoDimension: () => moveIndexInTwoDimension,
  nonStyleButton: () => nonStyleButton,
  nonTouchHoverMedia: () => nonTouchHoverMedia,
  omit: () => omit3,
  opacity: () => opacity3,
  outerSize: () => outerSize,
  overridableStyled: () => overridableStyled,
  pad: () => pad,
  palette: () => palette4,
  palette2: () => palette22,
  paletteContrastText: () => paletteContrastText,
  parseColor: () => parseColor,
  parseNumber: () => parseNumber,
  parseNumberToString: () => parseNumberToString,
  pick: () => pick,
  preloadImg: () => preloadImg,
  px: () => px2,
  pxToNumber: () => pxToNumber,
  radius: () => radius3,
  radiusOptions: () => radiusOptions,
  rcConfiguration: () => rcConfiguration,
  reflow: () => reflow3,
  removeClassName: () => removeClassName,
  rippleEnter: () => rippleEnter,
  rippleStyle: () => rippleStyle,
  setAlpha: () => setAlpha,
  setOpacity: () => setOpacity,
  setSelectionPosition: () => setSelectionPosition,
  setTransitionStyle: () => setTransitionStyle,
  shadowBorder: () => shadowBorder,
  shadows: () => shadows4,
  shallowEqual: () => shallowEqual,
  spacing: () => spacing2,
  spacingUnit: () => spacingUnit,
  stringArrToRegExp: () => stringArrToRegExp,
  styled: () => styled_components_default,
  swapArrayLocs: () => swapArrayLocs,
  themeOptions: () => themeOptions,
  toSpacing: () => toSpacing,
  twelveHourSystemSource: () => twelveHourSystemSource,
  twentyFourHourSystemSource: () => twentyFourHourSystemSource,
  typography: () => typography4,
  typographyOptions: () => typographyOptions,
  typographyProp: () => typographyProp,
  useA11yKeyEvent: () => useA11yKeyEvent,
  useAnnouncer: () => useAnnouncer,
  useAudio: () => useAudio,
  useAvatarColorToken: () => useAvatarColorToken,
  useAvatarShortName: () => useAvatarShortName,
  useChange: () => useChange,
  useDebounce: () => useDebounce,
  useDeprecatedLog: () => useDeprecatedLog,
  useDepsChange: () => useDepsChange,
  useDialKeyboard: () => useDialKeyboard,
  useDownshift: () => useDownshift,
  useDownshiftError: () => useDownshiftError,
  useDownshiftGroup: () => useDownshiftGroup,
  useDownshiftTag: () => useDownshiftTag,
  useDynamicHeight: () => useDynamicHeight,
  useEventCallback: () => useEventCallback2,
  useEventListener: () => useEventListener,
  useEver: () => useEver,
  useFixedEndSelection: () => useFixedEndSelection,
  useForceUpdate: () => useForceUpdate,
  useForkRef: () => useForkRef2,
  useHiddenTabindex: () => useHiddenTabindex,
  useHighlightScroll: () => useHighlightScroll,
  useIconService: () => useIconService,
  useId: () => useId2,
  useInterval: () => useInterval,
  useKeyAudio: () => useKeyAudio,
  useKeyDownOnce: () => useKeyDownOnce,
  useKeyboardMoveFocus: () => useKeyboardMoveFocus,
  useLongPress: () => useLongPress,
  useMountState: () => useMountState,
  useOnReRender: () => useOnReRender,
  useOnlyOneFocusable: () => useOnlyOneFocusable,
  useOverflow: () => useOverflow,
  usePortalManagerWithID: () => usePortalManagerWithID,
  usePrevious: () => usePrevious,
  useRcFormContext: () => useRcFormContext,
  useRcPortalWindowContext: () => useRcPortalWindowContext,
  useRefState: () => useRefState,
  useResizeObserver: () => useResizeObserver,
  useResponsiveContext: () => useResponsiveContext,
  useResponsiveMatch: () => useResponsiveMatch,
  useResultRef: () => useResultRef,
  useRetry: () => useRetry,
  useSleep: () => useSleep,
  useSuggestionList: () => useSuggestionList,
  useTabContext: () => useTabContext,
  useTheme: () => RcUseTheme,
  useThemeProps: () => useThemeProps,
  useThemeSwitcher: () => useThemeSwitcher,
  useThrottle: () => useThrottle,
  useTouchMouseEvent: () => useTouchMouseEvent,
  useUnmountPortalHandler: () => useUnmountPortalHandler,
  visuallyHiddenStyles: () => visuallyHiddenStyles,
  withDelay: () => withDelay,
  withDeprecatedCheck: () => withDeprecatedCheck,
  withResponsive: () => withResponsive,
  withTheme: () => withTheme,
  withTooltip: () => withTooltip,
  zIndex: () => zIndex3
});

// src/icon/index.tsx
var icon_exports = {};
__export(icon_exports, {
  ActiveCall: () => ActiveCall_default,
  ActivecallBorder: () => ActivecallBorder_default,
  Add: () => Add_default,
  AddBorder: () => AddBorder_default,
  AddEmojiMore: () => AddEmojiMore_default,
  AddEvent: () => AddEvent_default,
  AddField: () => AddField_default,
  AddIntegration: () => AddIntegration_default,
  AddMember: () => AddMember_default,
  AddMemberBorder: () => AddMemberBorder_default,
  AddNewFolder: () => AddNewFolder_default,
  AddParkLocation: () => AddParkLocation_default,
  AddReactions: () => AddReactions_default,
  AddTask: () => AddTask_default,
  AddTeam: () => AddTeam_default,
  AddTeamBorder: () => AddTeamBorder_default,
  Address: () => Address_default,
  Admin: () => Admin_default,
  AdminBorder: () => AdminBorder_default,
  Advanced: () => Advanced_default,
  AlignCenter: () => AlignCenter_default,
  AlignJustify: () => AlignJustify_default,
  AlignLeft: () => AlignLeft_default,
  AlignRight: () => AlignRight_default,
  Analytics: () => Analytics_default,
  AnalyticsBorder: () => AnalyticsBorder_default,
  Announcement: () => Announcement_default,
  AppleLogo: () => AppleLogo_default,
  Apps: () => Apps_default,
  Archive: () => Archive_default,
  ArrowDown: () => ArrowDown_default,
  ArrowDown2: () => ArrowDown2_default,
  ArrowLeft: () => ArrowLeft_default,
  ArrowLeft2: () => ArrowLeft2_default,
  ArrowRight: () => ArrowRight_default,
  ArrowRight1: () => ArrowRight1_default,
  ArrowUp: () => ArrowUp_default,
  ArrowUp2: () => ArrowUp2_default,
  Askfirst: () => Askfirst_default,
  Assignment: () => Assignment_default,
  Asterisk: () => Asterisk_default,
  Attachment: () => Attachment_default,
  Audio: () => Audio_default,
  AvatarRooms: () => AvatarRooms_default,
  Barge: () => Barge_default,
  Birthday: () => Birthday_default,
  Blocked: () => Blocked_default,
  Bold: () => Bold_default,
  Bookmark: () => Bookmark_default,
  BookmarkBorder: () => BookmarkBorder_default,
  Box: () => Box_default,
  Box1: () => Box1_default,
  BoxNew: () => BoxNew_default,
  BubbleLines: () => BubbleLines_default,
  BubbleLinesBorder: () => BubbleLinesBorder_default,
  CallAdd: () => CallAdd_default,
  CallList: () => CallList_default,
  CallMore: () => CallMore_default,
  CallOnBehalf: () => CallOnBehalf_default,
  CallQueue: () => CallQueue_default,
  ChatBubble: () => ChatBubble_default,
  Check: () => Check_default,
  ChevronLeft: () => ChevronLeft_default,
  ChevronRight: () => ChevronRight_default,
  Close: () => Close_default,
  CloudContact: () => CloudContact_default,
  CodeSnippets: () => CodeSnippets_default,
  Comments: () => Comments_default,
  CompanySetup: () => CompanySetup_default,
  CompanySetupBorder: () => CompanySetupBorder_default,
  Computer: () => Computer_default,
  Conference: () => Conference_default,
  ConferenceBorder: () => ConferenceBorder_default,
  Connect: () => Connect_default,
  Contacts: () => Contacts_default,
  ContactsAndCalendars: () => ContactsAndCalendars_default,
  ContactsBorder: () => ContactsBorder_default,
  Copy: () => Copy_default,
  CustomizeTabs: () => CustomizeTabs_default,
  Dashboard: () => Dashboard_default,
  DashboardBorder: () => DashboardBorder_default,
  Date: () => Date_default,
  DateBorder: () => DateBorder_default,
  DefaultAvatar: () => DefaultAvatar_default,
  DefaultFile: () => DefaultFile_default,
  DefaultFileD: () => DefaultFileD_default,
  DefaultGdrive: () => DefaultGdrive_default,
  DefaultGdriveD: () => DefaultGdriveD_default,
  DefaultGroupAvatar: () => DefaultGroupAvatar_default,
  DefaultIntegration: () => DefaultIntegration_default,
  DefaultIntegrationBorder: () => DefaultIntegrationBorder_default,
  DefaultMusic: () => DefaultMusic_default,
  DefaultMusicD: () => DefaultMusicD_default,
  DefaultTeamAvatar: () => DefaultTeamAvatar_default,
  DefaultVideo: () => DefaultVideo_default,
  DefaultVideoD: () => DefaultVideoD_default,
  Delete: () => Delete_default,
  DeleteCircle: () => DeleteCircle_default,
  DeletedFile: () => DeletedFile_default,
  DeletedFileD: () => DeletedFileD_default,
  Deletenumber: () => Deletenumber_default,
  Department: () => Department_default,
  Description: () => Description_default,
  Dial: () => Dial_default,
  Dialer: () => Dialer_default,
  Doc: () => Doc_default,
  DocD: () => DocD_default,
  DockBorder: () => DockBorder_default,
  DoubleChevronLeft: () => DoubleChevronLeft_default,
  DoubleChevronRight: () => DoubleChevronRight_default,
  Download: () => Download_default,
  DownwardsArrowWithTipRightwards: () => DownwardsArrowWithTipRightwards_default,
  Draft: () => Draft_default,
  DragableArea: () => DragableArea_default,
  Dropbox: () => Dropbox_default,
  Edit: () => Edit_default,
  Email: () => Email_default,
  Emoji: () => Emoji_default,
  EndAnswer: () => EndAnswer_default,
  EventNew: () => EventNew_default,
  EventNewBorder: () => EventNewBorder_default,
  Evernote: () => Evernote_default,
  Excel: () => Excel_default,
  ExcelD: () => ExcelD_default,
  Expand: () => Expand_default,
  ExternalLink: () => ExternalLink_default,
  FailedFax: () => FailedFax_default,
  FailedFaxBorder: () => FailedFaxBorder_default,
  Fax: () => Fax_default,
  FaxBorder: () => FaxBorder_default,
  Feedback: () => Feedback_default,
  File: () => File_default,
  FileBorder: () => FileBorder_default,
  Filter: () => Filter_default,
  Foldercreated: () => Foldercreated_default,
  FontColor: () => FontColor_default,
  Forward: () => Forward_default,
  Forwardcall: () => Forwardcall_default,
  Forwarding: () => Forwarding_default,
  ForwardingBorder: () => ForwardingBorder_default,
  GdriveLogo: () => GdriveLogo_default,
  Gif: () => Gif_default,
  GifFile: () => GifFile_default,
  GifFileD: () => GifFileD_default,
  Gmail: () => Gmail_default,
  GoodConnection: () => GoodConnection_default,
  Google: () => Google_default,
  GoogleCalendar2019: () => GoogleCalendar2019_default,
  GoogleDoc: () => GoogleDoc_default,
  GoogleDocD: () => GoogleDocD_default,
  GoogleLogo: () => GoogleLogo_default,
  GoogleLogoDisabled: () => GoogleLogoDisabled_default,
  GoogleSheet: () => GoogleSheet_default,
  GoogleSheetD: () => GoogleSheetD_default,
  GoogleSlide: () => GoogleSlide_default,
  GoogleSlideD: () => GoogleSlideD_default,
  GroupDefault: () => GroupDefault_default,
  HandUp: () => HandUp_default,
  Hash: () => Hash_default,
  Hd: () => Hd_default,
  Help: () => Help_default,
  HelpBorder: () => HelpBorder_default,
  HideBorder: () => HideBorder_default,
  Hold: () => Hold_default,
  HoldAnswer: () => HoldAnswer_default,
  HoldcallBorder: () => HoldcallBorder_default,
  HorizontalLine: () => HorizontalLine_default,
  Hud: () => Hud_default,
  Ignore: () => Ignore_default,
  ImageBroken: () => ImageBroken_default,
  ImageBrokenD: () => ImageBrokenD_default,
  ImagePreview: () => ImagePreview_default,
  ImagePreviewD: () => ImagePreviewD_default,
  InProgress: () => InProgress_default,
  InboundCallOnBehalf: () => InboundCallOnBehalf_default,
  InboundFax: () => InboundFax_default,
  InboundFaxBorder: () => InboundFaxBorder_default,
  Inbox: () => Inbox_default,
  Incall: () => Incall_default,
  IncallBorder: () => IncallBorder_default,
  Indent: () => Indent_default,
  Indeterminate: () => Indeterminate_default,
  Info: () => Info_default,
  InfoBorder: () => InfoBorder_default,
  InsertCode: () => InsertCode_default,
  InsertImage: () => InsertImage_default,
  InsertLink: () => InsertLink_default,
  InsertTable: () => InsertTable_default,
  InsertVideo: () => InsertVideo_default,
  Italic: () => Italic_default,
  ItemListSelected: () => ItemListSelected_default,
  Join: () => Join_default,
  JoinAudioPoc: () => JoinAudioPoc_default,
  JoinMeeting: () => JoinMeeting_default,
  JumpToLatest: () => JumpToLatest_default,
  JumpToUnread: () => JumpToUnread_default,
  Keypad: () => Keypad_default,
  Leave: () => Leave_default,
  LeaveMeeting: () => LeaveMeeting_default,
  Limited: () => Limited_default,
  ListBullet: () => ListBullet_default,
  ListOrdered: () => ListOrdered_default,
  ListView: () => ListView_default,
  Location: () => Location_default,
  LocationBorder: () => LocationBorder_default,
  Lock: () => Lock_default,
  LockBorder: () => LockBorder_default,
  Login: () => Login_default,
  Logout: () => Logout_default,
  MacKeynote: () => MacKeynote_default,
  MacKeynoteD: () => MacKeynoteD_default,
  MacNumbers: () => MacNumbers_default,
  MacNumbersD: () => MacNumbersD_default,
  MacPages: () => MacPages_default,
  MacPagesD: () => MacPagesD_default,
  MarkerM: () => MarkerM_default,
  MarkerS: () => MarkerS_default,
  MemberBorder: () => MemberBorder_default,
  Mention: () => Mention_default,
  MentionBorder: () => MentionBorder_default,
  Merge: () => Merge_default,
  Message: () => Message_default,
  Mic: () => Mic_default,
  MicBorder: () => MicBorder_default,
  MicOff: () => MicOff_default,
  MicOffBorder: () => MicOffBorder_default,
  MicrosoftLogo: () => MicrosoftLogo_default,
  MicrosoftLogoDisabled: () => MicrosoftLogoDisabled_default,
  MicrosoftOutlook2019: () => MicrosoftOutlook2019_default,
  Minimize: () => Minimize_default,
  Missedcall: () => Missedcall_default,
  MissedcallBorder: () => MissedcallBorder_default,
  Mobile: () => Mobile_default,
  MonitorCall: () => MonitorCall_default,
  MoreHoriz: () => MoreHoriz_default,
  MoreVert: () => MoreVert_default,
  MuteNotification: () => MuteNotification_default,
  MuteNotificationBorder: () => MuteNotificationBorder_default,
  NewAction: () => NewAction_default,
  NewEmail: () => NewEmail_default,
  NewFax: () => NewFax_default,
  NewFile: () => NewFile_default,
  NewNote: () => NewNote_default,
  Nickname: () => Nickname_default,
  NoAudio: () => NoAudio_default,
  NoConnection: () => NoConnection_default,
  NonEdit: () => NonEdit_default,
  Note: () => Note_default,
  NoteBorder: () => NoteBorder_default,
  Notification: () => Notification_default,
  NotificationBorder: () => NotificationBorder_default,
  Onedrive: () => Onedrive_default,
  OpenFolder: () => OpenFolder_default,
  OuboundCallOnBehalf: () => OuboundCallOnBehalf_default,
  OutboundFax: () => OutboundFax_default,
  OutboundFaxBorder: () => OutboundFaxBorder_default,
  Outcall: () => Outcall_default,
  OutcallBorder: () => OutcallBorder_default,
  Outdent: () => Outdent_default,
  Paging: () => Paging_default,
  ParkCall: () => ParkCall_default,
  ParkCallMessage: () => ParkCallMessage_default,
  ParkCallText: () => ParkCallText_default,
  PartnerCloudContact: () => PartnerCloudContact_default,
  Pause: () => Pause_default,
  PauseBorder: () => PauseBorder_default,
  PauseCircle: () => PauseCircle_default,
  PauseCircleBorder: () => PauseCircleBorder_default,
  Pdf: () => Pdf_default,
  PdfD: () => PdfD_default,
  People: () => People_default,
  Phone: () => Phone_default,
  PhoneBorder: () => PhoneBorder_default,
  PhoneOff: () => PhoneOff_default,
  PhoneOffBorder: () => PhoneOffBorder_default,
  PickUpCall: () => PickUpCall_default,
  Pin: () => Pin_default,
  Play: () => Play_default,
  PlayBorder: () => PlayBorder_default,
  PlayCircle: () => PlayCircle_default,
  PlayCircleBorder: () => PlayCircleBorder_default,
  Poll: () => Poll_default,
  PollBorder: () => PollBorder_default,
  PoorConnection: () => PoorConnection_default,
  Ppt: () => Ppt_default,
  PptD: () => PptD_default,
  Previous: () => Previous_default,
  Quote: () => Quote_default,
  Radio: () => Radio_default2,
  RadioUnselect: () => RadioUnselect_default,
  RcBlog: () => RcBlog_default,
  RcCloudContact: () => RcCloudContact_default,
  RcContact: () => RcContact_default,
  RcHelp: () => RcHelp_default,
  RcvMicOff: () => RcvMicOff_default,
  RcvVideocamOff: () => RcvVideocamOff_default,
  Read: () => Read_default,
  Record: () => Record_default,
  Refresh: () => Refresh_default,
  Remove: () => Remove_default,
  RemoveBorder: () => RemoveBorder_default,
  RemoveField: () => RemoveField_default,
  Repeat: () => Repeat_default,
  Reply: () => Reply_default,
  ResendFax: () => ResendFax_default,
  ResetZoom: () => ResetZoom_default,
  RichTextEditor: () => RichTextEditor_default,
  RollAp: () => RollAp_default,
  SaveDraft: () => SaveDraft_default,
  Schedule: () => Schedule_default,
  ScheduleMeeting: () => ScheduleMeeting_default,
  Screenshare: () => Screenshare_default,
  ScreenshareBorder: () => ScreenshareBorder_default,
  Search: () => Search_default,
  SearchNav: () => SearchNav_default,
  Selects: () => Selects_default,
  Send: () => Send_default,
  SendFilled: () => SendFilled_default,
  Settings: () => Settings_default,
  SettingsBorder: () => SettingsBorder_default,
  Share: () => Share_default,
  SharedLine: () => SharedLine_default,
  Sharepoint: () => Sharepoint_default,
  Shortcut: () => Shortcut_default,
  ShortcutBorder: () => ShortcutBorder_default,
  Signal0: () => Signal0_default,
  Signal1: () => Signal1_default,
  Signal2: () => Signal2_default,
  Signal3: () => Signal3_default,
  Sms: () => Sms_default,
  SmsBorder: () => SmsBorder_default,
  SmsDefault: () => SmsDefault_default,
  SmsInviteBorder: () => SmsInviteBorder_default,
  Sort: () => Sort_default,
  SpeakerDown: () => SpeakerDown_default,
  SpeakerMute: () => SpeakerMute_default,
  SpeakerUp: () => SpeakerUp_default,
  Star: () => Star_default,
  StarBorder: () => StarBorder_default,
  Start: () => Start_default,
  StartMeeting: () => StartMeeting_default,
  Stop: () => Stop_default,
  StopBorder: () => StopBorder_default,
  StopCircle: () => StopCircle_default,
  StopCircleBorder: () => StopCircleBorder_default,
  StopRecord: () => StopRecord_default,
  Strike: () => Strike_default,
  Svg0: () => __default,
  Svg1: () => __default2,
  Svg2: () => __default3,
  Svg3: () => __default4,
  Svg4: () => __default5,
  Svg5: () => __default6,
  Svg6: () => __default7,
  Svg7: () => __default8,
  Svg8: () => __default9,
  Svg9: () => __default10,
  TakeOver: () => TakeOver_default,
  TaskNew: () => TaskNew_default,
  TaskNewBorder: () => TaskNewBorder_default,
  Team: () => Team_default,
  TeamBorder: () => TeamBorder_default,
  TeamDefault: () => TeamDefault_default,
  Text: () => Text_default,
  Theme: () => Theme_default,
  Thumbup: () => Thumbup_default,
  ThumbupBorder: () => ThumbupBorder_default,
  Time: () => Time_default,
  TimeBorder: () => TimeBorder_default,
  Transcription: () => Transcription_default,
  TransferCall: () => TransferCall_default,
  TransferCallBorder: () => TransferCallBorder_default,
  Unblocked: () => Unblocked_default,
  Underline: () => Underline_default,
  Undock: () => Undock_default,
  UndockBorder: () => UndockBorder_default,
  UnfoldLess: () => UnfoldLess_default,
  UnfoldMore: () => UnfoldMore_default,
  Unlock: () => Unlock_default,
  Unpin: () => Unpin_default,
  UnpinSlash: () => UnpinSlash_default,
  Unread: () => Unread_default,
  Unselect: () => Unselect_default,
  UserDefault: () => UserDefault_default,
  VideoAndMessage: () => VideoAndMessage_default,
  VideoMeeting: () => VideoMeeting_default,
  Videocam: () => Videocam_default,
  VideocamBorder: () => VideocamBorder_default,
  VideocamOff: () => VideocamOff_default,
  VideocamOffBorder: () => VideocamOffBorder_default,
  View: () => View_default,
  ViewBorder: () => ViewBorder_default,
  ViewLogBorder: () => ViewLogBorder_default,
  Voicemail: () => Voicemail_default,
  Warning: () => Warning_default2,
  WatchVideo: () => WatchVideo_default,
  WeakConnection: () => WeakConnection_default,
  Webinar: () => Webinar_default,
  WebinarBorder: () => WebinarBorder_default,
  Webpage: () => Webpage_default,
  Whisper: () => Whisper_default,
  Work: () => Work_default,
  Workspace: () => Workspace_default,
  WorkspaceBorder: () => WorkspaceBorder_default,
  Zip: () => Zip_default,
  ZipD: () => ZipD_default,
  ZoomIn: () => ZoomIn_default,
  ZoomOut: () => ZoomOut_default
});

// src/icon/0.tsx
import React, { forwardRef, memo } from "react";
var Icon0 = memo(forwardRef((props, svgRef) => /* @__PURE__ */ React.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M16 7c.489 0 .948.09 1.376.271s.8.456 1.114.827c.314.371.562.839.744 1.405s.273 1.234.273 2.004c0 .771-.091 1.438-.273 2.001s-.43 1.03-.744 1.399-.685.643-1.114.824-.887.27-1.376.27c-.494 0-.952-.09-1.376-.271s-.793-.455-1.107-.824c-.314-.369-.561-.835-.74-1.399s-.269-1.231-.269-2.001c0-.771.09-1.439.269-2.004s.426-1.034.74-1.405.683-.646 1.107-.827.883-.271 1.376-.271zm0 .928c-.296 0-.581.06-.855.181s-.514.321-.72.599c-.206.279-.371.646-.495 1.103s-.185 1.021-.185 1.694c0 .672.062 1.236.185 1.691s.288.822.495 1.1c.206.279.446.478.72.599s.559.181.855.181c.296 0 .581-.06.855-.181s.515-.321.724-.599c.209-.279.375-.646.498-1.1s.185-1.018.185-1.691c0-.672-.062-1.237-.185-1.694s-.289-.825-.498-1.103c-.209-.279-.45-.478-.724-.599s-.559-.181-.855-.181z"
}), /* @__PURE__ */ React.createElement("path", {
  fill: "var(--color83, #9e9e9e)",
  d: "M16.198 20.583v1.471H17.6v.465h-1.402V24h-.503v-1.481H14.3v-.465h1.395v-1.471z"
}))));
Icon0.displayName = "Icon0";
Icon0["iconName"] = "0";
var __default = Icon0;

// src/icon/1.tsx
import React2, { forwardRef as forwardRef2, memo as memo2 } from "react";
var Icon1 = memo2(forwardRef2((props, svgRef) => /* @__PURE__ */ React2.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React2.createElement("path", {
  d: "M13.498 15.148h1.805V9.025c0-.184.006-.37.018-.558L13.82 9.84c-.039.033-.078.057-.117.072a.308.308 0 01-.269-.019.292.292 0 01-.105-.097l-.328-.483L15.498 7h.85v8.148h1.653V16h-4.502v-.852z"
}))));
Icon1.displayName = "Icon1";
Icon1["iconName"] = "1";
var __default2 = Icon1;

// src/icon/2.tsx
import React3, { forwardRef as forwardRef3, memo as memo3 } from "react";
var Icon2 = memo3(forwardRef3((props, svgRef) => /* @__PURE__ */ React3.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React3.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M16.119 7c.381 0 .736.056 1.067.168s.616.274.857.488c.241.213.43.473.568.779s.207.654.207 1.043c0 .331-.05.638-.151.919s-.236.552-.408.811a6.033 6.033 0 01-.593.752c-.149.162-.305.325-.466.491l-2.613 2.648c.167-.046.337-.082.508-.109s.337-.04.496-.04h3.013c.121 0 .218.035.289.106s.107.162.107.273V16h-6v-.379a.647.647 0 01.201-.472l2.881-2.863c.238-.24.456-.471.653-.693s.365-.444.505-.668c.14-.224.248-.45.323-.68s.113-.475.113-.736-.042-.49-.126-.686a1.35 1.35 0 00-.86-.777 2.039 2.039 0 00-.634-.096c-.226 0-.435.033-.628.099a1.687 1.687 0 00-.888.695 1.62 1.62 0 00-.217.534c-.033.12-.084.207-.151.261s-.155.081-.264.081l-.066-.003a1.577 1.577 0 01-.078-.009l-.584-.099c.059-.406.172-.765.339-1.078s.38-.575.637-.786c.257-.211.552-.372.885-.481s.691-.165 1.076-.165z"
}), /* @__PURE__ */ React3.createElement("path", {
  fill: "var(--color83, #9e9e9e)",
  d: "M14.357 24h-.375c-.043 0-.078-.011-.105-.032s-.047-.049-.06-.082l-.335-.865h-1.607l-.335.865c-.012.03-.032.057-.06.08s-.063.035-.105.035H11l1.433-3.582h.492l1.433 3.582zm-2.347-1.33h1.338l-.563-1.457a2.72 2.72 0 01-.107-.337l-.054.189-.051.151-.563 1.455zm2.8 1.33v-3.582h1.143c.22 0 .41.022.569.065s.29.105.392.185c.102.08.178.178.227.294s.074.246.074.391c0 .088-.014.173-.041.255s-.069.157-.125.227c-.056.07-.126.133-.21.188s-.183.1-.296.135c.262.052.459.146.593.282s.2.317.2.54c0 .152-.028.29-.084.415s-.137.233-.245.323c-.108.09-.239.16-.395.209s-.334.074-.534.074H14.81zm.485-1.633v1.247h.775c.138 0 .257-.016.356-.047s.181-.076.245-.134c.064-.058.111-.126.141-.205s.045-.166.045-.261c0-.185-.065-.331-.196-.439s-.329-.161-.594-.161h-.773zm0-.344h.64c.137 0 .255-.015.355-.045s.183-.072.249-.125c.066-.053.115-.118.146-.194s.047-.159.047-.249c0-.21-.063-.364-.19-.462s-.323-.148-.59-.148h-.658v1.223zm5.275 1.237c.027 0 .051.011.073.032l.19.207c-.147.17-.325.302-.534.398s-.461.142-.756.142c-.258 0-.492-.045-.703-.134s-.389-.214-.538-.375c-.148-.161-.263-.354-.345-.579s-.122-.473-.122-.742c0-.27.044-.517.131-.742s.21-.418.369-.58c.158-.162.348-.287.569-.376s.465-.134.731-.134c.263 0 .49.041.681.122s.36.192.509.332l-.157.223c-.012.017-.025.03-.04.041s-.037.016-.065.016a.125.125 0 01-.069-.024l-.086-.059c-.033-.023-.073-.048-.117-.075s-.098-.052-.16-.075a1.373 1.373 0 00-.497-.083c-.192 0-.367.033-.526.099a1.19 1.19 0 00-.68.726 1.7 1.7 0 00-.096.587c0 .223.032.422.096.598s.152.323.262.444c.111.121.242.213.394.276s.315.095.49.095c.107 0 .203-.006.288-.019s.164-.032.236-.059c.073-.027.14-.06.203-.101l.094-.067.095-.079c.028-.025.056-.038.082-.038z"
}))));
Icon2.displayName = "Icon2";
Icon2["iconName"] = "2";
var __default3 = Icon2;

// src/icon/3.tsx
import React4, { forwardRef as forwardRef4, memo as memo4 } from "react";
var Icon3 = memo4(forwardRef4((props, svgRef) => /* @__PURE__ */ React4.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React4.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M16.193 7c.378 0 .728.053 1.048.16s.596.258.826.455c.231.197.411.434.54.713s.193.588.193.928c0 .278-.036.527-.109.746a1.802 1.802 0 01-.802.998 2.721 2.721 0 01-.642.276c.582.152 1.02.405 1.313.762s.44.803.44 1.339c0 .405-.078.77-.234 1.094s-.369.599-.639.826c-.27.227-.585.401-.945.522s-.745.181-1.157.181c-.474 0-.879-.058-1.216-.175s-.622-.277-.854-.482c-.233-.205-.424-.447-.574-.728s-.277-.585-.38-.912l.474-.197a.666.666 0 01.262-.055c.083 0 .157.017.221.052a.31.31 0 01.108.096l.051.093.037.085c.058.119.129.253.212.402s.195.29.337.421c.141.131.317.242.527.332s.471.135.783.135c.312 0 .585-.05.82-.15s.43-.23.586-.39a1.637 1.637 0 00.471-1.118c0-.238-.032-.455-.097-.651s-.181-.367-.349-.51c-.168-.143-.401-.256-.699-.338s-.679-.123-1.145-.123v-.793c.378-.004.702-.045.97-.123s.488-.184.658-.319c.17-.135.294-.297.371-.485s.115-.397.115-.627c0-.254-.041-.475-.122-.663s-.192-.344-.334-.467c-.141-.123-.309-.215-.502-.276s-.402-.092-.627-.092c-.225 0-.432.033-.624.098s-.361.157-.508.273c-.148.117-.271.256-.371.418s-.175.337-.225.525c-.033.119-.083.205-.15.258s-.152.08-.256.08l-.066-.003a1.577 1.577 0 01-.078-.009l-.58-.098c.058-.401.17-.757.337-1.066s.377-.568.633-.777c.256-.209.549-.368.879-.476s.687-.163 1.07-.163z"
}), /* @__PURE__ */ React4.createElement("path", {
  fill: "var(--color83, #9e9e9e)",
  d: "M14.54 22.21c0 .268-.043.512-.127.733s-.205.408-.36.565c-.155.157-.341.278-.557.364s-.457.129-.72.129h-1.34v-3.582h1.34c.263 0 .503.043.72.129a1.587 1.587 0 01.917.931c.085.22.127.464.127.733zm-.497 0c0-.22-.03-.417-.09-.59s-.145-.32-.255-.44c-.11-.12-.243-.212-.4-.275s-.331-.095-.523-.095h-.852v2.797h.852c.192 0 .366-.032.523-.095s.29-.155.4-.274c.11-.119.195-.265.255-.439s.09-.37.09-.59zm3.364-1.792v.395h-1.72v1.19h1.393v.38h-1.393v1.223h1.72v.395H15.2v-3.582h2.207zm2.906 0v.395h-1.72v1.253h1.47v.395h-1.47v1.54h-.488v-3.582h2.207z"
}))));
Icon3.displayName = "Icon3";
Icon3["iconName"] = "3";
var __default4 = Icon3;

// src/icon/4.tsx
import React5, { forwardRef as forwardRef5, memo as memo5 } from "react";
var Icon4 = memo5(forwardRef5((props, svgRef) => /* @__PURE__ */ React5.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React5.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M17.594 7v5.753H19v.641c0 .067-.021.124-.062.17s-.105.069-.191.069h-1.154v2.368h-1.018v-2.368h-4.116c-.086 0-.161-.024-.224-.072s-.103-.108-.12-.179l-.117-.572 4.518-5.809h1.076zm-.966 1.3l-3.377 4.453h3.325V9.041c0-.109.003-.226.01-.352l.015-.192.027-.198z"
}), /* @__PURE__ */ React5.createElement("path", {
  fill: "var(--color83, #9e9e9e)",
  d: "M13.607 23.648c.097 0 .185-.005.266-.014a1.728 1.728 0 00.432-.107c.064-.026.127-.055.19-.089v-.79h-.555c-.032 0-.057-.009-.076-.027s-.029-.041-.029-.067v-.275h1.1v1.375a1.883 1.883 0 01-.594.291c-.111.032-.23.057-.356.073s-.264.024-.412.024c-.26 0-.498-.045-.715-.134a1.642 1.642 0 01-.926-.954 2.044 2.044 0 01-.131-.742c0-.273.043-.523.129-.747s.208-.418.367-.579c.159-.161.352-.285.578-.374s.479-.133.759-.133c.142 0 .273.01.395.031s.235.051.339.09a1.651 1.651 0 01.537.331l-.137.22c-.028.045-.065.067-.11.067a.181.181 0 01-.088-.027l-.14-.085c-.052-.033-.115-.065-.189-.096a1.545 1.545 0 00-.621-.111c-.202 0-.384.033-.547.099a1.17 1.17 0 00-.683.727 1.74 1.74 0 00-.092.586c0 .227.032.429.096.606s.155.328.271.451c.117.123.255.218.415.282s.337.098.53.098zm4.978.352h-.488v-1.63h-1.93V24h-.488v-3.582h.488v1.598h1.93v-1.598h.488V24zm1.45 0h-.485v-3.582h.485V24z"
}))));
Icon4.displayName = "Icon4";
Icon4["iconName"] = "4";
var __default5 = Icon4;

// src/icon/5.tsx
import React6, { forwardRef as forwardRef6, memo as memo6 } from "react";
var Icon5 = memo6(forwardRef6((props, svgRef) => /* @__PURE__ */ React6.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React6.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M18.711 7.484c0 .157-.053.287-.158.388s-.282.152-.532.152h-2.954l-.433 2.335c.49-.099.943-.149 1.359-.149.49 0 .922.068 1.297.205s.688.325.942.565c.254.24.445.524.574.851s.194.683.194 1.068a2.936 2.936 0 01-.982 2.258c-.304.271-.662.479-1.073.624s-.856.217-1.333.217c-.276 0-.54-.026-.794-.078a4.195 4.195 0 01-1.32-.506 3.542 3.542 0 01-.499-.354l.354-.472a.371.371 0 01.315-.162c.083 0 .181.032.292.096s.246.136.404.214c.158.079.342.15.555.214s.465.096.758.096c.328 0 .624-.05.886-.149s.487-.241.673-.425c.186-.184.329-.405.43-.662s.151-.544.151-.863c0-.277-.043-.528-.128-.752s-.214-.414-.387-.571c-.173-.157-.388-.28-.647-.366s-.56-.13-.906-.13a5.103 5.103 0 00-1.523.236l-.735-.205.761-4.162h4.457v.484z"
}), /* @__PURE__ */ React6.createElement("path", {
  fill: "var(--color83, #9e9e9e)",
  d: "M13.633 22.762c0 .2-.025.379-.074.538s-.122.292-.217.401c-.096.109-.214.193-.354.251s-.301.087-.482.087c-.162 0-.33-.023-.505-.07l.027-.285c.003-.028.014-.051.031-.069s.044-.026.079-.026c.02 0 .044.003.073.01l.047.012c.05.015.117.023.2.023.11 0 .208-.017.294-.05s.158-.085.217-.155c.059-.07.104-.16.135-.269s.046-.239.046-.389v-2.355h.482v2.345zm1.404-.774h.182c.063 0 .114-.008.151-.024s.073-.043.106-.081l1.193-1.35c.037-.042.072-.071.106-.089s.078-.026.131-.026h.413l-1.365 1.543c-.035.038-.068.071-.099.098s-.064.048-.099.065c.047.015.088.038.123.067s.072.067.11.113l1.425 1.698h-.42c-.032 0-.058-.003-.08-.008s-.04-.012-.056-.02l-.023-.014-.061-.061-1.238-1.422-.051-.051a.238.238 0 00-.127-.057l-.046-.005-.275-.002v1.64h-.482V20.42h.482v1.57zm3.358 1.605h1.55V24H17.91v-3.582h.485v3.175z"
}))));
Icon5.displayName = "Icon5";
Icon5["iconName"] = "5";
var __default6 = Icon5;

// src/icon/6.tsx
import React7, { forwardRef as forwardRef7, memo as memo7 } from "react";
var Icon6 = memo7(forwardRef7((props, svgRef) => /* @__PURE__ */ React7.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React7.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M17.919 7l-3.087 3.907c.211-.145.445-.258.702-.338s.534-.121.832-.121c.356 0 .694.059 1.012.177s.598.29.838.516c.24.226.431.503.571.832s.211.705.211 1.127c0 .41-.075.791-.224 1.143s-.357.658-.624.919-.589.466-.966.615-.791.224-1.242.224c-.447 0-.852-.071-1.214-.214s-.672-.346-.929-.609-.454-.582-.593-.957-.208-.794-.208-1.258c0-.389.087-.803.261-1.242s.449-.911.826-1.416l2.255-3.037c.058-.075.139-.138.242-.189s.222-.078.354-.078h.981zm-1.913 4.292c-.298 0-.567.051-.807.152s-.444.238-.612.41c-.168.172-.296.371-.385.596s-.134.461-.134.705c0 .286.041.547.124.783s.204.439.363.609c.159.17.354.301.584.394s.492.14.786.14c.298 0 .567-.048.807-.143s.446-.228.618-.398.304-.371.398-.603.14-.484.14-.758c0-.29-.046-.552-.137-.786s-.219-.433-.385-.596c-.166-.164-.364-.289-.596-.376s-.487-.13-.764-.13z"
}), /* @__PURE__ */ React7.createElement("path", {
  fill: "var(--color83, #9e9e9e)",
  d: "M19.94 20.378c.263 0 .504.045.721.135s.404.216.559.379c.155.163.275.356.36.58s.128.47.128.739c0 .268-.043.515-.128.739s-.205.417-.36.579c-.155.162-.341.287-.559.376s-.458.134-.721.134c-.263 0-.503-.045-.72-.134s-.402-.215-.558-.376c-.155-.162-.275-.355-.36-.579s-.128-.47-.128-.739c0-.268.043-.515.128-.739s.205-.418.36-.58c.155-.163.341-.289.558-.379s.457-.135.72-.135zm-9.583.04c.043 0 .077.004.1.012s.046.032.068.07l1.27 2.267.08.198.026-.068.027-.065c.018-.043.039-.085.063-.129l1.213-2.203c.022-.038.044-.062.068-.07s.057-.012.1-.012h.357V24h-.425l.001-2.687.009-.181-1.227 2.24c-.042.075-.1.113-.175.113h-.07c-.075 0-.133-.038-.175-.113l-1.255-2.247.011.128.004.115v2.633h-.425v-3.582h.357zm4.493 0c.043 0 .075.005.096.016s.045.033.071.066l2.075 2.7-.01-.126-.003-.119v-2.538h.425v3.582h-.245c-.038 0-.07-.007-.096-.02s-.051-.036-.076-.067l-2.072-2.697.01.233v2.553H14.6v-3.582h.25zm5.09.379c-.192 0-.366.032-.523.098s-.29.158-.401.279c-.111.121-.196.269-.256.444s-.09.372-.09.593c0 .22.03.417.09.591s.145.322.256.442c.111.121.245.213.401.277s.331.096.523.096c.193 0 .368-.032.525-.096s.29-.157.4-.277c.11-.121.195-.268.255-.442s.09-.371.09-.591c0-.22-.03-.418-.09-.593s-.145-.323-.255-.444c-.11-.121-.243-.214-.4-.279s-.332-.098-.525-.098z"
}))));
Icon6.displayName = "Icon6";
Icon6["iconName"] = "6";
var __default7 = Icon6;

// src/icon/7.tsx
import React8, { forwardRef as forwardRef8, memo as memo8 } from "react";
var Icon7 = memo8(forwardRef8((props, svgRef) => /* @__PURE__ */ React8.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React8.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M19 7v.502c0 .142-.015.26-.046.352s-.063.17-.095.232l-3.653 7.518c-.053.109-.127.202-.222.279s-.222.116-.382.116h-.782l3.708-7.424c.053-.105.108-.201.163-.289s.118-.172.188-.251h-4.608c-.07 0-.132-.028-.188-.085S13 7.83 13 7.758v-.76h6z"
}), /* @__PURE__ */ React8.createElement("path", {
  fill: "var(--color83, #9e9e9e)",
  d: "M10.482 22.66V24H10v-3.582h1.058c.227 0 .424.026.591.079s.306.127.416.224c.11.097.192.213.246.35s.081.289.081.457c0 .167-.029.319-.088.457s-.144.258-.256.358c-.113.1-.252.178-.419.234s-.357.084-.572.084h-.575zm0-.385h.575c.138 0 .26-.018.366-.055s.195-.088.266-.154c.072-.066.126-.145.162-.236s.055-.192.055-.302c0-.228-.07-.407-.211-.535s-.354-.192-.639-.192h-.575v1.475zm5.85-.065c0 .168-.017.328-.051.48s-.084.293-.149.424a1.615 1.615 0 01-.553.633l.92.992h-.4c-.06 0-.113-.008-.16-.025s-.089-.046-.127-.087l-.63-.685a1.96 1.96 0 01-.617.095c-.263 0-.503-.045-.72-.134a1.613 1.613 0 01-.917-.955 2.066 2.066 0 01-.127-.739c0-.268.043-.515.127-.739s.205-.418.36-.58c.155-.163.341-.289.557-.379s.457-.135.72-.135c.263 0 .504.045.721.135s.404.216.559.379c.155.163.275.356.36.58s.128.47.128.739zm-.497 0c0-.22-.03-.418-.09-.593s-.145-.323-.255-.444c-.11-.121-.243-.214-.4-.279s-.332-.098-.525-.098c-.192 0-.366.032-.522.098a1.136 1.136 0 00-.657.723 1.82 1.82 0 00-.09.593c0 .22.03.417.09.591s.145.322.256.442c.111.121.245.213.401.277s.331.096.523.096c.193 0 .368-.032.525-.096s.29-.157.4-.277c.11-.121.195-.268.255-.442s.09-.371.09-.591zm1.692.295V24h-.483v-3.582h1.012c.227 0 .422.023.587.069s.301.112.409.199c.108.087.187.191.239.314s.078.26.078.411c0 .127-.02.245-.06.355s-.098.209-.174.296c-.076.087-.168.162-.277.224s-.233.108-.371.14c.06.035.113.086.16.152L19.692 24h-.43c-.088 0-.153-.034-.195-.102l-.93-1.28c-.028-.04-.059-.069-.093-.086s-.083-.026-.15-.026h-.367zm0-.353h.508c.142 0 .266-.017.374-.051s.198-.082.27-.145c.073-.063.127-.137.164-.224s.055-.183.055-.288c0-.213-.07-.374-.211-.483s-.35-.163-.629-.163h-.53v1.352zm4.523-1.175c-.015.025-.031.044-.047.056s-.038.019-.065.019a.129.129 0 01-.063-.019l-.036-.024a1.223 1.223 0 00-.349-.188.903.903 0 00-.294-.043c-.108 0-.204.015-.288.044s-.153.069-.209.119c-.056.05-.098.109-.126.176s-.043.14-.043.219c0 .1.025.183.074.249s.114.122.195.169c.081.047.172.087.275.121l.315.106c.108.037.212.078.315.124s.194.104.275.174c.081.07.146.156.195.258s.074.227.074.375c0 .157-.027.304-.08.441s-.131.257-.234.359c-.102.102-.228.182-.378.24s-.319.087-.509.087c-.232 0-.443-.042-.634-.126s-.354-.198-.489-.341l.14-.23c.013-.018.03-.034.049-.046s.04-.019.064-.019a.15.15 0 01.077.025l.148.111.064.044c.067.045.149.086.245.124s.213.056.351.056c.115 0 .218-.016.308-.047s.166-.076.229-.134c.063-.058.11-.126.144-.206s.05-.169.05-.267c0-.108-.025-.197-.074-.266s-.114-.127-.194-.174a1.354 1.354 0 00-.274-.119l-.315-.1c-.108-.034-.212-.074-.315-.119s-.194-.103-.274-.175c-.08-.072-.145-.161-.194-.269s-.074-.24-.074-.399a.947.947 0 01.288-.682c.093-.092.209-.165.346-.22s.295-.082.474-.082c.2 0 .383.032.547.095s.309.155.433.275l-.117.23z"
}))));
Icon7.displayName = "Icon7";
Icon7["iconName"] = "7";
var __default8 = Icon7;

// src/icon/8.tsx
import React9, { forwardRef as forwardRef9, memo as memo9 } from "react";
var Icon8 = memo9(forwardRef9((props, svgRef) => /* @__PURE__ */ React9.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React9.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M16 7c.402 0 .768.059 1.099.178s.615.283.851.491a2.162 2.162 0 01.74 1.646c0 .475-.12.884-.36 1.226s-.592.599-1.056.771c.555.156.981.417 1.279.783s.447.832.447 1.398a2.293 2.293 0 01-.836 1.83c-.263.217-.579.384-.947.501s-.774.175-1.217.175c-.443 0-.849-.058-1.217-.175s-.685-.284-.95-.501c-.265-.217-.47-.48-.615-.789s-.217-.656-.217-1.041c0-.565.149-1.031.447-1.398s.725-.628 1.28-.783c-.468-.172-.821-.429-1.059-.771s-.357-.751-.357-1.226a2.159 2.159 0 01.74-1.646c.236-.209.519-.373.848-.491S15.597 7 16.003 7zm0 4.78c-.244 0-.478.032-.702.095s-.421.163-.593.298c-.172.135-.309.31-.41.525s-.152.474-.152.777c0 .246.042.47.127.673s.207.377.366.522c.159.145.354.258.584.338s.49.12.78.12c.29 0 .55-.04.779-.12s.424-.193.584-.338c.159-.145.282-.319.366-.522s.127-.427.127-.673c0-.303-.051-.562-.152-.777s-.238-.39-.41-.525-.37-.234-.593-.298-.458-.095-.702-.095zm0-3.932c-.265 0-.498.039-.699.117s-.369.184-.503.319c-.135.135-.236.293-.304.473s-.102.373-.102.577c0 .201.029.395.087.584s.151.355.28.501c.128.145.295.262.5.35s.452.132.742.132.537-.044.742-.132.372-.205.5-.35.222-.312.279-.501.087-.383.087-.584c0-.205-.034-.397-.102-.577a1.335 1.335 0 00-.807-.792 1.946 1.946 0 00-.699-.117z"
}), /* @__PURE__ */ React9.createElement("path", {
  fill: "var(--color83, #9e9e9e)",
  d: "M13.875 20.418v.407h-1.158V24h-.485v-3.175H11.07v-.407h2.805zm1.902 3.197c.148 0 .281-.025.398-.075s.215-.12.296-.21c.081-.09.142-.198.185-.323s.064-.262.064-.413v-2.177h.483v2.178c0 .207-.033.398-.099.575s-.16.33-.282.459c-.122.129-.272.23-.449.304s-.375.11-.595.11c-.22 0-.418-.037-.595-.11a1.297 1.297 0 01-.734-.763 1.63 1.63 0 01-.099-.575v-2.178h.482v2.175c0 .15.021.288.064.413s.104.233.185.323.18.16.297.211.25.076.399.076zm1.843-3.197h.387c.043 0 .078.011.105.032s.047.049.06.082l1.012 2.527.033.089.03.096c.019.067.038.136.056.207.015-.072.031-.141.049-.207s.038-.128.061-.185l1.008-2.527c.012-.028.032-.055.06-.079s.063-.036.105-.036h.39l-1.46 3.582h-.438l-1.46-3.582z"
}))));
Icon8.displayName = "Icon8";
Icon8["iconName"] = "8";
var __default9 = Icon8;

// src/icon/9.tsx
import React10, { forwardRef as forwardRef10, memo as memo10 } from "react";
var Icon9 = memo10(forwardRef10((props, svgRef) => /* @__PURE__ */ React10.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React10.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M16.058 7c.443 0 .845.07 1.206.211s.671.337.929.59c.258.253.457.555.597.907s.21.741.21 1.168a3.494 3.494 0 01-.29 1.404c-.095.219-.208.438-.339.655s-.281.442-.448.674l-2.252 3.13c-.056.079-.135.142-.239.189s-.222.071-.355.071h-1.058l2.813-3.547.265-.342c.082-.108.159-.215.232-.323-.237.182-.503.321-.8.416s-.611.143-.942.143c-.348 0-.678-.056-.99-.168s-.586-.276-.823-.494c-.237-.217-.425-.484-.565-.801s-.21-.68-.21-1.09c0-.389.075-.754.226-1.093s.361-.636.632-.888c.271-.253.594-.451.968-.596s.785-.217 1.232-.217zm-.013.925c-.284 0-.543.045-.777.134s-.434.212-.6.37c-.166.157-.294.346-.384.565s-.135.46-.135.72c0 .282.042.533.126.755s.204.409.361.562c.157.153.348.269.574.348s.479.118.758.118c.31 0 .584-.049.823-.146s.44-.227.603-.388c.163-.162.288-.348.374-.559s.129-.431.129-.658c0-.277-.046-.529-.139-.755s-.22-.417-.384-.575c-.163-.157-.358-.278-.584-.363s-.474-.127-.745-.127z"
}), /* @__PURE__ */ React10.createElement("path", {
  fill: "var(--color83, #9e9e9e)",
  d: "M8.8 20.418h.402c.043 0 .079.011.107.032s.047.049.057.082l.74 2.49.019.07.048.238.054-.239.864-2.558c.01-.028.03-.055.059-.079s.065-.036.106-.036h.14c.043 0 .079.011.106.032s.047.049.059.082l.838 2.49c.03.087.057.186.08.297l.042-.23.761-2.558a.167.167 0 01.162-.115h.377l-1.117 3.582h-.435l-.908-2.733a1.618 1.618 0 01-.05-.18l-.035.14-.925 2.772h-.435l-1.117-3.582zm6.327 1.742l-1.182-1.742h.482c.035 0 .061.006.078.017s.032.028.045.05l.935 1.435a.67.67 0 01.053-.115l.883-1.31c.015-.023.031-.042.049-.056s.039-.021.064-.021h.462l-1.188 1.72 1.227 1.863h-.48c-.037 0-.065-.01-.086-.029s-.038-.04-.051-.064l-.96-1.503a.6.6 0 01-.045.1l-.935 1.402c-.015.023-.032.045-.051.064s-.046.029-.081.029h-.45l1.232-1.84zm3.763.415V24h-.483v-1.425l-1.313-2.157h.425c.043 0 .078.011.102.032s.047.048.065.08l.82 1.393c.033.058.061.113.084.165l.061.152.06-.155c.022-.052.049-.106.082-.163l.817-1.393c.015-.027.035-.052.061-.076s.06-.036.101-.036h.43l-1.315 2.157zm4.26-2.157v.18c0 .057-.017.11-.052.16l-2.027 2.848h2.045v.395h-2.68v-.19c0-.05.016-.098.047-.142l2.03-2.855H20.53v-.395h2.62z"
}))));
Icon9.displayName = "Icon9";
Icon9["iconName"] = "9";
var __default10 = Icon9;

// src/icon/Announcement.tsx
import React11, { forwardRef as forwardRef11, memo as memo11 } from "react";
var Announcement = memo11(forwardRef11((props, svgRef) => /* @__PURE__ */ React11.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React11.createElement("path", {
  fill: "var(--color2, #066fac)",
  d: "M32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0s16 7.163 16 16z"
}), /* @__PURE__ */ React11.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M17.024 11.159c.559 0 1.012.435 1.012.971v7.765c0 .536-.453.971-1.012.971L7.92 18.278c-.598-.145-1.012-.471-1.012-.971v-2.588c0-.468.412-.793 1.012-.971l9.104-2.588zm-7.418 7.117h1.349v3.208a.674.674 0 01-1.348 0v-3.208zm8.767-.144v-4.206c0-.163 1.535.647 1.535 2.103s-1.535 2.259-1.535 2.103zM23.066 14.108a3.222 3.222 0 01-.017 3.176.357.357 0 11-.623-.352 2.516 2.516 0 00.014-2.47.36.36 0 01.626-.355zM24.329 12.788c.596.837.919 1.842.914 2.896s-.338 2.062-.943 2.906a.354.354 0 11-.578-.412c.518-.723.803-1.585.808-2.49s-.272-1.764-.783-2.482c-.114-.16-.076-.383.085-.498s.384-.079.497.08z"
}))));
Announcement.displayName = "Announcement";
Announcement["iconName"] = "Announcement";
var Announcement_default = Announcement;

// src/icon/CallQueue.tsx
import React12, { forwardRef as forwardRef12, memo as memo12 } from "react";
var CallQueue = memo12(forwardRef12((props, svgRef) => /* @__PURE__ */ React12.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React12.createElement("path", {
  fill: "var(--color2, #066fac)",
  d: "M32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0s16 7.163 16 16z"
}), /* @__PURE__ */ React12.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M18.5 5c3.333 0 6.036 2.737 6.036 6.113l-.934.001c.003-.075.005-.151.005-.227 0-2.751-2.287-4.981-5.107-4.981s-5.107 2.23-5.107 4.981c0 .076.002.152.005.227l-.934-.001C12.464 7.737 15.166 5 18.5 5z"
}), /* @__PURE__ */ React12.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M18.5 17c3.333 0 6.036-2.737 6.036-6.113h-.934c.003.075.005.151.005.226 0 2.751-2.287 4.981-5.107 4.981-.337 0-.505.145-.505.436s.168.447.505.469zm-5.107-5.887c0-.076.002-.151.005-.226h-.934z"
}), /* @__PURE__ */ React12.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M13.393 10.923c0 .839.198 1.634.55 2.341h-1.496a.449.449 0 01-.448-.448V9.184c0-.247.201-.448.448-.448l1.423-.002a5.227 5.227 0 00-.477 2.189zm11.159-2.187c.247 0 .448.201.448.448v3.632a.449.449 0 01-.448.448h-.709c.352-.707.55-1.502.55-2.341 0-.78-.171-1.521-.477-2.189l.636.002zM22.505 10.929c0 2.155-1.791 3.901-4 3.901s-4-1.747-4-3.901c0-2.155 1.791-3.901 4-3.901s4 1.747 4 3.901z"
}), /* @__PURE__ */ React12.createElement("path", {
  fill: "var(--color2, #066fac)",
  d: "M22 21.5c0 5.247-4.253 9.5-9.5 9.5S3 26.747 3 21.5 7.253 12 12.5 12s9.5 4.253 9.5 9.5z"
}), /* @__PURE__ */ React12.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M12.5 14c3.333 0 6.036 2.737 6.036 6.113l-.934.001c.003-.075.005-.151.005-.227 0-2.751-2.287-4.981-5.107-4.981s-5.107 2.23-5.107 4.981c0 .076.002.152.005.227l-.934-.001C6.464 16.737 9.166 14 12.5 14z"
}), /* @__PURE__ */ React12.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M12.5 26c3.333 0 6.036-2.737 6.036-6.113h-.934c.003.075.005.151.005.226 0 2.751-2.287 4.981-5.107 4.981-.337 0-.505.145-.505.436s.168.447.505.469zm-5.107-5.887c0-.076.002-.151.005-.226h-.934z"
}), /* @__PURE__ */ React12.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M7.393 19.923c0 .839.198 1.634.55 2.341H6.447a.449.449 0 01-.448-.448v-3.632c0-.247.201-.448.448-.448l1.423-.002a5.227 5.227 0 00-.477 2.189zm11.159-2.187c.247 0 .448.201.448.448v3.632a.449.449 0 01-.448.448h-.709c.352-.707.55-1.502.55-2.341 0-.78-.171-1.521-.477-2.189l.636.002zM16.505 19.929c0 2.155-1.791 3.901-4 3.901s-4-1.747-4-3.901c0-2.155 1.791-3.901 4-3.901s4 1.747 4 3.901z"
}))));
CallQueue.displayName = "CallQueue";
CallQueue["iconName"] = "Call-queue";
var CallQueue_default = CallQueue;

// src/icon/CompanySetupBorder.tsx
import React13, { forwardRef as forwardRef13, memo as memo13 } from "react";
var CompanySetupBorder = memo13(forwardRef13((props, svgRef) => /* @__PURE__ */ React13.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React13.createElement("path", {
  d: "M18.999 2.012a2 2 0 012 2L20.998 28h7.005l.001-15.988a1 1 0 00-.883-.993l-.117-.007h-5.007v-2h6.007a2 2 0 012 2L30.003 28l.114.007A1 1 0 0130.003 30l.001.012h-8.007V30h-.998l.001.012L2.001 30a1 1 0 010-2h.006l.001-23.988a2 2 0 011.851-1.994l.149-.006zm-1 2.001H4.998a1 1 0 00-1 1V28h15.001V5.013a1 1 0 00-.883-.993l-.117-.007zm8.003 16.988a1 1 0 01.117 1.993l-.116.007h-2.005a1 1 0 01-.117-1.993l.116-.007h2.005zM14.985 21a1 1 0 01.117 1.993l-.117.007H8.012a1 1 0 01-.117-1.993L8.012 21h6.973zm11.017-5.999a1 1 0 01.117 1.993l-.116.007h-2.005a1 1 0 01-.117-1.993l.116-.007h2.005zM14.985 15a1 1 0 01.117 1.993l-.117.007H8.012a1 1 0 01-.117-1.993L8.012 15h6.973zm0-5.988a1 1 0 01.117 1.993l-.117.007H8.012a1 1 0 01-.117-1.993l.117-.007h6.973z"
}))));
CompanySetupBorder.displayName = "CompanySetupBorder";
CompanySetupBorder["iconName"] = "Company-setup_border";
var CompanySetupBorder_default = CompanySetupBorder;

// src/icon/CompanySetup.tsx
import React14, { forwardRef as forwardRef14, memo as memo14 } from "react";
var CompanySetup = memo14(forwardRef14((props, svgRef) => /* @__PURE__ */ React14.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React14.createElement("path", {
  d: "M18.999 2.012a2 2 0 011.994 1.851l.006.149V28h.997V9.012h6.007a2 2 0 011.994 1.851l.006.149L30.002 28l.114.007A1 1 0 0130.002 30l.001.012h-8.007V30h-.997v.012L2 30a1 1 0 010-2h.006l.001-23.988a2 2 0 011.851-1.994l.149-.006H19zm8.003 18.989h-2.005l-.116.007a.999.999 0 000 1.986l.116.007h2.005l.116-.007a.999.999 0 00-.117-1.993zM14.985 21l-7.089.007a1 1 0 000 1.986l.117.007 7.089-.007A1 1 0 0014.985 21zm12.017-5.999h-2.005l-.116.007a.999.999 0 000 1.986l.116.007h2.005l.116-.007a.999.999 0 00-.117-1.993zM14.985 15l-7.089.007a1 1 0 000 1.986l.117.007 7.089-.007A1 1 0 0014.985 15zm0-5.988l-7.089.007a1 1 0 000 1.986l.117.007 7.089-.007a1 1 0 00-.117-1.993z"
}))));
CompanySetup.displayName = "CompanySetup";
CompanySetup["iconName"] = "Company-setup";
var CompanySetup_default = CompanySetup;

// src/icon/Department.tsx
import React15, { forwardRef as forwardRef15, memo as memo15 } from "react";
var Department = memo15(forwardRef15((props, svgRef) => /* @__PURE__ */ React15.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React15.createElement("path", {
  d: "M11 18a2 2 0 012 2v8a2 2 0 01-2 2H3a2 2 0 01-2-2v-8a2 2 0 012-2h8zm18 0a2 2 0 012 2v8a2 2 0 01-2 2h-8a2 2 0 01-2-2v-8a2 2 0 012-2h8zm-18 2H3v8h8v-8zm18 0h-8v8h8v-8zM20 2a2 2 0 012 2v8a2 2 0 01-2 2h-8a2 2 0 01-2-2V4a2 2 0 012-2h8zm0 2h-8v8h8V4z"
}))));
Department.displayName = "Department";
Department["iconName"] = "department";
var Department_default = Department;

// src/icon/Description.tsx
import React16, { forwardRef as forwardRef16, memo as memo16 } from "react";
var Description = memo16(forwardRef16((props, svgRef) => /* @__PURE__ */ React16.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React16.createElement("path", {
  d: "M19.25 24c.414 0 .75.448.75 1s-.336 1-.75 1H2.75c-.414 0-.75-.448-.75-1s.336-1 .75-1h16.5zm9.583-9c.644 0 1.167.448 1.167 1s-.522 1-1.167 1H3.166c-.644 0-1.167-.448-1.167-1s.522-1 1.167-1h25.667zm0-9C29.477 6 30 6.448 30 7s-.522 1-1.167 1H3.166c-.644 0-1.167-.448-1.167-1s.522-1 1.167-1h25.667z"
}))));
Description.displayName = "Description";
Description["iconName"] = "Description";
var Description_default = Description;

// src/icon/Hud.tsx
import React17, { forwardRef as forwardRef17, memo as memo17 } from "react";
var Hud = memo17(forwardRef17((props, svgRef) => /* @__PURE__ */ React17.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React17.createElement("path", {
  d: "M28 3a2 2 0 012 2v18a2 2 0 01-2 2H17v2h4a1 1 0 010 2H11a1 1 0 010-2h4v-2H4a2 2 0 01-2-2V5a2 2 0 012-2h24zm-1 2H5a1 1 0 00-1 1v16a1 1 0 001 1h22a1 1 0 001-1V6a1 1 0 00-1-1zm-3 3a1 1 0 011 1v10a1 1 0 01-1 1H8a1 1 0 01-1-1V9a1 1 0 011-1h16z"
}))));
Hud.displayName = "Hud";
Hud["iconName"] = "HUD";
var Hud_default = Hud;

// src/icon/Limited.tsx
import React18, { forwardRef as forwardRef18, memo as memo18 } from "react";
var Limited = memo18(forwardRef18((props, svgRef) => /* @__PURE__ */ React18.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React18.createElement("path", {
  fill: "var(--color2, #066fac)",
  d: "M32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0s16 7.163 16 16z"
}), /* @__PURE__ */ React18.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M10.671 11.107c.32.15.567.385.743.707.172.343.37.699.592 1.067s.488.776.799 1.225c.195.295.273.616.229.95-.043.329-.19.623-.46.895a2.753 2.753 0 01-.484.332.544.544 0 01-.103.065l-.08.039-.084.046-.021.01a.62.62 0 00-.068.032c.008.037.02.082.039.137l.046.122a3 3 0 00.284.544c.134.211.306.442.513.69.225.266.434.484.626.656.186.166.355.29.503.373.057.032.107.057.147.075l.103-.113.038-.037.04-.05.12-.124.105-.103.047-.043c.081-.074.171-.144.291-.225.31-.183.656-.26 1.022-.228.378.033.699.184.926.426.282.266.575.533.879.8l.216.188.446.379c.163.137.34.284.532.442.276.227.46.505.545.828.077.291.064.573-.035.821l-.041.091c-.091.226-.266.492-.526.807a4.639 4.639 0 01-.61.633l-.076.06c-.207.171-.446.3-.714.385-.262.083-.55.124-.861.124a4.712 4.712 0 01-1.581-.294 8.118 8.118 0 01-1.633-.818 11.46 11.46 0 01-1.434-1.096l-.203-.184a17.168 17.168 0 01-1.624-1.68 15.494 15.494 0 01-1.726-2.493c-.45-.816-.767-1.58-.951-2.295-.187-.727-.232-1.384-.132-1.966.096-.616.362-1.115.802-1.484.204-.17.49-.343.861-.523.379-.184.692-.297.951-.337a1.709 1.709 0 011.005.145zM20.486 8.126c.163.091.298.225.389.389l3.3 5.941a1 1 0 01-.875 1.486h-6.601a1 1 0 01-.874-1.486l3.301-5.941a1 1 0 011.36-.389zm-.444 5.252a1 1 0 100 2 1 1 0 000-2zm.008-4.437c-.345 0-.625.093-.625.208v3.333c0 .115.28.208.625.208s.625-.093.625-.208V9.149c0-.115-.28-.208-.625-.208z"
}))));
Limited.displayName = "Limited";
Limited["iconName"] = "Limited";
var Limited_default = Limited;

// src/icon/Logout.tsx
import React19, { forwardRef as forwardRef19, memo as memo19 } from "react";
var Logout = memo19(forwardRef19((props, svgRef) => /* @__PURE__ */ React19.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React19.createElement("path", {
  d: "M8 29h16a2.002 2.002 0 002-2v-2a1 1 0 00-2 0v1a1 1 0 01-1 1H9a1 1 0 01-1-1V6a1 1 0 011-1h14a1 1 0 011 1v1a1 1 0 002 0V5a2.002 2.002 0 00-2-2H8a2.002 2.002 0 00-2 2v22a2.002 2.002 0 002 2zm15.615-9.121L26.494 17H13.322a1 1 0 010-2h13.172l-2.879-2.879a1 1 0 011.414-1.414l4.586 4.586a.999.999 0 010 1.414l-4.586 4.586a1 1 0 01-1.414-1.414z"
}))));
Logout.displayName = "Logout";
Logout["iconName"] = "Logout";
var Logout_default = Logout;

// src/icon/Message.tsx
import React20, { forwardRef as forwardRef20, memo as memo20 } from "react";
var Message = memo20(forwardRef20((props, svgRef) => /* @__PURE__ */ React20.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React20.createElement("path", {
  fill: "var(--color2, #066fac)",
  d: "M32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0s16 7.163 16 16z"
}), /* @__PURE__ */ React20.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M21.5 11c.69 0 1.25.56 1.25 1.25v7.5c0 .69-.56 1.25-1.25 1.25h-2.866a.625.625 0 00-.442.183l-1.963 1.963a.5.5 0 01-.707 0l-1.963-1.963a.625.625 0 00-.442-.183h-2.866c-.69 0-1.25-.56-1.25-1.25v-7.5c0-.69.56-1.25 1.25-1.25h11.25z"
}))));
Message.displayName = "Message";
Message["iconName"] = "Message";
var Message_default = Message;

// src/icon/NewEmail.tsx
import React21, { forwardRef as forwardRef21, memo as memo21 } from "react";
var NewEmail = memo21(forwardRef21((props, svgRef) => /* @__PURE__ */ React21.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React21.createElement("path", {
  d: "M24 17a1 1 0 011 1v4h4a1 1 0 010 2h-4.001L25 28a1 1 0 01-2 0l-.001-4H19a1 1 0 010-2h4v-4a1 1 0 011-1zm4-12a2 2 0 012 2l.001 10.71a8.05 8.05 0 00-2-1.639L28 9l-10.197 8.764a3 3 0 01-3.599.005l-.157-.126-.822-.705-8.6 7.989a.992.992 0 00.374.072h11.252c.183.71.46 1.382.819 2.001l-13.071-.001a2 2 0 01-2-2v-18a2 2 0 012-2h24zM4 9.032v13.744l7.698-7.146L4 9.032zM27 7H5a.98.98 0 00-.255.033l10.701 9.166a1 1 0 001.097.007l.107-.08 10.605-9.092a.982.982 0 00-.256-.033z"
}))));
NewEmail.displayName = "NewEmail";
NewEmail["iconName"] = "New-email";
var NewEmail_default = NewEmail;

// src/icon/Paging.tsx
import React22, { forwardRef as forwardRef22, memo as memo22 } from "react";
var Paging = memo22(forwardRef22((props, svgRef) => /* @__PURE__ */ React22.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React22.createElement("path", {
  fill: "var(--color2, #066fac)",
  d: "M32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0s16 7.163 16 16z"
}), /* @__PURE__ */ React22.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M22 11a2 2 0 012 2v7a2 2 0 01-2 2H10a2 2 0 01-2-2v-7a2 2 0 012-2h12zm-10 8a1 1 0 100 2 1 1 0 000-2zm4 0a1 1 0 100 2 1 1 0 000-2zm4 0a1 1 0 100 2 1 1 0 000-2zm-3.5-4h-5a.5.5 0 000 1h5a.5.5 0 000-1zm2-2h-7a.5.5 0 000 1h7a.5.5 0 000-1z"
}))));
Paging.displayName = "Paging";
Paging["iconName"] = "Paging";
var Paging_default = Paging;

// src/icon/SharedLine.tsx
import React23, { forwardRef as forwardRef23, memo as memo23 } from "react";
var SharedLine = memo23(forwardRef23((props, svgRef) => /* @__PURE__ */ React23.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React23.createElement("path", {
  fill: "var(--color2, #066fac)",
  d: "M32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0s16 7.163 16 16z"
}), /* @__PURE__ */ React23.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M20.567 9.992c.039.107.101.233.188.375.089.145.202.305.339.476.149.183.287.334.414.452.123.114.235.2.333.257.038.022.07.039.097.052l.068-.078.025-.025.003-.005.024-.03c.07-.077.13-.139.179-.186.053-.051.113-.099.192-.155a1.08 1.08 0 01.676-.157c.25.023.462.126.612.294.187.184.38.367.581.551s.464.415.789.695c.183.156.304.348.361.57a.92.92 0 01-.05.629c-.06.156-.176.339-.348.556a2.835 2.835 0 01-.454.477 1.372 1.372 0 01-.472.265 1.813 1.813 0 01-.57.086 2.99 2.99 0 01-1.045-.203 5.266 5.266 0 01-1.08-.564 7.785 7.785 0 01-1.082-.883c-.364-.34-.722-.725-1.074-1.157a10.644 10.644 0 01-1.141-1.718 7.061 7.061 0 01-.629-1.581c-.124-.501-.153-.954-.087-1.355.063-.424.24-.768.531-1.023.135-.117.324-.236.57-.361.25-.127.457-.205.629-.232a1.091 1.091 0 011.155.587c.114.236.244.482.392.735s.323.534.528.844a.97.97 0 01.151.655 1.066 1.066 0 01-.304.617 2.076 2.076 0 01-.32.229.4.4 0 01-.068.045l-.053.027a.774.774 0 01-.114.061.986.986 0 00.057.178zM10.383 18.747c.053.142.139.307.258.495.122.192.278.402.467.628.205.242.395.44.569.596.169.151.323.264.458.339.052.029.097.052.134.068l.093-.102.034-.033c-.002.001 0-.001.004-.006l.032-.04c.097-.102.179-.183.247-.245.073-.067.155-.131.264-.204.282-.166.596-.237.93-.207.344.03.636.167.842.388.257.242.523.485.799.727s.638.548 1.086.918c.251.206.418.46.496.753.079.298.053.585-.069.83-.083.205-.242.447-.479.734a3.94 3.94 0 01-.624.63 1.908 1.908 0 01-.65.35 2.57 2.57 0 01-.784.113c-.46 0-.94-.09-1.438-.268a7.335 7.335 0 01-1.485-.744c-.5-.32-.997-.71-1.489-1.165A15.646 15.646 0 018.6 21.774a14.086 14.086 0 01-1.57-2.268c-.409-.742-.698-1.437-.865-2.087-.17-.662-.211-1.259-.12-1.788.087-.56.33-1.014.73-1.35.186-.155.446-.312.784-.476.344-.167.629-.27.865-.307.315-.049.624-.004.914.132s.516.35.676.643c.157.312.336.636.539.971s.444.706.727 1.115c.177.268.248.56.208.865a1.381 1.381 0 01-.419.814 2.678 2.678 0 01-.441.303.532.532 0 01-.094.059l-.073.036a.878.878 0 01-.095.051.6.6 0 00-.062.029c.011.057.036.133.078.235z"
}), /* @__PURE__ */ React23.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M14.202 17.788a.478.478 0 01-.421.491.504.504 0 01-.574-.465 4.886 4.886 0 011.148-3.42c.182-.215.393-.393.624-.544l-.576-1.835 3.913 1.205c.226.097.273.388.089.54l-2.645 2.566-.447-1.422a2.613 2.613 0 00-.202.206 3.72 3.72 0 00-.907 2.677z"
}))));
SharedLine.displayName = "SharedLine";
SharedLine["iconName"] = "Shared-line";
var SharedLine_default = SharedLine;

// src/icon/ActiveCall.tsx
import React24, { forwardRef as forwardRef24, memo as memo24 } from "react";
var ActiveCall = memo24(forwardRef24((props, svgRef) => /* @__PURE__ */ React24.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React24.createElement("path", {
  d: "M25.075 22.515c-1.339-1.139-2.75-2.35-4.061-3.626-.515-.541-1.445-.635-2.13-.2-.41.266-.69.605-.995.941-.205.235-.41.47-.65.67 0 0-.106.035-.24.035-.346 0-1.614-.17-3.75-2.72-1.96-2.419-2.026-3.626-1.995-4.066 0-.2.106-.301.106-.301.24-.205.485-.37.79-.506.379-.2.79-.405 1.134-.739.586-.57.69-1.41.24-2.08-.995-1.51-1.96-3.05-2.75-4.63a1.899 1.899 0 00-1.995-.974c-.72.106-2.27.875-2.854 1.374-2.235 1.946-1.586 7.65 4.054 14.494 3.885 4.694 8.186 7.52 11.485 7.52.859 0 1.614-.2 2.165-.666.65-.506 1.75-1.814 1.995-2.45.341-.706.101-1.541-.55-2.08l.002.002z"
}), /* @__PURE__ */ React24.createElement("path", {
  d: "M21.285 17.026a.984.984 0 001.254-.83c.155-1.294.11-3.421-1.421-4.866-1.445-1.365-3.365-1.47-4.574-1.365a.987.987 0 00-.87 1.245v.005a.993.993 0 001.035.725c.84-.075 2.155-.019 3.05.83.915.866.925 2.294.814 3.19-.05.475.245.93.71 1.066h.002z"
}), /* @__PURE__ */ React24.createElement("path", {
  d: "M24.72 7.595c-1.626-1.541-3.901-2.374-6.57-2.419a15.07 15.07 0 00-2.454.17.986.986 0 00-.8 1.24c.13.485.61.795 1.106.72.546-.085 1.31-.165 2.17-.146 2.174.045 3.925.68 5.19 1.875 1.27 1.2 1.92 2.981 1.93 5.285.005.955-.106 1.814-.214 2.414-.09.499.21.986.694 1.13a.99.99 0 001.25-.774c.125-.685.25-1.64.25-2.72 0-2.854-.88-5.2-2.55-6.774z"
}))));
ActiveCall.displayName = "ActiveCall";
ActiveCall["iconName"] = "active-call";
var ActiveCall_default = ActiveCall;

// src/icon/ActivecallBorder.tsx
import React25, { forwardRef as forwardRef25, memo as memo25 } from "react";
var ActivecallBorder = memo25(forwardRef25((props, svgRef) => /* @__PURE__ */ React25.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React25.createElement("path", {
  d: "M9.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.272-.265.049-.045c.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804 1.129.938c.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.01 6.01 0 01-1.829.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zM7.966 4.022c-.314.049-.8.222-1.451.538-.661.321-1.134.608-1.416.843-.548.46-.881 1.078-1.018 1.956-.16.934-.085 2.047.247 3.337.345 1.34.953 2.809 1.836 4.41.884 1.619 2.031 3.276 3.432 4.954a34.87 34.87 0 003.283 3.393 22.997 22.997 0 003.194 2.502c1.055.675 2.074 1.187 3.059 1.538.959.342 1.853.509 2.684.509.466 0 .872-.058 1.223-.17.274-.087.514-.206.768-.392l.155-.12c.275-.206.66-.595 1.112-1.142.391-.473.643-.844.765-1.097l.106-.236c.064-.128.078-.299.017-.53-.072-.27-.226-.504-.496-.726l-1.295-1.078-.817-.695-.471-.41a71.406 71.406 0 01-1.293-1.163l-.624-.582-.088-.088c-.138-.148-.36-.25-.681-.279a1.596 1.596 0 00-.827.134l-.119.063-.049.035a3.377 3.377 0 00-.189.145l-.079.069-.16.152-.227.231-.036.047-.09.104-.159.162-.157.172a1.998 1.998 0 01-2.3.472 6.246 6.246 0 01-.459-.233c-.46-.256-.934-.607-1.428-1.047a16.01 16.01 0 01-1.531-1.601 16.348 16.348 0 01-1.243-1.674 8.88 8.88 0 01-.691-1.286l-.073-.183a5.005 5.005 0 01-.292-.913 2 2 0 011.025-2.162l.25-.12.178-.098.111-.054.05-.036.143-.086c.134-.073.249-.143.346-.21l.175-.127.102-.083.049-.052c.16-.183.247-.349.289-.528l.02-.109a.87.87 0 00-.147-.621 52.75 52.75 0 01-1.763-2.705 34.089 34.089 0 01-1.299-2.338 1.447 1.447 0 00-.553-.588l-.12-.063a1.627 1.627 0 00-.976-.142zm10.421 2.915a8.962 8.962 0 013.94 2.305 8.963 8.963 0 012.313 3.968 1 1 0 11-1.929.531 6.965 6.965 0 00-1.799-3.085 6.973 6.973 0 00-3.063-1.793 1 1 0 01.537-1.927zm-.113-5.14c2.855.475 5.499 1.819 7.589 3.909s3.434 4.735 3.91 7.59a1 1 0 11-1.973.329c-.407-2.447-1.558-4.711-3.351-6.504s-4.056-2.943-6.503-3.351a1 1 0 11.329-1.973z"
}))));
ActivecallBorder.displayName = "ActivecallBorder";
ActivecallBorder["iconName"] = "activecall_border";
var ActivecallBorder_default = ActivecallBorder;

// src/icon/AddBorder.tsx
import React26, { forwardRef as forwardRef26, memo as memo26 } from "react";
var AddBorder = memo26(forwardRef26((props, svgRef) => /* @__PURE__ */ React26.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React26.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm0 4a1 1 0 01.993.883L17 9l.001 5.999L23 15l.117.007a1 1 0 010 1.986L23 17l-5.999-.001L17 23l-.007.117a1 1 0 01-1.986 0L15 23l.001-6.001L9 17l-.117-.007a1 1 0 010-1.986L9 15l6.001-.001L15 9l.007-.117A1 1 0 0116 8z"
}))));
AddBorder.displayName = "AddBorder";
AddBorder["iconName"] = "add_border";
var AddBorder_default = AddBorder;

// src/icon/AddEmojiMore.tsx
import React27, { forwardRef as forwardRef27, memo as memo27 } from "react";
var AddEmojiMore = memo27(forwardRef27((props, svgRef) => /* @__PURE__ */ React27.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React27.createElement("path", {
  d: "M13.786 4c6.509 0 11.786 5.366 11.786 11.986 0 .776-.072 1.534-.211 2.269a6.598 6.598 0 00-1.743.091c.177-.758.27-1.548.27-2.361 0-5.674-4.523-10.273-10.102-10.273s-10.102 4.6-10.102 10.273c0 5.674 4.523 10.273 10.102 10.273a9.925 9.925 0 004.425-1.035c.021.607.121 1.193.29 1.749a11.56 11.56 0 01-4.715.999C7.277 27.971 2 22.605 2 15.985S7.277 3.999 13.786 3.999zm6.774 17.471c.745 0 1.349.614 1.349 1.371s-.604 1.371-1.349 1.371-1.349-.614-1.349-1.371.604-1.371 1.349-1.371zm4.046 0c.745 0 1.349.614 1.349 1.371s-.604 1.371-1.349 1.371-1.349-.614-1.349-1.371.604-1.371 1.349-1.371zm4.045 0c.745 0 1.349.614 1.349 1.371s-.604 1.371-1.349 1.371-1.349-.614-1.349-1.371.604-1.371 1.349-1.371zM18.58 17.82a.864.864 0 01.306 1.17c-1.047 1.835-2.975 2.989-5.1 2.989-2.109 0-4.025-1.137-5.077-2.949-.236-.407-.104-.932.297-1.172s.916-.105 1.153.302a4.194 4.194 0 003.628 2.108 4.195 4.195 0 003.644-2.136.835.835 0 011.151-.311zm-9.003-6.971c.93 0 1.684.767 1.684 1.712s-.754 1.712-1.684 1.712c-.93 0-1.684-.767-1.684-1.712s.754-1.712 1.684-1.712zm8.418 0c.93 0 1.684.767 1.684 1.712s-.754 1.712-1.684 1.712c-.93 0-1.684-.767-1.684-1.712s.754-1.712 1.684-1.712z"
}))));
AddEmojiMore.displayName = "AddEmojiMore";
AddEmojiMore["iconName"] = "add-emoji-more";
var AddEmojiMore_default = AddEmojiMore;

// src/icon/AddEvent.tsx
import React28, { forwardRef as forwardRef28, memo as memo28 } from "react";
var AddEvent = memo28(forwardRef28((props, svgRef) => /* @__PURE__ */ React28.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React28.createElement("path", {
  d: "M23 17a1 1 0 011 1v4h4a1 1 0 010 2h-4.001L24 28a1 1 0 01-2 0l-.001-4H18a1 1 0 010-2h4v-4a1 1 0 011-1zM21 2a1 1 0 01.993.883L22 3v1h4a2 2 0 011.994 1.851L28 6l.001 10.755a7.992 7.992 0 00-2-1.173L26 10H6v15a1 1 0 00.883.993L7 26l8.582.001a8.01 8.01 0 001.173 2L6 28a2.001 2.001 0 01-1.995-1.851L3.999 26V6c0-1.054.816-1.918 1.851-1.995L5.999 4h4V3a1 1 0 011.993-.117l.007.117v1h8V3a1 1 0 011-1zm4 4H7a1 1 0 00-.993.883L6 7v1h20V7a1 1 0 00-.883-.993L25 6z"
}))));
AddEvent.displayName = "AddEvent";
AddEvent["iconName"] = "add-event";
var AddEvent_default = AddEvent;

// src/icon/AddField.tsx
import React29, { forwardRef as forwardRef29, memo as memo29 } from "react";
var AddField = memo29(forwardRef29((props, svgRef) => /* @__PURE__ */ React29.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React29.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 6a2 2 0 00-2 2v4h-4a2 2 0 100 4h4v4a2 2 0 104 0v-4h4a2 2 0 100-4h-4v-4a2 2 0 00-2-2z"
}))));
AddField.displayName = "AddField";
AddField["iconName"] = "add_field";
var AddField_default = AddField;

// src/icon/AddIntegration.tsx
import React30, { forwardRef as forwardRef30, memo as memo30 } from "react";
var AddIntegration = memo30(forwardRef30((props, svgRef) => /* @__PURE__ */ React30.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React30.createElement("path", {
  d: "M13.241 0a5.517 5.517 0 015.517 5.517h5.517c1.219 0 2.207.988 2.207 2.207v5.517a5.517 5.517 0 110 11.034v5.517a2.207 2.207 0 01-2.207 2.207h-7.724v-2.207a3.31 3.31 0 00-3.116-3.305l-.194-.006a3.31 3.31 0 00-3.305 3.116l-.006.195v2.207H2.206a2.207 2.207 0 01-2.207-2.207v-7.724h2.207a3.31 3.31 0 003.305-3.116l.006-.195a3.31 3.31 0 00-3.116-3.305l-.195-.006H-.001V7.722c0-1.219.988-2.207 2.207-2.207h5.517A5.517 5.517 0 0113.24-.002zm0 2.207a3.31 3.31 0 00-3.305 3.116l-.006.194v2.207H2.206v5.517l.064.001.258.008c2.83.164 5.068 2.449 5.189 5.324l.005.248-.008.258a5.517 5.517 0 01-5.265 5.19l-.243.005v5.517h5.517l.001-.064.008-.258c.164-2.83 2.449-5.068 5.324-5.189l.248-.005.258.008a5.517 5.517 0 015.19 5.265l.005.243h5.517v-7.724h2.207a3.31 3.31 0 00.194-6.615l-.195-.006h-2.207V7.723h-7.724V5.516a3.31 3.31 0 00-3.31-3.31z"
}), /* @__PURE__ */ React30.createElement("path", {
  d: "M15.448 11.034c.609 0 1.103.494 1.103 1.103v3.31h3.31a1.103 1.103 0 010 2.206H16.55l.001 3.31a1.103 1.103 0 01-2.206 0l-.001-3.31h-3.309a1.103 1.103 0 010-2.206h3.31v-3.31c0-.609.494-1.103 1.103-1.103z"
}))));
AddIntegration.displayName = "AddIntegration";
AddIntegration["iconName"] = "add-integration";
var AddIntegration_default = AddIntegration;

// src/icon/AddMemberBorder.tsx
import React31, { forwardRef as forwardRef31, memo as memo31 } from "react";
var AddMemberBorder = memo31(forwardRef31((props, svgRef) => /* @__PURE__ */ React31.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React31.createElement("path", {
  d: "M24 17a1 1 0 011 1v4h4a1 1 0 010 2h-4.001L25 28a1 1 0 01-2 0l-.001-4H19a1 1 0 010-2h4v-4a1 1 0 011-1zm-11 0c1.722 0 3.365.324 4.831.907a8.026 8.026 0 00-1.09 1.726A11.152 11.152 0 0013 19.001c-4.709 0-8.573 2.812-8.967 6.395-.05.451.335.605.519.605l12.029.001a8.01 8.01 0 001.173 2l-13.755-.001a2 2 0 01-2-2c0-5.096 5.019-9 11-9zm0-14a6 6 0 110 12 6 6 0 010-12zm0 2a4 4 0 100 8 4 4 0 000-8z"
}))));
AddMemberBorder.displayName = "AddMemberBorder";
AddMemberBorder["iconName"] = "add-member_border";
var AddMemberBorder_default = AddMemberBorder;

// src/icon/AddMember.tsx
import React32, { forwardRef as forwardRef32, memo as memo32 } from "react";
var AddMember = memo32(forwardRef32((props, svgRef) => /* @__PURE__ */ React32.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React32.createElement("path", {
  d: "M23 16a7 7 0 110 14 7 7 0 010-14zm-10 1c1.037 0 2.046.117 3.004.338A8.965 8.965 0 0014 23c0 1.851.559 3.571 1.516 5.001L4 28a2 2 0 01-2-2c0-5.096 5.019-9 11-9zm10 1a1 1 0 00-.993.883L22 19v3h-3a1 1 0 00-.117 1.993L19 24h2.999L22 27a1 1 0 001.993.117L24 27l-.001-3H27a1 1 0 00.117-1.993L27 22h-3v-3a1 1 0 00-1-1zM13 3a6 6 0 110 12 6 6 0 010-12z"
}))));
AddMember.displayName = "AddMember";
AddMember["iconName"] = "add-member";
var AddMember_default = AddMember;

// src/icon/AddNewFolder.tsx
import React33, { forwardRef as forwardRef33, memo as memo33 } from "react";
var AddNewFolder = memo33(forwardRef33((props, svgRef) => /* @__PURE__ */ React33.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React33.createElement("path", {
  d: "M4.545 3A2.552 2.552 0 002 5.545v15.273c0 1.4 1.145 2.545 2.545 2.545h10.284a8.899 8.899 0 01-.102-1.273 8.91 8.91 0 018.909-8.909c1.368 0 2.66.319 3.818.87V8.09c0-1.4-1.145-2.545-2.545-2.545h-9.128a2.545 2.545 0 01-1.8-.746l-1.054-1.054a2.547 2.547 0 00-1.8-.746H4.545zm19.101 12.747c-1.625 0-3.249.623-4.492 1.864a6.325 6.325 0 000 8.978c2.484 2.484 6.497 2.484 8.981 0s2.484-6.499 0-8.984a6.326 6.326 0 00-4.489-1.859zm.005 2.528c.703.001 1.273.57 1.273 1.273v1.273h1.273a1.273 1.273 0 010 2.546h-1.273v1.273a1.273 1.273 0 01-2.546 0v-1.273h-1.273a1.273 1.273 0 010-2.546h1.273v-1.273c0-.703.57-1.273 1.273-1.273z"
}))));
AddNewFolder.displayName = "AddNewFolder";
AddNewFolder["iconName"] = "add_new_folder";
var AddNewFolder_default = AddNewFolder;

// src/icon/AddParkLocation.tsx
import React34, { forwardRef as forwardRef34, memo as memo34 } from "react";
var AddParkLocation = memo34(forwardRef34((props, svgRef) => /* @__PURE__ */ React34.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React34.createElement("path", {
  d: "M27 2a3 3 0 012.995 2.824L30 5v11h-2V5a1 1 0 00-.883-.993L27 4H5a1 1 0 00-.993.883L4 5v22a1 1 0 00.883.993L5 28h12v2H5a3 3 0 01-2.995-2.824L2 27V5a3 3 0 012.824-2.995L5 2h22zm-3 15a1 1 0 011 1v4h4a1 1 0 010 2h-4.001L25 28a1 1 0 01-2 0l-.001-4H19a1 1 0 010-2h4v-4a1 1 0 011-1zm-6.423-8.4c2.782 0 4.743 2.008 4.743 4.894 0 2.818-1.876 4.805-4.54 4.91l-.224.004h-5.988v4.608c0 .602-.359.983-.924.983-.524 0-.872-.328-.919-.857l-.005-.126V9.582c0-.559.31-.928.806-.977l.118-.006h6.933zm-.483 1.691h-5.527v6.426h5.527c2.115 0 3.326-1.194 3.326-3.224 0-2.019-1.201-3.203-3.326-3.203z"
}))));
AddParkLocation.displayName = "AddParkLocation";
AddParkLocation["iconName"] = "add-park-location";
var AddParkLocation_default = AddParkLocation;

// src/icon/AddReactions.tsx
import React35, { forwardRef as forwardRef35, memo as memo35 } from "react";
var AddReactions = memo35(forwardRef35((props, svgRef) => /* @__PURE__ */ React35.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React35.createElement("path", {
  d: "M19.921 18.612c.44.23.589.737.334 1.133-1.145 1.776-3.253 2.893-5.576 2.893-2.306 0-4.4-1.1-5.551-2.855-.258-.394-.113-.902.325-1.135s1.002-.102 1.261.292c.823 1.255 2.318 2.04 3.966 2.04 1.66 0 3.165-.798 3.984-2.068.255-.396.818-.531 1.258-.301z"
}), /* @__PURE__ */ React35.createElement("path", {
  d: "M13.867 3.049c7.152-.626 13.458 4.665 14.084 11.818.012.142.022.283.03.424a7.435 7.435 0 00-2.021-.233l-.002-.016c-.529-6.052-5.865-10.529-11.917-9.999S3.512 10.908 4.042 16.96c.529 6.052 5.865 10.529 11.917 9.999a10.981 10.981 0 003.518-.907 7.424 7.424 0 001.185 1.656 12.966 12.966 0 01-4.528 1.244c-7.152.626-13.458-4.665-14.084-11.818S6.715 3.676 13.868 3.05z"
}), /* @__PURE__ */ React35.createElement("path", {
  d: "M26.379 18.517a1 1 0 011 1l-.001 2.62 2.621.001a1 1 0 011 1v.069a1 1 0 01-1 1l-2.621-.001.001 2.621a1 1 0 01-1 1h-.069a1 1 0 01-1-1l-.001-2.621-2.62.001a1 1 0 01-1-1v-.069a1 1 0 011-1l2.62-.001.001-2.62a1 1 0 011-1h.069zM12.5 12.25a1.75 1.75 0 11-3.501-.001 1.75 1.75 0 013.501.001zM20.5 12.25a1.75 1.75 0 11-3.501-.001 1.75 1.75 0 013.501.001z"
}))));
AddReactions.displayName = "AddReactions";
AddReactions["iconName"] = "add-reactions";
var AddReactions_default = AddReactions;

// src/icon/AddTask.tsx
import React36, { forwardRef as forwardRef36, memo as memo36 } from "react";
var AddTask = memo36(forwardRef36((props, svgRef) => /* @__PURE__ */ React36.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React36.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14 0 .968-.098 1.914-.285 2.827a6.986 6.986 0 00-1.824-1.204c.072-.531.109-1.072.109-1.623 0-6.627-5.373-12-12-12S4 9.373 4 16s5.373 12 12 12c1.039 0 2.047-.132 3.008-.38a7.02 7.02 0 001.406 1.669A13.947 13.947 0 0116 30C8.268 30 2 23.732 2 16S8.268 2 16 2zm9 17a1 1 0 011 1v3h3a1 1 0 010 2h-3.001L26 28a1 1 0 01-2 0l-.001-3H21a1 1 0 010-2h3v-3a1 1 0 011-1zm-2.624-7.259a.999.999 0 010 1.414l-7.071 7.071a.99.99 0 01-.531.277l-.117.014h-.118a.997.997 0 01-.648-.291l-4.243-4.243a.999.999 0 111.414-1.414l3.535 3.535 6.365-6.363a.999.999 0 011.414 0z"
}))));
AddTask.displayName = "AddTask";
AddTask["iconName"] = "add-task";
var AddTask_default = AddTask;

// src/icon/AddTeamBorder.tsx
import React37, { forwardRef as forwardRef37, memo as memo37 } from "react";
var AddTeamBorder = memo37(forwardRef37((props, svgRef) => /* @__PURE__ */ React37.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React37.createElement("path", {
  d: "M27 19a1 1 0 011 1v3h3a1 1 0 010 2h-3.001L28 28a1 1 0 01-2 0l-.001-3H23a1 1 0 010-2h3v-3a1 1 0 011-1zM8 19c.9 0 1.769.13 2.582.373a10.632 10.632 0 00-1.267 1.747A7.162 7.162 0 008 21c-3.081 0-5.619 1.935-5.961 4.426-.039.285.052.557.324.574l.1.003c.444.008 2.176.007 5.195-.002L7.999 26l.009.271a3.97 3.97 0 00.406 1.505l.121.225L1.999 28a2 2 0 01-2-2c0-3.955 3.654-7 8-7zm13-2c1.216 0 2.392.161 3.495.461-.925.355-1.755.9-2.443 1.587A11.391 11.391 0 0021 19c-4.791 0-8.708 2.912-8.984 6.584-.014.182.063.364.201.407l.063.009h8.01c.215.723.544 1.396.965 2H12a2 2 0 01-2-2c0-5.096 5.019-9 11-9zM8 7a5 5 0 11-.001 10.001A5 5 0 018 7zm13-4a6 6 0 110 12 6 6 0 010-12zM8 9a3 3 0 100 6 3 3 0 000-6zm13-4a4 4 0 100 8 4 4 0 000-8z"
}))));
AddTeamBorder.displayName = "AddTeamBorder";
AddTeamBorder["iconName"] = "add-team_border";
var AddTeamBorder_default = AddTeamBorder;

// src/icon/AddTeam.tsx
import React38, { forwardRef as forwardRef38, memo as memo38 } from "react";
var AddTeam = memo38(forwardRef38((props, svgRef) => /* @__PURE__ */ React38.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React38.createElement("path", {
  d: "M27 19a5 5 0 11-.001 10.001A5 5 0 0127 19zM8 19c.9 0 1.769.13 2.582.373C8.969 21.185 8 23.459 8 26c0 .638.149 1.241.415 1.776l.121.225L2 28a2 2 0 01-2-2c0-3.955 3.654-7 8-7zm13-2c1.216 0 2.392.161 3.495.461A7.004 7.004 0 0021.255 28H12a2 2 0 01-2-2c0-5.096 5.019-9 11-9zm6 3c-.473 0-.87.329-.974.771l-.02.113-.007.117v2h-2l-.117.007a1 1 0 00-.112 1.967l.113.02.117.007h1.999l.001 2 .007.117a1 1 0 001.967.112l.02-.113.007-.117-.001-2h2.001l.117-.007a1 1 0 00.112-1.967l-.113-.02L30 23h-2v-2l-.007-.117A1 1 0 0027 20zM8 7a5 5 0 11-.001 10.001A5 5 0 018 7zm13-4a6 6 0 110 12 6 6 0 010-12z"
}))));
AddTeam.displayName = "AddTeam";
AddTeam["iconName"] = "add-team";
var AddTeam_default = AddTeam;

// src/icon/Add.tsx
import React39, { forwardRef as forwardRef39, memo as memo39 } from "react";
var Add = memo39(forwardRef39((props, svgRef) => /* @__PURE__ */ React39.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React39.createElement("path", {
  d: "M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 00-1.993-.117L15 9l.001 5.999L9 15a1 1 0 00-.117 1.993L9 17l6.001-.001L15 23a1 1 0 001.993.117L17 23l.001-6.001L23 17a1 1 0 00.117-1.993L23 15l-5.999-.001z"
}))));
Add.displayName = "Add";
Add["iconName"] = "add";
var Add_default = Add;

// src/icon/Address.tsx
import React40, { forwardRef as forwardRef40, memo as memo40 } from "react";
var Address = memo40(forwardRef40((props, svgRef) => /* @__PURE__ */ React40.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React40.createElement("path", {
  d: "M30.491 12.295L16.545 2.124a1.212 1.212 0 00-1.067 0L1.532 12.295c-.512.289-.683.91-.384 1.406s.939.662 1.452.372l1.42-.992V28.93c0 .579.47 1.034 1.067 1.034h21.821c.598 0 1.067-.455 1.067-1.034V13.081l1.406.992c.171.083.342.124.512.124.384 0 .726-.165.939-.537.342-.455.128-1.075-.342-1.364zM12.024 28V17h7.967v11h-7.967zm13.975 0h-4.001V16.141c0-.579-.47-1.034-1.067-1.034h-9.866c-.598 0-1.067.455-1.067 1.034V28H6.03V11.881l9.96-7.649 10.009 7.649V28z"
}))));
Address.displayName = "Address";
Address["iconName"] = "address";
var Address_default = Address;

// src/icon/AdminBorder.tsx
import React41, { forwardRef as forwardRef41, memo as memo41 } from "react";
var AdminBorder = memo41(forwardRef41((props, svgRef) => /* @__PURE__ */ React41.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React41.createElement("path", {
  d: "M24.653 16.592a1.416 1.416 0 011.629-.509c.826.297 1.59.754 2.255 1.346.459.409.61 1.066.383 1.635-.097.245-.081.521.044.749s.334.364.563.382a1.435 1.435 0 011.287 1.122 7.696 7.696 0 01.001 3.367 1.434 1.434 0 01-1.288 1.123c-.228.017-.437.154-.562.381s-.141.504-.044.749a1.467 1.467 0 01-.383 1.634 6.908 6.908 0 01-2.255 1.346 1.418 1.418 0 01-1.692-.604c-.137-.224-.356-.351-.589-.351s-.453.127-.59.352a1.417 1.417 0 01-1.691.603 6.899 6.899 0 01-2.256-1.346 1.466 1.466 0 01-.383-1.635c.097-.245.081-.521-.044-.749s-.334-.364-.563-.382a1.435 1.435 0 01-1.287-1.122 7.696 7.696 0 01-.001-3.367 1.434 1.434 0 011.288-1.123c.228-.017.437-.154.562-.381s.141-.504.044-.749a1.467 1.467 0 01.383-1.634 6.908 6.908 0 012.255-1.346 1.418 1.418 0 011.692.604.693.693 0 00.589.351.68.68 0 00.508-.233l.056-.075.089-.139zM13 17c1.439 0 2.821.226 4.092.64a3.383 3.383 0 00-.114.775l-.001.175-.105.058c-.338.195-.64.447-.893.744A11.371 11.371 0 0013 19c-4.878 0-8.85 3.019-8.996 6.786L4 26l11.564.001a3.444 3.444 0 001.308 1.35l.106.058.001.175c.004.14.017.278.038.416H4.001a2 2 0 01-2-2c0-5.096 5.019-9 11-9zm9.001 1.129l-.095.044c-.16.078-.315.166-.466.262l-.223.15-.158.119.008.027a2.888 2.888 0 01-.1 1.656l-.081.196-.096.191a2.734 2.734 0 01-1.45 1.259l-.185.06-.084.02-.035.258-.015.156-.011.157-.009.315c0 .141.005.281.015.42l.019.208.035.256.085.022a2.7 2.7 0 011.426.994l.114.166.094.159c.31.565.417 1.212.317 1.837l-.041.207-.007.026.158.12c.146.104.298.2.453.288l.236.124.094.043.041-.047a2.678 2.678 0 011.569-.833l.203-.022.187-.007c.684 0 1.327.264 1.817.72l.142.143.039.046.096-.043c.16-.078.315-.166.466-.262l.223-.15.157-.12-.007-.026a2.888 2.888 0 01.1-1.656l.081-.196.096-.191a2.734 2.734 0 011.45-1.259l.185-.06.084-.021.037-.257.015-.156.011-.157L29 23c0-.141-.005-.281-.015-.42l-.019-.208-.036-.257-.084-.021a2.7 2.7 0 01-1.426-.994l-.114-.166-.094-.159a2.874 2.874 0 01-.317-1.837l.047-.234-.157-.119a5.013 5.013 0 00-.453-.288l-.236-.124-.094-.043-.065.074a2.68 2.68 0 01-1.551.807l-.2.022-.184.006a2.663 2.663 0 01-1.817-.72l-.142-.143-.04-.047zM24 21a2 2 0 11.001 3.999A2 2 0 0124 21zM13 3a6 6 0 110 12 6 6 0 010-12zm0 2a4 4 0 100 8 4 4 0 000-8z"
}))));
AdminBorder.displayName = "AdminBorder";
AdminBorder["iconName"] = "admin_border";
var AdminBorder_default = AdminBorder;

// src/icon/Admin.tsx
import React42, { forwardRef as forwardRef42, memo as memo42 } from "react";
var Admin = memo42(forwardRef42((props, svgRef) => /* @__PURE__ */ React42.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React42.createElement("path", {
  d: "M26.281 16.083c.826.297 1.59.754 2.255 1.346.459.409.61 1.066.383 1.635-.097.245-.081.521.044.749s.334.364.563.382a1.435 1.435 0 011.287 1.122 7.696 7.696 0 01.001 3.367 1.434 1.434 0 01-1.288 1.123c-.228.017-.437.154-.562.381s-.141.504-.044.749a1.467 1.467 0 01-.383 1.634 6.908 6.908 0 01-2.255 1.346 1.418 1.418 0 01-1.692-.604c-.137-.224-.356-.351-.589-.351s-.453.127-.59.352a1.417 1.417 0 01-1.691.603 6.899 6.899 0 01-2.256-1.346 1.466 1.466 0 01-.383-1.635c.097-.245.081-.521-.044-.749s-.334-.364-.563-.382a1.435 1.435 0 01-1.287-1.122 7.696 7.696 0 01-.001-3.367 1.434 1.434 0 011.288-1.123c.228-.017.437-.154.562-.381s.141-.504.044-.749a1.467 1.467 0 01.383-1.634 6.908 6.908 0 012.255-1.346 1.418 1.418 0 011.692.604.693.693 0 00.589.351.68.68 0 00.508-.233l.056-.075.089-.139a1.416 1.416 0 011.629-.509zM13 17c1.439 0 2.821.226 4.092.64a3.383 3.383 0 00-.114.775l-.001.175-.105.058a3.447 3.447 0 00-1.636 2.229A9.627 9.627 0 0015.001 23c0 .718.079 1.43.236 2.125l.048.189c.25.873.827 1.598 1.587 2.037l.106.058.001.175c.004.14.017.278.038.416H4.001a2 2 0 01-2-2c0-5.096 5.019-9 11-9zm11 4a2 2 0 10-.001 3.999A2 2 0 0024 21zM13 3a6 6 0 110 12 6 6 0 010-12z"
}))));
Admin.displayName = "Admin";
Admin["iconName"] = "admin";
var Admin_default = Admin;

// src/icon/Advanced.tsx
import React43, { forwardRef as forwardRef43, memo as memo43 } from "react";
var Advanced = memo43(forwardRef43((props, svgRef) => /* @__PURE__ */ React43.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React43.createElement("path", {
  d: "M20.399 4h-9.405a4 4 0 00-3.453 1.981l-4.678 8a4.001 4.001 0 000 4.038l4.678 8A4 4 0 0010.994 28h9.405a4 4 0 003.457-1.988l4.656-8a4 4 0 000-4.024l-4.656-8A4 4 0 0020.399 4zm-4.716 18c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.667 6-6 6z"
}))));
Advanced.displayName = "Advanced";
Advanced["iconName"] = "advanced";
var Advanced_default = Advanced;

// src/icon/AlignCenter.tsx
import React44, { forwardRef as forwardRef44, memo as memo44 } from "react";
var AlignCenter = memo44(forwardRef44((props, svgRef) => /* @__PURE__ */ React44.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React44.createElement("path", {
  d: "M27 24a1 1 0 010 2H5a1 1 0 010-2h22zm-4-9a1 1 0 010 2H9a1 1 0 010-2h14zm4-9a1 1 0 010 2H5a1 1 0 010-2h22z"
}))));
AlignCenter.displayName = "AlignCenter";
AlignCenter["iconName"] = "align-center";
var AlignCenter_default = AlignCenter;

// src/icon/AlignJustify.tsx
import React45, { forwardRef as forwardRef45, memo as memo45 } from "react";
var AlignJustify = memo45(forwardRef45((props, svgRef) => /* @__PURE__ */ React45.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React45.createElement("path", {
  d: "M27 24a1 1 0 010 2H5a1 1 0 010-2h22zm0-9a1 1 0 010 2H5a1 1 0 010-2h22zm0-9a1 1 0 010 2H5a1 1 0 010-2h22z"
}))));
AlignJustify.displayName = "AlignJustify";
AlignJustify["iconName"] = "align-justify";
var AlignJustify_default = AlignJustify;

// src/icon/AlignLeft.tsx
import React46, { forwardRef as forwardRef46, memo as memo46 } from "react";
var AlignLeft = memo46(forwardRef46((props, svgRef) => /* @__PURE__ */ React46.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React46.createElement("path", {
  d: "M27 24a1 1 0 010 2H5a1 1 0 010-2h22zm-8-9a1 1 0 010 2H5a1 1 0 010-2h14zm8-9a1 1 0 010 2H5a1 1 0 010-2h22z"
}))));
AlignLeft.displayName = "AlignLeft";
AlignLeft["iconName"] = "align-left";
var AlignLeft_default = AlignLeft;

// src/icon/AlignRight.tsx
import React47, { forwardRef as forwardRef47, memo as memo47 } from "react";
var AlignRight = memo47(forwardRef47((props, svgRef) => /* @__PURE__ */ React47.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React47.createElement("path", {
  d: "M27 24a1 1 0 010 2H5a1 1 0 010-2h22zm0-9a1 1 0 010 2H13a1 1 0 010-2h14zm0-9a1 1 0 010 2H5a1 1 0 010-2h22z"
}))));
AlignRight.displayName = "AlignRight";
AlignRight["iconName"] = "align-right";
var AlignRight_default = AlignRight;

// src/icon/AnalyticsBorder.tsx
import React48, { forwardRef as forwardRef48, memo as memo48 } from "react";
var AnalyticsBorder = memo48(forwardRef48((props, svgRef) => /* @__PURE__ */ React48.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React48.createElement("path", {
  d: "M28 3a2 2 0 012 2v18a2 2 0 01-2 2H17v2h4a1 1 0 010 2H11a1 1 0 010-2h4v-2H4a2 2 0 01-2-2V5a2 2 0 012-2h24zm-1 2H5a1 1 0 00-1 1v16a1 1 0 001 1h22a1 1 0 001-1V6a1 1 0 00-1-1zm-16 6a1 1 0 011 1v6a1 1 0 01-2 0v-6a1 1 0 011-1zm5-2a1 1 0 011 1v8a1 1 0 01-2 0v-8a1 1 0 011-1zm5 4a1 1 0 011 1v4a1 1 0 01-2 0v-4a1 1 0 011-1z"
}))));
AnalyticsBorder.displayName = "AnalyticsBorder";
AnalyticsBorder["iconName"] = "analytics_border";
var AnalyticsBorder_default = AnalyticsBorder;

// src/icon/Analytics.tsx
import React49, { forwardRef as forwardRef49, memo as memo49 } from "react";
var Analytics = memo49(forwardRef49((props, svgRef) => /* @__PURE__ */ React49.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React49.createElement("path", {
  d: "M28 3a2 2 0 012 2v18a2 2 0 01-2 2H17v2h4a1 1 0 010 2H11a1 1 0 010-2h4v-2H4a2 2 0 01-2-2V5a2 2 0 012-2h24zm-17 8a1 1 0 00-.993.883L10 12v6a1 1 0 001.993.117L12 18v-6a1 1 0 00-1-1zm5-2a1 1 0 00-.993.883L15 10v8a1 1 0 001.993.117L17 18v-8a1 1 0 00-1-1zm5 4a1 1 0 00-.993.883L20 14v4a1 1 0 001.993.117L22 18v-4a1 1 0 00-1-1z"
}))));
Analytics.displayName = "Analytics";
Analytics["iconName"] = "analytics";
var Analytics_default = Analytics;

// src/icon/AppleLogo.tsx
import React50, { forwardRef as forwardRef50, memo as memo50 } from "react";
var AppleLogo = memo50(forwardRef50((props, svgRef) => /* @__PURE__ */ React50.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React50.createElement("path", {
  d: "M16.73 8.462c1.264 0 2.848-.854 3.791-1.994.854-1.032 1.477-2.474 1.477-3.916A2.68 2.68 0 0021.945 2c-1.406.053-3.097.943-4.112 2.136-.801.908-1.531 2.332-1.531 3.791 0 .214.036.427.053.498.089.018.231.036.374.036zM12.28 30c1.727 0 2.492-1.157 4.646-1.157 2.189 0 2.67 1.121 4.593 1.121 1.887 0 3.151-1.744 4.343-3.453 1.335-1.958 1.887-3.88 1.922-3.97-.125-.036-3.738-1.513-3.738-5.661 0-3.596 2.848-5.215 3.008-5.34-1.887-2.706-4.753-2.777-5.536-2.777-2.118 0-3.845 1.282-4.931 1.282-1.175 0-2.723-1.21-4.557-1.21-3.489 0-7.031 2.884-7.031 8.331 0 3.382 1.317 6.96 2.937 9.274C9.324 28.398 10.535 30 12.279 30z"
}))));
AppleLogo.displayName = "AppleLogo";
AppleLogo["iconName"] = "apple-logo";
var AppleLogo_default = AppleLogo;

// src/icon/Apps.tsx
import React51, { forwardRef as forwardRef51, memo as memo51 } from "react";
var Apps = memo51(forwardRef51((props, svgRef) => /* @__PURE__ */ React51.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React51.createElement("path", {
  d: "M28 18a2 2 0 012 2v8a2 2 0 01-2 2h-8a2 2 0 01-2-2v-8a2 2 0 012-2h8zm-16 0a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2v-8a2 2 0 012-2h8zm0-16a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V4a2 2 0 012-2h8zm16 0a2 2 0 012 2v8a2 2 0 01-2 2h-8a2 2 0 01-2-2V4a2 2 0 012-2h8z"
}))));
Apps.displayName = "Apps";
Apps["iconName"] = "apps";
var Apps_default = Apps;

// src/icon/Archive.tsx
import React52, { forwardRef as forwardRef52, memo as memo52 } from "react";
var Archive = memo52(forwardRef52((props, svgRef) => /* @__PURE__ */ React52.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React52.createElement("path", {
  d: "M28 3a2 2 0 012 2v4a2 2 0 01-2 2v16a2 2 0 01-2 2H6a2 2 0 01-2-2V11a2 2 0 01-2-2V5a2 2 0 012-2h24zm-2 8H6v15a1 1 0 001 1h18a1 1 0 001-1V11zm-7 4a1 1 0 010 2h-6a1 1 0 010-2h6zm8-10H5a1 1 0 00-1 1v2a1 1 0 001 1h22a1 1 0 001-1V6a1 1 0 00-1-1z"
}))));
Archive.displayName = "Archive";
Archive["iconName"] = "archive";
var Archive_default = Archive;

// src/icon/ArrowDown2.tsx
import React53, { forwardRef as forwardRef53, memo as memo53 } from "react";
var ArrowDown2 = memo53(forwardRef53((props, svgRef) => /* @__PURE__ */ React53.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React53.createElement("path", {
  d: "M9.636 13.05a.999.999 0 011.414 0L16 18l4.95-4.95a.999.999 0 111.414 1.414l-5.657 5.657a.999.999 0 01-1.414 0l-5.657-5.657a.999.999 0 010-1.414z"
}))));
ArrowDown2.displayName = "ArrowDown2";
ArrowDown2["iconName"] = "arrow_down";
var ArrowDown2_default = ArrowDown2;

// src/icon/ArrowDown.tsx
import React54, { forwardRef as forwardRef54, memo as memo54 } from "react";
var ArrowDown = memo54(forwardRef54((props, svgRef) => /* @__PURE__ */ React54.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React54.createElement("path", {
  d: "M16.707 20.293l5.586-5.586A.999.999 0 0021.586 13H10.414a1 1 0 00-.707 1.707l5.586 5.586a.999.999 0 001.414 0z"
}))));
ArrowDown.displayName = "ArrowDown";
ArrowDown["iconName"] = "arrow-down";
var ArrowDown_default = ArrowDown;

// src/icon/ArrowLeft2.tsx
import React55, { forwardRef as forwardRef55, memo as memo55 } from "react";
var ArrowLeft2 = memo55(forwardRef55((props, svgRef) => /* @__PURE__ */ React55.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React55.createElement("path", {
  d: "M18.95 9.636a.999.999 0 010 1.414L14 16l4.95 4.95a.999.999 0 11-1.414 1.414l-5.657-5.657a.999.999 0 010-1.414l5.657-5.657a.999.999 0 011.414 0z"
}))));
ArrowLeft2.displayName = "ArrowLeft2";
ArrowLeft2["iconName"] = "arrow_left";
var ArrowLeft2_default = ArrowLeft2;

// src/icon/ArrowLeft.tsx
import React56, { forwardRef as forwardRef56, memo as memo56 } from "react";
var ArrowLeft = memo56(forwardRef56((props, svgRef) => /* @__PURE__ */ React56.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React56.createElement("path", {
  d: "M11.707 15.293l5.586-5.586a.999.999 0 011.707.707v11.172a1 1 0 01-1.707.707l-5.586-5.586a.999.999 0 010-1.414z"
}))));
ArrowLeft.displayName = "ArrowLeft";
ArrowLeft["iconName"] = "arrow-left";
var ArrowLeft_default = ArrowLeft;

// src/icon/ArrowRight.tsx
import React57, { forwardRef as forwardRef57, memo as memo57 } from "react";
var ArrowRight = memo57(forwardRef57((props, svgRef) => /* @__PURE__ */ React57.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React57.createElement("path", {
  d: "M13.05 9.636a.999.999 0 000 1.414L18 16l-4.95 4.95a.999.999 0 101.414 1.414l5.657-5.657a.999.999 0 000-1.414l-5.657-5.657a.999.999 0 00-1.414 0z"
}))));
ArrowRight.displayName = "ArrowRight";
ArrowRight["iconName"] = "arrow_right";
var ArrowRight_default = ArrowRight;

// src/icon/ArrowRight1.tsx
import React58, { forwardRef as forwardRef58, memo as memo58 } from "react";
var ArrowRight1 = memo58(forwardRef58((props, svgRef) => /* @__PURE__ */ React58.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React58.createElement("path", {
  d: "M20.293 15.293l-5.586-5.586a.999.999 0 00-1.707.707v11.172a1 1 0 001.707.707l5.586-5.586a.999.999 0 000-1.414z"
}))));
ArrowRight1.displayName = "ArrowRight1";
ArrowRight1["iconName"] = "arrow_right1";
var ArrowRight1_default = ArrowRight1;

// src/icon/ArrowUp2.tsx
import React59, { forwardRef as forwardRef59, memo as memo59 } from "react";
var ArrowUp2 = memo59(forwardRef59((props, svgRef) => /* @__PURE__ */ React59.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React59.createElement("path", {
  d: "M9.636 18.95a.999.999 0 001.414 0L16 14l4.95 4.95a.999.999 0 101.414-1.414l-5.657-5.657a.999.999 0 00-1.414 0l-5.657 5.657a.999.999 0 000 1.414z"
}))));
ArrowUp2.displayName = "ArrowUp2";
ArrowUp2["iconName"] = "arrow_up";
var ArrowUp2_default = ArrowUp2;

// src/icon/ArrowUp.tsx
import React60, { forwardRef as forwardRef60, memo as memo60 } from "react";
var ArrowUp = memo60(forwardRef60((props, svgRef) => /* @__PURE__ */ React60.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React60.createElement("path", {
  d: "M16.707 11.707l5.586 5.586A.999.999 0 0121.586 19H10.414a1 1 0 01-.707-1.707l5.586-5.586a.999.999 0 011.414 0z"
}))));
ArrowUp.displayName = "ArrowUp";
ArrowUp["iconName"] = "arrow-up";
var ArrowUp_default = ArrowUp;

// src/icon/Askfirst.tsx
import React61, { forwardRef as forwardRef61, memo as memo61 } from "react";
var Askfirst = memo61(forwardRef61((props, svgRef) => /* @__PURE__ */ React61.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React61.createElement("path", {
  d: "M25 19a2 2 0 011.994 1.851L27 21v6a2 2 0 01-1.851 1.994L25 29h-1a3 3 0 01-2.995-2.824L21 26v-4a3 3 0 012.824-2.995L24 19h1zM8 19a3 3 0 013 3v4a3 3 0 01-3 3H7a2 2 0 01-2-2v-6a2 2 0 012-2h1zm8-17c7.732 0 14 6.268 14 14v7a1 1 0 01-2 0v-7c0-6.525-5.209-11.834-11.695-11.996L16 4C9.475 4 4.166 9.209 4.004 15.695L4 16v7a1 1 0 01-2 0v-7C2 8.268 8.268 2 16 2z"
}))));
Askfirst.displayName = "Askfirst";
Askfirst["iconName"] = "askfirst";
var Askfirst_default = Askfirst;

// src/icon/Assignment.tsx
import React62, { forwardRef as forwardRef62, memo as memo62 } from "react";
var Assignment = memo62(forwardRef62((props, svgRef) => /* @__PURE__ */ React62.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React62.createElement("path", {
  d: "M25.333 4H19.76C19.2 2.453 17.733 1.333 16 1.333S12.8 2.453 12.24 4H6.667A2.675 2.675 0 004 6.667v18.667c0 1.467 1.2 2.667 2.667 2.667h18.667c1.467 0 2.667-1.2 2.667-2.667V6.667C28.001 5.2 26.801 4 25.334 4zM16 4c.733 0 1.333.6 1.333 1.333s-.6 1.333-1.333 1.333-1.333-.6-1.333-1.333S15.267 4 16 4zm0 5.333c2.213 0 4 1.787 4 4s-1.787 4-4 4-4-1.787-4-4 1.787-4 4-4zm8 16H8v-1.867c0-2.667 5.333-4.133 8-4.133s8 1.467 8 4.133v1.867z"
}))));
Assignment.displayName = "Assignment";
Assignment["iconName"] = "assignment";
var Assignment_default = Assignment;

// src/icon/Asterisk.tsx
import React63, { forwardRef as forwardRef63, memo as memo63 } from "react";
var Asterisk = memo63(forwardRef63((props, svgRef) => /* @__PURE__ */ React63.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React63.createElement("path", {
  d: "M16.583 20v-2.463a1.93 1.93 0 00-.212-.896c.097.133.207.245.331.336s.265.182.424.274l2.291 1.244.583-.933-2.291-1.257c-.15-.091-.298-.16-.444-.205s-.298-.077-.457-.093a2.09 2.09 0 00.901-.311l2.278-1.244-.583-.933-2.278 1.232c-.15.091-.285.182-.404.274s-.227.199-.325.323a2.04 2.04 0 00.185-.896v-2.451h-1.166v2.463c0 .166.015.326.046.479s.086.305.166.454a2.224 2.224 0 00-.755-.647l-2.291-1.244-.583.933 2.291 1.257c.159.1.316.172.47.218s.32.077.497.093a2.365 2.365 0 00-.967.299l-2.278 1.244.583.933 2.278-1.232c.291-.166.525-.352.702-.56-.062.133-.104.27-.126.411s-.033.29-.033.448v2.451h1.166z"
}))));
Asterisk.displayName = "Asterisk";
Asterisk["iconName"] = "asterisk";
var Asterisk_default = Asterisk;

// src/icon/Attachment.tsx
import React64, { forwardRef as forwardRef64, memo as memo64 } from "react";
var Attachment = memo64(forwardRef64((props, svgRef) => /* @__PURE__ */ React64.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React64.createElement("path", {
  d: "M15.828 24.056a4 4 0 01-5.657-5.657l8.485-8.485a.999.999 0 111.414 1.414l-8.485 8.485a2 2 0 102.828 2.828l10.96-10.96a4.5 4.5 0 00-6.364-6.364l-10.96 10.96a7 7 0 009.899 9.899l8.485-8.485a.999.999 0 111.414 1.414l-8.485 8.485a9 9 0 01-12.728 0 9 9 0 010-12.728l10.96-10.96a6.5 6.5 0 019.192 9.192l-10.96 10.96z"
}))));
Attachment.displayName = "Attachment";
Attachment["iconName"] = "attachment";
var Attachment_default = Attachment;

// src/icon/Audio.tsx
import React65, { forwardRef as forwardRef65, memo as memo65 } from "react";
var Audio2 = memo65(forwardRef65((props, svgRef) => /* @__PURE__ */ React65.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React65.createElement("path", {
  d: "M18.479 4.534c.333.342.521.805.521 1.288v20.356C19 27.184 18.204 28 17.222 28c-.471 0-.924-.192-1.257-.534l-6.854-6H3.778C2.796 21.466 2 20.65 2 19.644v-7.288c0-1.006.796-1.822 1.778-1.822h5.333l6.854-6a1.746 1.746 0 012.514 0zm8.919 3.335C29.081 10.224 30 13.044 30 16s-.919 5.776-2.602 8.131a1 1 0 01-1.627-1.163C27.213 20.95 28 18.535 28 16s-.787-4.95-2.229-6.968a1 1 0 011.627-1.163zm-3.554 3.715A8.963 8.963 0 0125 16a8.953 8.953 0 01-1.171 4.441 1 1 0 11-1.738-.988A6.965 6.965 0 0023 16a6.962 6.962 0 00-.898-3.433 1 1 0 011.742-.982z"
}))));
Audio2.displayName = "Audio";
Audio2["iconName"] = "audio";
var Audio_default = Audio2;

// src/icon/AvatarRooms.tsx
import React66, { forwardRef as forwardRef66, memo as memo66 } from "react";
var AvatarRooms = memo66(forwardRef66((props, svgRef) => /* @__PURE__ */ React66.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React66.createElement("path", {
  d: "M16 0c8.837 0 16 7.163 16 16s-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0zm3.024 22.814h-6.047a.442.442 0 00-.442.441v.441c0 .244.198.441.442.441h6.047a.442.442 0 00.442-.441v-.441a.441.441 0 00-.442-.441zM16 19.137c-.774 0-1.401.625-1.401 1.397s.627 1.397 1.401 1.397 1.401-.625 1.401-1.397-.627-1.397-1.401-1.397zm6.858-8.97H9.141a1.476 1.476 0 00-1.475 1.471v7.353a1.478 1.478 0 001.475 1.471h.434a.315.315 0 00.316-.294c.195-3.222 2.872-5.735 6.109-5.735s5.914 2.513 6.109 5.735a.315.315 0 00.316.294h.434a1.476 1.476 0 001.475-1.471v-7.353a1.478 1.478 0 00-1.475-1.471zM16 16.049a4.494 4.494 0 00-4.476 4.044.338.338 0 00.341.368h.8a.342.342 0 00.338-.303c.189-1.507 1.474-2.638 2.997-2.638s2.808 1.131 2.997 2.638c.02.172.165.302.338.303h.8a.34.34 0 00.34-.368 4.493 4.493 0 00-4.476-4.044z"
}))));
AvatarRooms.displayName = "AvatarRooms";
AvatarRooms["iconName"] = "avatar_rooms";
var AvatarRooms_default = AvatarRooms;

// src/icon/Barge.tsx
import React67, { forwardRef as forwardRef67, memo as memo67 } from "react";
var Barge = memo67(forwardRef67((props, svgRef) => /* @__PURE__ */ React67.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React67.createElement("path", {
  d: "M8 21l4 2v3a2 2 0 11-4 0v-5zM24.849 5.225c.099.242.151.5.151.761v16.027a2 2 0 01-2.762 1.849l-13-5.353a2.001 2.001 0 01-1.239-1.849v-5.321c0-.81.489-1.541 1.239-1.849l13-5.353a2 2 0 012.611 1.088zM6 10v8a4 4 0 010-8zm21 1a3 3 0 01.176 5.995L27 17v-6z"
}))));
Barge.displayName = "Barge";
Barge["iconName"] = "barge";
var Barge_default = Barge;

// src/icon/Birthday.tsx
import React68, { forwardRef as forwardRef68, memo as memo68 } from "react";
var Birthday = memo68(forwardRef68((props, svgRef) => /* @__PURE__ */ React68.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React68.createElement("path", {
  d: "M16.68 1.36c.469.793 2 3.473 2 4.636 0 .64-.228 1.229-.606 1.689.49.431.8 1.063.8 1.765v7.527h2.139l.001-2.814c0-.702.31-1.334.801-1.766a2.644 2.644 0 01-.607-1.688c0-1.164 1.531-3.843 2-4.636.283-.479 1.076-.479 1.359 0 .469.793 2 3.473 2 4.636 0 .62-.213 1.191-.571 1.645.58.432.979 1.083.979 1.809v2.814h1.34c1.305 0 2.389.779 2.389 2.078l-1.511 6.665 1.021.001a.787.787 0 01.687 1.17l-1.293 3.708a.787.787 0 01-.688.401H3.225a.79.79 0 01-.688-.401l-1.434-3.708a.784.784 0 01.687-1.17l.978-.001L1.3 19.055c0-1.299 1.038-2.078 2.343-2.078h1.378v-2.814c0-.727.402-1.379.984-1.811a2.652 2.652 0 01-.569-1.643c0-1.164 1.531-3.843 2-4.636.283-.479 1.076-.479 1.359 0 .469.793 2 3.473 2 4.636 0 .64-.228 1.229-.606 1.689.49.431.8 1.063.8 1.765v2.814h2.139l.001-7.527c0-.702.31-1.334.801-1.766a2.644 2.644 0 01-.607-1.688c0-1.164 1.531-3.843 2-4.636.283-.479 1.076-.479 1.359 0zM29.298 27H2.703l.839 1.963h24.772L29.299 27zm-5.624-4.572l-1.126 1.122a1.855 1.855 0 01-2.611 0l-1.126-1.122a.272.272 0 00-.381 0l-1.126 1.122c-.348.347-.812.538-1.305.538s-.957-.191-1.305-.538l-1.126-1.122a.272.272 0 00-.381 0l-1.126 1.122a1.855 1.855 0 01-2.611 0l-1.126-1.122a.272.272 0 00-.381 0L6.817 23.55a1.854 1.854 0 01-2.611 0l-.249-.249.428 1.68h23.048l.428-1.503-.071.072a1.855 1.855 0 01-2.611 0l-1.126-1.122a.272.272 0 00-.381 0zm4.616-3.373H3.619c-.435 0-.743-.433-.743 0l.589 2.312c.198-.228.454-.328.733-.05l1.126 1.121a.27.27 0 00.38 0l1.126-1.122a1.853 1.853 0 012.611 0l1.126 1.122a.27.27 0 00.381 0l1.125-1.121a1.854 1.854 0 012.611 0l1.126 1.122c.137.136.243.136.38 0l1.126-1.122a1.853 1.853 0 012.611 0l1.126 1.122a.27.27 0 00.381 0l1.125-1.121a1.854 1.854 0 012.611 0l1.126 1.122a.27.27 0 00.381 0l1.126-1.121c.207-.206.45-.165.681-.014l.641-2.248c0-.433-.399 0-.834 0zM16.508 8.665h-1.015c-.435 0-.572.352-.572.786l-.023 7.527h2.204l.023-7.527c0-.433-.183-.786-.617-.786zm-7.887 4.713H7.606c-.435 0-.572.352-.572.786l-.023 2.814h1.965v-2.814c0-.433.079-.786-.355-.786zm15.773 0h-1.015c-.435 0-.377.352-.377.786v2.814h1.987l.023-2.814c0-.433-.183-.786-.617-.786zM8.114 8.086c-.605 1.144-1.102 2.26-1.102 2.623a1.101 1.101 0 002.204 0c0-.362-.497-1.479-1.102-2.623zm15.772 0c-.605 1.144-1.102 2.26-1.102 2.623a1.101 1.101 0 002.204 0c0-.362-.497-1.479-1.102-2.623zM16 3.373c-.605 1.144-1.102 2.26-1.102 2.623a1.101 1.101 0 002.204 0c0-.362-.497-1.479-1.102-2.623z"
}))));
Birthday.displayName = "Birthday";
Birthday["iconName"] = "birthday";
var Birthday_default = Birthday;

// src/icon/Blocked.tsx
import React69, { forwardRef as forwardRef69, memo as memo69 } from "react";
var Blocked = memo69(forwardRef69((props, svgRef) => /* @__PURE__ */ React69.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React69.createElement("path", {
  d: "M6.101 6.101C11.568.634 20.433.634 25.9 6.101s5.467 14.332 0 19.799c-5.467 5.467-14.332 5.467-19.799 0s-5.467-14.332 0-19.799zm19.063 2.15L8.252 25.163c4.715 3.996 11.786 3.77 16.234-.678 4.376-4.376 4.666-11.292.868-16.004l-.19-.23zM7.515 7.515c-4.448 4.448-4.674 11.52-.678 16.235L23.75 6.837c-4.715-3.997-11.787-3.771-16.235.678z"
}))));
Blocked.displayName = "Blocked";
Blocked["iconName"] = "blocked";
var Blocked_default = Blocked;

// src/icon/Bold.tsx
import React70, { forwardRef as forwardRef70, memo as memo70 } from "react";
var Bold = memo70(forwardRef70((props, svgRef) => /* @__PURE__ */ React70.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React70.createElement("path", {
  d: "M16.776 28c1.386 0 2.618-.177 3.696-.531s1.985-.844 2.723-1.469c.737-.625 1.298-1.369 1.683-2.232s.578-1.804.578-2.822c0-2.822-1.639-4.603-4.917-5.344.737-.255 1.372-.564 1.906-.929s.974-.772 1.32-1.22c.346-.448.602-.929.767-1.444s.247-1.054.247-1.618c0-.985-.165-1.87-.495-2.656s-.85-1.455-1.559-2.008c-.709-.553-1.617-.979-2.723-1.278s-2.439-.448-4.001-.448H9.768c-1.105 0-2 .901-2 2.012v19.976c0 1.111.895 2.012 2 2.012h7.009zm-4.571-13.61V7.452H16c1.496 0 2.596.266 3.3.797s1.056 1.422 1.056 2.672c0 1.206-.39 2.086-1.172 2.639s-1.925.83-3.432.83h-3.547zm0 10.125v-7.037h4.488c.781 0 1.447.077 1.997.232s1.001.379 1.353.672c.352.293.611.647.776 1.062s.247.882.247 1.402c0 .498-.074.968-.223 1.411s-.39.83-.726 1.162c-.335.332-.781.598-1.337.797s-1.246.299-2.071.299h-4.505z"
}))));
Bold.displayName = "Bold";
Bold["iconName"] = "bold";
var Bold_default = Bold;

// src/icon/BookmarkBorder.tsx
import React71, { forwardRef as forwardRef71, memo as memo71 } from "react";
var BookmarkBorder = memo71(forwardRef71((props, svgRef) => /* @__PURE__ */ React71.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React71.createElement("path", {
  d: "M25 3a2 2 0 012 2v23.178a1 1 0 01-1.537.844l-8.926-5.68a1.002 1.002 0 00-1.074 0l-8.926 5.68A1.001 1.001 0 015 28.178V5a2 2 0 012-2h18zm-1 2H8a1 1 0 00-1 1v20.357l7.926-5.044a2 2 0 012.148 0L25 26.357V6a1 1 0 00-1-1z"
}))));
BookmarkBorder.displayName = "BookmarkBorder";
BookmarkBorder["iconName"] = "bookmark_border";
var BookmarkBorder_default = BookmarkBorder;

// src/icon/Bookmark.tsx
import React72, { forwardRef as forwardRef72, memo as memo72 } from "react";
var Bookmark = memo72(forwardRef72((props, svgRef) => /* @__PURE__ */ React72.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React72.createElement("path", {
  d: "M25 3a2 2 0 012 2v23.178a1 1 0 01-1.537.844l-8.926-5.68a1.002 1.002 0 00-1.074 0l-8.926 5.68A1.001 1.001 0 015 28.178V5a2 2 0 012-2h18z"
}))));
Bookmark.displayName = "Bookmark";
Bookmark["iconName"] = "bookmark";
var Bookmark_default = Bookmark;

// src/icon/BoxNew.tsx
import React73, { forwardRef as forwardRef73, memo as memo73 } from "react";
var BoxNew = memo73(forwardRef73((props, svgRef) => /* @__PURE__ */ React73.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React73.createElement("path", {
  d: "M15.984 10.254c-2.15 0-4.137.674-5.769 1.811V4.073C10.215 2.928 9.273 2 8.112 2s-2.103.928-2.103 2.073v15.272c-.021.259.003 1.756.072 2.181C6.772 26.314 10.937 30 15.985 30c5.532 0 10.016-4.42 10.016-9.873s-4.484-9.873-10.016-9.873zm0 15.56c-3.186 0-5.769-2.546-5.769-5.687s2.583-5.687 5.769-5.687 5.769 2.546 5.769 5.687-2.583 5.687-5.769 5.687z"
}))));
BoxNew.displayName = "BoxNew";
BoxNew["iconName"] = "box-new";
var BoxNew_default = BoxNew;

// src/icon/Box.tsx
import React74, { forwardRef as forwardRef74, memo as memo74 } from "react";
var Box = memo74(forwardRef74((props, svgRef) => /* @__PURE__ */ React74.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React74.createElement("path", {
  fill: "var(--color1, #0061d5)",
  d: "M1.279 7.364C.559 7.364 0 7.924 0 8.563v10.065a6.122 6.122 0 006.119 5.992h.034-.002a6.288 6.288 0 005.497-3.244l.016-.032c1.039 1.917 3.116 3.276 5.432 3.276 3.436 0 6.232-2.716 6.232-6.151.08-3.276-2.716-5.993-6.151-5.993-2.317 0-4.393 1.279-5.432 3.196-1.04-1.917-3.117-3.196-5.513-3.196-1.439 0-2.717.48-3.756 1.199V8.563A1.227 1.227 0 001.28 7.364h-.002zm22.19 4.983a1.265 1.265 0 00-.943.213l.004-.003c-.48.4-.639 1.199-.24 1.757l3.196 4.155-3.195 4.153c-.4.56-.32 1.28.24 1.68.559.4 1.355.397 1.755-.163l2.719-3.515L29.8 24.22c.4.48 1.199.559 1.757.16.48-.4.56-1.12.161-1.679l-3.117-4.153 3.117-4.076c.4-.559.397-1.357-.161-1.757-.64-.4-1.359-.32-1.757.24l-2.795 3.435-2.72-3.593c-.199-.24-.497-.4-.816-.451zM6.151 14.872c2.077 0 3.756 1.68 3.756 3.677 0 2.077-1.679 3.675-3.756 3.675s-3.755-1.597-3.755-3.675c0-1.997 1.677-3.677 3.755-3.677zm11.026 0c2.077 0 3.755 1.68 3.755 3.677-.08 2.077-1.757 3.675-3.755 3.675-2.077 0-3.756-1.597-3.756-3.675 0-1.997 1.679-3.677 3.756-3.677z"
}))));
Box.displayName = "Box";
Box["iconName"] = "box";
var Box_default = Box;

// src/icon/Box1.tsx
import React75, { forwardRef as forwardRef75, memo as memo75 } from "react";
var Box1 = memo75(forwardRef75((props, svgRef) => /* @__PURE__ */ React75.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React75.createElement("path", {
  d: "M21.826 10.318l-.738-1.65c-1.25-2.192-3.377-3.59-6.918-3.339a5.687 5.687 0 00-1.788.55c-1.657.766-3.495 2.398-3.809 4.479l-1.982.629c-1.228.578-2.535 1.542-3.264 2.632a10.995 10.995 0 00-1.399 2.985c-.519 1.739.01 3.767.505 5.029 1.011 2.579 3.214 4.354 6.218 4.911l2.682.078h4.741c2.567 0 5.827.355 8.006-.235 2.808-.761 4.999-2.79 5.83-5.54 1.744-5.775-2.875-10.593-8.084-10.529zm-5.07 13.454c-1.532 0-2.845-.901-3.482-2.201-.638 1.3-1.95 2.201-3.482 2.201-2.154 0-3.9-1.765-3.9-3.943v-.048V13.282c0-.466.374-.845.835-.845s.836.379.836.845v3.312a3.857 3.857 0 012.229-.706c1.532 0 2.844.901 3.482 2.2.638-1.299 1.95-2.2 3.482-2.2 2.153 0 3.899 1.765 3.899 3.942s-1.746 3.943-3.899 3.943zm9.302-1.213c.278.372.205.903-.163 1.183s-.893.208-1.17-.165l-1.701-2.276-1.701 2.276c-.278.373-.802.446-1.17.165s-.442-.811-.164-1.183l1.987-2.658-1.987-2.659c-.278-.372-.205-.902.164-1.183s.892-.207 1.17.165l1.701 2.276 1.701-2.276c.277-.372.801-.446 1.17-.165s.441.811.163 1.183l-1.987 2.659 1.987 2.658zm-9.302-4.982c1.231 0 2.228 1.008 2.228 2.252s-.997 2.253-2.228 2.253c-1.231 0-2.229-1.009-2.229-2.253s.998-2.252 2.229-2.252zm-6.964 0c1.231 0 2.228 1.008 2.228 2.252s-.998 2.253-2.228 2.253c-1.231 0-2.229-1.009-2.229-2.253s.998-2.252 2.229-2.252z"
}))));
Box1.displayName = "Box1";
Box1["iconName"] = "box1";
var Box1_default = Box1;

// src/icon/BubbleLines.tsx
import React76, { forwardRef as forwardRef76, memo as memo76 } from "react";
var BubbleLines = memo76(forwardRef76((props, svgRef) => /* @__PURE__ */ React76.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React76.createElement("path", {
  d: "M22 9a2 2 0 012 2v12a2 2 0 01-2 2h-4.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141A1 1 0 008.587 25H4.001a2 2 0 01-2-2V11a2 2 0 012-2h18zm6-6a2 2 0 012 2v12a2 2 0 01-2 2h-3v-9a2.001 2.001 0 00-1.851-1.995L23 8H8V5a2 2 0 012-2h18z"
}))));
BubbleLines.displayName = "BubbleLines";
BubbleLines["iconName"] = "bubble_lines";
var BubbleLines_default = BubbleLines;

// src/icon/BubbleLinesBorder.tsx
import React77, { forwardRef as forwardRef77, memo as memo77 } from "react";
var BubbleLinesBorder = memo77(forwardRef77((props, svgRef) => /* @__PURE__ */ React77.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React77.createElement("path", {
  d: "M22 9a2 2 0 012 2v12a2 2 0 01-2 2h-4.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141A1 1 0 008.587 25H4.001a2 2 0 01-2-2V11a2 2 0 012-2h18zm-1 2H5a1 1 0 00-1 1v10a1 1 0 001 1h4a2 2 0 011.414.586L13 26.172l2.586-2.586A2 2 0 0117 23h4a1 1 0 001-1V12a1 1 0 00-1-1zm7-8a2 2 0 012 2v12a2 2 0 01-2 2h-3v-2h2a1 1 0 001-1V6a1 1 0 00-1-1H11a1 1 0 00-1 1v2H8V5a2 2 0 012-2h18z"
}))));
BubbleLinesBorder.displayName = "BubbleLinesBorder";
BubbleLinesBorder["iconName"] = "bubble_lines_border";
var BubbleLinesBorder_default = BubbleLinesBorder;

// src/icon/CallAdd.tsx
import React78, { forwardRef as forwardRef78, memo as memo78 } from "react";
var CallAdd = memo78(forwardRef78((props, svgRef) => /* @__PURE__ */ React78.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React78.createElement("path", {
  d: "M16 4a2 2 0 012 2v8h8a2 2 0 110 4h-8v8a2 2 0 11-4 0v-8H6a2 2 0 110-4h8V6a2 2 0 012-2z"
}))));
CallAdd.displayName = "CallAdd";
CallAdd["iconName"] = "call-add";
var CallAdd_default = CallAdd;

// src/icon/CallList.tsx
import React79, { forwardRef as forwardRef79, memo as memo79 } from "react";
var CallList = memo79(forwardRef79((props, svgRef) => /* @__PURE__ */ React79.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React79.createElement("path", {
  d: "M6.185 11.773l1.148 3.329c.13.367.05.712-.326.928l-1.005.58c-.961.555-1.055 1.421-.724 2.377.228.657.717 1.604 1.27 2.563l.278.473c.464.775.928 1.472 1.312 1.917.657.755 1.454 1.107 2.415.552l1.005-.58c.376-.217.715-.114.967.182l2.224 2.561c.733.806.399 1.477-.606 2.057-.909.525-1.846.576-2.845.317-2.547-.679-5.07-3.234-6.828-6.279s-2.709-6.508-2.024-9.053c.276-.995.789-1.781 1.697-2.305.948-.547 1.69-.557 2.043.382zM29 24a1 1 0 010 2H19a1 1 0 010-2h10zm0-9a1 1 0 010 2H13a1 1 0 010-2h16zm0-9a1 1 0 010 2H3a1 1 0 010-2h26z"
}))));
CallList.displayName = "CallList";
CallList["iconName"] = "call-list";
var CallList_default = CallList;

// src/icon/CallMore.tsx
import React80, { forwardRef as forwardRef80, memo as memo80 } from "react";
var CallMore = memo80(forwardRef80((props, svgRef) => /* @__PURE__ */ React80.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React80.createElement("path", {
  d: "M6 13a3 3 0 110 6 3 3 0 010-6zm10 0a3 3 0 110 6 3 3 0 010-6zm10 0a3 3 0 110 6 3 3 0 010-6z"
}))));
CallMore.displayName = "CallMore";
CallMore["iconName"] = "call-more";
var CallMore_default = CallMore;

// src/icon/CallOnBehalf.tsx
import React81, { forwardRef as forwardRef81, memo as memo81 } from "react";
var CallOnBehalf = memo81(forwardRef81((props, svgRef) => /* @__PURE__ */ React81.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React81.createElement("path", {
  d: "M27.11 11.037c.405.063.849.222 1.37.477.495.242.886.48 1.188.733.693.585 1.117 1.376 1.263 2.319.137.8.076 1.695-.171 2.661-.232.907-.625 1.862-1.178 2.871-.542.998-1.236 2.007-2.08 3.024a20.858 20.858 0 01-1.956 2.035 14.3 14.3 0 01-1.999 1.57c-.696.448-1.385.796-2.07 1.042a6.334 6.334 0 01-2.144.397c-.458 0-.889-.062-1.289-.19a3.418 3.418 0 01-.943-.467l-.208-.159c-.261-.195-.578-.517-.917-.931-.309-.376-.536-.712-.688-1.032l-.069-.159c-.233-.461-.284-1.074-.125-1.676a2.824 2.824 0 01.953-1.467l.845-.71.494-.429c.338-.299.664-.597.978-.895.391-.423.989-.701 1.658-.761a2.912 2.912 0 011.767.398l.125.085a4.6 4.6 0 01.205.152l.135.114-.052.049c.183-.164.39-.383.619-.654l.148-.183.176-.232.078-.11.09-.135-.154-.111a5.72 5.72 0 01-.175-.142c-.517-.518-.789-1.055-.868-1.66a2.577 2.577 0 01.418-1.771l.206-.302.369-.561c.114-.178.219-.348.317-.51.241-.401.454-.788.639-1.159.318-.585.758-1.006 1.317-1.27a2.937 2.937 0 011.731-.25zM12 17c1.439 0 2.822.226 4.092.64a3.383 3.383 0 00-.114.775l-.001.175-.105.058c-.338.195-.64.447-.893.744A11.371 11.371 0 0012 19c-4.878 0-8.85 3.019-8.996 6.786L3 26h10.981a1 1 0 00-.098 1.993L14 28H3a2 2 0 01-2-2c0-5.096 5.019-9 11-9zm14.233-3.904a.853.853 0 00-.398.386c-.193.387-.431.819-.697 1.263s-.581.928-.946 1.461a.56.56 0 00-.094.397c.021.16.091.298.246.455l.008.003.123.087.089.058c.032.02.067.04.104.06l.091.059.076.038.11.06.068.031.707.375-.146.729a2.586 2.586 0 01-.153.479 4.367 4.367 0 01-.405.782c-.178.282-.4.582-.663.898a8.648 8.648 0 01-.816.859 4.275 4.275 0 01-.755.557c-.086.048-.167.09-.242.124l-.664.302-.608-.669h-.002l.002-.146h-.126l-.01-.014.007.014-.207-.2a1.714 1.714 0 00-.217-.167.9.9 0 00-.519-.094c-.19.017-.327.08-.415.175-.281.269-.545.513-.809.751l-.424.376-.556.477-.674.564a.832.832 0 00-.294.437.492.492 0 00.015.349c.091.218.237.443.479.738.247.301.459.516.613.632.174.143.334.23.519.289.196.063.422.095.68.095.456 0 .945-.092 1.469-.28a8.166 8.166 0 001.662-.84c.575-.37 1.154-.826 1.731-1.364a18.76 18.76 0 001.774-1.845c.758-.913 1.379-1.815 1.858-2.697.479-.873.809-1.675.997-2.409.181-.71.223-1.325.134-1.845-.077-.495-.266-.848-.576-1.11-.158-.132-.417-.291-.778-.467-.357-.174-.625-.27-.802-.298a.946.946 0 00-.567.083zM12 3a6 6 0 110 12 6 6 0 010-12zm0 2a4 4 0 100 8 4 4 0 000-8z"
}))));
CallOnBehalf.displayName = "CallOnBehalf";
CallOnBehalf["iconName"] = "call_on_behalf";
var CallOnBehalf_default = CallOnBehalf;

// src/icon/ChatBubble.tsx
import React82, { forwardRef as forwardRef82, memo as memo82 } from "react";
var ChatBubble = memo82(forwardRef82((props, svgRef) => /* @__PURE__ */ React82.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React82.createElement("path", {
  d: "M28 4a2 2 0 012 2v16a2 2 0 01-2 2h-7.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141a1 1 0 00-.707-.293H4.001a2 2 0 01-2-2V6a2 2 0 012-2h24zm-1 2H5a1 1 0 00-1 1v14a1 1 0 001 1h7a2 2 0 011.414.586L16 25.172l2.586-2.586A2 2 0 0120 22h7a1 1 0 001-1V7a1 1 0 00-1-1zm-7.222 3a1 1 0 011 1v7a1 1 0 01-2 0l.001-4.585-6.072 6.07a.999.999 0 11-1.414-1.414l6.072-6.07L12.779 11a1 1 0 010-2h7z"
}))));
ChatBubble.displayName = "ChatBubble";
ChatBubble["iconName"] = "chat_bubble";
var ChatBubble_default = ChatBubble;

// src/icon/Check.tsx
import React83, { forwardRef as forwardRef83, memo as memo83 } from "react";
var Check = memo83(forwardRef83((props, svgRef) => /* @__PURE__ */ React83.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React83.createElement("path", {
  d: "M24.678 8.293a.999.999 0 011.497 1.32l-.083.094-12.314 12.314a1 1 0 01-1.32.083l-.094-.083-7.071-7.071a.999.999 0 011.32-1.497l.094.083L13.07 19.9 24.678 8.293z"
}))));
Check.displayName = "Check";
Check["iconName"] = "check";
var Check_default = Check;

// src/icon/ChevronLeft.tsx
import React84, { forwardRef as forwardRef84, memo as memo84 } from "react";
var ChevronLeft = memo84(forwardRef84((props, svgRef) => /* @__PURE__ */ React84.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React84.createElement("path", {
  d: "M9.318 14.939a1.5 1.5 0 000 2.121l10.607 10.607a1.5 1.5 0 102.121-2.121L12.5 16l9.546-9.546a1.5 1.5 0 10-2.121-2.121L9.318 14.94z"
}))));
ChevronLeft.displayName = "ChevronLeft";
ChevronLeft["iconName"] = "chevron_left";
var ChevronLeft_default = ChevronLeft;

// src/icon/ChevronRight.tsx
import React85, { forwardRef as forwardRef85, memo as memo85 } from "react";
var ChevronRight = memo85(forwardRef85((props, svgRef) => /* @__PURE__ */ React85.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React85.createElement("path", {
  d: "M22.682 14.939a1.5 1.5 0 010 2.121L12.075 27.667a1.5 1.5 0 11-2.121-2.121L19.5 16 9.954 6.454a1.5 1.5 0 112.121-2.121L22.682 14.94z"
}))));
ChevronRight.displayName = "ChevronRight";
ChevronRight["iconName"] = "chevron_right";
var ChevronRight_default = ChevronRight;

// src/icon/Close.tsx
import React86, { forwardRef as forwardRef86, memo as memo86 } from "react";
var Close = memo86(forwardRef86((props, svgRef) => /* @__PURE__ */ React86.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React86.createElement("path", {
  d: "M25.899 7.515L17.414 16l8.485 8.486a1 1 0 01-1.414 1.414L16 17.413 7.515 25.9a1 1 0 01-1.414-1.414l8.485-8.487-8.485-8.484a.999.999 0 111.414-1.414l8.486 8.485 8.485-8.485A.999.999 0 1125.9 7.515z"
}))));
Close.displayName = "Close";
Close["iconName"] = "close";
var Close_default = Close;

// src/icon/CloudContact.tsx
import React87, { forwardRef as forwardRef87, memo as memo87 } from "react";
var CloudContact = memo87(forwardRef87((props, svgRef) => /* @__PURE__ */ React87.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React87.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm7 7H9a1 1 0 00-1 1v9a1 1 0 001 1h2.793c.133 0 .26.053.354.146l3.571 5.571a.4.4 0 00.566 0l3.571-5.571a.5.5 0 01.354-.146h2.793a1 1 0 001-1v-9a1 1 0 00-1-1z"
}))));
CloudContact.displayName = "CloudContact";
CloudContact["iconName"] = "cloud_contact";
var CloudContact_default = CloudContact;

// src/icon/CodeSnippets.tsx
import React88, { forwardRef as forwardRef88, memo as memo88 } from "react";
var CodeSnippets = memo88(forwardRef88((props, svgRef) => /* @__PURE__ */ React88.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React88.createElement("path", {
  d: "M28 4a2 2 0 012 2v20a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2h24zm0 7H4v14a1 1 0 001 1h22a1 1 0 001-1V11zM9.707 13.293l4.243 4.243a.999.999 0 010 1.414l-4.243 4.243a1 1 0 01-1.414-1.414l3.536-3.536-3.536-3.536a.999.999 0 111.414-1.414zM23 21a1 1 0 010 2h-6a1 1 0 010-2h6zm4-15H5a1 1 0 00-1 1v2h24V7a1 1 0 00-1-1z"
}))));
CodeSnippets.displayName = "CodeSnippets";
CodeSnippets["iconName"] = "code_snippets";
var CodeSnippets_default = CodeSnippets;

// src/icon/Comments.tsx
import React89, { forwardRef as forwardRef89, memo as memo89 } from "react";
var Comments = memo89(forwardRef89((props, svgRef) => /* @__PURE__ */ React89.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React89.createElement("path", {
  d: "M28 4a2 2 0 012 2v16a2 2 0 01-2 2h-7.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141a1 1 0 00-.707-.293H4.001a2 2 0 01-2-2V6a2 2 0 012-2h24zm-1 2H5a1 1 0 00-1 1v14a1 1 0 001 1h7a2 2 0 011.414.586L16 25.172l2.586-2.586A2 2 0 0120 22h7a1 1 0 001-1V7a1 1 0 00-1-1zM9 12a2 2 0 11.001 3.999A2 2 0 019 12zm7 0a2 2 0 11.001 3.999A2 2 0 0116 12zm7 0a2 2 0 11.001 3.999A2 2 0 0123 12z"
}))));
Comments.displayName = "Comments";
Comments["iconName"] = "comments";
var Comments_default = Comments;

// src/icon/Computer.tsx
import React90, { forwardRef as forwardRef90, memo as memo90 } from "react";
var Computer = memo90(forwardRef90((props, svgRef) => /* @__PURE__ */ React90.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React90.createElement("path", {
  d: "M5 24.005a2.002 2.002 0 01-2-2v-16a2.002 2.002 0 012-2h22a2.002 2.002 0 012 2v16a2.003 2.003 0 01-2 2H5zm0-17v14a1 1 0 001 1h20a1 1 0 001-1v-14a1 1 0 00-1-1H6a1 1 0 00-1 1zm-3 19h28a1 1 0 010 2H2a1 1 0 010-2z"
}))));
Computer.displayName = "Computer";
Computer["iconName"] = "computer";
var Computer_default = Computer;

// src/icon/ConferenceBorder.tsx
import React91, { forwardRef as forwardRef91, memo as memo91 } from "react";
var ConferenceBorder = memo91(forwardRef91((props, svgRef) => /* @__PURE__ */ React91.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React91.createElement("path", {
  d: "M28.758 21.902a3 3 0 11-3 5.196 3 3 0 113-5.196zM7.34 23a3 3 0 11-5.196 3 3 3 0 015.196-3zM16 10a8 8 0 110 16 8 8 0 010-16zm10.392 14a1 1 0 101.733 1 1 1 0 00-1.733-1zm-22.15-.366a1 1 0 101.001 1.732 1 1 0 00-1.001-1.732zM16 12a6 6 0 100 12 6 6 0 000-12zm0-10a3 3 0 110 6 3 3 0 010-6zm0 2a1 1 0 100 2 1 1 0 000-2z"
}))));
ConferenceBorder.displayName = "ConferenceBorder";
ConferenceBorder["iconName"] = "conference_border";
var ConferenceBorder_default = ConferenceBorder;

// src/icon/Conference.tsx
import React92, { forwardRef as forwardRef92, memo as memo92 } from "react";
var Conference = memo92(forwardRef92((props, svgRef) => /* @__PURE__ */ React92.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React92.createElement("path", {
  d: "M28.758 21.902a3 3 0 11-3 5.196 3 3 0 113-5.196zM7.34 23a3 3 0 11-5.196 3 3 3 0 015.196-3zM16 10a8 8 0 110 16 8 8 0 010-16zm0-8a3 3 0 110 6 3 3 0 010-6z"
}))));
Conference.displayName = "Conference";
Conference["iconName"] = "conference";
var Conference_default = Conference;

// src/icon/Connect.tsx
import React93, { forwardRef as forwardRef93, memo as memo93 } from "react";
var Connect = memo93(forwardRef93((props, svgRef) => /* @__PURE__ */ React93.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React93.createElement("path", {
  d: "M23.344 16.945a1 1 0 00-1.32.083l-.083.094a1 1 0 00.083 1.32l2.562 2.563L12.953 21a1 1 0 00.117 1.993l11.518.012-2.564 2.565-.083.094a1 1 0 001.497 1.32l4.271-4.271.083-.094a1 1 0 00-.083-1.32l-4.271-4.271zM8.654 4.962l-.094.083-4.271 4.271a1 1 0 00-.083 1.32l.083.094 4.271 4.271a.999.999 0 001.497-1.32l-.083-.094-2.564-2.565 12.586-.012a1 1 0 00.117-1.993l-.117-.007-12.584.012 2.562-2.563a1 1 0 00.083-1.32l-.083-.094a1 1 0 00-1.32-.083z"
}))));
Connect.displayName = "Connect";
Connect["iconName"] = "connect";
var Connect_default = Connect;

// src/icon/ContactsAndCalendars.tsx
import React94, { forwardRef as forwardRef94, memo as memo94 } from "react";
var ContactsAndCalendars = memo94(forwardRef94((props, svgRef) => /* @__PURE__ */ React94.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React94.createElement("path", {
  d: "M22 2a2 2 0 012 2v2h4a2 2 0 012 2v20a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2h4V4a2 2 0 114 0v2h8V4a2 2 0 012-2zm0 18H10a2.001 2.001 0 00-1.995 1.851L8 22v4h16v-4a2 2 0 00-2-2zm-6-10a4 4 0 100 8 4 4 0 000-8z"
}))));
ContactsAndCalendars.displayName = "ContactsAndCalendars";
ContactsAndCalendars["iconName"] = "contacts_and_calendars";
var ContactsAndCalendars_default = ContactsAndCalendars;

// src/icon/ContactsBorder.tsx
import React95, { forwardRef as forwardRef95, memo as memo95 } from "react";
var ContactsBorder = memo95(forwardRef95((props, svgRef) => /* @__PURE__ */ React95.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React95.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 20c-3.209 0-6.025 1.306-7.618 3.272l.082.067c2.06 1.665 4.682 2.662 7.537 2.662s5.477-.997 7.537-2.662l.081-.066c-1.594-1.966-4.41-3.272-7.618-3.272zm8.199 2.763l-.251.229a9.08 9.08 0 00.251-.229zM16 4C9.373 4 4 9.373 4 16c0 3.011 1.109 5.763 2.941 7.87C8.94 21.506 12.285 20 16 20s7.059 1.506 9.059 3.868A11.948 11.948 0 0028 16c0-6.627-5.373-12-12-12zm0 2a6 6 0 110 12 6 6 0 010-12zm0 2a4 4 0 100 8 4 4 0 000-8z"
}))));
ContactsBorder.displayName = "ContactsBorder";
ContactsBorder["iconName"] = "contacts_border";
var ContactsBorder_default = ContactsBorder;

// src/icon/Contacts.tsx
import React96, { forwardRef as forwardRef96, memo as memo96 } from "react";
var Contacts = memo96(forwardRef96((props, svgRef) => /* @__PURE__ */ React96.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React96.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 18c-3.715 0-7.059 1.506-9.059 3.87.352.405.731.786 1.134 1.14l.307.261.082.067.272.213c2.017 1.536 4.534 2.448 7.265 2.448s5.248-.912 7.265-2.448l.272-.213.081-.066.307-.261c.403-.355.782-.736 1.135-1.142-2-2.363-5.345-3.869-9.06-3.869zm0-13a5 5 0 10.001 10.001A5 5 0 0016 7z"
}))));
Contacts.displayName = "Contacts";
Contacts["iconName"] = "contacts";
var Contacts_default = Contacts;

// src/icon/Copy.tsx
import React97, { forwardRef as forwardRef97, memo as memo97 } from "react";
var Copy = memo97(forwardRef97((props, svgRef) => /* @__PURE__ */ React97.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React97.createElement("path", {
  d: "M27 28H10a1 1 0 01-1-1V10a1 1 0 011-1h17a1 1 0 011 1v17a1 1 0 01-1 1zm1-21H9a2 2 0 00-2 2v19a2 2 0 002 2h19a2 2 0 002-2V9a2 2 0 00-2-2zM3 18a1 1 0 01-1-1V4a2 2 0 012-2h13a1 1 0 010 2H5a1 1 0 00-1 1v12a1 1 0 01-1 1z"
}))));
Copy.displayName = "Copy";
Copy["iconName"] = "copy";
var Copy_default = Copy;

// src/icon/CustomizeTabs.tsx
import React98, { forwardRef as forwardRef98, memo as memo98 } from "react";
var CustomizeTabs = memo98(forwardRef98((props, svgRef) => /* @__PURE__ */ React98.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React98.createElement("path", {
  d: "M22.32 22.967a1.742 1.742 0 010 3.484H4.306a1.742 1.742 0 010-3.484H22.32zm5.374-8.709a1.742 1.742 0 010 3.484H13.263a1.742 1.742 0 010-3.484h14.431zM22.32 5.55a1.742 1.742 0 010 3.484H4.306a1.742 1.742 0 010-3.484H22.32z"
}))));
CustomizeTabs.displayName = "CustomizeTabs";
CustomizeTabs["iconName"] = "customize-tabs";
var CustomizeTabs_default = CustomizeTabs;

// src/icon/DashboardBorder.tsx
import React99, { forwardRef as forwardRef99, memo as memo99 } from "react";
var DashboardBorder = memo99(forwardRef99((props, svgRef) => /* @__PURE__ */ React99.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React99.createElement("path", {
  d: "M27 3a2 2 0 012 2v22a2 2 0 01-2 2h-8a2 2 0 01-2-2V5a2 2 0 012-2h8zM13 21a2 2 0 012 2v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4a2 2 0 012-2h8zM26 5h-6a1 1 0 00-1 1v20a1 1 0 001 1h6a1 1 0 001-1V6a1 1 0 00-1-1zM12 23H6a1 1 0 00-1 1v2a1 1 0 001 1h6a1 1 0 001-1v-2a1 1 0 00-1-1zm1-20a2 2 0 012 2v12a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h8zm-1 2H6a1 1 0 00-1 1v10a1 1 0 001 1h6a1 1 0 001-1V6a1 1 0 00-1-1z"
}))));
DashboardBorder.displayName = "DashboardBorder";
DashboardBorder["iconName"] = "dashboard_border";
var DashboardBorder_default = DashboardBorder;

// src/icon/Dashboard.tsx
import React100, { forwardRef as forwardRef100, memo as memo100 } from "react";
var Dashboard = memo100(forwardRef100((props, svgRef) => /* @__PURE__ */ React100.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React100.createElement("path", {
  d: "M27 3a2 2 0 012 2v22a2 2 0 01-2 2h-8a2 2 0 01-2-2V5a2 2 0 012-2h8zM13 21a2 2 0 012 2v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4a2 2 0 012-2h8zm0-18a2 2 0 012 2v12a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h8z"
}))));
Dashboard.displayName = "Dashboard";
Dashboard["iconName"] = "dashboard";
var Dashboard_default = Dashboard;

// src/icon/DateBorder.tsx
import React101, { forwardRef as forwardRef101, memo as memo101 } from "react";
var DateBorder = memo101(forwardRef101((props, svgRef) => /* @__PURE__ */ React101.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React101.createElement("path", {
  d: "M26 4h-4V3a1 1 0 00-2 0v1h-8V3a1 1 0 00-2 0v1H6a2 2 0 00-2 2v20a2 2 0 002 2h20a2 2 0 002-2V6a2 2 0 00-2-2zm-1 22H7a1 1 0 01-1-1V12h20v13a1 1 0 01-1 1zm1-16H6V7a1 1 0 011-1h3v1a1 1 0 002 0V6h8v1a1 1 0 002 0V6h3a1 1 0 011 1v3z"
}))));
DateBorder.displayName = "DateBorder";
DateBorder["iconName"] = "date_border";
var DateBorder_default = DateBorder;

// src/icon/Date.tsx
import React102, { forwardRef as forwardRef102, memo as memo102 } from "react";
var Date2 = memo102(forwardRef102((props, svgRef) => /* @__PURE__ */ React102.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React102.createElement("path", {
  d: "M26 4h-4V3a1 1 0 00-2 0v1h-8V3a1 1 0 00-2 0v1H6a2 2 0 00-2 2v20a2 2 0 002 2h20a2 2 0 002-2V6a2 2 0 00-2-2zM4 10h24v2H4v-2z"
}))));
Date2.displayName = "Date";
Date2["iconName"] = "date";
var Date_default = Date2;

// src/icon/DefaultAvatar.tsx
import React103, { forwardRef as forwardRef103, memo as memo103 } from "react";
var DefaultAvatar = memo103(forwardRef103((props, svgRef) => /* @__PURE__ */ React103.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React103.createElement("path", {
  d: "M7.333 24.867c.04 0 .08-.041.113-.041a42.167 42.167 0 015.467-2.049c.113 0 .113 0 .113-.621a4.708 4.708 0 00-.227-1.523c-.113-.512-.38-1.25-.5-2.049a4.743 4.743 0 01-.873-2.049 2.76 2.76 0 010-1.755v-.061c0-.232-.12-1.407-.233-2.418a4.398 4.398 0 01.88-3.162 4.382 4.382 0 013.48-1.755h1.113a4.349 4.349 0 013.473 1.755 4.398 4.398 0 01.88 3.162 22.43 22.43 0 00-.113 2.418v.116c.183.57.183 1.185 0 1.755a4.849 4.849 0 01-.953 2.049 4.71 4.71 0 01-.5 2.049 7.383 7.383 0 00-.38 1.523c0 .621 0 .621.113.621a49.085 49.085 0 015.54 2.049 12.771 12.771 0 01-17.393-.014zm18.794-.074v-.04c.121-.147.268-.3.389-.453v-.08c.121-.147.235-.3.349-.453.04-.04.04-.08.074-.08.121-.147.194-.3.308-.453.04-.04.04-.08.08-.113.074-.153.188-.307.268-.46.04-.04.04-.073.074-.113l.235-.46c.04-.033.04-.113.074-.153.083-.143.148-.295.194-.453.04-.08.04-.113.08-.193s.114-.3.188-.42.04-.113.08-.187.114-.267.154-.42c.04-.153.034-.153.074-.227s.08-.267.114-.42c.034-.153.04-.153.08-.227l.114-.42c0-.08.04-.153.04-.233s.04-.267.074-.413c.034-.147.04-.153.04-.267s.04-.307.08-.42c.04-.113 0-.153 0-.267s.04-.307.04-.493v-.92a13.144 13.144 0 00-1.81-6.891c-.22-.369-.462-.725-.724-1.066-.268-.34-.536-.666-.804-.993a11.07 11.07 0 00-.925-.913 6.628 6.628 0 00-.496-.42 12.834 12.834 0 00-2.735-1.713c-.389-.187-.811-.34-1.193-.493-.415-.15-.838-.277-1.267-.38a12.53 12.53 0 00-3.264-.42C8.7 2.662 2.684 8.626 2.666 15.995v.953c0 .153.04.307.04.46s.034.187.034.26c0 .073.04.267.04.42s.04.193.04.267c0 .073.04.267.074.42s.04.193.08.267c.04.073.074.267.114.38s.04.193.08.267c.04.073.074.267.114.38.032.087.057.176.074.267.037.132.088.259.154.38l.121.233c.034.113.114.267.147.38l.121.227c.074.113.114.267.188.38l.121.233c.079.118.142.246.188.38.04.073.08.113.121.187s.154.267.228.38c.074.113.074.12.114.193s.194.267.268.38c.074.113.08.113.121.153s.188.267.302.38l.121.113c.114.153.228.267.342.42.04.04.08.08.08.113.114.153.268.267.382.42l.074.08.463.453c5.377 4.898 13.7 4.646 18.768-.566l.349-.46z"
}))));
DefaultAvatar.displayName = "DefaultAvatar";
DefaultAvatar["iconName"] = "default-avatar";
var DefaultAvatar_default = DefaultAvatar;

// src/icon/DefaultFileD.tsx
import React104, { forwardRef as forwardRef104, memo as memo104 } from "react";
var DefaultFileD = memo104(forwardRef104((props, svgRef) => /* @__PURE__ */ React104.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React104.createElement("path", {
  fill: "var(--color21, #222b42)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React104.createElement("path", {
  fill: "var(--color38, #2f51b1)",
  d: "M22.105 8.889H9.893c-.989-.002-1.793.902-1.794 2.018 0 .091.005.182.016.272.025.222.206.379.402.35a.343.343 0 00.136-.052.933.933 0 01.522-.156h2.557c.462.001.872.333 1.021.825l.061.222c.247.825.932 1.382 1.705 1.384h8.304c.188 0 .373.056.537.162a.332.332 0 00.182.055c.198 0 .359-.181.359-.405v-2.648c0-1.119-.804-2.026-1.796-2.026z"
}), /* @__PURE__ */ React104.createElement("path", {
  fill: "var(--color37, #356afd)",
  d: "M23.965 13.314a1.879 1.879 0 00-.928-.242h-8.563a1.113 1.113 0 01-1.053-.73l-.063-.196c-.255-.73-.962-1.223-1.758-1.225H8.963a1.818 1.818 0 00-.907.232 1.779 1.779 0 00-.945 1.561v8.605c0 .99.829 1.793 1.852 1.793h14.074c1.023 0 1.852-.803 1.852-1.793v-6.454a1.77 1.77 0 00-.924-1.55z"
}))));
DefaultFileD.displayName = "DefaultFileD";
DefaultFileD["iconName"] = "default-file-D";
var DefaultFileD_default = DefaultFileD;

// node_modules/@material-ui/core/esm/colors/common.js
var common = {
  black: "#000",
  white: "#fff"
};
var common_default = common;

// node_modules/@material-ui/core/esm/colors/red.js
var red = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
};
var red_default = red;

// node_modules/@material-ui/core/esm/colors/pink.js
var pink = {
  50: "#fce4ec",
  100: "#f8bbd0",
  200: "#f48fb1",
  300: "#f06292",
  400: "#ec407a",
  500: "#e91e63",
  600: "#d81b60",
  700: "#c2185b",
  800: "#ad1457",
  900: "#880e4f",
  A100: "#ff80ab",
  A200: "#ff4081",
  A400: "#f50057",
  A700: "#c51162"
};
var pink_default = pink;

// node_modules/@material-ui/core/esm/colors/indigo.js
var indigo = {
  50: "#e8eaf6",
  100: "#c5cae9",
  200: "#9fa8da",
  300: "#7986cb",
  400: "#5c6bc0",
  500: "#3f51b5",
  600: "#3949ab",
  700: "#303f9f",
  800: "#283593",
  900: "#1a237e",
  A100: "#8c9eff",
  A200: "#536dfe",
  A400: "#3d5afe",
  A700: "#304ffe"
};
var indigo_default = indigo;

// node_modules/@material-ui/core/esm/colors/blue.js
var blue = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
};
var blue_default = blue;

// node_modules/@material-ui/core/esm/colors/green.js
var green = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
};
var green_default = green;

// node_modules/@material-ui/core/esm/colors/orange.js
var orange = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
};
var orange_default = orange;

// node_modules/@material-ui/core/esm/colors/grey.js
var grey = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#d5d5d5",
  A200: "#aaaaaa",
  A400: "#303030",
  A700: "#616161"
};
var grey_default = grey;

// node_modules/@material-ui/utils/esm/chainPropTypes.js
function chainPropTypes(propType1, propType2) {
  if (false) {
    return function() {
      return null;
    };
  }
  return function validate() {
    return propType1.apply(void 0, arguments) || propType2.apply(void 0, arguments);
  };
}

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof3(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function _typeof3(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}

// node_modules/@material-ui/utils/esm/deepmerge.js
function isPlainObject(item) {
  return item && _typeof(item) === "object" && item.constructor === Object;
}
function deepmerge(target, source) {
  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
    clone: true
  };
  var output = options.clone ? _extends({}, target) : target;
  if (isPlainObject(target) && isPlainObject(source)) {
    Object.keys(source).forEach(function(key) {
      if (key === "__proto__") {
        return;
      }
      if (isPlainObject(source[key]) && key in target) {
        output[key] = deepmerge(target[key], source[key], options);
      } else {
        output[key] = source[key];
      }
    });
  }
  return output;
}

// node_modules/@material-ui/utils/esm/elementAcceptingRef.js
var import_prop_types = __toModule(require_prop_types());
function isClassComponent(elementType2) {
  var _elementType$prototyp = elementType2.prototype, prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;
  return Boolean(prototype.isReactComponent);
}
function acceptingRef(props, propName, componentName2, location, propFullName) {
  var element2 = props[propName];
  var safePropName = propFullName || propName;
  if (element2 == null) {
    return null;
  }
  var warningHint;
  var elementType2 = element2.type;
  if (typeof elementType2 === "function" && !isClassComponent(elementType2)) {
    warningHint = "Did you accidentally use a plain function component for an element instead?";
  }
  if (warningHint !== void 0) {
    return new Error("Invalid ".concat(location, " `").concat(safePropName, "` supplied to `").concat(componentName2, "`. ") + "Expected an element that can hold a ref. ".concat(warningHint, " ") + "For more information see https://material-ui.com/r/caveat-with-refs-guide");
  }
  return null;
}
var elementAcceptingRef = chainPropTypes(import_prop_types.default.element, acceptingRef);
elementAcceptingRef.isRequired = chainPropTypes(import_prop_types.default.element.isRequired, acceptingRef);
var elementAcceptingRef_default = elementAcceptingRef;

// node_modules/@material-ui/utils/esm/elementTypeAcceptingRef.js
var PropTypes2 = __toModule(require_prop_types());
function isClassComponent2(elementType2) {
  var _elementType$prototyp = elementType2.prototype, prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;
  return Boolean(prototype.isReactComponent);
}
function elementTypeAcceptingRef(props, propName, componentName2, location, propFullName) {
  var propValue = props[propName];
  var safePropName = propFullName || propName;
  if (propValue == null) {
    return null;
  }
  var warningHint;
  if (typeof propValue === "function" && !isClassComponent2(propValue)) {
    warningHint = "Did you accidentally provide a plain function component instead?";
  }
  if (warningHint !== void 0) {
    return new Error("Invalid ".concat(location, " `").concat(safePropName, "` supplied to `").concat(componentName2, "`. ") + "Expected an element type that can hold a ref. ".concat(warningHint, " ") + "For more information see https://material-ui.com/r/caveat-with-refs-guide");
  }
  return null;
}
var elementTypeAcceptingRef_default = chainPropTypes(PropTypes2.elementType, elementTypeAcceptingRef);

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

// node_modules/@material-ui/utils/esm/exactProp.js
var specialProperty = "exact-prop: \u200B";
function exactProp(propTypes) {
  if (false) {
    return propTypes;
  }
  return _extends({}, propTypes, _defineProperty({}, specialProperty, function(props) {
    var unsupportedProps = Object.keys(props).filter(function(prop2) {
      return !propTypes.hasOwnProperty(prop2);
    });
    if (unsupportedProps.length > 0) {
      return new Error("The following props are not supported: ".concat(unsupportedProps.map(function(prop2) {
        return "`".concat(prop2, "`");
      }).join(", "), ". Please remove them."));
    }
    return null;
  }));
}

// node_modules/@material-ui/utils/esm/getDisplayName.js
var import_react_is = __toModule(require_react_is2());
var fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
function getFunctionName(fn) {
  var match2 = "".concat(fn).match(fnNameMatchRegex);
  var name = match2 && match2[1];
  return name || "";
}
function getFunctionComponentName(Component7) {
  var fallback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  return Component7.displayName || Component7.name || getFunctionName(Component7) || fallback;
}
function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = getFunctionComponentName(innerType);
  return outerType.displayName || (functionName !== "" ? "".concat(wrapperName, "(").concat(functionName, ")") : wrapperName);
}
function getDisplayName(Component7) {
  if (Component7 == null) {
    return void 0;
  }
  if (typeof Component7 === "string") {
    return Component7;
  }
  if (typeof Component7 === "function") {
    return getFunctionComponentName(Component7, "Component");
  }
  if (_typeof(Component7) === "object") {
    switch (Component7.$$typeof) {
      case import_react_is.ForwardRef:
        return getWrappedName(Component7, Component7.render, "ForwardRef");
      case import_react_is.Memo:
        return getWrappedName(Component7, Component7.type, "memo");
      default:
        return void 0;
    }
  }
  return void 0;
}

// node_modules/@material-ui/utils/esm/HTMLElementType.js
function HTMLElementType(props, propName, componentName2, location, propFullName) {
  if (false) {
    return null;
  }
  var propValue = props[propName];
  var safePropName = propFullName || propName;
  if (propValue == null) {
    return null;
  }
  if (propValue && propValue.nodeType !== 1) {
    return new Error("Invalid ".concat(location, " `").concat(safePropName, "` supplied to `").concat(componentName2, "`. ") + "Expected an HTMLElement.");
  }
  return null;
}

// node_modules/@material-ui/utils/esm/ponyfillGlobal.js
var ponyfillGlobal_default = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();

// node_modules/@material-ui/utils/esm/refType.js
var import_prop_types2 = __toModule(require_prop_types());
var refType = import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object]);
var refType_default = refType;

// node_modules/@material-ui/core/esm/styles/colorManipulator.js
function clamp(value) {
  var min2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var max2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
  if (true) {
    if (value < min2 || value > max2) {
      console.error("Material-UI: The value provided ".concat(value, " is out of range [").concat(min2, ", ").concat(max2, "]."));
    }
  }
  return Math.min(Math.max(min2, value), max2);
}
function hexToRgb(color2) {
  color2 = color2.substr(1);
  var re2 = new RegExp(".{1,".concat(color2.length >= 6 ? 2 : 1, "}"), "g");
  var colors = color2.match(re2);
  if (colors && colors[0].length === 1) {
    colors = colors.map(function(n2) {
      return n2 + n2;
    });
  }
  return colors ? "rgb".concat(colors.length === 4 ? "a" : "", "(").concat(colors.map(function(n2, index4) {
    return index4 < 3 ? parseInt(n2, 16) : Math.round(parseInt(n2, 16) / 255 * 1e3) / 1e3;
  }).join(", "), ")") : "";
}
function hslToRgb(color2) {
  color2 = decomposeColor(color2);
  var _color = color2, values6 = _color.values;
  var h2 = values6[0];
  var s2 = values6[1] / 100;
  var l2 = values6[2] / 100;
  var a2 = s2 * Math.min(l2, 1 - l2);
  var f = function f2(n2) {
    var k2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (n2 + h2 / 30) % 12;
    return l2 - a2 * Math.max(Math.min(k2 - 3, 9 - k2, 1), -1);
  };
  var type3 = "rgb";
  var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];
  if (color2.type === "hsla") {
    type3 += "a";
    rgb.push(values6[3]);
  }
  return recomposeColor({
    type: type3,
    values: rgb
  });
}
function decomposeColor(color2) {
  if (color2.type) {
    return color2;
  }
  if (color2.charAt(0) === "#") {
    return decomposeColor(hexToRgb(color2));
  }
  var marker = color2.indexOf("(");
  var type3 = color2.substring(0, marker);
  if (["rgb", "rgba", "hsl", "hsla"].indexOf(type3) === -1) {
    throw new Error(true ? "Material-UI: Unsupported `".concat(color2, "` color.\nWe support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().") : formatMuiErrorMessage(3, color2));
  }
  var values6 = color2.substring(marker + 1, color2.length - 1).split(",");
  values6 = values6.map(function(value) {
    return parseFloat(value);
  });
  return {
    type: type3,
    values: values6
  };
}
function recomposeColor(color2) {
  var type3 = color2.type;
  var values6 = color2.values;
  if (type3.indexOf("rgb") !== -1) {
    values6 = values6.map(function(n2, i2) {
      return i2 < 3 ? parseInt(n2, 10) : n2;
    });
  } else if (type3.indexOf("hsl") !== -1) {
    values6[1] = "".concat(values6[1], "%");
    values6[2] = "".concat(values6[2], "%");
  }
  return "".concat(type3, "(").concat(values6.join(", "), ")");
}
function getContrastRatio(foreground, background) {
  var lumA = getLuminance(foreground);
  var lumB = getLuminance(background);
  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}
function getLuminance(color2) {
  color2 = decomposeColor(color2);
  var rgb = color2.type === "hsl" ? decomposeColor(hslToRgb(color2)).values : color2.values;
  rgb = rgb.map(function(val) {
    val /= 255;
    return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
  });
  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
}
function emphasize(color2) {
  var coefficient = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0.15;
  return getLuminance(color2) > 0.5 ? darken(color2, coefficient) : lighten(color2, coefficient);
}
function alpha(color2, value) {
  color2 = decomposeColor(color2);
  value = clamp(value);
  if (color2.type === "rgb" || color2.type === "hsl") {
    color2.type += "a";
  }
  color2.values[3] = value;
  return recomposeColor(color2);
}
function darken(color2, coefficient) {
  color2 = decomposeColor(color2);
  coefficient = clamp(coefficient);
  if (color2.type.indexOf("hsl") !== -1) {
    color2.values[2] *= 1 - coefficient;
  } else if (color2.type.indexOf("rgb") !== -1) {
    for (var i2 = 0; i2 < 3; i2 += 1) {
      color2.values[i2] *= 1 - coefficient;
    }
  }
  return recomposeColor(color2);
}
function lighten(color2, coefficient) {
  color2 = decomposeColor(color2);
  coefficient = clamp(coefficient);
  if (color2.type.indexOf("hsl") !== -1) {
    color2.values[2] += (100 - color2.values[2]) * coefficient;
  } else if (color2.type.indexOf("rgb") !== -1) {
    for (var i2 = 0; i2 < 3; i2 += 1) {
      color2.values[i2] += (255 - color2.values[i2]) * coefficient;
    }
  }
  return recomposeColor(color2);
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}

// node_modules/@material-ui/core/esm/styles/createBreakpoints.js
var keys = ["xs", "sm", "md", "lg", "xl"];
function createBreakpoints(breakpoints3) {
  var _breakpoints$values = breakpoints3.values, values6 = _breakpoints$values === void 0 ? {
    xs: 0,
    sm: 600,
    md: 960,
    lg: 1280,
    xl: 1920
  } : _breakpoints$values, _breakpoints$unit = breakpoints3.unit, unit3 = _breakpoints$unit === void 0 ? "px" : _breakpoints$unit, _breakpoints$step = breakpoints3.step, step = _breakpoints$step === void 0 ? 5 : _breakpoints$step, other = _objectWithoutProperties(breakpoints3, ["values", "unit", "step"]);
  function up2(key) {
    var value = typeof values6[key] === "number" ? values6[key] : key;
    return "@media (min-width:".concat(value).concat(unit3, ")");
  }
  function down(key) {
    var endIndex = keys.indexOf(key) + 1;
    var upperbound = values6[keys[endIndex]];
    if (endIndex === keys.length) {
      return up2("xs");
    }
    var value = typeof upperbound === "number" && endIndex > 0 ? upperbound : key;
    return "@media (max-width:".concat(value - step / 100).concat(unit3, ")");
  }
  function between(start3, end2) {
    var endIndex = keys.indexOf(end2);
    if (endIndex === keys.length - 1) {
      return up2(start3);
    }
    return "@media (min-width:".concat(typeof values6[start3] === "number" ? values6[start3] : start3).concat(unit3, ") and ") + "(max-width:".concat((endIndex !== -1 && typeof values6[keys[endIndex + 1]] === "number" ? values6[keys[endIndex + 1]] : end2) - step / 100).concat(unit3, ")");
  }
  function only(key) {
    return between(key, key);
  }
  var warnedOnce3 = false;
  function width2(key) {
    if (true) {
      if (!warnedOnce3) {
        warnedOnce3 = true;
        console.warn(["Material-UI: The `theme.breakpoints.width` utility is deprecated because it's redundant.", "Use the `theme.breakpoints.values` instead."].join("\n"));
      }
    }
    return values6[key];
  }
  return _extends({
    keys,
    values: values6,
    up: up2,
    down,
    between,
    only,
    width: width2
  }, other);
}

// node_modules/@material-ui/core/esm/styles/createMixins.js
function createMixins(breakpoints3, spacing4, mixins) {
  var _toolbar;
  return _extends({
    gutters: function gutters() {
      var styles158 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      console.warn(["Material-UI: theme.mixins.gutters() is deprecated.", "You can use the source of the mixin directly:", "\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n      },\n      "].join("\n"));
      return _extends({
        paddingLeft: spacing4(2),
        paddingRight: spacing4(2)
      }, styles158, _defineProperty({}, breakpoints3.up("sm"), _extends({
        paddingLeft: spacing4(3),
        paddingRight: spacing4(3)
      }, styles158[breakpoints3.up("sm")])));
    },
    toolbar: (_toolbar = {
      minHeight: 56
    }, _defineProperty(_toolbar, "".concat(breakpoints3.up("xs"), " and (orientation: landscape)"), {
      minHeight: 48
    }), _defineProperty(_toolbar, breakpoints3.up("sm"), {
      minHeight: 64
    }), _toolbar)
  }, mixins);
}

// node_modules/@material-ui/core/esm/styles/createPalette.js
var light = {
  text: {
    primary: "rgba(0, 0, 0, 0.87)",
    secondary: "rgba(0, 0, 0, 0.54)",
    disabled: "rgba(0, 0, 0, 0.38)",
    hint: "rgba(0, 0, 0, 0.38)"
  },
  divider: "rgba(0, 0, 0, 0.12)",
  background: {
    paper: common_default.white,
    default: grey_default[50]
  },
  action: {
    active: "rgba(0, 0, 0, 0.54)",
    hover: "rgba(0, 0, 0, 0.04)",
    hoverOpacity: 0.04,
    selected: "rgba(0, 0, 0, 0.08)",
    selectedOpacity: 0.08,
    disabled: "rgba(0, 0, 0, 0.26)",
    disabledBackground: "rgba(0, 0, 0, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(0, 0, 0, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
};
var dark = {
  text: {
    primary: common_default.white,
    secondary: "rgba(255, 255, 255, 0.7)",
    disabled: "rgba(255, 255, 255, 0.5)",
    hint: "rgba(255, 255, 255, 0.5)",
    icon: "rgba(255, 255, 255, 0.5)"
  },
  divider: "rgba(255, 255, 255, 0.12)",
  background: {
    paper: grey_default[800],
    default: "#303030"
  },
  action: {
    active: common_default.white,
    hover: "rgba(255, 255, 255, 0.08)",
    hoverOpacity: 0.08,
    selected: "rgba(255, 255, 255, 0.16)",
    selectedOpacity: 0.16,
    disabled: "rgba(255, 255, 255, 0.3)",
    disabledBackground: "rgba(255, 255, 255, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(255, 255, 255, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function addLightOrDark(intent, direction, shade, tonalOffset) {
  var tonalOffsetLight = tonalOffset.light || tonalOffset;
  var tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
  if (!intent[direction]) {
    if (intent.hasOwnProperty(shade)) {
      intent[direction] = intent[shade];
    } else if (direction === "light") {
      intent.light = lighten(intent.main, tonalOffsetLight);
    } else if (direction === "dark") {
      intent.dark = darken(intent.main, tonalOffsetDark);
    }
  }
}
function createPalette(palette5) {
  var _palette$primary = palette5.primary, primary3 = _palette$primary === void 0 ? {
    light: indigo_default[300],
    main: indigo_default[500],
    dark: indigo_default[700]
  } : _palette$primary, _palette$secondary = palette5.secondary, secondary3 = _palette$secondary === void 0 ? {
    light: pink_default.A200,
    main: pink_default.A400,
    dark: pink_default.A700
  } : _palette$secondary, _palette$error = palette5.error, error4 = _palette$error === void 0 ? {
    light: red_default[300],
    main: red_default[500],
    dark: red_default[700]
  } : _palette$error, _palette$warning = palette5.warning, warning8 = _palette$warning === void 0 ? {
    light: orange_default[300],
    main: orange_default[500],
    dark: orange_default[700]
  } : _palette$warning, _palette$info = palette5.info, info3 = _palette$info === void 0 ? {
    light: blue_default[300],
    main: blue_default[500],
    dark: blue_default[700]
  } : _palette$info, _palette$success = palette5.success, success3 = _palette$success === void 0 ? {
    light: green_default[300],
    main: green_default[500],
    dark: green_default[700]
  } : _palette$success, _palette$type = palette5.type, type3 = _palette$type === void 0 ? "light" : _palette$type, _palette$contrastThre = palette5.contrastThreshold, contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre, _palette$tonalOffset = palette5.tonalOffset, tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset, other = _objectWithoutProperties(palette5, ["primary", "secondary", "error", "warning", "info", "success", "type", "contrastThreshold", "tonalOffset"]);
  function getContrastText(background) {
    var contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
    if (true) {
      var contrast = getContrastRatio(background, contrastText);
      if (contrast < 3) {
        console.error(["Material-UI: The contrast ratio of ".concat(contrast, ":1 for ").concat(contrastText, " on ").concat(background), "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join("\n"));
      }
    }
    return contrastText;
  }
  var augmentColor = function augmentColor2(color2) {
    var mainShade = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 500;
    var lightShade = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 300;
    var darkShade = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 700;
    color2 = _extends({}, color2);
    if (!color2.main && color2[mainShade]) {
      color2.main = color2[mainShade];
    }
    if (!color2.main) {
      throw new Error(true ? "Material-UI: The color provided to augmentColor(color) is invalid.\nThe color object needs to have a `main` property or a `".concat(mainShade, "` property.") : formatMuiErrorMessage(4, mainShade));
    }
    if (typeof color2.main !== "string") {
      throw new Error(true ? "Material-UI: The color provided to augmentColor(color) is invalid.\n`color.main` should be a string, but `".concat(JSON.stringify(color2.main), '` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport {\xA0green } from "@material-ui/core/colors";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });') : formatMuiErrorMessage(5, JSON.stringify(color2.main)));
    }
    addLightOrDark(color2, "light", lightShade, tonalOffset);
    addLightOrDark(color2, "dark", darkShade, tonalOffset);
    if (!color2.contrastText) {
      color2.contrastText = getContrastText(color2.main);
    }
    return color2;
  };
  var types = {
    dark,
    light
  };
  if (true) {
    if (!types[type3]) {
      console.error("Material-UI: The palette type `".concat(type3, "` is not supported."));
    }
  }
  var paletteOutput = deepmerge(_extends({
    common: common_default,
    type: type3,
    primary: augmentColor(primary3),
    secondary: augmentColor(secondary3, "A400", "A200", "A700"),
    error: augmentColor(error4),
    warning: augmentColor(warning8),
    info: augmentColor(info3),
    success: augmentColor(success3),
    grey: grey_default,
    contrastThreshold,
    getContrastText,
    augmentColor,
    tonalOffset
  }, types[type3]), other);
  return paletteOutput;
}

// node_modules/@material-ui/core/esm/styles/createTypography.js
function round(value) {
  return Math.round(value * 1e5) / 1e5;
}
var warnedOnce = false;
function roundWithDeprecationWarning(value) {
  if (true) {
    if (!warnedOnce) {
      console.warn(["Material-UI: The `theme.typography.round` helper is deprecated.", "Head to https://material-ui.com/r/migration-v4/#theme for a migration path."].join("\n"));
      warnedOnce = true;
    }
  }
  return round(value);
}
var caseAllCaps = {
  textTransform: "uppercase"
};
var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function createTypography(palette5, typography5) {
  var _ref6 = typeof typography5 === "function" ? typography5(palette5) : typography5, _ref$fontFamily = _ref6.fontFamily, fontFamily3 = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily, _ref$fontSize = _ref6.fontSize, fontSize3 = _ref$fontSize === void 0 ? 14 : _ref$fontSize, _ref$fontWeightLight = _ref6.fontWeightLight, fontWeightLight2 = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight, _ref$fontWeightRegula = _ref6.fontWeightRegular, fontWeightRegular2 = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula, _ref$fontWeightMedium = _ref6.fontWeightMedium, fontWeightMedium2 = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium, _ref$fontWeightBold = _ref6.fontWeightBold, fontWeightBold2 = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold, _ref$htmlFontSize = _ref6.htmlFontSize, htmlFontSize2 = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize, allVariants = _ref6.allVariants, pxToRem2 = _ref6.pxToRem, other = _objectWithoutProperties(_ref6, ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"]);
  if (true) {
    if (typeof fontSize3 !== "number") {
      console.error("Material-UI: `fontSize` is required to be a number.");
    }
    if (typeof htmlFontSize2 !== "number") {
      console.error("Material-UI: `htmlFontSize` is required to be a number.");
    }
  }
  var coef = fontSize3 / 14;
  var pxToRem = pxToRem2 || function(size) {
    return "".concat(size / htmlFontSize2 * coef, "rem");
  };
  var buildVariant = function buildVariant2(fontWeight2, size, lineHeight2, letterSpacing2, casing) {
    return _extends({
      fontFamily: fontFamily3,
      fontWeight: fontWeight2,
      fontSize: pxToRem(size),
      lineHeight: lineHeight2
    }, fontFamily3 === defaultFontFamily ? {
      letterSpacing: "".concat(round(letterSpacing2 / size), "em")
    } : {}, casing, allVariants);
  };
  var variants = {
    h1: buildVariant(fontWeightLight2, 96, 1.167, -1.5),
    h2: buildVariant(fontWeightLight2, 60, 1.2, -0.5),
    h3: buildVariant(fontWeightRegular2, 48, 1.167, 0),
    h4: buildVariant(fontWeightRegular2, 34, 1.235, 0.25),
    h5: buildVariant(fontWeightRegular2, 24, 1.334, 0),
    h6: buildVariant(fontWeightMedium2, 20, 1.6, 0.15),
    subtitle1: buildVariant(fontWeightRegular2, 16, 1.75, 0.15),
    subtitle2: buildVariant(fontWeightMedium2, 14, 1.57, 0.1),
    body1: buildVariant(fontWeightRegular2, 16, 1.5, 0.15),
    body2: buildVariant(fontWeightRegular2, 14, 1.43, 0.15),
    button: buildVariant(fontWeightMedium2, 14, 1.75, 0.4, caseAllCaps),
    caption: buildVariant(fontWeightRegular2, 12, 1.66, 0.4),
    overline: buildVariant(fontWeightRegular2, 12, 2.66, 1, caseAllCaps)
  };
  return deepmerge(_extends({
    htmlFontSize: htmlFontSize2,
    pxToRem,
    round: roundWithDeprecationWarning,
    fontFamily: fontFamily3,
    fontSize: fontSize3,
    fontWeightLight: fontWeightLight2,
    fontWeightRegular: fontWeightRegular2,
    fontWeightMedium: fontWeightMedium2,
    fontWeightBold: fontWeightBold2
  }, variants), other, {
    clone: false
  });
}

// node_modules/@material-ui/core/esm/styles/shadows.js
var shadowKeyUmbraOpacity = 0.2;
var shadowKeyPenumbraOpacity = 0.14;
var shadowAmbientShadowOpacity = 0.12;
function createShadow() {
  return ["".concat(arguments.length <= 0 ? void 0 : arguments[0], "px ").concat(arguments.length <= 1 ? void 0 : arguments[1], "px ").concat(arguments.length <= 2 ? void 0 : arguments[2], "px ").concat(arguments.length <= 3 ? void 0 : arguments[3], "px rgba(0,0,0,").concat(shadowKeyUmbraOpacity, ")"), "".concat(arguments.length <= 4 ? void 0 : arguments[4], "px ").concat(arguments.length <= 5 ? void 0 : arguments[5], "px ").concat(arguments.length <= 6 ? void 0 : arguments[6], "px ").concat(arguments.length <= 7 ? void 0 : arguments[7], "px rgba(0,0,0,").concat(shadowKeyPenumbraOpacity, ")"), "".concat(arguments.length <= 8 ? void 0 : arguments[8], "px ").concat(arguments.length <= 9 ? void 0 : arguments[9], "px ").concat(arguments.length <= 10 ? void 0 : arguments[10], "px ").concat(arguments.length <= 11 ? void 0 : arguments[11], "px rgba(0,0,0,").concat(shadowAmbientShadowOpacity, ")")].join(",");
}
var shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
var shadows_default = shadows;

// node_modules/@material-ui/core/esm/styles/shape.js
var shape = {
  borderRadius: 4
};
var shape_default = shape;

// node_modules/@material-ui/system/esm/responsivePropType.js
var import_prop_types3 = __toModule(require_prop_types());
var responsivePropType = true ? import_prop_types3.default.oneOfType([import_prop_types3.default.number, import_prop_types3.default.string, import_prop_types3.default.object, import_prop_types3.default.array]) : {};
var responsivePropType_default = responsivePropType;

// node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
    arr2[i2] = arr[i2];
  }
  return arr2;
}

// node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}

// node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}

// node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
function _unsupportedIterableToArray(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o2, minLen);
}

// node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/toConsumableArray.js
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

// node_modules/@material-ui/system/esm/breakpoints.js
var import_prop_types4 = __toModule(require_prop_types());

// node_modules/@material-ui/system/esm/merge.js
function merge(acc, item) {
  if (!item) {
    return acc;
  }
  return deepmerge(acc, item, {
    clone: false
  });
}
var merge_default = merge;

// node_modules/@material-ui/system/esm/breakpoints.js
var values = {
  xs: 0,
  sm: 600,
  md: 960,
  lg: 1280,
  xl: 1920
};
var defaultBreakpoints = {
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: function up(key) {
    return "@media (min-width:".concat(values[key], "px)");
  }
};
function handleBreakpoints(props, propValue, styleFromPropValue) {
  if (true) {
    if (!props.theme) {
      console.error("Material-UI: You are calling a style function without a theme value.");
    }
  }
  if (Array.isArray(propValue)) {
    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;
    return propValue.reduce(function(acc, item, index4) {
      acc[themeBreakpoints.up(themeBreakpoints.keys[index4])] = styleFromPropValue(propValue[index4]);
      return acc;
    }, {});
  }
  if (_typeof(propValue) === "object") {
    var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;
    return Object.keys(propValue).reduce(function(acc, breakpoint) {
      acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);
      return acc;
    }, {});
  }
  var output = styleFromPropValue(propValue);
  return output;
}

// node_modules/@material-ui/system/esm/style.js
function getPath(obj, path) {
  if (!path || typeof path !== "string") {
    return null;
  }
  return path.split(".").reduce(function(acc, item) {
    return acc && acc[item] ? acc[item] : null;
  }, obj);
}
function style(options) {
  var prop2 = options.prop, _options$cssProperty = options.cssProperty, cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty, themeKey = options.themeKey, transform4 = options.transform;
  var fn = function fn2(props) {
    if (props[prop2] == null) {
      return null;
    }
    var propValue = props[prop2];
    var theme = props.theme;
    var themeMapping = getPath(theme, themeKey) || {};
    var styleFromPropValue = function styleFromPropValue2(propValueFinal) {
      var value;
      if (typeof themeMapping === "function") {
        value = themeMapping(propValueFinal);
      } else if (Array.isArray(themeMapping)) {
        value = themeMapping[propValueFinal] || propValueFinal;
      } else {
        value = getPath(themeMapping, propValueFinal) || propValueFinal;
        if (transform4) {
          value = transform4(value);
        }
      }
      if (cssProperty === false) {
        return value;
      }
      return _defineProperty({}, cssProperty, value);
    };
    return handleBreakpoints(props, propValue, styleFromPropValue);
  };
  fn.propTypes = true ? _defineProperty({}, prop2, responsivePropType_default) : {};
  fn.filterProps = [prop2];
  return fn;
}
var style_default = style;

// node_modules/@material-ui/system/esm/compose.js
function compose() {
  for (var _len = arguments.length, styles158 = new Array(_len), _key = 0; _key < _len; _key++) {
    styles158[_key] = arguments[_key];
  }
  var fn = function fn2(props) {
    return styles158.reduce(function(acc, style3) {
      var output = style3(props);
      if (output) {
        return merge_default(acc, output);
      }
      return acc;
    }, {});
  };
  fn.propTypes = true ? styles158.reduce(function(acc, style3) {
    return _extends(acc, style3.propTypes);
  }, {}) : {};
  fn.filterProps = styles158.reduce(function(acc, style3) {
    return acc.concat(style3.filterProps);
  }, []);
  return fn;
}
var compose_default = compose;

// node_modules/@material-ui/system/esm/borders.js
function getBorder(value) {
  if (typeof value !== "number") {
    return value;
  }
  return "".concat(value, "px solid");
}
var border = style_default({
  prop: "border",
  themeKey: "borders",
  transform: getBorder
});
var borderTop = style_default({
  prop: "borderTop",
  themeKey: "borders",
  transform: getBorder
});
var borderRight = style_default({
  prop: "borderRight",
  themeKey: "borders",
  transform: getBorder
});
var borderBottom = style_default({
  prop: "borderBottom",
  themeKey: "borders",
  transform: getBorder
});
var borderLeft = style_default({
  prop: "borderLeft",
  themeKey: "borders",
  transform: getBorder
});
var borderColor = style_default({
  prop: "borderColor",
  themeKey: "palette"
});
var borderRadius = style_default({
  prop: "borderRadius",
  themeKey: "shape"
});
var borders = compose_default(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);
var borders_default = borders;

// node_modules/@material-ui/system/esm/styleFunctionSx.js
var import_prop_types5 = __toModule(require_prop_types());
function omit(input, fields) {
  var output = {};
  Object.keys(input).forEach(function(prop2) {
    if (fields.indexOf(prop2) === -1) {
      output[prop2] = input[prop2];
    }
  });
  return output;
}
var warnedOnce2 = false;
function styleFunctionSx(styleFunction2) {
  var newStyleFunction = function newStyleFunction2(props) {
    var output = styleFunction2(props);
    if (props.css) {
      return _extends({}, merge_default(output, styleFunction2(_extends({
        theme: props.theme
      }, props.css))), omit(props.css, [styleFunction2.filterProps]));
    }
    if (props.sx) {
      return _extends({}, merge_default(output, styleFunction2(_extends({
        theme: props.theme
      }, props.sx))), omit(props.sx, [styleFunction2.filterProps]));
    }
    return output;
  };
  newStyleFunction.propTypes = true ? _extends({}, styleFunction2.propTypes, {
    css: chainPropTypes(import_prop_types5.default.object, function(props) {
      if (!warnedOnce2 && props.css !== void 0) {
        warnedOnce2 = true;
        return new Error("Material-UI: The `css` prop is deprecated, please use the `sx` prop instead.");
      }
      return null;
    }),
    sx: import_prop_types5.default.object
  }) : {};
  newStyleFunction.filterProps = ["css", "sx"].concat(_toConsumableArray(styleFunction2.filterProps));
  return newStyleFunction;
}
var styleFunctionSx_default = styleFunctionSx;

// node_modules/@material-ui/system/esm/display.js
var displayPrint = style_default({
  prop: "displayPrint",
  cssProperty: false,
  transform: function transform(value) {
    return {
      "@media print": {
        display: value
      }
    };
  }
});
var displayRaw = style_default({
  prop: "display"
});
var overflow = style_default({
  prop: "overflow"
});
var textOverflow = style_default({
  prop: "textOverflow"
});
var visibility = style_default({
  prop: "visibility"
});
var whiteSpace = style_default({
  prop: "whiteSpace"
});
var display_default = compose_default(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);

// node_modules/@material-ui/system/esm/flexbox.js
var flexBasis = style_default({
  prop: "flexBasis"
});
var flexDirection = style_default({
  prop: "flexDirection"
});
var flexWrap = style_default({
  prop: "flexWrap"
});
var justifyContent = style_default({
  prop: "justifyContent"
});
var alignItems = style_default({
  prop: "alignItems"
});
var alignContent = style_default({
  prop: "alignContent"
});
var order = style_default({
  prop: "order"
});
var flex = style_default({
  prop: "flex"
});
var flexGrow = style_default({
  prop: "flexGrow"
});
var flexShrink = style_default({
  prop: "flexShrink"
});
var alignSelf = style_default({
  prop: "alignSelf"
});
var justifyItems = style_default({
  prop: "justifyItems"
});
var justifySelf = style_default({
  prop: "justifySelf"
});
var flexbox = compose_default(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);
var flexbox_default = flexbox;

// node_modules/@material-ui/system/esm/grid.js
var gridGap = style_default({
  prop: "gridGap"
});
var gridColumnGap = style_default({
  prop: "gridColumnGap"
});
var gridRowGap = style_default({
  prop: "gridRowGap"
});
var gridColumn = style_default({
  prop: "gridColumn"
});
var gridRow = style_default({
  prop: "gridRow"
});
var gridAutoFlow = style_default({
  prop: "gridAutoFlow"
});
var gridAutoColumns = style_default({
  prop: "gridAutoColumns"
});
var gridAutoRows = style_default({
  prop: "gridAutoRows"
});
var gridTemplateColumns = style_default({
  prop: "gridTemplateColumns"
});
var gridTemplateRows = style_default({
  prop: "gridTemplateRows"
});
var gridTemplateAreas = style_default({
  prop: "gridTemplateAreas"
});
var gridArea = style_default({
  prop: "gridArea"
});
var grid = compose_default(gridGap, gridColumnGap, gridRowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);
var grid_default = grid;

// node_modules/@material-ui/system/esm/palette.js
var color = style_default({
  prop: "color",
  themeKey: "palette"
});
var bgcolor = style_default({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette"
});
var palette = compose_default(color, bgcolor);
var palette_default = palette;

// node_modules/@material-ui/system/esm/positions.js
var position = style_default({
  prop: "position"
});
var zIndex = style_default({
  prop: "zIndex",
  themeKey: "zIndex"
});
var top = style_default({
  prop: "top"
});
var right = style_default({
  prop: "right"
});
var bottom = style_default({
  prop: "bottom"
});
var left = style_default({
  prop: "left"
});
var positions_default = compose_default(position, zIndex, top, right, bottom, left);

// node_modules/@material-ui/system/esm/shadows.js
var boxShadow = style_default({
  prop: "boxShadow",
  themeKey: "shadows"
});
var shadows_default2 = boxShadow;

// node_modules/@material-ui/system/esm/sizing.js
function transform2(value) {
  return value <= 1 ? "".concat(value * 100, "%") : value;
}
var width = style_default({
  prop: "width",
  transform: transform2
});
var maxWidth = style_default({
  prop: "maxWidth",
  transform: transform2
});
var minWidth = style_default({
  prop: "minWidth",
  transform: transform2
});
var height = style_default({
  prop: "height",
  transform: transform2
});
var maxHeight = style_default({
  prop: "maxHeight",
  transform: transform2
});
var minHeight = style_default({
  prop: "minHeight",
  transform: transform2
});
var sizeWidth = style_default({
  prop: "size",
  cssProperty: "width",
  transform: transform2
});
var sizeHeight = style_default({
  prop: "size",
  cssProperty: "height",
  transform: transform2
});
var boxSizing = style_default({
  prop: "boxSizing"
});
var sizing = compose_default(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);
var sizing_default = sizing;

// node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}

// node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i2) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e2;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i2 && _arr.length === i2)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}

// node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/slicedToArray.js
function _slicedToArray(arr, i2) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i2) || _unsupportedIterableToArray(arr, i2) || _nonIterableRest();
}

// node_modules/@material-ui/system/esm/memoize.js
function memoize(fn) {
  var cache3 = {};
  return function(arg) {
    if (cache3[arg] === void 0) {
      cache3[arg] = fn(arg);
    }
    return cache3[arg];
  };
}

// node_modules/@material-ui/system/esm/spacing.js
var properties = {
  m: "margin",
  p: "padding"
};
var directions = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
};
var aliases = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
};
var getCssProperties = memoize(function(prop2) {
  if (prop2.length > 2) {
    if (aliases[prop2]) {
      prop2 = aliases[prop2];
    } else {
      return [prop2];
    }
  }
  var _prop$split = prop2.split(""), _prop$split2 = _slicedToArray(_prop$split, 2), a2 = _prop$split2[0], b2 = _prop$split2[1];
  var property = properties[a2];
  var direction = directions[b2] || "";
  return Array.isArray(direction) ? direction.map(function(dir) {
    return property + dir;
  }) : [property + direction];
});
var spacingKeys = ["m", "mt", "mr", "mb", "ml", "mx", "my", "p", "pt", "pr", "pb", "pl", "px", "py", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY"];
function createUnarySpacing(theme) {
  var themeSpacing = theme.spacing || 8;
  if (typeof themeSpacing === "number") {
    return function(abs) {
      if (true) {
        if (typeof abs !== "number") {
          console.error("Material-UI: Expected spacing argument to be a number, got ".concat(abs, "."));
        }
      }
      return themeSpacing * abs;
    };
  }
  if (Array.isArray(themeSpacing)) {
    return function(abs) {
      if (true) {
        if (abs > themeSpacing.length - 1) {
          console.error(["Material-UI: The value provided (".concat(abs, ") overflows."), "The supported values are: ".concat(JSON.stringify(themeSpacing), "."), "".concat(abs, " > ").concat(themeSpacing.length - 1, ", you need to add the missing values.")].join("\n"));
        }
      }
      return themeSpacing[abs];
    };
  }
  if (typeof themeSpacing === "function") {
    return themeSpacing;
  }
  if (true) {
    console.error(["Material-UI: The `theme.spacing` value (".concat(themeSpacing, ") is invalid."), "It should be a number, an array or a function."].join("\n"));
  }
  return function() {
    return void 0;
  };
}
function getValue(transformer, propValue) {
  if (typeof propValue === "string" || propValue == null) {
    return propValue;
  }
  var abs = Math.abs(propValue);
  var transformed = transformer(abs);
  if (propValue >= 0) {
    return transformed;
  }
  if (typeof transformed === "number") {
    return -transformed;
  }
  return "-".concat(transformed);
}
function getStyleFromPropValue(cssProperties, transformer) {
  return function(propValue) {
    return cssProperties.reduce(function(acc, cssProperty) {
      acc[cssProperty] = getValue(transformer, propValue);
      return acc;
    }, {});
  };
}
function spacing(props) {
  var theme = props.theme;
  var transformer = createUnarySpacing(theme);
  return Object.keys(props).map(function(prop2) {
    if (spacingKeys.indexOf(prop2) === -1) {
      return null;
    }
    var cssProperties = getCssProperties(prop2);
    var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
    var propValue = props[prop2];
    return handleBreakpoints(props, propValue, styleFromPropValue);
  }).reduce(merge_default, {});
}
spacing.propTypes = true ? spacingKeys.reduce(function(obj, key) {
  obj[key] = responsivePropType_default;
  return obj;
}, {}) : {};
spacing.filterProps = spacingKeys;
var spacing_default = spacing;

// node_modules/@material-ui/system/esm/typography.js
var fontFamily = style_default({
  prop: "fontFamily",
  themeKey: "typography"
});
var fontSize = style_default({
  prop: "fontSize",
  themeKey: "typography"
});
var fontStyle = style_default({
  prop: "fontStyle",
  themeKey: "typography"
});
var fontWeight = style_default({
  prop: "fontWeight",
  themeKey: "typography"
});
var letterSpacing = style_default({
  prop: "letterSpacing"
});
var lineHeight = style_default({
  prop: "lineHeight"
});
var textAlign = style_default({
  prop: "textAlign"
});
var typography = compose_default(fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);
var typography_default = typography;

// node_modules/@material-ui/core/esm/styles/createSpacing.js
var warnOnce;
function createSpacing() {
  var spacingInput = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 8;
  if (spacingInput.mui) {
    return spacingInput;
  }
  var transform4 = createUnarySpacing({
    spacing: spacingInput
  });
  var spacing4 = function spacing5() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (true) {
      if (!(args.length <= 4)) {
        console.error("Material-UI: Too many arguments provided, expected between 0 and 4, got ".concat(args.length));
      }
    }
    if (args.length === 0) {
      return transform4(1);
    }
    if (args.length === 1) {
      return transform4(args[0]);
    }
    return args.map(function(argument) {
      if (typeof argument === "string") {
        return argument;
      }
      var output = transform4(argument);
      return typeof output === "number" ? "".concat(output, "px") : output;
    }).join(" ");
  };
  Object.defineProperty(spacing4, "unit", {
    get: function get4() {
      if (true) {
        if (!warnOnce || false) {
          console.error(["Material-UI: theme.spacing.unit usage has been deprecated.", "It will be removed in v5.", "You can replace `theme.spacing.unit * y` with `theme.spacing(y)`.", "", "You can use the `https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api` migration helper to make the process smoother."].join("\n"));
        }
        warnOnce = true;
      }
      return spacingInput;
    }
  });
  spacing4.mui = true;
  return spacing4;
}

// node_modules/@material-ui/core/esm/styles/transitions.js
var easing = {
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
};
var duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  standard: 300,
  complex: 375,
  enteringScreen: 225,
  leavingScreen: 195
};
function formatMs(milliseconds) {
  return "".concat(Math.round(milliseconds), "ms");
}
var transitions_default = {
  easing,
  duration,
  create: function create() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ["all"];
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var _options$duration = options.duration, durationOption = _options$duration === void 0 ? duration.standard : _options$duration, _options$easing = options.easing, easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing, _options$delay = options.delay, delay = _options$delay === void 0 ? 0 : _options$delay, other = _objectWithoutProperties(options, ["duration", "easing", "delay"]);
    if (true) {
      var isString4 = function isString5(value) {
        return typeof value === "string";
      };
      var isNumber2 = function isNumber3(value) {
        return !isNaN(parseFloat(value));
      };
      if (!isString4(props) && !Array.isArray(props)) {
        console.error('Material-UI: Argument "props" must be a string or Array.');
      }
      if (!isNumber2(durationOption) && !isString4(durationOption)) {
        console.error('Material-UI: Argument "duration" must be a number or a string but found '.concat(durationOption, "."));
      }
      if (!isString4(easingOption)) {
        console.error('Material-UI: Argument "easing" must be a string.');
      }
      if (!isNumber2(delay) && !isString4(delay)) {
        console.error('Material-UI: Argument "delay" must be a number or a string.');
      }
      if (Object.keys(other).length !== 0) {
        console.error("Material-UI: Unrecognized argument(s) [".concat(Object.keys(other).join(","), "]."));
      }
    }
    return (Array.isArray(props) ? props : [props]).map(function(animatedProp) {
      return "".concat(animatedProp, " ").concat(typeof durationOption === "string" ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat(typeof delay === "string" ? delay : formatMs(delay));
    }).join(",");
  },
  getAutoHeightDuration: function getAutoHeightDuration(height2) {
    if (!height2) {
      return 0;
    }
    var constant = height2 / 36;
    return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
  }
};

// node_modules/@material-ui/core/esm/styles/zIndex.js
var zIndex2 = {
  mobileStepper: 1e3,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
var zIndex_default = zIndex2;

// node_modules/@material-ui/core/esm/styles/createTheme.js
function createTheme() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _options$breakpoints = options.breakpoints, breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints, _options$mixins = options.mixins, mixinsInput = _options$mixins === void 0 ? {} : _options$mixins, _options$palette = options.palette, paletteInput = _options$palette === void 0 ? {} : _options$palette, spacingInput = options.spacing, _options$typography = options.typography, typographyInput = _options$typography === void 0 ? {} : _options$typography, other = _objectWithoutProperties(options, ["breakpoints", "mixins", "palette", "spacing", "typography"]);
  var palette5 = createPalette(paletteInput);
  var breakpoints3 = createBreakpoints(breakpointsInput);
  var spacing4 = createSpacing(spacingInput);
  var muiTheme = deepmerge({
    breakpoints: breakpoints3,
    direction: "ltr",
    mixins: createMixins(breakpoints3, spacing4, mixinsInput),
    overrides: {},
    palette: palette5,
    props: {},
    shadows: shadows_default,
    typography: createTypography(palette5, typographyInput),
    spacing: spacing4,
    shape: shape_default,
    transitions: transitions_default,
    zIndex: zIndex_default
  }, other);
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  muiTheme = args.reduce(function(acc, argument) {
    return deepmerge(acc, argument);
  }, muiTheme);
  if (true) {
    var pseudoClasses2 = ["checked", "disabled", "error", "focused", "focusVisible", "required", "expanded", "selected"];
    var traverse = function traverse2(node4, parentKey) {
      var depth = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
      var key;
      for (key in node4) {
        var child = node4[key];
        if (depth === 1) {
          if (key.indexOf("Mui") === 0 && child) {
            traverse2(child, key, depth + 1);
          }
        } else if (pseudoClasses2.indexOf(key) !== -1 && Object.keys(child).length > 0) {
          if (true) {
            console.error(["Material-UI: The `".concat(parentKey, "` component increases ") + "the CSS specificity of the `".concat(key, "` internal state."), "You can not override it like this: ", JSON.stringify(node4, null, 2), "", "Instead, you need to use the $ruleName syntax:", JSON.stringify({
              root: _defineProperty({}, "&$".concat(key), child)
            }, null, 2), "", "https://material-ui.com/r/pseudo-classes-guide"].join("\n"));
          }
          node4[key] = {};
        }
      }
    };
    traverse(muiTheme.overrides);
  }
  return muiTheme;
}
var createTheme_default = createTheme;

// node_modules/@material-ui/styles/esm/ThemeProvider/nested.js
var hasSymbol = typeof Symbol === "function" && Symbol.for;
var nested_default = hasSymbol ? Symbol.for("mui.nested") : "__THEME_NESTED__";

// node_modules/@material-ui/styles/esm/createGenerateClassName/createGenerateClassName.js
var pseudoClasses = ["checked", "disabled", "error", "focused", "focusVisible", "required", "expanded", "selected"];
function createGenerateClassName() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _options$disableGloba = options.disableGlobal, disableGlobal = _options$disableGloba === void 0 ? false : _options$disableGloba, _options$productionPr = options.productionPrefix, productionPrefix = _options$productionPr === void 0 ? "jss" : _options$productionPr, _options$seed = options.seed, seed = _options$seed === void 0 ? "" : _options$seed;
  var seedPrefix = seed === "" ? "" : "".concat(seed, "-");
  var ruleCounter = 0;
  var getNextCounterId = function getNextCounterId2() {
    ruleCounter += 1;
    if (true) {
      if (ruleCounter >= 1e10) {
        console.warn(["Material-UI: You might have a memory leak.", "The ruleCounter is not supposed to grow that much."].join(""));
      }
    }
    return ruleCounter;
  };
  return function(rule, styleSheet) {
    var name = styleSheet.options.name;
    if (name && name.indexOf("Mui") === 0 && !styleSheet.options.link && !disableGlobal) {
      if (pseudoClasses.indexOf(rule.key) !== -1) {
        return "Mui-".concat(rule.key);
      }
      var prefix4 = "".concat(seedPrefix).concat(name, "-").concat(rule.key);
      if (!styleSheet.options.theme[nested_default] || seed !== "") {
        return prefix4;
      }
      return "".concat(prefix4, "-").concat(getNextCounterId());
    }
    if (false) {
      return "".concat(seedPrefix).concat(productionPrefix).concat(getNextCounterId());
    }
    var suffix2 = "".concat(rule.key, "-").concat(getNextCounterId());
    if (styleSheet.options.classNamePrefix) {
      return "".concat(seedPrefix).concat(styleSheet.options.classNamePrefix, "-").concat(suffix2);
    }
    return "".concat(seedPrefix).concat(suffix2);
  };
}

// node_modules/@material-ui/styles/esm/createStyles/createStyles.js
function createStyles(styles158) {
  return styles158;
}

// node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js
function getThemeProps(params) {
  var theme = params.theme, name = params.name, props = params.props;
  if (!theme || !theme.props || !theme.props[name]) {
    return props;
  }
  var defaultProps3 = theme.props[name];
  var propName;
  for (propName in defaultProps3) {
    if (props[propName] === void 0) {
      props[propName] = defaultProps3[propName];
    }
  }
  return props;
}

// node_modules/tiny-warning/dist/tiny-warning.esm.js
var isProduction = false;
function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }
    var text = "Warning: " + message;
    if (typeof console !== "undefined") {
      console.warn(text);
    }
    try {
      throw Error(text);
    } catch (x2) {
    }
  }
}
var tiny_warning_esm_default = warning;

// node_modules/is-in-browser/dist/module.js
var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
  return typeof obj;
} : function(obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};
var isBrowser = (typeof window === "undefined" ? "undefined" : _typeof2(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof2(document)) === "object" && document.nodeType === 9;
var module_default = isBrowser;

// node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  return Constructor;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o2, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o3, p2) {
    o3.__proto__ = p2;
    return o3;
  };
  return _setPrototypeOf(o2, p);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}

// node_modules/jss/dist/jss.esm.js
var plainObjectConstrurctor = {}.constructor;
function cloneStyle(style3) {
  if (style3 == null || typeof style3 !== "object")
    return style3;
  if (Array.isArray(style3))
    return style3.map(cloneStyle);
  if (style3.constructor !== plainObjectConstrurctor)
    return style3;
  var newStyle = {};
  for (var name in style3) {
    newStyle[name] = cloneStyle(style3[name]);
  }
  return newStyle;
}
function createRule(name, decl, options) {
  if (name === void 0) {
    name = "unnamed";
  }
  var jss2 = options.jss;
  var declCopy = cloneStyle(decl);
  var rule = jss2.plugins.onCreateRule(name, declCopy, options);
  if (rule)
    return rule;
  if (name[0] === "@") {
    true ? tiny_warning_esm_default(false, "[JSS] Unknown rule " + name) : void 0;
  }
  return null;
}
var join = function join2(value, by) {
  var result = "";
  for (var i2 = 0; i2 < value.length; i2++) {
    if (value[i2] === "!important")
      break;
    if (result)
      result += by;
    result += value[i2];
  }
  return result;
};
var toCssValue = function toCssValue2(value, ignoreImportant) {
  if (ignoreImportant === void 0) {
    ignoreImportant = false;
  }
  if (!Array.isArray(value))
    return value;
  var cssValue = "";
  if (Array.isArray(value[0])) {
    for (var i2 = 0; i2 < value.length; i2++) {
      if (value[i2] === "!important")
        break;
      if (cssValue)
        cssValue += ", ";
      cssValue += join(value[i2], " ");
    }
  } else
    cssValue = join(value, ", ");
  if (!ignoreImportant && value[value.length - 1] === "!important") {
    cssValue += " !important";
  }
  return cssValue;
};
function getWhitespaceSymbols(options) {
  if (options && options.format === false) {
    return {
      linebreak: "",
      space: ""
    };
  }
  return {
    linebreak: "\n",
    space: " "
  };
}
function indentStr(str, indent) {
  var result = "";
  for (var index4 = 0; index4 < indent; index4++) {
    result += "  ";
  }
  return result + str;
}
function toCss(selector, style3, options) {
  if (options === void 0) {
    options = {};
  }
  var result = "";
  if (!style3)
    return result;
  var _options = options, _options$indent = _options.indent, indent = _options$indent === void 0 ? 0 : _options$indent;
  var fallbacks = style3.fallbacks;
  if (options.format === false) {
    indent = -Infinity;
  }
  var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak, space2 = _getWhitespaceSymbols.space;
  if (selector)
    indent++;
  if (fallbacks) {
    if (Array.isArray(fallbacks)) {
      for (var index4 = 0; index4 < fallbacks.length; index4++) {
        var fallback = fallbacks[index4];
        for (var prop2 in fallback) {
          var value = fallback[prop2];
          if (value != null) {
            if (result)
              result += linebreak;
            result += indentStr(prop2 + ":" + space2 + toCssValue(value) + ";", indent);
          }
        }
      }
    } else {
      for (var _prop in fallbacks) {
        var _value = fallbacks[_prop];
        if (_value != null) {
          if (result)
            result += linebreak;
          result += indentStr(_prop + ":" + space2 + toCssValue(_value) + ";", indent);
        }
      }
    }
  }
  for (var _prop2 in style3) {
    var _value2 = style3[_prop2];
    if (_value2 != null && _prop2 !== "fallbacks") {
      if (result)
        result += linebreak;
      result += indentStr(_prop2 + ":" + space2 + toCssValue(_value2) + ";", indent);
    }
  }
  if (!result && !options.allowEmpty)
    return result;
  if (!selector)
    return result;
  indent--;
  if (result)
    result = "" + linebreak + result + linebreak;
  return indentStr("" + selector + space2 + "{" + result, indent) + indentStr("}", indent);
}
var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;
var nativeEscape = typeof CSS !== "undefined" && CSS.escape;
var escape = function(str) {
  return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, "\\$1");
};
var BaseStyleRule = /* @__PURE__ */ function() {
  function BaseStyleRule2(key, style3, options) {
    this.type = "style";
    this.isProcessed = false;
    var sheet = options.sheet, Renderer2 = options.Renderer;
    this.key = key;
    this.options = options;
    this.style = style3;
    if (sheet)
      this.renderer = sheet.renderer;
    else if (Renderer2)
      this.renderer = new Renderer2();
  }
  var _proto = BaseStyleRule2.prototype;
  _proto.prop = function prop2(name, value, options) {
    if (value === void 0)
      return this.style[name];
    var force = options ? options.force : false;
    if (!force && this.style[name] === value)
      return this;
    var newValue = value;
    if (!options || options.process !== false) {
      newValue = this.options.jss.plugins.onChangeValue(value, name, this);
    }
    var isEmpty3 = newValue == null || newValue === false;
    var isDefined = name in this.style;
    if (isEmpty3 && !isDefined && !force)
      return this;
    var remove2 = isEmpty3 && isDefined;
    if (remove2)
      delete this.style[name];
    else
      this.style[name] = newValue;
    if (this.renderable && this.renderer) {
      if (remove2)
        this.renderer.removeProperty(this.renderable, name);
      else
        this.renderer.setProperty(this.renderable, name, newValue);
      return this;
    }
    var sheet = this.options.sheet;
    if (sheet && sheet.attached) {
      true ? tiny_warning_esm_default(false, '[JSS] Rule is not linked. Missing sheet option "link: true".') : void 0;
    }
    return this;
  };
  return BaseStyleRule2;
}();
var StyleRule = /* @__PURE__ */ function(_BaseStyleRule) {
  _inheritsLoose(StyleRule2, _BaseStyleRule);
  function StyleRule2(key, style3, options) {
    var _this;
    _this = _BaseStyleRule.call(this, key, style3, options) || this;
    var selector = options.selector, scoped = options.scoped, sheet = options.sheet, generateId = options.generateId;
    if (selector) {
      _this.selectorText = selector;
    } else if (scoped !== false) {
      _this.id = generateId(_assertThisInitialized(_assertThisInitialized(_this)), sheet);
      _this.selectorText = "." + escape(_this.id);
    }
    return _this;
  }
  var _proto2 = StyleRule2.prototype;
  _proto2.applyTo = function applyTo(renderable) {
    var renderer = this.renderer;
    if (renderer) {
      var json = this.toJSON();
      for (var prop2 in json) {
        renderer.setProperty(renderable, prop2, json[prop2]);
      }
    }
    return this;
  };
  _proto2.toJSON = function toJSON() {
    var json = {};
    for (var prop2 in this.style) {
      var value = this.style[prop2];
      if (typeof value !== "object")
        json[prop2] = value;
      else if (Array.isArray(value))
        json[prop2] = toCssValue(value);
    }
    return json;
  };
  _proto2.toString = function toString2(options) {
    var sheet = this.options.sheet;
    var link = sheet ? sheet.options.link : false;
    var opts = link ? _extends({}, options, {
      allowEmpty: true
    }) : options;
    return toCss(this.selectorText, this.style, opts);
  };
  _createClass(StyleRule2, [{
    key: "selector",
    set: function set2(selector) {
      if (selector === this.selectorText)
        return;
      this.selectorText = selector;
      var renderer = this.renderer, renderable = this.renderable;
      if (!renderable || !renderer)
        return;
      var hasChanged = renderer.setSelector(renderable, selector);
      if (!hasChanged) {
        renderer.replaceRule(renderable, this);
      }
    },
    get: function get4() {
      return this.selectorText;
    }
  }]);
  return StyleRule2;
}(BaseStyleRule);
var pluginStyleRule = {
  onCreateRule: function onCreateRule(key, style3, options) {
    if (key[0] === "@" || options.parent && options.parent.type === "keyframes") {
      return null;
    }
    return new StyleRule(key, style3, options);
  }
};
var defaultToStringOptions = {
  indent: 1,
  children: true
};
var atRegExp = /@([\w-]+)/;
var ConditionalRule = /* @__PURE__ */ function() {
  function ConditionalRule2(key, styles158, options) {
    this.type = "conditional";
    this.isProcessed = false;
    this.key = key;
    var atMatch = key.match(atRegExp);
    this.at = atMatch ? atMatch[1] : "unknown";
    this.query = options.name || "@" + this.at;
    this.options = options;
    this.rules = new RuleList(_extends({}, options, {
      parent: this
    }));
    for (var name in styles158) {
      this.rules.add(name, styles158[name]);
    }
    this.rules.process();
  }
  var _proto = ConditionalRule2.prototype;
  _proto.getRule = function getRule(name) {
    return this.rules.get(name);
  };
  _proto.indexOf = function indexOf(rule) {
    return this.rules.indexOf(rule);
  };
  _proto.addRule = function addRule(name, style3, options) {
    var rule = this.rules.add(name, style3, options);
    if (!rule)
      return null;
    this.options.jss.plugins.onProcessRule(rule);
    return rule;
  };
  _proto.toString = function toString2(options) {
    if (options === void 0) {
      options = defaultToStringOptions;
    }
    var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
    if (options.indent == null)
      options.indent = defaultToStringOptions.indent;
    if (options.children == null)
      options.children = defaultToStringOptions.children;
    if (options.children === false) {
      return this.query + " {}";
    }
    var children2 = this.rules.toString(options);
    return children2 ? this.query + " {" + linebreak + children2 + linebreak + "}" : "";
  };
  return ConditionalRule2;
}();
var keyRegExp = /@media|@supports\s+/;
var pluginConditionalRule = {
  onCreateRule: function onCreateRule2(key, styles158, options) {
    return keyRegExp.test(key) ? new ConditionalRule(key, styles158, options) : null;
  }
};
var defaultToStringOptions$1 = {
  indent: 1,
  children: true
};
var nameRegExp = /@keyframes\s+([\w-]+)/;
var KeyframesRule = /* @__PURE__ */ function() {
  function KeyframesRule2(key, frames, options) {
    this.type = "keyframes";
    this.at = "@keyframes";
    this.isProcessed = false;
    var nameMatch = key.match(nameRegExp);
    if (nameMatch && nameMatch[1]) {
      this.name = nameMatch[1];
    } else {
      this.name = "noname";
      true ? tiny_warning_esm_default(false, "[JSS] Bad keyframes name " + key) : void 0;
    }
    this.key = this.type + "-" + this.name;
    this.options = options;
    var scoped = options.scoped, sheet = options.sheet, generateId = options.generateId;
    this.id = scoped === false ? this.name : escape(generateId(this, sheet));
    this.rules = new RuleList(_extends({}, options, {
      parent: this
    }));
    for (var name in frames) {
      this.rules.add(name, frames[name], _extends({}, options, {
        parent: this
      }));
    }
    this.rules.process();
  }
  var _proto = KeyframesRule2.prototype;
  _proto.toString = function toString2(options) {
    if (options === void 0) {
      options = defaultToStringOptions$1;
    }
    var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
    if (options.indent == null)
      options.indent = defaultToStringOptions$1.indent;
    if (options.children == null)
      options.children = defaultToStringOptions$1.children;
    if (options.children === false) {
      return this.at + " " + this.id + " {}";
    }
    var children2 = this.rules.toString(options);
    if (children2)
      children2 = "" + linebreak + children2 + linebreak;
    return this.at + " " + this.id + " {" + children2 + "}";
  };
  return KeyframesRule2;
}();
var keyRegExp$1 = /@keyframes\s+/;
var refRegExp = /\$([\w-]+)/g;
var findReferencedKeyframe = function findReferencedKeyframe2(val, keyframes2) {
  if (typeof val === "string") {
    return val.replace(refRegExp, function(match2, name) {
      if (name in keyframes2) {
        return keyframes2[name];
      }
      true ? tiny_warning_esm_default(false, '[JSS] Referenced keyframes rule "' + name + '" is not defined.') : void 0;
      return match2;
    });
  }
  return val;
};
var replaceRef = function replaceRef2(style3, prop2, keyframes2) {
  var value = style3[prop2];
  var refKeyframe = findReferencedKeyframe(value, keyframes2);
  if (refKeyframe !== value) {
    style3[prop2] = refKeyframe;
  }
};
var pluginKeyframesRule = {
  onCreateRule: function onCreateRule3(key, frames, options) {
    return typeof key === "string" && keyRegExp$1.test(key) ? new KeyframesRule(key, frames, options) : null;
  },
  onProcessStyle: function onProcessStyle(style3, rule, sheet) {
    if (rule.type !== "style" || !sheet)
      return style3;
    if ("animation-name" in style3)
      replaceRef(style3, "animation-name", sheet.keyframes);
    if ("animation" in style3)
      replaceRef(style3, "animation", sheet.keyframes);
    return style3;
  },
  onChangeValue: function onChangeValue(val, prop2, rule) {
    var sheet = rule.options.sheet;
    if (!sheet) {
      return val;
    }
    switch (prop2) {
      case "animation":
        return findReferencedKeyframe(val, sheet.keyframes);
      case "animation-name":
        return findReferencedKeyframe(val, sheet.keyframes);
      default:
        return val;
    }
  }
};
var KeyframeRule = /* @__PURE__ */ function(_BaseStyleRule) {
  _inheritsLoose(KeyframeRule2, _BaseStyleRule);
  function KeyframeRule2() {
    return _BaseStyleRule.apply(this, arguments) || this;
  }
  var _proto = KeyframeRule2.prototype;
  _proto.toString = function toString2(options) {
    var sheet = this.options.sheet;
    var link = sheet ? sheet.options.link : false;
    var opts = link ? _extends({}, options, {
      allowEmpty: true
    }) : options;
    return toCss(this.key, this.style, opts);
  };
  return KeyframeRule2;
}(BaseStyleRule);
var pluginKeyframeRule = {
  onCreateRule: function onCreateRule4(key, style3, options) {
    if (options.parent && options.parent.type === "keyframes") {
      return new KeyframeRule(key, style3, options);
    }
    return null;
  }
};
var FontFaceRule = /* @__PURE__ */ function() {
  function FontFaceRule2(key, style3, options) {
    this.type = "font-face";
    this.at = "@font-face";
    this.isProcessed = false;
    this.key = key;
    this.style = style3;
    this.options = options;
  }
  var _proto = FontFaceRule2.prototype;
  _proto.toString = function toString2(options) {
    var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
    if (Array.isArray(this.style)) {
      var str = "";
      for (var index4 = 0; index4 < this.style.length; index4++) {
        str += toCss(this.at, this.style[index4]);
        if (this.style[index4 + 1])
          str += linebreak;
      }
      return str;
    }
    return toCss(this.at, this.style, options);
  };
  return FontFaceRule2;
}();
var keyRegExp$2 = /@font-face/;
var pluginFontFaceRule = {
  onCreateRule: function onCreateRule5(key, style3, options) {
    return keyRegExp$2.test(key) ? new FontFaceRule(key, style3, options) : null;
  }
};
var ViewportRule = /* @__PURE__ */ function() {
  function ViewportRule2(key, style3, options) {
    this.type = "viewport";
    this.at = "@viewport";
    this.isProcessed = false;
    this.key = key;
    this.style = style3;
    this.options = options;
  }
  var _proto = ViewportRule2.prototype;
  _proto.toString = function toString2(options) {
    return toCss(this.key, this.style, options);
  };
  return ViewportRule2;
}();
var pluginViewportRule = {
  onCreateRule: function onCreateRule6(key, style3, options) {
    return key === "@viewport" || key === "@-ms-viewport" ? new ViewportRule(key, style3, options) : null;
  }
};
var SimpleRule = /* @__PURE__ */ function() {
  function SimpleRule2(key, value, options) {
    this.type = "simple";
    this.isProcessed = false;
    this.key = key;
    this.value = value;
    this.options = options;
  }
  var _proto = SimpleRule2.prototype;
  _proto.toString = function toString2(options) {
    if (Array.isArray(this.value)) {
      var str = "";
      for (var index4 = 0; index4 < this.value.length; index4++) {
        str += this.key + " " + this.value[index4] + ";";
        if (this.value[index4 + 1])
          str += "\n";
      }
      return str;
    }
    return this.key + " " + this.value + ";";
  };
  return SimpleRule2;
}();
var keysMap = {
  "@charset": true,
  "@import": true,
  "@namespace": true
};
var pluginSimpleRule = {
  onCreateRule: function onCreateRule7(key, value, options) {
    return key in keysMap ? new SimpleRule(key, value, options) : null;
  }
};
var plugins = [pluginStyleRule, pluginConditionalRule, pluginKeyframesRule, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule];
var defaultUpdateOptions = {
  process: true
};
var forceUpdateOptions = {
  force: true,
  process: true
};
var RuleList = /* @__PURE__ */ function() {
  function RuleList2(options) {
    this.map = {};
    this.raw = {};
    this.index = [];
    this.counter = 0;
    this.options = options;
    this.classes = options.classes;
    this.keyframes = options.keyframes;
  }
  var _proto = RuleList2.prototype;
  _proto.add = function add3(name, decl, ruleOptions) {
    var _this$options = this.options, parent = _this$options.parent, sheet = _this$options.sheet, jss2 = _this$options.jss, Renderer2 = _this$options.Renderer, generateId = _this$options.generateId, scoped = _this$options.scoped;
    var options = _extends({
      classes: this.classes,
      parent,
      sheet,
      jss: jss2,
      Renderer: Renderer2,
      generateId,
      scoped,
      name,
      keyframes: this.keyframes,
      selector: void 0
    }, ruleOptions);
    var key = name;
    if (name in this.raw) {
      key = name + "-d" + this.counter++;
    }
    this.raw[key] = decl;
    if (key in this.classes) {
      options.selector = "." + escape(this.classes[key]);
    }
    var rule = createRule(key, decl, options);
    if (!rule)
      return null;
    this.register(rule);
    var index4 = options.index === void 0 ? this.index.length : options.index;
    this.index.splice(index4, 0, rule);
    return rule;
  };
  _proto.get = function get4(name) {
    return this.map[name];
  };
  _proto.remove = function remove2(rule) {
    this.unregister(rule);
    delete this.raw[rule.key];
    this.index.splice(this.index.indexOf(rule), 1);
  };
  _proto.indexOf = function indexOf(rule) {
    return this.index.indexOf(rule);
  };
  _proto.process = function process2() {
    var plugins3 = this.options.jss.plugins;
    this.index.slice(0).forEach(plugins3.onProcessRule, plugins3);
  };
  _proto.register = function register(rule) {
    this.map[rule.key] = rule;
    if (rule instanceof StyleRule) {
      this.map[rule.selector] = rule;
      if (rule.id)
        this.classes[rule.key] = rule.id;
    } else if (rule instanceof KeyframesRule && this.keyframes) {
      this.keyframes[rule.name] = rule.id;
    }
  };
  _proto.unregister = function unregister(rule) {
    delete this.map[rule.key];
    if (rule instanceof StyleRule) {
      delete this.map[rule.selector];
      delete this.classes[rule.key];
    } else if (rule instanceof KeyframesRule) {
      delete this.keyframes[rule.name];
    }
  };
  _proto.update = function update4() {
    var name;
    var data;
    var options;
    if (typeof (arguments.length <= 0 ? void 0 : arguments[0]) === "string") {
      name = arguments.length <= 0 ? void 0 : arguments[0];
      data = arguments.length <= 1 ? void 0 : arguments[1];
      options = arguments.length <= 2 ? void 0 : arguments[2];
    } else {
      data = arguments.length <= 0 ? void 0 : arguments[0];
      options = arguments.length <= 1 ? void 0 : arguments[1];
      name = null;
    }
    if (name) {
      this.updateOne(this.map[name], data, options);
    } else {
      for (var index4 = 0; index4 < this.index.length; index4++) {
        this.updateOne(this.index[index4], data, options);
      }
    }
  };
  _proto.updateOne = function updateOne(rule, data, options) {
    if (options === void 0) {
      options = defaultUpdateOptions;
    }
    var _this$options2 = this.options, plugins3 = _this$options2.jss.plugins, sheet = _this$options2.sheet;
    if (rule.rules instanceof RuleList2) {
      rule.rules.update(data, options);
      return;
    }
    var style3 = rule.style;
    plugins3.onUpdate(data, rule, sheet, options);
    if (options.process && style3 && style3 !== rule.style) {
      plugins3.onProcessStyle(rule.style, rule, sheet);
      for (var prop2 in rule.style) {
        var nextValue = rule.style[prop2];
        var prevValue = style3[prop2];
        if (nextValue !== prevValue) {
          rule.prop(prop2, nextValue, forceUpdateOptions);
        }
      }
      for (var _prop in style3) {
        var _nextValue = rule.style[_prop];
        var _prevValue = style3[_prop];
        if (_nextValue == null && _nextValue !== _prevValue) {
          rule.prop(_prop, null, forceUpdateOptions);
        }
      }
    }
  };
  _proto.toString = function toString2(options) {
    var str = "";
    var sheet = this.options.sheet;
    var link = sheet ? sheet.options.link : false;
    var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
    for (var index4 = 0; index4 < this.index.length; index4++) {
      var rule = this.index[index4];
      var css3 = rule.toString(options);
      if (!css3 && !link)
        continue;
      if (str)
        str += linebreak;
      str += css3;
    }
    return str;
  };
  return RuleList2;
}();
var StyleSheet = /* @__PURE__ */ function() {
  function StyleSheet2(styles158, options) {
    this.attached = false;
    this.deployed = false;
    this.classes = {};
    this.keyframes = {};
    this.options = _extends({}, options, {
      sheet: this,
      parent: this,
      classes: this.classes,
      keyframes: this.keyframes
    });
    if (options.Renderer) {
      this.renderer = new options.Renderer(this);
    }
    this.rules = new RuleList(this.options);
    for (var name in styles158) {
      this.rules.add(name, styles158[name]);
    }
    this.rules.process();
  }
  var _proto = StyleSheet2.prototype;
  _proto.attach = function attach2() {
    if (this.attached)
      return this;
    if (this.renderer)
      this.renderer.attach();
    this.attached = true;
    if (!this.deployed)
      this.deploy();
    return this;
  };
  _proto.detach = function detach2() {
    if (!this.attached)
      return this;
    if (this.renderer)
      this.renderer.detach();
    this.attached = false;
    return this;
  };
  _proto.addRule = function addRule(name, decl, options) {
    var queue = this.queue;
    if (this.attached && !queue)
      this.queue = [];
    var rule = this.rules.add(name, decl, options);
    if (!rule)
      return null;
    this.options.jss.plugins.onProcessRule(rule);
    if (this.attached) {
      if (!this.deployed)
        return rule;
      if (queue)
        queue.push(rule);
      else {
        this.insertRule(rule);
        if (this.queue) {
          this.queue.forEach(this.insertRule, this);
          this.queue = void 0;
        }
      }
      return rule;
    }
    this.deployed = false;
    return rule;
  };
  _proto.insertRule = function insertRule2(rule) {
    if (this.renderer) {
      this.renderer.insertRule(rule);
    }
  };
  _proto.addRules = function addRules(styles158, options) {
    var added = [];
    for (var name in styles158) {
      var rule = this.addRule(name, styles158[name], options);
      if (rule)
        added.push(rule);
    }
    return added;
  };
  _proto.getRule = function getRule(name) {
    return this.rules.get(name);
  };
  _proto.deleteRule = function deleteRule(name) {
    var rule = typeof name === "object" ? name : this.rules.get(name);
    if (!rule || this.attached && !rule.renderable) {
      return false;
    }
    this.rules.remove(rule);
    if (this.attached && rule.renderable && this.renderer) {
      return this.renderer.deleteRule(rule.renderable);
    }
    return true;
  };
  _proto.indexOf = function indexOf(rule) {
    return this.rules.indexOf(rule);
  };
  _proto.deploy = function deploy() {
    if (this.renderer)
      this.renderer.deploy();
    this.deployed = true;
    return this;
  };
  _proto.update = function update4() {
    var _this$rules;
    (_this$rules = this.rules).update.apply(_this$rules, arguments);
    return this;
  };
  _proto.updateOne = function updateOne(rule, data, options) {
    this.rules.updateOne(rule, data, options);
    return this;
  };
  _proto.toString = function toString2(options) {
    return this.rules.toString(options);
  };
  return StyleSheet2;
}();
var PluginsRegistry = /* @__PURE__ */ function() {
  function PluginsRegistry2() {
    this.plugins = {
      internal: [],
      external: []
    };
    this.registry = {};
  }
  var _proto = PluginsRegistry2.prototype;
  _proto.onCreateRule = function onCreateRule8(name, decl, options) {
    for (var i2 = 0; i2 < this.registry.onCreateRule.length; i2++) {
      var rule = this.registry.onCreateRule[i2](name, decl, options);
      if (rule)
        return rule;
    }
    return null;
  };
  _proto.onProcessRule = function onProcessRule(rule) {
    if (rule.isProcessed)
      return;
    var sheet = rule.options.sheet;
    for (var i2 = 0; i2 < this.registry.onProcessRule.length; i2++) {
      this.registry.onProcessRule[i2](rule, sheet);
    }
    if (rule.style)
      this.onProcessStyle(rule.style, rule, sheet);
    rule.isProcessed = true;
  };
  _proto.onProcessStyle = function onProcessStyle2(style3, rule, sheet) {
    for (var i2 = 0; i2 < this.registry.onProcessStyle.length; i2++) {
      rule.style = this.registry.onProcessStyle[i2](rule.style, rule, sheet);
    }
  };
  _proto.onProcessSheet = function onProcessSheet(sheet) {
    for (var i2 = 0; i2 < this.registry.onProcessSheet.length; i2++) {
      this.registry.onProcessSheet[i2](sheet);
    }
  };
  _proto.onUpdate = function onUpdate2(data, rule, sheet, options) {
    for (var i2 = 0; i2 < this.registry.onUpdate.length; i2++) {
      this.registry.onUpdate[i2](data, rule, sheet, options);
    }
  };
  _proto.onChangeValue = function onChangeValue2(value, prop2, rule) {
    var processedValue = value;
    for (var i2 = 0; i2 < this.registry.onChangeValue.length; i2++) {
      processedValue = this.registry.onChangeValue[i2](processedValue, prop2, rule);
    }
    return processedValue;
  };
  _proto.use = function use(newPlugin, options) {
    if (options === void 0) {
      options = {
        queue: "external"
      };
    }
    var plugins3 = this.plugins[options.queue];
    if (plugins3.indexOf(newPlugin) !== -1) {
      return;
    }
    plugins3.push(newPlugin);
    this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce(function(registry, plugin) {
      for (var name in plugin) {
        if (name in registry) {
          registry[name].push(plugin[name]);
        } else {
          true ? tiny_warning_esm_default(false, '[JSS] Unknown hook "' + name + '".') : void 0;
        }
      }
      return registry;
    }, {
      onCreateRule: [],
      onProcessRule: [],
      onProcessStyle: [],
      onProcessSheet: [],
      onChangeValue: [],
      onUpdate: []
    });
  };
  return PluginsRegistry2;
}();
var SheetsRegistry = /* @__PURE__ */ function() {
  function SheetsRegistry2() {
    this.registry = [];
  }
  var _proto = SheetsRegistry2.prototype;
  _proto.add = function add3(sheet) {
    var registry = this.registry;
    var index4 = sheet.options.index;
    if (registry.indexOf(sheet) !== -1)
      return;
    if (registry.length === 0 || index4 >= this.index) {
      registry.push(sheet);
      return;
    }
    for (var i2 = 0; i2 < registry.length; i2++) {
      if (registry[i2].options.index > index4) {
        registry.splice(i2, 0, sheet);
        return;
      }
    }
  };
  _proto.reset = function reset2() {
    this.registry = [];
  };
  _proto.remove = function remove2(sheet) {
    var index4 = this.registry.indexOf(sheet);
    this.registry.splice(index4, 1);
  };
  _proto.toString = function toString2(_temp) {
    var _ref6 = _temp === void 0 ? {} : _temp, attached = _ref6.attached, options = _objectWithoutPropertiesLoose(_ref6, ["attached"]);
    var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
    var css3 = "";
    for (var i2 = 0; i2 < this.registry.length; i2++) {
      var sheet = this.registry[i2];
      if (attached != null && sheet.attached !== attached) {
        continue;
      }
      if (css3)
        css3 += linebreak;
      css3 += sheet.toString(options);
    }
    return css3;
  };
  _createClass(SheetsRegistry2, [{
    key: "index",
    get: function get4() {
      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
    }
  }]);
  return SheetsRegistry2;
}();
var sheets = new SheetsRegistry();
var globalThis$1 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" && window.Math === Math ? window : typeof self !== "undefined" && self.Math === Math ? self : Function("return this")();
var ns = "2f1acc6c3a606b082e5eef5e54414ffb";
if (globalThis$1[ns] == null)
  globalThis$1[ns] = 0;
var moduleId = globalThis$1[ns]++;
var maxRules = 1e10;
var createGenerateId = function createGenerateId2(options) {
  if (options === void 0) {
    options = {};
  }
  var ruleCounter = 0;
  var generateId = function generateId2(rule, sheet) {
    ruleCounter += 1;
    if (ruleCounter > maxRules) {
      true ? tiny_warning_esm_default(false, "[JSS] You might have a memory leak. Rule counter is at " + ruleCounter + ".") : void 0;
    }
    var jssId = "";
    var prefix4 = "";
    if (sheet) {
      if (sheet.options.classNamePrefix) {
        prefix4 = sheet.options.classNamePrefix;
      }
      if (sheet.options.jss.id != null) {
        jssId = String(sheet.options.jss.id);
      }
    }
    if (options.minify) {
      return "" + (prefix4 || "c") + moduleId + jssId + ruleCounter;
    }
    return prefix4 + rule.key + "-" + moduleId + (jssId ? "-" + jssId : "") + "-" + ruleCounter;
  };
  return generateId;
};
var memoize2 = function memoize3(fn) {
  var value;
  return function() {
    if (!value)
      value = fn();
    return value;
  };
};
var getPropertyValue = function getPropertyValue2(cssRule, prop2) {
  try {
    if (cssRule.attributeStyleMap) {
      return cssRule.attributeStyleMap.get(prop2);
    }
    return cssRule.style.getPropertyValue(prop2);
  } catch (err) {
    return "";
  }
};
var setProperty = function setProperty2(cssRule, prop2, value) {
  try {
    var cssValue = value;
    if (Array.isArray(value)) {
      cssValue = toCssValue(value, true);
      if (value[value.length - 1] === "!important") {
        cssRule.style.setProperty(prop2, cssValue, "important");
        return true;
      }
    }
    if (cssRule.attributeStyleMap) {
      cssRule.attributeStyleMap.set(prop2, cssValue);
    } else {
      cssRule.style.setProperty(prop2, cssValue);
    }
  } catch (err) {
    return false;
  }
  return true;
};
var removeProperty = function removeProperty2(cssRule, prop2) {
  try {
    if (cssRule.attributeStyleMap) {
      cssRule.attributeStyleMap.delete(prop2);
    } else {
      cssRule.style.removeProperty(prop2);
    }
  } catch (err) {
    true ? tiny_warning_esm_default(false, '[JSS] DOMException "' + err.message + '" was thrown. Tried to remove property "' + prop2 + '".') : void 0;
  }
};
var setSelector = function setSelector2(cssRule, selectorText) {
  cssRule.selectorText = selectorText;
  return cssRule.selectorText === selectorText;
};
var getHead = memoize2(function() {
  return document.querySelector("head");
});
function findHigherSheet(registry, options) {
  for (var i2 = 0; i2 < registry.length; i2++) {
    var sheet = registry[i2];
    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }
  return null;
}
function findHighestSheet(registry, options) {
  for (var i2 = registry.length - 1; i2 >= 0; i2--) {
    var sheet = registry[i2];
    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }
  return null;
}
function findCommentNode(text) {
  var head = getHead();
  for (var i2 = 0; i2 < head.childNodes.length; i2++) {
    var node4 = head.childNodes[i2];
    if (node4.nodeType === 8 && node4.nodeValue.trim() === text) {
      return node4;
    }
  }
  return null;
}
function findPrevNode(options) {
  var registry = sheets.registry;
  if (registry.length > 0) {
    var sheet = findHigherSheet(registry, options);
    if (sheet && sheet.renderer) {
      return {
        parent: sheet.renderer.element.parentNode,
        node: sheet.renderer.element
      };
    }
    sheet = findHighestSheet(registry, options);
    if (sheet && sheet.renderer) {
      return {
        parent: sheet.renderer.element.parentNode,
        node: sheet.renderer.element.nextSibling
      };
    }
  }
  var insertionPoint = options.insertionPoint;
  if (insertionPoint && typeof insertionPoint === "string") {
    var comment = findCommentNode(insertionPoint);
    if (comment) {
      return {
        parent: comment.parentNode,
        node: comment.nextSibling
      };
    }
    true ? tiny_warning_esm_default(false, '[JSS] Insertion point "' + insertionPoint + '" not found.') : void 0;
  }
  return false;
}
function insertStyle(style3, options) {
  var insertionPoint = options.insertionPoint;
  var nextNode = findPrevNode(options);
  if (nextNode !== false && nextNode.parent) {
    nextNode.parent.insertBefore(style3, nextNode.node);
    return;
  }
  if (insertionPoint && typeof insertionPoint.nodeType === "number") {
    var insertionPointElement = insertionPoint;
    var parentNode = insertionPointElement.parentNode;
    if (parentNode)
      parentNode.insertBefore(style3, insertionPointElement.nextSibling);
    else
      true ? tiny_warning_esm_default(false, "[JSS] Insertion point is not in the DOM.") : void 0;
    return;
  }
  getHead().appendChild(style3);
}
var getNonce = memoize2(function() {
  var node4 = document.querySelector('meta[property="csp-nonce"]');
  return node4 ? node4.getAttribute("content") : null;
});
var _insertRule = function insertRule(container, rule, index4) {
  try {
    if ("insertRule" in container) {
      container.insertRule(rule, index4);
    } else if ("appendRule" in container) {
      container.appendRule(rule);
    }
  } catch (err) {
    true ? tiny_warning_esm_default(false, "[JSS] " + err.message) : void 0;
    return false;
  }
  return container.cssRules[index4];
};
var getValidRuleInsertionIndex = function getValidRuleInsertionIndex2(container, index4) {
  var maxIndex = container.cssRules.length;
  if (index4 === void 0 || index4 > maxIndex) {
    return maxIndex;
  }
  return index4;
};
var createStyle = function createStyle2() {
  var el2 = document.createElement("style");
  el2.textContent = "\n";
  return el2;
};
var DomRenderer = /* @__PURE__ */ function() {
  function DomRenderer2(sheet) {
    this.getPropertyValue = getPropertyValue;
    this.setProperty = setProperty;
    this.removeProperty = removeProperty;
    this.setSelector = setSelector;
    this.hasInsertedRules = false;
    this.cssRules = [];
    if (sheet)
      sheets.add(sheet);
    this.sheet = sheet;
    var _ref6 = this.sheet ? this.sheet.options : {}, media = _ref6.media, meta = _ref6.meta, element2 = _ref6.element;
    this.element = element2 || createStyle();
    this.element.setAttribute("data-jss", "");
    if (media)
      this.element.setAttribute("media", media);
    if (meta)
      this.element.setAttribute("data-meta", meta);
    var nonce = getNonce();
    if (nonce)
      this.element.setAttribute("nonce", nonce);
  }
  var _proto = DomRenderer2.prototype;
  _proto.attach = function attach2() {
    if (this.element.parentNode || !this.sheet)
      return;
    insertStyle(this.element, this.sheet.options);
    var deployed = Boolean(this.sheet && this.sheet.deployed);
    if (this.hasInsertedRules && deployed) {
      this.hasInsertedRules = false;
      this.deploy();
    }
  };
  _proto.detach = function detach2() {
    if (!this.sheet)
      return;
    var parentNode = this.element.parentNode;
    if (parentNode)
      parentNode.removeChild(this.element);
    if (this.sheet.options.link) {
      this.cssRules = [];
      this.element.textContent = "\n";
    }
  };
  _proto.deploy = function deploy() {
    var sheet = this.sheet;
    if (!sheet)
      return;
    if (sheet.options.link) {
      this.insertRules(sheet.rules);
      return;
    }
    this.element.textContent = "\n" + sheet.toString() + "\n";
  };
  _proto.insertRules = function insertRules(rules, nativeParent) {
    for (var i2 = 0; i2 < rules.index.length; i2++) {
      this.insertRule(rules.index[i2], i2, nativeParent);
    }
  };
  _proto.insertRule = function insertRule2(rule, index4, nativeParent) {
    if (nativeParent === void 0) {
      nativeParent = this.element.sheet;
    }
    if (rule.rules) {
      var parent = rule;
      var latestNativeParent = nativeParent;
      if (rule.type === "conditional" || rule.type === "keyframes") {
        var _insertionIndex = getValidRuleInsertionIndex(nativeParent, index4);
        latestNativeParent = _insertRule(nativeParent, parent.toString({
          children: false
        }), _insertionIndex);
        if (latestNativeParent === false) {
          return false;
        }
        this.refCssRule(rule, _insertionIndex, latestNativeParent);
      }
      this.insertRules(parent.rules, latestNativeParent);
      return latestNativeParent;
    }
    var ruleStr = rule.toString();
    if (!ruleStr)
      return false;
    var insertionIndex = getValidRuleInsertionIndex(nativeParent, index4);
    var nativeRule = _insertRule(nativeParent, ruleStr, insertionIndex);
    if (nativeRule === false) {
      return false;
    }
    this.hasInsertedRules = true;
    this.refCssRule(rule, insertionIndex, nativeRule);
    return nativeRule;
  };
  _proto.refCssRule = function refCssRule(rule, index4, cssRule) {
    rule.renderable = cssRule;
    if (rule.options.parent instanceof StyleSheet) {
      this.cssRules[index4] = cssRule;
    }
  };
  _proto.deleteRule = function deleteRule(cssRule) {
    var sheet = this.element.sheet;
    var index4 = this.indexOf(cssRule);
    if (index4 === -1)
      return false;
    sheet.deleteRule(index4);
    this.cssRules.splice(index4, 1);
    return true;
  };
  _proto.indexOf = function indexOf(cssRule) {
    return this.cssRules.indexOf(cssRule);
  };
  _proto.replaceRule = function replaceRule(cssRule, rule) {
    var index4 = this.indexOf(cssRule);
    if (index4 === -1)
      return false;
    this.element.sheet.deleteRule(index4);
    this.cssRules.splice(index4, 1);
    return this.insertRule(rule, index4);
  };
  _proto.getRules = function getRules() {
    return this.element.sheet.cssRules;
  };
  return DomRenderer2;
}();
var instanceCounter = 0;
var Jss = /* @__PURE__ */ function() {
  function Jss3(options) {
    this.id = instanceCounter++;
    this.version = "10.8.2";
    this.plugins = new PluginsRegistry();
    this.options = {
      id: {
        minify: false
      },
      createGenerateId,
      Renderer: module_default ? DomRenderer : null,
      plugins: []
    };
    this.generateId = createGenerateId({
      minify: false
    });
    for (var i2 = 0; i2 < plugins.length; i2++) {
      this.plugins.use(plugins[i2], {
        queue: "internal"
      });
    }
    this.setup(options);
  }
  var _proto = Jss3.prototype;
  _proto.setup = function setup(options) {
    if (options === void 0) {
      options = {};
    }
    if (options.createGenerateId) {
      this.options.createGenerateId = options.createGenerateId;
    }
    if (options.id) {
      this.options.id = _extends({}, this.options.id, options.id);
    }
    if (options.createGenerateId || options.id) {
      this.generateId = this.options.createGenerateId(this.options.id);
    }
    if (options.insertionPoint != null)
      this.options.insertionPoint = options.insertionPoint;
    if ("Renderer" in options) {
      this.options.Renderer = options.Renderer;
    }
    if (options.plugins)
      this.use.apply(this, options.plugins);
    return this;
  };
  _proto.createStyleSheet = function createStyleSheet(styles158, options) {
    if (options === void 0) {
      options = {};
    }
    var _options = options, index4 = _options.index;
    if (typeof index4 !== "number") {
      index4 = sheets.index === 0 ? 0 : sheets.index + 1;
    }
    var sheet = new StyleSheet(styles158, _extends({}, options, {
      jss: this,
      generateId: options.generateId || this.generateId,
      insertionPoint: this.options.insertionPoint,
      Renderer: this.options.Renderer,
      index: index4
    }));
    this.plugins.onProcessSheet(sheet);
    return sheet;
  };
  _proto.removeStyleSheet = function removeStyleSheet(sheet) {
    sheet.detach();
    sheets.remove(sheet);
    return this;
  };
  _proto.createRule = function createRule$1(name, style3, options) {
    if (style3 === void 0) {
      style3 = {};
    }
    if (options === void 0) {
      options = {};
    }
    if (typeof name === "object") {
      return this.createRule(void 0, name, style3);
    }
    var ruleOptions = _extends({}, options, {
      name,
      jss: this,
      Renderer: this.options.Renderer
    });
    if (!ruleOptions.generateId)
      ruleOptions.generateId = this.generateId;
    if (!ruleOptions.classes)
      ruleOptions.classes = {};
    if (!ruleOptions.keyframes)
      ruleOptions.keyframes = {};
    var rule = createRule(name, style3, ruleOptions);
    if (rule)
      this.plugins.onProcessRule(rule);
    return rule;
  };
  _proto.use = function use() {
    var _this = this;
    for (var _len = arguments.length, plugins3 = new Array(_len), _key = 0; _key < _len; _key++) {
      plugins3[_key] = arguments[_key];
    }
    plugins3.forEach(function(plugin) {
      _this.plugins.use(plugin);
    });
    return this;
  };
  return Jss3;
}();
var createJss = function createJss2(options) {
  return new Jss(options);
};
var hasCSSTOMSupport = typeof CSS === "object" && CSS != null && "number" in CSS;
function getDynamicStyles(styles158) {
  var to = null;
  for (var key in styles158) {
    var value = styles158[key];
    var type3 = typeof value;
    if (type3 === "function") {
      if (!to)
        to = {};
      to[key] = value;
    } else if (type3 === "object" && value !== null && !Array.isArray(value)) {
      var extracted = getDynamicStyles(value);
      if (extracted) {
        if (!to)
          to = {};
        to[key] = extracted;
      }
    }
  }
  return to;
}
var index = createJss();

// node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js
var now = Date.now();
var fnValuesNs = "fnValues" + now;
var fnRuleNs = "fnStyle" + ++now;
var functionPlugin = function functionPlugin2() {
  return {
    onCreateRule: function onCreateRule8(name, decl, options) {
      if (typeof decl !== "function")
        return null;
      var rule = createRule(name, {}, options);
      rule[fnRuleNs] = decl;
      return rule;
    },
    onProcessStyle: function onProcessStyle2(style3, rule) {
      if (fnValuesNs in rule || fnRuleNs in rule)
        return style3;
      var fnValues = {};
      for (var prop2 in style3) {
        var value = style3[prop2];
        if (typeof value !== "function")
          continue;
        delete style3[prop2];
        fnValues[prop2] = value;
      }
      rule[fnValuesNs] = fnValues;
      return style3;
    },
    onUpdate: function onUpdate2(data, rule, sheet, options) {
      var styleRule = rule;
      var fnRule = styleRule[fnRuleNs];
      if (fnRule) {
        styleRule.style = fnRule(data) || {};
        if (true) {
          for (var prop2 in styleRule.style) {
            if (typeof styleRule.style[prop2] === "function") {
              true ? tiny_warning_esm_default(false, "[JSS] Function values inside function rules are not supported.") : void 0;
              break;
            }
          }
        }
      }
      var fnValues = styleRule[fnValuesNs];
      if (fnValues) {
        for (var _prop in fnValues) {
          styleRule.prop(_prop, fnValues[_prop](data), options);
        }
      }
    }
  };
};
var jss_plugin_rule_value_function_esm_default = functionPlugin;

// node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js
var at = "@global";
var atPrefix = "@global ";
var GlobalContainerRule = /* @__PURE__ */ function() {
  function GlobalContainerRule2(key, styles158, options) {
    this.type = "global";
    this.at = at;
    this.isProcessed = false;
    this.key = key;
    this.options = options;
    this.rules = new RuleList(_extends({}, options, {
      parent: this
    }));
    for (var selector in styles158) {
      this.rules.add(selector, styles158[selector]);
    }
    this.rules.process();
  }
  var _proto = GlobalContainerRule2.prototype;
  _proto.getRule = function getRule(name) {
    return this.rules.get(name);
  };
  _proto.addRule = function addRule(name, style3, options) {
    var rule = this.rules.add(name, style3, options);
    if (rule)
      this.options.jss.plugins.onProcessRule(rule);
    return rule;
  };
  _proto.indexOf = function indexOf(rule) {
    return this.rules.indexOf(rule);
  };
  _proto.toString = function toString2() {
    return this.rules.toString();
  };
  return GlobalContainerRule2;
}();
var GlobalPrefixedRule = /* @__PURE__ */ function() {
  function GlobalPrefixedRule2(key, style3, options) {
    this.type = "global";
    this.at = at;
    this.isProcessed = false;
    this.key = key;
    this.options = options;
    var selector = key.substr(atPrefix.length);
    this.rule = options.jss.createRule(selector, style3, _extends({}, options, {
      parent: this
    }));
  }
  var _proto2 = GlobalPrefixedRule2.prototype;
  _proto2.toString = function toString2(options) {
    return this.rule ? this.rule.toString(options) : "";
  };
  return GlobalPrefixedRule2;
}();
var separatorRegExp = /\s*,\s*/g;
function addScope(selector, scope) {
  var parts = selector.split(separatorRegExp);
  var scoped = "";
  for (var i2 = 0; i2 < parts.length; i2++) {
    scoped += scope + " " + parts[i2].trim();
    if (parts[i2 + 1])
      scoped += ", ";
  }
  return scoped;
}
function handleNestedGlobalContainerRule(rule, sheet) {
  var options = rule.options, style3 = rule.style;
  var rules = style3 ? style3[at] : null;
  if (!rules)
    return;
  for (var name in rules) {
    sheet.addRule(name, rules[name], _extends({}, options, {
      selector: addScope(name, rule.selector)
    }));
  }
  delete style3[at];
}
function handlePrefixedGlobalRule(rule, sheet) {
  var options = rule.options, style3 = rule.style;
  for (var prop2 in style3) {
    if (prop2[0] !== "@" || prop2.substr(0, at.length) !== at)
      continue;
    var selector = addScope(prop2.substr(at.length), rule.selector);
    sheet.addRule(selector, style3[prop2], _extends({}, options, {
      selector
    }));
    delete style3[prop2];
  }
}
function jssGlobal() {
  function onCreateRule8(name, styles158, options) {
    if (!name)
      return null;
    if (name === at) {
      return new GlobalContainerRule(name, styles158, options);
    }
    if (name[0] === "@" && name.substr(0, atPrefix.length) === atPrefix) {
      return new GlobalPrefixedRule(name, styles158, options);
    }
    var parent = options.parent;
    if (parent) {
      if (parent.type === "global" || parent.options.parent && parent.options.parent.type === "global") {
        options.scoped = false;
      }
    }
    if (options.scoped === false) {
      options.selector = name;
    }
    return null;
  }
  function onProcessRule(rule, sheet) {
    if (rule.type !== "style" || !sheet)
      return;
    handleNestedGlobalContainerRule(rule, sheet);
    handlePrefixedGlobalRule(rule, sheet);
  }
  return {
    onCreateRule: onCreateRule8,
    onProcessRule
  };
}
var jss_plugin_global_esm_default = jssGlobal;

// node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js
var separatorRegExp2 = /\s*,\s*/g;
var parentRegExp = /&/g;
var refRegExp2 = /\$([\w-]+)/g;
function jssNested() {
  function getReplaceRef(container, sheet) {
    return function(match2, key) {
      var rule = container.getRule(key) || sheet && sheet.getRule(key);
      if (rule) {
        return rule.selector;
      }
      true ? tiny_warning_esm_default(false, '[JSS] Could not find the referenced rule "' + key + '" in "' + (container.options.meta || container.toString()) + '".') : void 0;
      return key;
    };
  }
  function replaceParentRefs(nestedProp, parentProp) {
    var parentSelectors = parentProp.split(separatorRegExp2);
    var nestedSelectors = nestedProp.split(separatorRegExp2);
    var result = "";
    for (var i2 = 0; i2 < parentSelectors.length; i2++) {
      var parent = parentSelectors[i2];
      for (var j2 = 0; j2 < nestedSelectors.length; j2++) {
        var nested = nestedSelectors[j2];
        if (result)
          result += ", ";
        result += nested.indexOf("&") !== -1 ? nested.replace(parentRegExp, parent) : parent + " " + nested;
      }
    }
    return result;
  }
  function getOptions2(rule, container, prevOptions) {
    if (prevOptions)
      return _extends({}, prevOptions, {
        index: prevOptions.index + 1
      });
    var nestingLevel = rule.options.nestingLevel;
    nestingLevel = nestingLevel === void 0 ? 1 : nestingLevel + 1;
    var options = _extends({}, rule.options, {
      nestingLevel,
      index: container.indexOf(rule) + 1
    });
    delete options.name;
    return options;
  }
  function onProcessStyle2(style3, rule, sheet) {
    if (rule.type !== "style")
      return style3;
    var styleRule = rule;
    var container = styleRule.options.parent;
    var options;
    var replaceRef3;
    for (var prop2 in style3) {
      var isNested = prop2.indexOf("&") !== -1;
      var isNestedConditional = prop2[0] === "@";
      if (!isNested && !isNestedConditional)
        continue;
      options = getOptions2(styleRule, container, options);
      if (isNested) {
        var selector = replaceParentRefs(prop2, styleRule.selector);
        if (!replaceRef3)
          replaceRef3 = getReplaceRef(container, sheet);
        selector = selector.replace(refRegExp2, replaceRef3);
        container.addRule(selector, style3[prop2], _extends({}, options, {
          selector
        }));
      } else if (isNestedConditional) {
        container.addRule(prop2, {}, options).addRule(styleRule.key, style3[prop2], {
          selector: styleRule.selector
        });
      }
      delete style3[prop2];
    }
    return style3;
  }
  return {
    onProcessStyle: onProcessStyle2
  };
}
var jss_plugin_nested_esm_default = jssNested;

// node_modules/hyphenate-style-name/index.js
var uppercasePattern = /[A-Z]/g;
var msPattern = /^ms-/;
var cache = {};
function toHyphenLower(match2) {
  return "-" + match2.toLowerCase();
}
function hyphenateStyleName(name) {
  if (cache.hasOwnProperty(name)) {
    return cache[name];
  }
  var hName = name.replace(uppercasePattern, toHyphenLower);
  return cache[name] = msPattern.test(hName) ? "-" + hName : hName;
}
var hyphenate_style_name_default = hyphenateStyleName;

// node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js
function convertCase(style3) {
  var converted = {};
  for (var prop2 in style3) {
    var key = prop2.indexOf("--") === 0 ? prop2 : hyphenate_style_name_default(prop2);
    converted[key] = style3[prop2];
  }
  if (style3.fallbacks) {
    if (Array.isArray(style3.fallbacks))
      converted.fallbacks = style3.fallbacks.map(convertCase);
    else
      converted.fallbacks = convertCase(style3.fallbacks);
  }
  return converted;
}
function camelCase() {
  function onProcessStyle2(style3) {
    if (Array.isArray(style3)) {
      for (var index4 = 0; index4 < style3.length; index4++) {
        style3[index4] = convertCase(style3[index4]);
      }
      return style3;
    }
    return convertCase(style3);
  }
  function onChangeValue2(value, prop2, rule) {
    if (prop2.indexOf("--") === 0) {
      return value;
    }
    var hyphenatedProp = hyphenate_style_name_default(prop2);
    if (prop2 === hyphenatedProp)
      return value;
    rule.prop(hyphenatedProp, value);
    return null;
  }
  return {
    onProcessStyle: onProcessStyle2,
    onChangeValue: onChangeValue2
  };
}
var jss_plugin_camel_case_esm_default = camelCase;

// node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js
var px = hasCSSTOMSupport && CSS ? CSS.px : "px";
var ms = hasCSSTOMSupport && CSS ? CSS.ms : "ms";
var percent = hasCSSTOMSupport && CSS ? CSS.percent : "%";
var defaultUnits = {
  "animation-delay": ms,
  "animation-duration": ms,
  "background-position": px,
  "background-position-x": px,
  "background-position-y": px,
  "background-size": px,
  border: px,
  "border-bottom": px,
  "border-bottom-left-radius": px,
  "border-bottom-right-radius": px,
  "border-bottom-width": px,
  "border-left": px,
  "border-left-width": px,
  "border-radius": px,
  "border-right": px,
  "border-right-width": px,
  "border-top": px,
  "border-top-left-radius": px,
  "border-top-right-radius": px,
  "border-top-width": px,
  "border-width": px,
  "border-block": px,
  "border-block-end": px,
  "border-block-end-width": px,
  "border-block-start": px,
  "border-block-start-width": px,
  "border-block-width": px,
  "border-inline": px,
  "border-inline-end": px,
  "border-inline-end-width": px,
  "border-inline-start": px,
  "border-inline-start-width": px,
  "border-inline-width": px,
  "border-start-start-radius": px,
  "border-start-end-radius": px,
  "border-end-start-radius": px,
  "border-end-end-radius": px,
  margin: px,
  "margin-bottom": px,
  "margin-left": px,
  "margin-right": px,
  "margin-top": px,
  "margin-block": px,
  "margin-block-end": px,
  "margin-block-start": px,
  "margin-inline": px,
  "margin-inline-end": px,
  "margin-inline-start": px,
  padding: px,
  "padding-bottom": px,
  "padding-left": px,
  "padding-right": px,
  "padding-top": px,
  "padding-block": px,
  "padding-block-end": px,
  "padding-block-start": px,
  "padding-inline": px,
  "padding-inline-end": px,
  "padding-inline-start": px,
  "mask-position-x": px,
  "mask-position-y": px,
  "mask-size": px,
  height: px,
  width: px,
  "min-height": px,
  "max-height": px,
  "min-width": px,
  "max-width": px,
  bottom: px,
  left: px,
  top: px,
  right: px,
  inset: px,
  "inset-block": px,
  "inset-block-end": px,
  "inset-block-start": px,
  "inset-inline": px,
  "inset-inline-end": px,
  "inset-inline-start": px,
  "box-shadow": px,
  "text-shadow": px,
  "column-gap": px,
  "column-rule": px,
  "column-rule-width": px,
  "column-width": px,
  "font-size": px,
  "font-size-delta": px,
  "letter-spacing": px,
  "text-decoration-thickness": px,
  "text-indent": px,
  "text-stroke": px,
  "text-stroke-width": px,
  "word-spacing": px,
  motion: px,
  "motion-offset": px,
  outline: px,
  "outline-offset": px,
  "outline-width": px,
  perspective: px,
  "perspective-origin-x": percent,
  "perspective-origin-y": percent,
  "transform-origin": percent,
  "transform-origin-x": percent,
  "transform-origin-y": percent,
  "transform-origin-z": percent,
  "transition-delay": ms,
  "transition-duration": ms,
  "vertical-align": px,
  "flex-basis": px,
  "shape-margin": px,
  size: px,
  gap: px,
  grid: px,
  "grid-gap": px,
  "row-gap": px,
  "grid-row-gap": px,
  "grid-column-gap": px,
  "grid-template-rows": px,
  "grid-template-columns": px,
  "grid-auto-rows": px,
  "grid-auto-columns": px,
  "box-shadow-x": px,
  "box-shadow-y": px,
  "box-shadow-blur": px,
  "box-shadow-spread": px,
  "font-line-height": px,
  "text-shadow-x": px,
  "text-shadow-y": px,
  "text-shadow-blur": px
};
function addCamelCasedVersion(obj) {
  var regExp2 = /(-[a-z])/g;
  var replace = function replace2(str) {
    return str[1].toUpperCase();
  };
  var newObj = {};
  for (var key in obj) {
    newObj[key] = obj[key];
    newObj[key.replace(regExp2, replace)] = obj[key];
  }
  return newObj;
}
var units = addCamelCasedVersion(defaultUnits);
function iterate(prop2, value, options) {
  if (value == null)
    return value;
  if (Array.isArray(value)) {
    for (var i2 = 0; i2 < value.length; i2++) {
      value[i2] = iterate(prop2, value[i2], options);
    }
  } else if (typeof value === "object") {
    if (prop2 === "fallbacks") {
      for (var innerProp in value) {
        value[innerProp] = iterate(innerProp, value[innerProp], options);
      }
    } else {
      for (var _innerProp in value) {
        value[_innerProp] = iterate(prop2 + "-" + _innerProp, value[_innerProp], options);
      }
    }
  } else if (typeof value === "number" && isNaN(value) === false) {
    var unit3 = options[prop2] || units[prop2];
    if (unit3 && !(value === 0 && unit3 === px)) {
      return typeof unit3 === "function" ? unit3(value).toString() : "" + value + unit3;
    }
    return value.toString();
  }
  return value;
}
function defaultUnit(options) {
  if (options === void 0) {
    options = {};
  }
  var camelCasedOptions = addCamelCasedVersion(options);
  function onProcessStyle2(style3, rule) {
    if (rule.type !== "style")
      return style3;
    for (var prop2 in style3) {
      style3[prop2] = iterate(prop2, style3[prop2], camelCasedOptions);
    }
    return style3;
  }
  function onChangeValue2(value, prop2) {
    return iterate(prop2, value, camelCasedOptions);
  }
  return {
    onProcessStyle: onProcessStyle2,
    onChangeValue: onChangeValue2
  };
}
var jss_plugin_default_unit_esm_default = defaultUnit;

// node_modules/css-vendor/dist/css-vendor.esm.js
var js = "";
var css = "";
var vendor = "";
var browser = "";
var isTouch = module_default && "ontouchstart" in document.documentElement;
if (module_default) {
  jsCssMap = {
    Moz: "-moz-",
    ms: "-ms-",
    O: "-o-",
    Webkit: "-webkit-"
  };
  _document$createEleme = document.createElement("p"), style3 = _document$createEleme.style;
  testProp = "Transform";
  for (key in jsCssMap) {
    if (key + testProp in style3) {
      js = key;
      css = jsCssMap[key];
      break;
    }
  }
  if (js === "Webkit" && "msHyphens" in style3) {
    js = "ms";
    css = jsCssMap.ms;
    browser = "edge";
  }
  if (js === "Webkit" && "-apple-trailing-word" in style3) {
    vendor = "apple";
  }
}
var jsCssMap;
var _document$createEleme;
var style3;
var testProp;
var key;
var prefix = {
  js,
  css,
  vendor,
  browser,
  isTouch
};
function supportedKeyframes(key) {
  if (key[1] === "-")
    return key;
  if (prefix.js === "ms")
    return key;
  return "@" + prefix.css + "keyframes" + key.substr(10);
}
var appearence = {
  noPrefill: ["appearance"],
  supportedProperty: function supportedProperty(prop2) {
    if (prop2 !== "appearance")
      return false;
    if (prefix.js === "ms")
      return "-webkit-" + prop2;
    return prefix.css + prop2;
  }
};
var colorAdjust = {
  noPrefill: ["color-adjust"],
  supportedProperty: function supportedProperty2(prop2) {
    if (prop2 !== "color-adjust")
      return false;
    if (prefix.js === "Webkit")
      return prefix.css + "print-" + prop2;
    return prop2;
  }
};
var regExp = /[-\s]+(.)?/g;
function toUpper(match2, c2) {
  return c2 ? c2.toUpperCase() : "";
}
function camelize(str) {
  return str.replace(regExp, toUpper);
}
function pascalize(str) {
  return camelize("-" + str);
}
var mask = {
  noPrefill: ["mask"],
  supportedProperty: function supportedProperty3(prop2, style3) {
    if (!/^mask/.test(prop2))
      return false;
    if (prefix.js === "Webkit") {
      var longhand = "mask-image";
      if (camelize(longhand) in style3) {
        return prop2;
      }
      if (prefix.js + pascalize(longhand) in style3) {
        return prefix.css + prop2;
      }
    }
    return prop2;
  }
};
var textOrientation = {
  noPrefill: ["text-orientation"],
  supportedProperty: function supportedProperty4(prop2) {
    if (prop2 !== "text-orientation")
      return false;
    if (prefix.vendor === "apple" && !prefix.isTouch) {
      return prefix.css + prop2;
    }
    return prop2;
  }
};
var transform3 = {
  noPrefill: ["transform"],
  supportedProperty: function supportedProperty5(prop2, style3, options) {
    if (prop2 !== "transform")
      return false;
    if (options.transform) {
      return prop2;
    }
    return prefix.css + prop2;
  }
};
var transition = {
  noPrefill: ["transition"],
  supportedProperty: function supportedProperty6(prop2, style3, options) {
    if (prop2 !== "transition")
      return false;
    if (options.transition) {
      return prop2;
    }
    return prefix.css + prop2;
  }
};
var writingMode = {
  noPrefill: ["writing-mode"],
  supportedProperty: function supportedProperty7(prop2) {
    if (prop2 !== "writing-mode")
      return false;
    if (prefix.js === "Webkit" || prefix.js === "ms" && prefix.browser !== "edge") {
      return prefix.css + prop2;
    }
    return prop2;
  }
};
var userSelect = {
  noPrefill: ["user-select"],
  supportedProperty: function supportedProperty8(prop2) {
    if (prop2 !== "user-select")
      return false;
    if (prefix.js === "Moz" || prefix.js === "ms" || prefix.vendor === "apple") {
      return prefix.css + prop2;
    }
    return prop2;
  }
};
var breakPropsOld = {
  supportedProperty: function supportedProperty9(prop2, style3) {
    if (!/^break-/.test(prop2))
      return false;
    if (prefix.js === "Webkit") {
      var jsProp = "WebkitColumn" + pascalize(prop2);
      return jsProp in style3 ? prefix.css + "column-" + prop2 : false;
    }
    if (prefix.js === "Moz") {
      var _jsProp = "page" + pascalize(prop2);
      return _jsProp in style3 ? "page-" + prop2 : false;
    }
    return false;
  }
};
var inlineLogicalOld = {
  supportedProperty: function supportedProperty10(prop2, style3) {
    if (!/^(border|margin|padding)-inline/.test(prop2))
      return false;
    if (prefix.js === "Moz")
      return prop2;
    var newProp = prop2.replace("-inline", "");
    return prefix.js + pascalize(newProp) in style3 ? prefix.css + newProp : false;
  }
};
var unprefixed = {
  supportedProperty: function supportedProperty11(prop2, style3) {
    return camelize(prop2) in style3 ? prop2 : false;
  }
};
var prefixed = {
  supportedProperty: function supportedProperty12(prop2, style3) {
    var pascalized = pascalize(prop2);
    if (prop2[0] === "-")
      return prop2;
    if (prop2[0] === "-" && prop2[1] === "-")
      return prop2;
    if (prefix.js + pascalized in style3)
      return prefix.css + prop2;
    if (prefix.js !== "Webkit" && "Webkit" + pascalized in style3)
      return "-webkit-" + prop2;
    return false;
  }
};
var scrollSnap = {
  supportedProperty: function supportedProperty13(prop2) {
    if (prop2.substring(0, 11) !== "scroll-snap")
      return false;
    if (prefix.js === "ms") {
      return "" + prefix.css + prop2;
    }
    return prop2;
  }
};
var overscrollBehavior = {
  supportedProperty: function supportedProperty14(prop2) {
    if (prop2 !== "overscroll-behavior")
      return false;
    if (prefix.js === "ms") {
      return prefix.css + "scroll-chaining";
    }
    return prop2;
  }
};
var propMap = {
  "flex-grow": "flex-positive",
  "flex-shrink": "flex-negative",
  "flex-basis": "flex-preferred-size",
  "justify-content": "flex-pack",
  order: "flex-order",
  "align-items": "flex-align",
  "align-content": "flex-line-pack"
};
var flex2012 = {
  supportedProperty: function supportedProperty15(prop2, style3) {
    var newProp = propMap[prop2];
    if (!newProp)
      return false;
    return prefix.js + pascalize(newProp) in style3 ? prefix.css + newProp : false;
  }
};
var propMap$1 = {
  flex: "box-flex",
  "flex-grow": "box-flex",
  "flex-direction": ["box-orient", "box-direction"],
  order: "box-ordinal-group",
  "align-items": "box-align",
  "flex-flow": ["box-orient", "box-direction"],
  "justify-content": "box-pack"
};
var propKeys = Object.keys(propMap$1);
var prefixCss = function prefixCss2(p) {
  return prefix.css + p;
};
var flex2009 = {
  supportedProperty: function supportedProperty16(prop2, style3, _ref6) {
    var multiple = _ref6.multiple;
    if (propKeys.indexOf(prop2) > -1) {
      var newProp = propMap$1[prop2];
      if (!Array.isArray(newProp)) {
        return prefix.js + pascalize(newProp) in style3 ? prefix.css + newProp : false;
      }
      if (!multiple)
        return false;
      for (var i2 = 0; i2 < newProp.length; i2++) {
        if (!(prefix.js + pascalize(newProp[0]) in style3)) {
          return false;
        }
      }
      return newProp.map(prefixCss);
    }
    return false;
  }
};
var plugins2 = [appearence, colorAdjust, mask, textOrientation, transform3, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];
var propertyDetectors = plugins2.filter(function(p) {
  return p.supportedProperty;
}).map(function(p) {
  return p.supportedProperty;
});
var noPrefill = plugins2.filter(function(p) {
  return p.noPrefill;
}).reduce(function(a2, p) {
  a2.push.apply(a2, _toConsumableArray(p.noPrefill));
  return a2;
}, []);
var el;
var cache2 = {};
if (module_default) {
  el = document.createElement("p");
  computed = window.getComputedStyle(document.documentElement, "");
  for (key$1 in computed) {
    if (!isNaN(key$1))
      cache2[computed[key$1]] = computed[key$1];
  }
  noPrefill.forEach(function(x2) {
    return delete cache2[x2];
  });
}
var computed;
var key$1;
function supportedProperty17(prop2, options) {
  if (options === void 0) {
    options = {};
  }
  if (!el)
    return prop2;
  if (cache2[prop2] != null) {
    return cache2[prop2];
  }
  if (prop2 === "transition" || prop2 === "transform") {
    options[prop2] = prop2 in el.style;
  }
  for (var i2 = 0; i2 < propertyDetectors.length; i2++) {
    cache2[prop2] = propertyDetectors[i2](prop2, el.style, options);
    if (cache2[prop2])
      break;
  }
  try {
    el.style[prop2] = "";
  } catch (err) {
    return false;
  }
  return cache2[prop2];
}
var cache$1 = {};
var transitionProperties = {
  transition: 1,
  "transition-property": 1,
  "-webkit-transition": 1,
  "-webkit-transition-property": 1
};
var transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
var el$1;
function prefixTransitionCallback(match2, p1, p2) {
  if (p1 === "var")
    return "var";
  if (p1 === "all")
    return "all";
  if (p2 === "all")
    return ", all";
  var prefixedValue = p1 ? supportedProperty17(p1) : ", " + supportedProperty17(p2);
  if (!prefixedValue)
    return p1 || p2;
  return prefixedValue;
}
if (module_default)
  el$1 = document.createElement("p");
function supportedValue(property, value) {
  var prefixedValue = value;
  if (!el$1 || property === "content")
    return value;
  if (typeof prefixedValue !== "string" || !isNaN(parseInt(prefixedValue, 10))) {
    return prefixedValue;
  }
  var cacheKey = property + prefixedValue;
  if (cache$1[cacheKey] != null) {
    return cache$1[cacheKey];
  }
  try {
    el$1.style[property] = prefixedValue;
  } catch (err) {
    cache$1[cacheKey] = false;
    return false;
  }
  if (transitionProperties[property]) {
    prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);
  } else if (el$1.style[property] === "") {
    prefixedValue = prefix.css + prefixedValue;
    if (prefixedValue === "-ms-flex")
      el$1.style[property] = "-ms-flexbox";
    el$1.style[property] = prefixedValue;
    if (el$1.style[property] === "") {
      cache$1[cacheKey] = false;
      return false;
    }
  }
  el$1.style[property] = "";
  cache$1[cacheKey] = prefixedValue;
  return cache$1[cacheKey];
}

// node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js
function jssVendorPrefixer() {
  function onProcessRule(rule) {
    if (rule.type === "keyframes") {
      var atRule = rule;
      atRule.at = supportedKeyframes(atRule.at);
    }
  }
  function prefixStyle(style3) {
    for (var prop2 in style3) {
      var value = style3[prop2];
      if (prop2 === "fallbacks" && Array.isArray(value)) {
        style3[prop2] = value.map(prefixStyle);
        continue;
      }
      var changeProp = false;
      var supportedProp = supportedProperty17(prop2);
      if (supportedProp && supportedProp !== prop2)
        changeProp = true;
      var changeValue = false;
      var supportedValue$1 = supportedValue(supportedProp, toCssValue(value));
      if (supportedValue$1 && supportedValue$1 !== value)
        changeValue = true;
      if (changeProp || changeValue) {
        if (changeProp)
          delete style3[prop2];
        style3[supportedProp || prop2] = supportedValue$1 || value;
      }
    }
    return style3;
  }
  function onProcessStyle2(style3, rule) {
    if (rule.type !== "style")
      return style3;
    return prefixStyle(style3);
  }
  function onChangeValue2(value, prop2) {
    return supportedValue(prop2, toCssValue(value)) || value;
  }
  return {
    onProcessRule,
    onProcessStyle: onProcessStyle2,
    onChangeValue: onChangeValue2
  };
}
var jss_plugin_vendor_prefixer_esm_default = jssVendorPrefixer;

// node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js
function jssPropsSort() {
  var sort = function sort2(prop0, prop1) {
    if (prop0.length === prop1.length) {
      return prop0 > prop1 ? 1 : -1;
    }
    return prop0.length - prop1.length;
  };
  return {
    onProcessStyle: function onProcessStyle2(style3, rule) {
      if (rule.type !== "style")
        return style3;
      var newStyle = {};
      var props = Object.keys(style3).sort(sort);
      for (var i2 = 0; i2 < props.length; i2++) {
        newStyle[props[i2]] = style3[props[i2]];
      }
      return newStyle;
    }
  };
}
var jss_plugin_props_sort_esm_default = jssPropsSort;

// node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js
function jssPreset() {
  return {
    plugins: [
      jss_plugin_rule_value_function_esm_default(),
      jss_plugin_global_esm_default(),
      jss_plugin_nested_esm_default(),
      jss_plugin_camel_case_esm_default(),
      jss_plugin_default_unit_esm_default(),
      typeof window === "undefined" ? null : jss_plugin_vendor_prefixer_esm_default(),
      jss_plugin_props_sort_esm_default()
    ]
  };
}

// node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js
import React108 from "react";

// node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js
function mergeClasses() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var baseClasses = options.baseClasses, newClasses = options.newClasses, Component7 = options.Component;
  if (!newClasses) {
    return baseClasses;
  }
  var nextClasses = _extends({}, baseClasses);
  if (true) {
    if (typeof newClasses === "string") {
      console.error(["Material-UI: The value `".concat(newClasses, "` ") + "provided to the classes prop of ".concat(getDisplayName(Component7), " is incorrect."), "You might want to use the className prop instead."].join("\n"));
      return baseClasses;
    }
  }
  Object.keys(newClasses).forEach(function(key) {
    if (true) {
      if (!baseClasses[key] && newClasses[key]) {
        console.error(["Material-UI: The key `".concat(key, "` ") + "provided to the classes prop is not implemented in ".concat(getDisplayName(Component7), "."), "You can only override one of the following: ".concat(Object.keys(baseClasses).join(","), ".")].join("\n"));
      }
      if (newClasses[key] && typeof newClasses[key] !== "string") {
        console.error(["Material-UI: The key `".concat(key, "` ") + "provided to the classes prop is not valid for ".concat(getDisplayName(Component7), "."), "You need to provide a non empty string instead of: ".concat(newClasses[key], ".")].join("\n"));
      }
    }
    if (newClasses[key]) {
      nextClasses[key] = "".concat(baseClasses[key], " ").concat(newClasses[key]);
    }
  });
  return nextClasses;
}

// node_modules/@material-ui/styles/esm/makeStyles/multiKeyStore.js
var multiKeyStore = {
  set: function set(cache3, key1, key2, value) {
    var subCache = cache3.get(key1);
    if (!subCache) {
      subCache = new Map();
      cache3.set(key1, subCache);
    }
    subCache.set(key2, value);
  },
  get: function get(cache3, key1, key2) {
    var subCache = cache3.get(key1);
    return subCache ? subCache.get(key2) : void 0;
  },
  delete: function _delete(cache3, key1, key2) {
    var subCache = cache3.get(key1);
    subCache.delete(key2);
  }
};
var multiKeyStore_default = multiKeyStore;

// node_modules/@material-ui/styles/esm/useTheme/useTheme.js
import React106 from "react";

// node_modules/@material-ui/styles/esm/useTheme/ThemeContext.js
import React105 from "react";
var ThemeContext = React105.createContext(null);
if (true) {
  ThemeContext.displayName = "ThemeContext";
}
var ThemeContext_default = ThemeContext;

// node_modules/@material-ui/styles/esm/useTheme/useTheme.js
function useTheme() {
  var theme = React106.useContext(ThemeContext_default);
  if (true) {
    React106.useDebugValue(theme);
  }
  return theme;
}

// node_modules/@material-ui/styles/esm/StylesProvider/StylesProvider.js
var import_prop_types6 = __toModule(require_prop_types());
import React107 from "react";
var jss = createJss(jssPreset());
var generateClassName = createGenerateClassName();
var sheetsManager = new Map();
var defaultOptions = {
  disableGeneration: false,
  generateClassName,
  jss,
  sheetsCache: null,
  sheetsManager,
  sheetsRegistry: null
};
var StylesContext = React107.createContext(defaultOptions);
if (true) {
  StylesContext.displayName = "StylesContext";
}
var injectFirstNode;
function StylesProvider(props) {
  var children2 = props.children, _props$injectFirst = props.injectFirst, injectFirst = _props$injectFirst === void 0 ? false : _props$injectFirst, _props$disableGenerat = props.disableGeneration, disableGeneration = _props$disableGenerat === void 0 ? false : _props$disableGenerat, localOptions = _objectWithoutProperties(props, ["children", "injectFirst", "disableGeneration"]);
  var outerOptions = React107.useContext(StylesContext);
  var context = _extends({}, outerOptions, {
    disableGeneration
  }, localOptions);
  if (true) {
    if (typeof window === "undefined" && !context.sheetsManager) {
      console.error("Material-UI: You need to use the ServerStyleSheets API when rendering on the server.");
    }
  }
  if (true) {
    if (context.jss.options.insertionPoint && injectFirst) {
    }
  }
  if (true) {
    if (injectFirst && localOptions.jss) {
      console.error("Material-UI: You cannot use the jss and injectFirst props at the same time.");
    }
  }
  if (!context.jss.options.insertionPoint && injectFirst && typeof window !== "undefined") {
    if (!injectFirstNode) {
      var head = document.head;
      injectFirstNode = document.createComment("mui-inject-first");
      head.insertBefore(injectFirstNode, head.firstChild);
    }
    context.jss = createJss({
      plugins: jssPreset().plugins,
      insertionPoint: injectFirstNode
    });
  }
  return /* @__PURE__ */ React107.createElement(StylesContext.Provider, {
    value: context
  }, children2);
}
true ? StylesProvider.propTypes = {
  children: import_prop_types6.default.node.isRequired,
  disableGeneration: import_prop_types6.default.bool,
  generateClassName: import_prop_types6.default.func,
  injectFirst: import_prop_types6.default.bool,
  jss: import_prop_types6.default.object,
  serverGenerateClassName: import_prop_types6.default.func,
  sheetsCache: import_prop_types6.default.object,
  sheetsManager: import_prop_types6.default.object,
  sheetsRegistry: import_prop_types6.default.object
} : void 0;
if (true) {
  true ? StylesProvider.propTypes = exactProp(StylesProvider.propTypes) : void 0;
}

// node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js
var indexCounter = -1e9;
function increment() {
  indexCounter += 1;
  if (true) {
    if (indexCounter >= 0) {
      console.warn(["Material-UI: You might have a memory leak.", "The indexCounter is not supposed to grow that much."].join("\n"));
    }
  }
  return indexCounter;
}

// node_modules/@material-ui/styles/esm/getStylesCreator/noopTheme.js
var noopTheme = {};
var noopTheme_default = noopTheme;

// node_modules/@material-ui/styles/esm/getStylesCreator/getStylesCreator.js
function getStylesCreator(stylesOrCreator) {
  var themingEnabled = typeof stylesOrCreator === "function";
  if (true) {
    if (_typeof(stylesOrCreator) !== "object" && !themingEnabled) {
      console.error(["Material-UI: The `styles` argument provided is invalid.", "You need to provide a function generating the styles or a styles object."].join("\n"));
    }
  }
  return {
    create: function create3(theme, name) {
      var styles158;
      try {
        styles158 = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;
      } catch (err) {
        if (true) {
          if (themingEnabled === true && theme === noopTheme_default) {
            console.error(["Material-UI: The `styles` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join("\n"));
          }
        }
        throw err;
      }
      if (!name || !theme.overrides || !theme.overrides[name]) {
        return styles158;
      }
      var overrides3 = theme.overrides[name];
      var stylesWithOverrides = _extends({}, styles158);
      Object.keys(overrides3).forEach(function(key) {
        if (true) {
          if (!stylesWithOverrides[key]) {
            console.warn(["Material-UI: You are trying to override a style that does not exist.", "Fix the `".concat(key, "` key of `theme.overrides.").concat(name, "`.")].join("\n"));
          }
        }
        stylesWithOverrides[key] = deepmerge(stylesWithOverrides[key], overrides3[key]);
      });
      return stylesWithOverrides;
    },
    options: {}
  };
}

// node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js
function getClasses(_ref6, classes, Component7) {
  var state = _ref6.state, stylesOptions = _ref6.stylesOptions;
  if (stylesOptions.disableGeneration) {
    return classes || {};
  }
  if (!state.cacheClasses) {
    state.cacheClasses = {
      value: null,
      lastProp: null,
      lastJSS: {}
    };
  }
  var generate = false;
  if (state.classes !== state.cacheClasses.lastJSS) {
    state.cacheClasses.lastJSS = state.classes;
    generate = true;
  }
  if (classes !== state.cacheClasses.lastProp) {
    state.cacheClasses.lastProp = classes;
    generate = true;
  }
  if (generate) {
    state.cacheClasses.value = mergeClasses({
      baseClasses: state.cacheClasses.lastJSS,
      newClasses: classes,
      Component: Component7
    });
  }
  return state.cacheClasses.value;
}
function attach(_ref23, props) {
  var state = _ref23.state, theme = _ref23.theme, stylesOptions = _ref23.stylesOptions, stylesCreator = _ref23.stylesCreator, name = _ref23.name;
  if (stylesOptions.disableGeneration) {
    return;
  }
  var sheetManager = multiKeyStore_default.get(stylesOptions.sheetsManager, stylesCreator, theme);
  if (!sheetManager) {
    sheetManager = {
      refs: 0,
      staticSheet: null,
      dynamicStyles: null
    };
    multiKeyStore_default.set(stylesOptions.sheetsManager, stylesCreator, theme, sheetManager);
  }
  var options = _extends({}, stylesCreator.options, stylesOptions, {
    theme,
    flip: typeof stylesOptions.flip === "boolean" ? stylesOptions.flip : theme.direction === "rtl"
  });
  options.generateId = options.serverGenerateClassName || options.generateClassName;
  var sheetsRegistry = stylesOptions.sheetsRegistry;
  if (sheetManager.refs === 0) {
    var staticSheet;
    if (stylesOptions.sheetsCache) {
      staticSheet = multiKeyStore_default.get(stylesOptions.sheetsCache, stylesCreator, theme);
    }
    var styles158 = stylesCreator.create(theme, name);
    if (!staticSheet) {
      staticSheet = stylesOptions.jss.createStyleSheet(styles158, _extends({
        link: false
      }, options));
      staticSheet.attach();
      if (stylesOptions.sheetsCache) {
        multiKeyStore_default.set(stylesOptions.sheetsCache, stylesCreator, theme, staticSheet);
      }
    }
    if (sheetsRegistry) {
      sheetsRegistry.add(staticSheet);
    }
    sheetManager.staticSheet = staticSheet;
    sheetManager.dynamicStyles = getDynamicStyles(styles158);
  }
  if (sheetManager.dynamicStyles) {
    var dynamicSheet = stylesOptions.jss.createStyleSheet(sheetManager.dynamicStyles, _extends({
      link: true
    }, options));
    dynamicSheet.update(props);
    dynamicSheet.attach();
    state.dynamicSheet = dynamicSheet;
    state.classes = mergeClasses({
      baseClasses: sheetManager.staticSheet.classes,
      newClasses: dynamicSheet.classes
    });
    if (sheetsRegistry) {
      sheetsRegistry.add(dynamicSheet);
    }
  } else {
    state.classes = sheetManager.staticSheet.classes;
  }
  sheetManager.refs += 1;
}
function update(_ref32, props) {
  var state = _ref32.state;
  if (state.dynamicSheet) {
    state.dynamicSheet.update(props);
  }
}
function detach(_ref42) {
  var state = _ref42.state, theme = _ref42.theme, stylesOptions = _ref42.stylesOptions, stylesCreator = _ref42.stylesCreator;
  if (stylesOptions.disableGeneration) {
    return;
  }
  var sheetManager = multiKeyStore_default.get(stylesOptions.sheetsManager, stylesCreator, theme);
  sheetManager.refs -= 1;
  var sheetsRegistry = stylesOptions.sheetsRegistry;
  if (sheetManager.refs === 0) {
    multiKeyStore_default.delete(stylesOptions.sheetsManager, stylesCreator, theme);
    stylesOptions.jss.removeStyleSheet(sheetManager.staticSheet);
    if (sheetsRegistry) {
      sheetsRegistry.remove(sheetManager.staticSheet);
    }
  }
  if (state.dynamicSheet) {
    stylesOptions.jss.removeStyleSheet(state.dynamicSheet);
    if (sheetsRegistry) {
      sheetsRegistry.remove(state.dynamicSheet);
    }
  }
}
function useSynchronousEffect(func4, values6) {
  var key = React108.useRef([]);
  var output;
  var currentKey = React108.useMemo(function() {
    return {};
  }, values6);
  if (key.current !== currentKey) {
    key.current = currentKey;
    output = func4();
  }
  React108.useEffect(function() {
    return function() {
      if (output) {
        output();
      }
    };
  }, [currentKey]);
}
function makeStyles(stylesOrCreator) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var name = options.name, classNamePrefixOption = options.classNamePrefix, Component7 = options.Component, _options$defaultTheme = options.defaultTheme, defaultTheme2 = _options$defaultTheme === void 0 ? noopTheme_default : _options$defaultTheme, stylesOptions2 = _objectWithoutProperties(options, ["name", "classNamePrefix", "Component", "defaultTheme"]);
  var stylesCreator = getStylesCreator(stylesOrCreator);
  var classNamePrefix = name || classNamePrefixOption || "makeStyles";
  stylesCreator.options = {
    index: increment(),
    name,
    meta: classNamePrefix,
    classNamePrefix
  };
  var useStyles4 = function useStyles5() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var theme = useTheme() || defaultTheme2;
    var stylesOptions = _extends({}, React108.useContext(StylesContext), stylesOptions2);
    var instance = React108.useRef();
    var shouldUpdate = React108.useRef();
    useSynchronousEffect(function() {
      var current = {
        name,
        state: {},
        stylesCreator,
        stylesOptions,
        theme
      };
      attach(current, props);
      shouldUpdate.current = false;
      instance.current = current;
      return function() {
        detach(current);
      };
    }, [theme, stylesCreator]);
    React108.useEffect(function() {
      if (shouldUpdate.current) {
        update(instance.current, props);
      }
      shouldUpdate.current = true;
    });
    var classes = getClasses(instance.current, props.classes, Component7);
    if (true) {
      React108.useDebugValue(classes);
    }
    return classes;
  };
  return useStyles4;
}

// node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

// node_modules/@material-ui/styles/esm/styled/styled.js
import React109 from "react";

// node_modules/clsx/dist/clsx.m.js
function toVal(mix) {
  var k2, y2, str = "";
  if (typeof mix === "string" || typeof mix === "number") {
    str += mix;
  } else if (typeof mix === "object") {
    if (Array.isArray(mix)) {
      for (k2 = 0; k2 < mix.length; k2++) {
        if (mix[k2]) {
          if (y2 = toVal(mix[k2])) {
            str && (str += " ");
            str += y2;
          }
        }
      }
    } else {
      for (k2 in mix) {
        if (mix[k2]) {
          str && (str += " ");
          str += k2;
        }
      }
    }
  }
  return str;
}
function clsx_m_default() {
  var i2 = 0, tmp, x2, str = "";
  while (i2 < arguments.length) {
    if (tmp = arguments[i2++]) {
      if (x2 = toVal(tmp)) {
        str && (str += " ");
        str += x2;
      }
    }
  }
  return str;
}

// node_modules/@material-ui/styles/esm/styled/styled.js
var import_prop_types7 = __toModule(require_prop_types());
var import_hoist_non_react_statics = __toModule(require_hoist_non_react_statics_cjs());
function omit2(input, fields) {
  var output = {};
  Object.keys(input).forEach(function(prop2) {
    if (fields.indexOf(prop2) === -1) {
      output[prop2] = input[prop2];
    }
  });
  return output;
}
function styled(Component7) {
  var componentCreator = function componentCreator2(style3) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var name = options.name, stylesOptions = _objectWithoutProperties(options, ["name"]);
    if (Component7 === void 0) {
      throw new Error(["You are calling styled(Component)(style) with an undefined component.", "You may have forgotten to import it."].join("\n"));
    }
    var classNamePrefix = name;
    if (true) {
      if (!name) {
        var displayName2 = getDisplayName(Component7);
        if (displayName2 !== void 0) {
          classNamePrefix = displayName2;
        }
      }
    }
    var stylesOrCreator = typeof style3 === "function" ? function(theme) {
      return {
        root: function root(props) {
          return style3(_extends({
            theme
          }, props));
        }
      };
    } : {
      root: style3
    };
    var useStyles4 = makeStyles(stylesOrCreator, _extends({
      Component: Component7,
      name: name || Component7.displayName,
      classNamePrefix
    }, stylesOptions));
    var filterProps;
    var propTypes = {};
    if (style3.filterProps) {
      filterProps = style3.filterProps;
      delete style3.filterProps;
    }
    if (style3.propTypes) {
      propTypes = style3.propTypes;
      delete style3.propTypes;
    }
    var StyledComponent = /* @__PURE__ */ React109.forwardRef(function StyledComponent2(props, ref2) {
      var children2 = props.children, classNameProp = props.className, clone2 = props.clone, ComponentProp = props.component, other = _objectWithoutProperties(props, ["children", "className", "clone", "component"]);
      var classes = useStyles4(props);
      var className = clsx_m_default(classes.root, classNameProp);
      var spread = other;
      if (filterProps) {
        spread = omit2(spread, filterProps);
      }
      if (clone2) {
        return /* @__PURE__ */ React109.cloneElement(children2, _extends({
          className: clsx_m_default(children2.props.className, className)
        }, spread));
      }
      if (typeof children2 === "function") {
        return children2(_extends({
          className
        }, spread));
      }
      var FinalComponent = ComponentProp || Component7;
      return /* @__PURE__ */ React109.createElement(FinalComponent, _extends({
        ref: ref2,
        className
      }, spread), children2);
    });
    true ? StyledComponent.propTypes = _extends({
      children: import_prop_types7.default.oneOfType([import_prop_types7.default.node, import_prop_types7.default.func]),
      className: import_prop_types7.default.string,
      clone: chainPropTypes(import_prop_types7.default.bool, function(props) {
        if (props.clone && props.component) {
          return new Error("You can not use the clone and component prop at the same time.");
        }
        return null;
      }),
      component: import_prop_types7.default.elementType
    }, propTypes) : void 0;
    if (true) {
      StyledComponent.displayName = "Styled(".concat(classNamePrefix, ")");
    }
    (0, import_hoist_non_react_statics.default)(StyledComponent, Component7);
    return StyledComponent;
  };
  return componentCreator;
}

// node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js
var import_prop_types8 = __toModule(require_prop_types());
import React110 from "react";
function mergeOuterLocalTheme(outerTheme, localTheme) {
  if (typeof localTheme === "function") {
    var mergedTheme = localTheme(outerTheme);
    if (true) {
      if (!mergedTheme) {
        console.error(["Material-UI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join("\n"));
      }
    }
    return mergedTheme;
  }
  return _extends({}, outerTheme, localTheme);
}
function ThemeProvider(props) {
  var children2 = props.children, localTheme = props.theme;
  var outerTheme = useTheme();
  if (true) {
    if (outerTheme === null && typeof localTheme === "function") {
      console.error(["Material-UI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join("\n"));
    }
  }
  var theme = React110.useMemo(function() {
    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);
    if (output != null) {
      output[nested_default] = outerTheme !== null;
    }
    return output;
  }, [localTheme, outerTheme]);
  return /* @__PURE__ */ React110.createElement(ThemeContext_default.Provider, {
    value: theme
  }, children2);
}
true ? ThemeProvider.propTypes = {
  children: import_prop_types8.default.node.isRequired,
  theme: import_prop_types8.default.oneOfType([import_prop_types8.default.object, import_prop_types8.default.func]).isRequired
} : void 0;
if (true) {
  true ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;
}
var ThemeProvider_default = ThemeProvider;

// node_modules/@material-ui/styles/esm/withStyles/withStyles.js
var import_prop_types9 = __toModule(require_prop_types());
var import_hoist_non_react_statics2 = __toModule(require_hoist_non_react_statics_cjs());
import React111 from "react";
var withStyles = function withStyles2(stylesOrCreator) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return function(Component7) {
    var defaultTheme2 = options.defaultTheme, _options$withTheme = options.withTheme, withTheme2 = _options$withTheme === void 0 ? false : _options$withTheme, name = options.name, stylesOptions = _objectWithoutProperties(options, ["defaultTheme", "withTheme", "name"]);
    if (true) {
      if (Component7 === void 0) {
        throw new Error(["You are calling withStyles(styles)(Component) with an undefined component.", "You may have forgotten to import it."].join("\n"));
      }
    }
    var classNamePrefix = name;
    if (true) {
      if (!name) {
        var displayName2 = getDisplayName(Component7);
        if (displayName2 !== void 0) {
          classNamePrefix = displayName2;
        }
      }
    }
    var useStyles4 = makeStyles(stylesOrCreator, _extends({
      defaultTheme: defaultTheme2,
      Component: Component7,
      name: name || Component7.displayName,
      classNamePrefix
    }, stylesOptions));
    var WithStyles = /* @__PURE__ */ React111.forwardRef(function WithStyles2(props, ref2) {
      var classesProp = props.classes, innerRef = props.innerRef, other = _objectWithoutProperties(props, ["classes", "innerRef"]);
      var classes = useStyles4(_extends({}, Component7.defaultProps, props));
      var theme;
      var more = other;
      if (typeof name === "string" || withTheme2) {
        theme = useTheme() || defaultTheme2;
        if (name) {
          more = getThemeProps({
            theme,
            name,
            props: other
          });
        }
        if (withTheme2 && !more.theme) {
          more.theme = theme;
        }
      }
      return /* @__PURE__ */ React111.createElement(Component7, _extends({
        ref: innerRef || ref2,
        classes
      }, more));
    });
    true ? WithStyles.propTypes = {
      classes: import_prop_types9.default.object,
      innerRef: chainPropTypes(import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object]), function(props) {
        if (props.innerRef == null) {
          return null;
        }
        return null;
      })
    } : void 0;
    if (true) {
      WithStyles.displayName = "WithStyles(".concat(getDisplayName(Component7), ")");
    }
    (0, import_hoist_non_react_statics2.default)(WithStyles, Component7);
    if (true) {
      WithStyles.Naked = Component7;
      WithStyles.options = options;
      WithStyles.useStyles = useStyles4;
    }
    return WithStyles;
  };
};
var withStyles_default = withStyles;

// node_modules/@material-ui/styles/esm/index.js
if (typeof window !== "undefined") {
  ponyfillGlobal_default["__@material-ui/styles-init__"] = ponyfillGlobal_default["__@material-ui/styles-init__"] || 0;
  if (ponyfillGlobal_default["__@material-ui/styles-init__"] === 1) {
    console.warn(["It looks like there are several instances of `@material-ui/styles` initialized in this application.", "This may cause theme propagation issues, broken class names, specificity issues, and makes your application bigger without a good reason.", "", "See https://material-ui.com/r/styles-instance-warning for more info."].join("\n"));
  }
  ponyfillGlobal_default["__@material-ui/styles-init__"] += 1;
}

// node_modules/@material-ui/core/esm/styles/createStyles.js
function createStyles2(styles158) {
  return createStyles(styles158);
}

// node_modules/@material-ui/core/esm/styles/defaultTheme.js
var defaultTheme = createTheme_default();
var defaultTheme_default = defaultTheme;

// node_modules/@material-ui/core/esm/styles/makeStyles.js
function makeStyles2(stylesOrCreator) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return makeStyles(stylesOrCreator, _extends({
    defaultTheme: defaultTheme_default
  }, options));
}
var makeStyles_default = makeStyles2;

// node_modules/@material-ui/core/esm/styles/styled.js
var styled2 = function styled3(Component7) {
  var componentCreator = styled(Component7);
  return function(style3, options) {
    return componentCreator(style3, _extends({
      defaultTheme: defaultTheme_default
    }, options));
  };
};
var styled_default = styled2;

// node_modules/@material-ui/core/esm/styles/useTheme.js
import React112 from "react";
function useTheme2() {
  var theme = useTheme() || defaultTheme_default;
  if (true) {
    React112.useDebugValue(theme);
  }
  return theme;
}

// node_modules/@material-ui/core/esm/styles/withStyles.js
function withStyles3(stylesOrCreator, options) {
  return withStyles_default(stylesOrCreator, _extends({
    defaultTheme: defaultTheme_default
  }, options));
}
var withStyles_default2 = withStyles3;

// node_modules/@material-ui/core/esm/utils/capitalize.js
function capitalize(string3) {
  if (typeof string3 !== "string") {
    throw new Error(true ? "Material-UI: capitalize(string) expects a string argument." : formatMuiErrorMessage(7));
  }
  return string3.charAt(0).toUpperCase() + string3.slice(1);
}

// node_modules/@material-ui/core/esm/utils/createChainedFunction.js
function createChainedFunction() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }
  return funcs.reduce(function(acc, func4) {
    if (func4 == null) {
      return acc;
    }
    if (true) {
      if (typeof func4 !== "function") {
        console.error("Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.");
      }
    }
    return function chainedFunction() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      acc.apply(this, args);
      func4.apply(this, args);
    };
  }, function() {
  });
}

// node_modules/@material-ui/core/esm/utils/createSvgIcon.js
import React114 from "react";

// node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js
var import_prop_types10 = __toModule(require_prop_types());
import {
  createElement,
  forwardRef as forwardRef105
} from "react";
var styles = function styles2(theme) {
  return {
    root: {
      userSelect: "none",
      width: "1em",
      height: "1em",
      display: "inline-block",
      fill: "currentColor",
      flexShrink: 0,
      fontSize: theme.typography.pxToRem(24),
      transition: theme.transitions.create("fill", {
        duration: theme.transitions.duration.shorter
      })
    },
    colorPrimary: {
      color: theme.palette.primary.main
    },
    colorSecondary: {
      color: theme.palette.secondary.main
    },
    colorAction: {
      color: theme.palette.action.active
    },
    colorError: {
      color: theme.palette.error.main
    },
    colorDisabled: {
      color: theme.palette.action.disabled
    },
    fontSizeInherit: {
      fontSize: "inherit"
    },
    fontSizeSmall: {
      fontSize: theme.typography.pxToRem(20)
    },
    fontSizeLarge: {
      fontSize: theme.typography.pxToRem(35)
    }
  };
};
var SvgIcon = /* @__PURE__ */ forwardRef105(function SvgIcon2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "inherit" : _props$color, _props$component = props.component, Component7 = _props$component === void 0 ? "svg" : _props$component, _props$fontSize = props.fontSize, fontSize3 = _props$fontSize === void 0 ? "medium" : _props$fontSize, htmlColor = props.htmlColor, titleAccess = props.titleAccess, _props$viewBox = props.viewBox, viewBox = _props$viewBox === void 0 ? "0 0 24 24" : _props$viewBox, other = _objectWithoutProperties(props, ["children", "classes", "className", "color", "component", "fontSize", "htmlColor", "titleAccess", "viewBox"]);
  return /* @__PURE__ */ createElement(Component7, _extends({
    className: clsx_m_default(classes.root, className, color2 !== "inherit" && classes["color".concat(capitalize(color2))], fontSize3 !== "default" && fontSize3 !== "medium" && classes["fontSize".concat(capitalize(fontSize3))]),
    focusable: "false",
    viewBox,
    color: htmlColor,
    "aria-hidden": titleAccess ? void 0 : true,
    role: titleAccess ? "img" : void 0,
    ref: ref2
  }, other), children2, titleAccess ? /* @__PURE__ */ createElement("title", null, titleAccess) : null);
});
true ? SvgIcon.propTypes = {
  children: import_prop_types10.default.node,
  classes: import_prop_types10.default.object,
  className: import_prop_types10.default.string,
  color: import_prop_types10.default.oneOf(["action", "disabled", "error", "inherit", "primary", "secondary"]),
  component: import_prop_types10.default.elementType,
  fontSize: chainPropTypes(import_prop_types10.default.oneOf(["default", "inherit", "large", "medium", "small"]), function(props) {
    var fontSize3 = props.fontSize;
    if (fontSize3 === "default") {
      throw new Error('Material-UI: `fontSize="default"` is deprecated. Use `fontSize="medium"` instead.');
    }
    return null;
  }),
  htmlColor: import_prop_types10.default.string,
  shapeRendering: import_prop_types10.default.string,
  titleAccess: import_prop_types10.default.string,
  viewBox: import_prop_types10.default.string
} : void 0;
SvgIcon.muiName = "SvgIcon";
var SvgIcon_default = withStyles_default2(styles, {
  name: "MuiSvgIcon"
})(SvgIcon);

// node_modules/@material-ui/core/esm/utils/createSvgIcon.js
function createSvgIcon(path, displayName2) {
  var Component7 = function Component8(props, ref2) {
    return /* @__PURE__ */ React114.createElement(SvgIcon_default, _extends({
      ref: ref2
    }, props), path);
  };
  if (true) {
    Component7.displayName = "".concat(displayName2, "Icon");
  }
  Component7.muiName = SvgIcon_default.muiName;
  return /* @__PURE__ */ React114.memo(/* @__PURE__ */ React114.forwardRef(Component7));
}

// node_modules/@material-ui/core/esm/utils/debounce.js
function debounce(func4) {
  var wait = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 166;
  var timeout2;
  function debounced() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var that = this;
    var later = function later2() {
      func4.apply(that, args);
    };
    clearTimeout(timeout2);
    timeout2 = setTimeout(later, wait);
  }
  debounced.clear = function() {
    clearTimeout(timeout2);
  };
  return debounced;
}

// node_modules/@material-ui/core/esm/utils/deprecatedPropType.js
function deprecatedPropType(validator, reason) {
  if (false) {
    return function() {
      return null;
    };
  }
  return function(props, propName, componentName2, location, propFullName) {
    var componentNameSafe = componentName2 || "<<anonymous>>";
    var propFullNameSafe = propFullName || propName;
    if (typeof props[propName] !== "undefined") {
      return new Error("The ".concat(location, " `").concat(propFullNameSafe, "` of ") + "`".concat(componentNameSafe, "` is deprecated. ").concat(reason));
    }
    return null;
  };
}

// node_modules/@material-ui/core/esm/utils/isMuiElement.js
import {
  isValidElement
} from "react";
function isMuiElement(element2, muiNames) {
  return /* @__PURE__ */ isValidElement(element2) && muiNames.indexOf(element2.type.muiName) !== -1;
}

// node_modules/@material-ui/core/esm/utils/ownerDocument.js
function ownerDocument(node4) {
  return node4 && node4.ownerDocument || document;
}

// node_modules/@material-ui/core/esm/utils/ownerWindow.js
function ownerWindow(node4) {
  var doc = ownerDocument(node4);
  return doc.defaultView || window;
}

// node_modules/@material-ui/core/esm/utils/requirePropFactory.js
function requirePropFactory(componentNameInError) {
  if (false) {
    return function() {
      return null;
    };
  }
  var requireProp = function requireProp2(requiredProp) {
    return function(props, propName, componentName2, location, propFullName) {
      var propFullNameSafe = propFullName || propName;
      if (typeof props[propName] !== "undefined" && !props[requiredProp]) {
        return new Error("The prop `".concat(propFullNameSafe, "` of ") + "`".concat(componentNameInError, "` must be used on `").concat(requiredProp, "`."));
      }
      return null;
    };
  };
  return requireProp;
}

// node_modules/@material-ui/core/esm/utils/setRef.js
function setRef(ref2, value) {
  if (typeof ref2 === "function") {
    ref2(value);
  } else if (ref2) {
    ref2.current = value;
  }
}

// node_modules/@material-ui/core/esm/utils/unsupportedProp.js
function unsupportedProp(props, propName, componentName2, location, propFullName) {
  if (false) {
    return null;
  }
  var propFullNameSafe = propFullName || propName;
  if (typeof props[propName] !== "undefined") {
    return new Error("The prop `".concat(propFullNameSafe, "` is not supported. Please remove it."));
  }
  return null;
}

// node_modules/@material-ui/core/esm/utils/useControlled.js
import {
  useCallback,
  useEffect,
  useRef,
  useState
} from "react";
function useControlled(_ref6) {
  var controlled = _ref6.controlled, defaultProp = _ref6.default, name = _ref6.name, _ref$state = _ref6.state, state = _ref$state === void 0 ? "value" : _ref$state;
  var _React$useRef = useRef(controlled !== void 0), isControlled = _React$useRef.current;
  var _React$useState = useState(defaultProp), valueState = _React$useState[0], setValue = _React$useState[1];
  var value = isControlled ? controlled : valueState;
  if (true) {
    useEffect(function() {
      if (isControlled !== (controlled !== void 0)) {
        console.error(["Material-UI: A component is changing the ".concat(isControlled ? "" : "un", "controlled ").concat(state, " state of ").concat(name, " to be ").concat(isControlled ? "un" : "", "controlled."), "Elements should not switch from uncontrolled to controlled (or vice versa).", "Decide between using a controlled or uncontrolled ".concat(name, " ") + "element for the lifetime of the component.", "The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join("\n"));
      }
    }, [controlled]);
    var _React$useRef2 = useRef(defaultProp), defaultValue = _React$useRef2.current;
    useEffect(function() {
      if (!isControlled && defaultValue !== defaultProp) {
        console.error(["Material-UI: A component is changing the default ".concat(state, " state of an uncontrolled ").concat(name, " after being initialized. ") + "To suppress this warning opt to use a controlled ".concat(name, ".")].join("\n"));
      }
    }, [JSON.stringify(defaultProp)]);
  }
  var setValueIfUncontrolled = useCallback(function(newValue) {
    if (!isControlled) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}

// node_modules/@material-ui/core/esm/utils/useEventCallback.js
import {
  useCallback as useCallback2,
  useEffect as useEffect2,
  useLayoutEffect,
  useRef as useRef2
} from "react";
var useEnhancedEffect = typeof window !== "undefined" ? useLayoutEffect : useEffect2;
function useEventCallback(fn) {
  var ref2 = useRef2(fn);
  useEnhancedEffect(function() {
    ref2.current = fn;
  });
  return useCallback2(function() {
    return (0, ref2.current).apply(void 0, arguments);
  }, []);
}

// node_modules/@material-ui/core/esm/utils/useForkRef.js
import {
  useMemo
} from "react";
function useForkRef(refA, refB) {
  return useMemo(function() {
    if (refA == null && refB == null) {
      return null;
    }
    return function(refValue) {
      setRef(refA, refValue);
      setRef(refB, refValue);
    };
  }, [refA, refB]);
}

// node_modules/@material-ui/core/esm/utils/unstable_useId.js
import {
  useEffect as useEffect3,
  useState as useState2
} from "react";
function useId(idOverride) {
  var _React$useState = useState2(idOverride), defaultId = _React$useState[0], setDefaultId = _React$useState[1];
  var id3 = idOverride || defaultId;
  useEffect3(function() {
    if (defaultId == null) {
      setDefaultId("mui-".concat(Math.round(Math.random() * 1e5)));
    }
  }, [defaultId]);
  return id3;
}

// node_modules/@material-ui/core/esm/utils/useIsFocusVisible.js
import {
  useCallback as useCallback3,
  useDebugValue
} from "react";
import {
  findDOMNode
} from "react-dom";
var hadKeyboardEvent = true;
var hadFocusVisibleRecently = false;
var hadFocusVisibleRecentlyTimeout = null;
var inputTypesWhitelist = {
  text: true,
  search: true,
  url: true,
  tel: true,
  email: true,
  password: true,
  number: true,
  date: true,
  month: true,
  week: true,
  time: true,
  datetime: true,
  "datetime-local": true
};
function focusTriggersKeyboardModality(node4) {
  var type3 = node4.type, tagName = node4.tagName;
  if (tagName === "INPUT" && inputTypesWhitelist[type3] && !node4.readOnly) {
    return true;
  }
  if (tagName === "TEXTAREA" && !node4.readOnly) {
    return true;
  }
  if (node4.isContentEditable) {
    return true;
  }
  return false;
}
function handleKeyDown(event) {
  if (event.metaKey || event.altKey || event.ctrlKey) {
    return;
  }
  hadKeyboardEvent = true;
}
function handlePointerDown() {
  hadKeyboardEvent = false;
}
function handleVisibilityChange() {
  if (this.visibilityState === "hidden") {
    if (hadFocusVisibleRecently) {
      hadKeyboardEvent = true;
    }
  }
}
function prepare(doc) {
  doc.addEventListener("keydown", handleKeyDown, true);
  doc.addEventListener("mousedown", handlePointerDown, true);
  doc.addEventListener("pointerdown", handlePointerDown, true);
  doc.addEventListener("touchstart", handlePointerDown, true);
  doc.addEventListener("visibilitychange", handleVisibilityChange, true);
}
function isFocusVisible(event) {
  var target = event.target;
  try {
    return target.matches(":focus-visible");
  } catch (error4) {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(target);
}
function handleBlurVisible() {
  hadFocusVisibleRecently = true;
  window.clearTimeout(hadFocusVisibleRecentlyTimeout);
  hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {
    hadFocusVisibleRecently = false;
  }, 100);
}
function useIsFocusVisible() {
  var ref2 = useCallback3(function(instance) {
    var node4 = findDOMNode(instance);
    if (node4 != null) {
      prepare(node4.ownerDocument);
    }
  }, []);
  if (true) {
    useDebugValue(isFocusVisible);
  }
  return {
    isFocusVisible,
    onBlurVisible: handleBlurVisible,
    ref: ref2
  };
}

// node_modules/@babel/runtime/helpers/esm/toArray.js
function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}

// node_modules/@material-ui/core/esm/Accordion/Accordion.js
var import_react_is2 = __toModule(require_react_is2());
var import_prop_types19 = __toModule(require_prop_types());
import {
  Children as Children2,
  createElement as createElement4,
  forwardRef as forwardRef108,
  isValidElement as isValidElement3,
  useCallback as useCallback4,
  useMemo as useMemo2
} from "react";

// node_modules/@material-ui/core/esm/Collapse/Collapse.js
import {
  createElement as createElement2,
  forwardRef as forwardRef106,
  useEffect as useEffect4,
  useRef as useRef3
} from "react";
var import_prop_types17 = __toModule(require_prop_types());

// node_modules/react-transition-group/esm/CSSTransition.js
var import_prop_types13 = __toModule(require_prop_types());

// node_modules/dom-helpers/esm/hasClass.js
function hasClass(element2, className) {
  if (element2.classList)
    return !!className && element2.classList.contains(className);
  return (" " + (element2.className.baseVal || element2.className) + " ").indexOf(" " + className + " ") !== -1;
}

// node_modules/dom-helpers/esm/addClass.js
function addClass(element2, className) {
  if (element2.classList)
    element2.classList.add(className);
  else if (!hasClass(element2, className))
    if (typeof element2.className === "string")
      element2.className = element2.className + " " + className;
    else
      element2.setAttribute("class", (element2.className && element2.className.baseVal || "") + " " + className);
}

// node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass(element2, className) {
  if (element2.classList) {
    element2.classList.remove(className);
  } else if (typeof element2.className === "string") {
    element2.className = replaceClassName(element2.className, className);
  } else {
    element2.setAttribute("class", replaceClassName(element2.className && element2.className.baseVal || "", className));
  }
}

// node_modules/react-transition-group/esm/CSSTransition.js
import React123 from "react";

// node_modules/react-transition-group/esm/Transition.js
var import_prop_types12 = __toModule(require_prop_types());
import React122 from "react";
import ReactDOM2 from "react-dom";

// node_modules/react-transition-group/esm/config.js
var config_default = {
  disabled: false
};

// node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types11 = __toModule(require_prop_types());
var timeoutsShape = true ? import_prop_types11.default.oneOfType([import_prop_types11.default.number, import_prop_types11.default.shape({
  enter: import_prop_types11.default.number,
  exit: import_prop_types11.default.number,
  appear: import_prop_types11.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types11.default.oneOfType([import_prop_types11.default.string, import_prop_types11.default.shape({
  enter: import_prop_types11.default.string,
  exit: import_prop_types11.default.string,
  active: import_prop_types11.default.string
}), import_prop_types11.default.shape({
  enter: import_prop_types11.default.string,
  enterDone: import_prop_types11.default.string,
  enterActive: import_prop_types11.default.string,
  exit: import_prop_types11.default.string,
  exitDone: import_prop_types11.default.string,
  exitActive: import_prop_types11.default.string
})]) : null;

// node_modules/react-transition-group/esm/TransitionGroupContext.js
import React121 from "react";
var TransitionGroupContext_default = React121.createContext(null);

// node_modules/react-transition-group/esm/Transition.js
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref6, prevState) {
    var nextIn = _ref6.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter2, appear;
    exit = enter2 = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter2 = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter2;
    }
    return {
      exit,
      enter: enter2,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter2 = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref23 = this.props.nodeRef ? [appearing] : [ReactDOM2.findDOMNode(this), appearing], maybeNode = _ref23[0], maybeAppearing = _ref23[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter2 || config_default.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : ReactDOM2.findDOMNode(this);
    if (!exit || config_default.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd2(timeout2, handler) {
    this.setNextCallback(handler);
    var node4 = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM2.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node4 || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref32 = this.props.nodeRef ? [this.nextCallback] : [node4, this.nextCallback], maybeNode = _ref32[0], maybeNextCallback = _ref32[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children2 = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return /* @__PURE__ */ React122.createElement(TransitionGroupContext_default.Provider, {
      value: null
    }, typeof children2 === "function" ? children2(status, childProps) : React122.cloneElement(React122.Children.only(children2), childProps));
  };
  return Transition2;
}(React122.Component);
Transition.contextType = TransitionGroupContext_default;
Transition.propTypes = true ? {
  nodeRef: import_prop_types12.default.shape({
    current: typeof Element === "undefined" ? import_prop_types12.default.any : function(propValue, key, componentName2, location, propFullName, secret) {
      var value = propValue[key];
      return import_prop_types12.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName2, location, propFullName, secret);
    }
  }),
  children: import_prop_types12.default.oneOfType([import_prop_types12.default.func.isRequired, import_prop_types12.default.element.isRequired]).isRequired,
  in: import_prop_types12.default.bool,
  mountOnEnter: import_prop_types12.default.bool,
  unmountOnExit: import_prop_types12.default.bool,
  appear: import_prop_types12.default.bool,
  enter: import_prop_types12.default.bool,
  exit: import_prop_types12.default.bool,
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener)
      pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  addEndListener: import_prop_types12.default.func,
  onEnter: import_prop_types12.default.func,
  onEntering: import_prop_types12.default.func,
  onEntered: import_prop_types12.default.func,
  onExit: import_prop_types12.default.func,
  onExiting: import_prop_types12.default.func,
  onExited: import_prop_types12.default.func
} : {};
function noop() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition_default = Transition;

// node_modules/react-transition-group/esm/CSSTransition.js
var _addClass = function addClass2(node4, classes) {
  return node4 && classes && classes.split(" ").forEach(function(c2) {
    return addClass(node4, c2);
  });
};
var removeClass2 = function removeClass3(node4, classes) {
  return node4 && classes && classes.split(" ").forEach(function(c2) {
    return removeClass(node4, c2);
  });
};
var CSSTransition = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node4 = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node4, "exit");
      _this.addClass(node4, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node4 = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type3 = appearing ? "appear" : "enter";
      _this.addClass(node4, type3, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node4 = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type3 = appearing ? "appear" : "enter";
      _this.removeClasses(node4, type3);
      _this.addClass(node4, type3, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node4 = _this$resolveArgument4[0];
      _this.removeClasses(node4, "appear");
      _this.removeClasses(node4, "enter");
      _this.addClass(node4, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node4 = _this$resolveArgument5[0];
      _this.addClass(node4, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node4 = _this$resolveArgument6[0];
      _this.removeClasses(node4, "exit");
      _this.addClass(node4, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type3) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === "string";
      var prefix4 = isStringClassNames && classNames ? classNames + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix4 + type3 : classNames[type3];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type3 + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type3 + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass3(node4, type3, phase) {
    var className = this.getClassNames(type3)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type3 === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      node4 && node4.scrollTop;
    }
    if (className) {
      this.appliedClasses[type3][phase] = className;
      _addClass(node4, className);
    }
  };
  _proto.removeClasses = function removeClasses(node4, type3) {
    var _this$appliedClasses$ = this.appliedClasses[type3], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type3] = {};
    if (baseClassName) {
      removeClass2(node4, baseClassName);
    }
    if (activeClassName) {
      removeClass2(node4, activeClassName);
    }
    if (doneClassName) {
      removeClass2(node4, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, _18 = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return /* @__PURE__ */ React123.createElement(Transition_default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(React123.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
  classNames: classNamesShape,
  onEnter: import_prop_types13.default.func,
  onEntering: import_prop_types13.default.func,
  onEntered: import_prop_types13.default.func,
  onExit: import_prop_types13.default.func,
  onExiting: import_prop_types13.default.func,
  onExited: import_prop_types13.default.func
}) : {};
var CSSTransition_default = CSSTransition;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var import_prop_types15 = __toModule(require_prop_types());
import React125 from "react";
import ReactDOM3 from "react-dom";

// node_modules/react-transition-group/esm/TransitionGroup.js
var import_prop_types14 = __toModule(require_prop_types());
import React124 from "react";

// node_modules/react-transition-group/esm/utils/ChildMapping.js
import { Children, cloneElement, isValidElement as isValidElement2 } from "react";
function getChildMapping(children2, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && isValidElement2(child) ? mapFn(child) : child;
  };
  var result = Object.create(null);
  if (children2)
    Children.map(children2, function(c2) {
      return c2;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }
  var nextKeysPending = Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i2;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i2 = 0; i2 < nextKeysPending[nextKey].length; i2++) {
        var pendingNextKey = nextKeysPending[nextKey][i2];
        childMapping[nextKeysPending[nextKey][i2]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i2 = 0; i2 < pendingKeys.length; i2++) {
    childMapping[pendingKeys[i2]] = getValueForKey(pendingKeys[i2]);
  }
  return childMapping;
}
function getProp(child, prop2, props) {
  return props[prop2] != null ? props[prop2] : child.props[prop2];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return cloneElement(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children2 = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children2).forEach(function(key) {
    var child = children2[key];
    if (!isValidElement2(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = isValidElement2(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children2[key] = cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children2[key] = cloneElement(child, {
        in: false
      });
    } else if (hasNext && hasPrev && isValidElement2(prevChild)) {
      children2[key] = cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children2;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var values2 = Object.values || function(obj) {
  return Object.keys(obj).map(function(k2) {
    return obj[k2];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref6) {
    var prevChildMapping = _ref6.children, handleExited = _ref6.handleExited, firstRender = _ref6.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node4) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node4);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children2 = _extends({}, state.children);
        delete children2[child.key];
        return {
          children: children2
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component7 = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children2 = values2(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component7 === null) {
      return /* @__PURE__ */ React124.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, children2);
    }
    return /* @__PURE__ */ React124.createElement(TransitionGroupContext_default.Provider, {
      value: contextValue
    }, /* @__PURE__ */ React124.createElement(Component7, props, children2));
  };
  return TransitionGroup2;
}(React124.Component);
TransitionGroup.propTypes = true ? {
  component: import_prop_types14.default.any,
  children: import_prop_types14.default.node,
  appear: import_prop_types14.default.bool,
  enter: import_prop_types14.default.bool,
  exit: import_prop_types14.default.bool,
  childFactory: import_prop_types14.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;
var TransitionGroup_default = TransitionGroup;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var ReplaceTransition = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(ReplaceTransition2, _React$Component);
  function ReplaceTransition2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
    _this.handleEnter = function() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return _this.handleLifecycle("onEnter", 0, args);
    };
    _this.handleEntering = function() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return _this.handleLifecycle("onEntering", 0, args);
    };
    _this.handleEntered = function() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return _this.handleLifecycle("onEntered", 0, args);
    };
    _this.handleExit = function() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return _this.handleLifecycle("onExit", 1, args);
    };
    _this.handleExiting = function() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      return _this.handleLifecycle("onExiting", 1, args);
    };
    _this.handleExited = function() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      return _this.handleLifecycle("onExited", 1, args);
    };
    return _this;
  }
  var _proto = ReplaceTransition2.prototype;
  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;
    var children2 = this.props.children;
    var child = React125.Children.toArray(children2)[idx];
    if (child.props[handler])
      (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? void 0 : ReactDOM3.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
    var _React$Children$toArr = React125.Children.toArray(children2), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return /* @__PURE__ */ React125.createElement(TransitionGroup_default, props, inProp ? React125.cloneElement(first, {
      key: "first",
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : React125.cloneElement(second, {
      key: "second",
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };
  return ReplaceTransition2;
}(React125.Component);
ReplaceTransition.propTypes = true ? {
  in: import_prop_types15.default.bool.isRequired,
  children: function children(props, propName) {
    if (React125.Children.count(props[propName]) !== 2)
      return new Error('"' + propName + '" must be exactly two transition components.');
    return null;
  }
} : {};
var ReplaceTransition_default = ReplaceTransition;

// node_modules/react-transition-group/esm/SwitchTransition.js
var import_prop_types16 = __toModule(require_prop_types());
import React126 from "react";
var _leaveRenders;
var _enterRenders;
function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren)
    return false;
  if (React126.isValidElement(oldChildren) && React126.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }
  return true;
}
var modes = {
  out: "out-in",
  in: "in-out"
};
var callHook = function callHook2(element2, name, cb) {
  return function() {
    var _element$props;
    element2.props[name] && (_element$props = element2.props)[name].apply(_element$props, arguments);
    cb();
  };
};
var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref6) {
  var current = _ref6.current, changeState = _ref6.changeState;
  return React126.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERING, null);
    })
  });
}, _leaveRenders[modes.in] = function(_ref23) {
  var current = _ref23.current, changeState = _ref23.changeState, children2 = _ref23.children;
  return [current, React126.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERING);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref32) {
  var children2 = _ref32.children, changeState = _ref32.changeState;
  return React126.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERED, React126.cloneElement(children2, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function(_ref42) {
  var current = _ref42.current, children2 = _ref42.children, changeState = _ref42.changeState;
  return [React126.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERED, React126.cloneElement(children2, {
        in: true
      }));
    })
  }), React126.cloneElement(children2, {
    in: true
  })];
}, _enterRenders);
var SwitchTransition = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(SwitchTransition2, _React$Component);
  function SwitchTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: ENTERED,
      current: null
    };
    _this.appeared = false;
    _this.changeState = function(status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }
      _this.setState({
        status,
        current
      });
    };
    return _this;
  }
  var _proto = SwitchTransition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };
  SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }
    if (state.status === ENTERING && props.mode === modes.in) {
      return {
        status: ENTERING
      };
    }
    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: EXITING
      };
    }
    return {
      current: React126.cloneElement(props.children, {
        in: true
      })
    };
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
    var data = {
      children: children2,
      current,
      changeState: this.changeState,
      status
    };
    var component;
    switch (status) {
      case ENTERING:
        component = enterRenders[mode](data);
        break;
      case EXITING:
        component = leaveRenders[mode](data);
        break;
      case ENTERED:
        component = current;
    }
    return /* @__PURE__ */ React126.createElement(TransitionGroupContext_default.Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };
  return SwitchTransition2;
}(React126.Component);
SwitchTransition.propTypes = true ? {
  mode: import_prop_types16.default.oneOf([modes.in, modes.out]),
  children: import_prop_types16.default.oneOfType([import_prop_types16.default.element.isRequired])
} : {};
SwitchTransition.defaultProps = {
  mode: modes.out
};
var SwitchTransition_default = SwitchTransition;

// node_modules/@material-ui/core/esm/transitions/utils.js
var reflow = function reflow2(node4) {
  return node4.scrollTop;
};
function getTransitionProps(props, options) {
  var timeout2 = props.timeout, _props$style = props.style, style3 = _props$style === void 0 ? {} : _props$style;
  return {
    duration: style3.transitionDuration || typeof timeout2 === "number" ? timeout2 : timeout2[options.mode] || 0,
    delay: style3.transitionDelay
  };
}

// node_modules/@material-ui/core/esm/Collapse/Collapse.js
var styles3 = function styles4(theme) {
  return {
    root: {
      height: 0,
      overflow: "hidden",
      transition: theme.transitions.create("height")
    },
    entered: {
      height: "auto",
      overflow: "visible"
    },
    hidden: {
      visibility: "hidden"
    },
    wrapper: {
      display: "flex"
    },
    wrapperInner: {
      width: "100%"
    }
  };
};
var Collapse = /* @__PURE__ */ forwardRef106(function Collapse2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, collapsedHeight = props.collapsedHeight, _props$collapsedSize = props.collapsedSize, collapsedSizeProp = _props$collapsedSize === void 0 ? "0px" : _props$collapsedSize, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style3 = props.style, _props$timeout = props.timeout, timeout2 = _props$timeout === void 0 ? duration.standard : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition_default : _props$TransitionComp, other = _objectWithoutProperties(props, ["children", "classes", "className", "collapsedHeight", "collapsedSize", "component", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"]);
  var theme = useTheme2();
  var timer = useRef3();
  var wrapperRef = useRef3(null);
  var autoTransitionDuration = useRef3();
  var collapsedSize = typeof (collapsedHeight || collapsedSizeProp) === "number" ? "".concat(collapsedHeight || collapsedSizeProp, "px") : collapsedHeight || collapsedSizeProp;
  useEffect4(function() {
    return function() {
      clearTimeout(timer.current);
    };
  }, []);
  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
  var nodeRef = useRef3(null);
  var handleRef = useForkRef(ref2, enableStrictModeCompat ? nodeRef : void 0);
  var normalizedTransitionCallback = function normalizedTransitionCallback2(callback) {
    return function(nodeOrAppearing, maybeAppearing) {
      if (callback) {
        var _ref6 = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing], _ref23 = _slicedToArray(_ref6, 2), node4 = _ref23[0], isAppearing = _ref23[1];
        if (isAppearing === void 0) {
          callback(node4);
        } else {
          callback(node4, isAppearing);
        }
      }
    };
  };
  var handleEnter = normalizedTransitionCallback(function(node4, isAppearing) {
    node4.style.height = collapsedSize;
    if (onEnter) {
      onEnter(node4, isAppearing);
    }
  });
  var handleEntering = normalizedTransitionCallback(function(node4, isAppearing) {
    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
    var _getTransitionProps = getTransitionProps({
      style: style3,
      timeout: timeout2
    }, {
      mode: "enter"
    }), transitionDuration = _getTransitionProps.duration;
    if (timeout2 === "auto") {
      var duration22 = theme.transitions.getAutoHeightDuration(wrapperHeight);
      node4.style.transitionDuration = "".concat(duration22, "ms");
      autoTransitionDuration.current = duration22;
    } else {
      node4.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : "".concat(transitionDuration, "ms");
    }
    node4.style.height = "".concat(wrapperHeight, "px");
    if (onEntering) {
      onEntering(node4, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(function(node4, isAppearing) {
    node4.style.height = "auto";
    if (onEntered) {
      onEntered(node4, isAppearing);
    }
  });
  var handleExit = normalizedTransitionCallback(function(node4) {
    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
    node4.style.height = "".concat(wrapperHeight, "px");
    if (onExit) {
      onExit(node4);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);
  var handleExiting = normalizedTransitionCallback(function(node4) {
    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
    var _getTransitionProps2 = getTransitionProps({
      style: style3,
      timeout: timeout2
    }, {
      mode: "exit"
    }), transitionDuration = _getTransitionProps2.duration;
    if (timeout2 === "auto") {
      var duration22 = theme.transitions.getAutoHeightDuration(wrapperHeight);
      node4.style.transitionDuration = "".concat(duration22, "ms");
      autoTransitionDuration.current = duration22;
    } else {
      node4.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : "".concat(transitionDuration, "ms");
    }
    node4.style.height = collapsedSize;
    if (onExiting) {
      onExiting(node4);
    }
  });
  var addEndListener = function addEndListener2(nodeOrNext, maybeNext) {
    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;
    if (timeout2 === "auto") {
      timer.current = setTimeout(next, autoTransitionDuration.current || 0);
    }
  };
  return /* @__PURE__ */ createElement2(TransitionComponent, _extends({
    in: inProp,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener,
    nodeRef: enableStrictModeCompat ? nodeRef : void 0,
    timeout: timeout2 === "auto" ? null : timeout2
  }, other), function(state, childProps) {
    return /* @__PURE__ */ createElement2(Component7, _extends({
      className: clsx_m_default(classes.root, classes.container, className, {
        "entered": classes.entered,
        "exited": !inProp && collapsedSize === "0px" && classes.hidden
      }[state]),
      style: _extends({
        minHeight: collapsedSize
      }, style3),
      ref: handleRef
    }, childProps), /* @__PURE__ */ createElement2("div", {
      className: classes.wrapper,
      ref: wrapperRef
    }, /* @__PURE__ */ createElement2("div", {
      className: classes.wrapperInner
    }, children2)));
  });
});
true ? Collapse.propTypes = {
  children: import_prop_types17.default.node,
  classes: chainPropTypes(import_prop_types17.default.object, function(props) {
    if (props.classes && props.classes.container) {
      throw new Error(["Material-UI: the classes.container key is deprecated.", "Use `classes.root` instead", "The name of the pseudo-class was changed for consistency."].join("\n"));
    }
    return null;
  }),
  className: import_prop_types17.default.string,
  collapsedHeight: deprecatedPropType(import_prop_types17.default.oneOfType([import_prop_types17.default.number, import_prop_types17.default.string]), "The prop was renamed to support the vertical orientation, use `collapsedSize` instead"),
  collapsedSize: import_prop_types17.default.oneOfType([import_prop_types17.default.number, import_prop_types17.default.string]),
  component: import_prop_types17.default.elementType,
  disableStrictModeCompat: import_prop_types17.default.bool,
  in: import_prop_types17.default.bool,
  onEnter: import_prop_types17.default.func,
  onEntered: import_prop_types17.default.func,
  onEntering: import_prop_types17.default.func,
  onExit: import_prop_types17.default.func,
  onExited: import_prop_types17.default.func,
  onExiting: import_prop_types17.default.func,
  style: import_prop_types17.default.object,
  timeout: import_prop_types17.default.oneOfType([import_prop_types17.default.oneOf(["auto"]), import_prop_types17.default.number, import_prop_types17.default.shape({
    appear: import_prop_types17.default.number,
    enter: import_prop_types17.default.number,
    exit: import_prop_types17.default.number
  })])
} : void 0;
Collapse.muiSupportAuto = true;
var Collapse_default = withStyles_default2(styles3, {
  name: "MuiCollapse"
})(Collapse);

// node_modules/@material-ui/core/esm/Paper/Paper.js
var import_prop_types18 = __toModule(require_prop_types());
import {
  createElement as createElement3,
  forwardRef as forwardRef107
} from "react";
var styles5 = function styles6(theme) {
  var elevations = {};
  theme.shadows.forEach(function(shadow, index4) {
    elevations["elevation".concat(index4)] = {
      boxShadow: shadow
    };
  });
  return _extends({
    root: {
      backgroundColor: theme.palette.background.paper,
      color: theme.palette.text.primary,
      transition: theme.transitions.create("box-shadow")
    },
    rounded: {
      borderRadius: theme.shape.borderRadius
    },
    outlined: {
      border: "1px solid ".concat(theme.palette.divider)
    }
  }, elevations);
};
var Paper = /* @__PURE__ */ forwardRef107(function Paper2(props, ref2) {
  var classes = props.classes, className = props.className, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 1 : _props$elevation, _props$variant = props.variant, variant = _props$variant === void 0 ? "elevation" : _props$variant, other = _objectWithoutProperties(props, ["classes", "className", "component", "square", "elevation", "variant"]);
  return /* @__PURE__ */ createElement3(Component7, _extends({
    className: clsx_m_default(classes.root, className, variant === "outlined" ? classes.outlined : classes["elevation".concat(elevation)], !square && classes.rounded),
    ref: ref2
  }, other));
});
true ? Paper.propTypes = {
  children: import_prop_types18.default.node,
  classes: import_prop_types18.default.object,
  className: import_prop_types18.default.string,
  component: import_prop_types18.default.elementType,
  elevation: chainPropTypes(import_prop_types18.default.number, function(props) {
    var classes = props.classes, elevation = props.elevation;
    if (classes === void 0) {
      return null;
    }
    if (elevation != null && classes["elevation".concat(elevation)] === void 0) {
      return new Error("Material-UI: This elevation `".concat(elevation, "` is not implemented."));
    }
    return null;
  }),
  square: import_prop_types18.default.bool,
  variant: import_prop_types18.default.oneOf(["elevation", "outlined"])
} : void 0;
var Paper_default = withStyles_default2(styles5, {
  name: "MuiPaper"
})(Paper);

// node_modules/@material-ui/core/esm/Accordion/AccordionContext.js
import {
  createContext
} from "react";
var AccordionContext = createContext({});
if (true) {
  AccordionContext.displayName = "AccordionContext";
}
var AccordionContext_default = AccordionContext;

// node_modules/@material-ui/core/esm/Accordion/Accordion.js
var styles7 = function styles8(theme) {
  var transition3 = {
    duration: theme.transitions.duration.shortest
  };
  return {
    root: {
      position: "relative",
      transition: theme.transitions.create(["margin"], transition3),
      "&:before": {
        position: "absolute",
        left: 0,
        top: -1,
        right: 0,
        height: 1,
        content: '""',
        opacity: 1,
        backgroundColor: theme.palette.divider,
        transition: theme.transitions.create(["opacity", "background-color"], transition3)
      },
      "&:first-child": {
        "&:before": {
          display: "none"
        }
      },
      "&$expanded": {
        margin: "16px 0",
        "&:first-child": {
          marginTop: 0
        },
        "&:last-child": {
          marginBottom: 0
        },
        "&:before": {
          opacity: 0
        }
      },
      "&$expanded + &": {
        "&:before": {
          display: "none"
        }
      },
      "&$disabled": {
        backgroundColor: theme.palette.action.disabledBackground
      }
    },
    rounded: {
      borderRadius: 0,
      "&:first-child": {
        borderTopLeftRadius: theme.shape.borderRadius,
        borderTopRightRadius: theme.shape.borderRadius
      },
      "&:last-child": {
        borderBottomLeftRadius: theme.shape.borderRadius,
        borderBottomRightRadius: theme.shape.borderRadius,
        "@supports (-ms-ime-align: auto)": {
          borderBottomLeftRadius: 0,
          borderBottomRightRadius: 0
        }
      }
    },
    expanded: {},
    disabled: {}
  };
};
var Accordion = /* @__PURE__ */ forwardRef108(function Accordion2(props, ref2) {
  var childrenProp = props.children, classes = props.classes, className = props.className, _props$defaultExpande = props.defaultExpanded, defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, expandedProp = props.expanded, onChange = props.onChange, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Collapse_default : _props$TransitionComp, TransitionProps4 = props.TransitionProps, other = _objectWithoutProperties(props, ["children", "classes", "className", "defaultExpanded", "disabled", "expanded", "onChange", "square", "TransitionComponent", "TransitionProps"]);
  var _useControlled = useControlled({
    controlled: expandedProp,
    default: defaultExpanded,
    name: "Accordion",
    state: "expanded"
  }), _useControlled2 = _slicedToArray(_useControlled, 2), expanded = _useControlled2[0], setExpandedState = _useControlled2[1];
  var handleChange = useCallback4(function(event) {
    setExpandedState(!expanded);
    if (onChange) {
      onChange(event, !expanded);
    }
  }, [expanded, onChange, setExpandedState]);
  var _React$Children$toArr = Children2.toArray(childrenProp), _React$Children$toArr2 = _toArray(_React$Children$toArr), summary = _React$Children$toArr2[0], children2 = _React$Children$toArr2.slice(1);
  var contextValue = useMemo2(function() {
    return {
      expanded,
      disabled: disabled3,
      toggle: handleChange
    };
  }, [expanded, disabled3, handleChange]);
  return /* @__PURE__ */ createElement4(Paper_default, _extends({
    className: clsx_m_default(classes.root, className, expanded && classes.expanded, disabled3 && classes.disabled, !square && classes.rounded),
    ref: ref2,
    square
  }, other), /* @__PURE__ */ createElement4(AccordionContext_default.Provider, {
    value: contextValue
  }, summary), /* @__PURE__ */ createElement4(TransitionComponent, _extends({
    in: expanded,
    timeout: "auto"
  }, TransitionProps4), /* @__PURE__ */ createElement4("div", {
    "aria-labelledby": summary.props.id,
    id: summary.props["aria-controls"],
    role: "region"
  }, children2)));
});
true ? Accordion.propTypes = {
  children: chainPropTypes(import_prop_types19.default.node.isRequired, function(props) {
    var summary = Children2.toArray(props.children)[0];
    if ((0, import_react_is2.isFragment)(summary)) {
      return new Error("Material-UI: The Accordion doesn't accept a Fragment as a child. Consider providing an array instead.");
    }
    if (!/* @__PURE__ */ isValidElement3(summary)) {
      return new Error("Material-UI: Expected the first child of Accordion to be a valid element.");
    }
    return null;
  }),
  classes: import_prop_types19.default.object,
  className: import_prop_types19.default.string,
  defaultExpanded: import_prop_types19.default.bool,
  disabled: import_prop_types19.default.bool,
  expanded: import_prop_types19.default.bool,
  onChange: import_prop_types19.default.func,
  square: import_prop_types19.default.bool,
  TransitionComponent: import_prop_types19.default.elementType,
  TransitionProps: import_prop_types19.default.object
} : void 0;
var Accordion_default = withStyles_default2(styles7, {
  name: "MuiAccordion"
})(Accordion);

// node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js
var import_prop_types20 = __toModule(require_prop_types());
import {
  createElement as createElement5,
  forwardRef as forwardRef109
} from "react";
var styles9 = function styles10(theme) {
  return {
    root: {
      display: "flex",
      padding: theme.spacing(1, 2, 2)
    }
  };
};
var AccordionDetails = /* @__PURE__ */ forwardRef109(function AccordionDetails2(props, ref2) {
  var classes = props.classes, className = props.className, other = _objectWithoutProperties(props, ["classes", "className"]);
  return /* @__PURE__ */ createElement5("div", _extends({
    className: clsx_m_default(classes.root, className),
    ref: ref2
  }, other));
});
true ? AccordionDetails.propTypes = {
  children: import_prop_types20.default.node,
  classes: import_prop_types20.default.object,
  className: import_prop_types20.default.string
} : void 0;
var AccordionDetails_default = withStyles_default2(styles9, {
  name: "MuiAccordionDetails"
})(AccordionDetails);

// node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js
var import_prop_types25 = __toModule(require_prop_types());
import {
  createElement as createElement10,
  forwardRef as forwardRef113,
  useContext
} from "react";

// node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js
var import_prop_types23 = __toModule(require_prop_types());
import {
  createElement as createElement8,
  forwardRef as forwardRef111,
  useEffect as useEffect7,
  useImperativeHandle as useImperativeHandle2,
  useRef as useRef5,
  useState as useState5
} from "react";
import {
  findDOMNode as findDOMNode2
} from "react-dom";

// node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js
var import_prop_types22 = __toModule(require_prop_types());
import {
  createElement as createElement7,
  forwardRef as forwardRef110,
  memo as memo105,
  useCallback as useCallback5,
  useEffect as useEffect6,
  useImperativeHandle,
  useRef as useRef4,
  useState as useState4
} from "react";

// node_modules/@material-ui/core/esm/ButtonBase/Ripple.js
var import_prop_types21 = __toModule(require_prop_types());
import {
  createElement as createElement6,
  useEffect as useEffect5,
  useLayoutEffect as useLayoutEffect2,
  useState as useState3
} from "react";
var useEnhancedEffect2 = typeof window === "undefined" ? useEffect5 : useLayoutEffect2;
function Ripple(props) {
  var classes = props.classes, _props$pulsate = props.pulsate, pulsate = _props$pulsate === void 0 ? false : _props$pulsate, rippleX = props.rippleX, rippleY = props.rippleY, rippleSize = props.rippleSize, inProp = props.in, _props$onExited = props.onExited, onExited = _props$onExited === void 0 ? function() {
  } : _props$onExited, timeout2 = props.timeout;
  var _React$useState = useState3(false), leaving = _React$useState[0], setLeaving = _React$useState[1];
  var rippleClassName = clsx_m_default(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);
  var rippleStyles = {
    width: rippleSize,
    height: rippleSize,
    top: -(rippleSize / 2) + rippleY,
    left: -(rippleSize / 2) + rippleX
  };
  var childClassName = clsx_m_default(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);
  var handleExited = useEventCallback(onExited);
  useEnhancedEffect2(function() {
    if (!inProp) {
      setLeaving(true);
      var timeoutId = setTimeout(handleExited, timeout2);
      return function() {
        clearTimeout(timeoutId);
      };
    }
    return void 0;
  }, [handleExited, inProp, timeout2]);
  return /* @__PURE__ */ createElement6("span", {
    className: rippleClassName,
    style: rippleStyles
  }, /* @__PURE__ */ createElement6("span", {
    className: childClassName
  }));
}
true ? Ripple.propTypes = {
  classes: import_prop_types21.default.object.isRequired,
  in: import_prop_types21.default.bool,
  onExited: import_prop_types21.default.func,
  pulsate: import_prop_types21.default.bool,
  rippleSize: import_prop_types21.default.number,
  rippleX: import_prop_types21.default.number,
  rippleY: import_prop_types21.default.number,
  timeout: import_prop_types21.default.number.isRequired
} : void 0;
var Ripple_default = Ripple;

// node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js
var DURATION = 550;
var DELAY_RIPPLE = 80;
var styles11 = function styles12(theme) {
  return {
    root: {
      overflow: "hidden",
      pointerEvents: "none",
      position: "absolute",
      zIndex: 0,
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      borderRadius: "inherit"
    },
    ripple: {
      opacity: 0,
      position: "absolute"
    },
    rippleVisible: {
      opacity: 0.3,
      transform: "scale(1)",
      animation: "$enter ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
    },
    ripplePulsate: {
      animationDuration: "".concat(theme.transitions.duration.shorter, "ms")
    },
    child: {
      opacity: 1,
      display: "block",
      width: "100%",
      height: "100%",
      borderRadius: "50%",
      backgroundColor: "currentColor"
    },
    childLeaving: {
      opacity: 0,
      animation: "$exit ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
    },
    childPulsate: {
      position: "absolute",
      left: 0,
      top: 0,
      animation: "$pulsate 2500ms ".concat(theme.transitions.easing.easeInOut, " 200ms infinite")
    },
    "@keyframes enter": {
      "0%": {
        transform: "scale(0)",
        opacity: 0.1
      },
      "100%": {
        transform: "scale(1)",
        opacity: 0.3
      }
    },
    "@keyframes exit": {
      "0%": {
        opacity: 1
      },
      "100%": {
        opacity: 0
      }
    },
    "@keyframes pulsate": {
      "0%": {
        transform: "scale(1)"
      },
      "50%": {
        transform: "scale(0.92)"
      },
      "100%": {
        transform: "scale(1)"
      }
    }
  };
};
var TouchRipple = /* @__PURE__ */ forwardRef110(function TouchRipple2(props, ref2) {
  var _props$center = props.center, centerProp = _props$center === void 0 ? false : _props$center, classes = props.classes, className = props.className, other = _objectWithoutProperties(props, ["center", "classes", "className"]);
  var _React$useState = useState4([]), ripples = _React$useState[0], setRipples = _React$useState[1];
  var nextKey = useRef4(0);
  var rippleCallback = useRef4(null);
  useEffect6(function() {
    if (rippleCallback.current) {
      rippleCallback.current();
      rippleCallback.current = null;
    }
  }, [ripples]);
  var ignoringMouseDown = useRef4(false);
  var startTimer = useRef4(null);
  var startTimerCommit = useRef4(null);
  var container = useRef4(null);
  useEffect6(function() {
    return function() {
      clearTimeout(startTimer.current);
    };
  }, []);
  var startCommit = useCallback5(function(params) {
    var pulsate2 = params.pulsate, rippleX = params.rippleX, rippleY = params.rippleY, rippleSize = params.rippleSize, cb = params.cb;
    setRipples(function(oldRipples) {
      return [].concat(_toConsumableArray(oldRipples), [/* @__PURE__ */ createElement7(Ripple_default, {
        key: nextKey.current,
        classes,
        timeout: DURATION,
        pulsate: pulsate2,
        rippleX,
        rippleY,
        rippleSize
      })]);
    });
    nextKey.current += 1;
    rippleCallback.current = cb;
  }, [classes]);
  var start3 = useCallback5(function() {
    var event = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var cb = arguments.length > 2 ? arguments[2] : void 0;
    var _options$pulsate = options.pulsate, pulsate2 = _options$pulsate === void 0 ? false : _options$pulsate, _options$center = options.center, center = _options$center === void 0 ? centerProp || options.pulsate : _options$center, _options$fakeElement = options.fakeElement, fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;
    if (event.type === "mousedown" && ignoringMouseDown.current) {
      ignoringMouseDown.current = false;
      return;
    }
    if (event.type === "touchstart") {
      ignoringMouseDown.current = true;
    }
    var element2 = fakeElement ? null : container.current;
    var rect = element2 ? element2.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    var rippleX;
    var rippleY;
    var rippleSize;
    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
      rippleX = Math.round(rect.width / 2);
      rippleY = Math.round(rect.height / 2);
    } else {
      var _ref6 = event.touches ? event.touches[0] : event, clientX = _ref6.clientX, clientY = _ref6.clientY;
      rippleX = Math.round(clientX - rect.left);
      rippleY = Math.round(clientY - rect.top);
    }
    if (center) {
      rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3);
      if (rippleSize % 2 === 0) {
        rippleSize += 1;
      }
    } else {
      var sizeX = Math.max(Math.abs((element2 ? element2.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
      var sizeY = Math.max(Math.abs((element2 ? element2.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
      rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
    }
    if (event.touches) {
      if (startTimerCommit.current === null) {
        startTimerCommit.current = function() {
          startCommit({
            pulsate: pulsate2,
            rippleX,
            rippleY,
            rippleSize,
            cb
          });
        };
        startTimer.current = setTimeout(function() {
          if (startTimerCommit.current) {
            startTimerCommit.current();
            startTimerCommit.current = null;
          }
        }, DELAY_RIPPLE);
      }
    } else {
      startCommit({
        pulsate: pulsate2,
        rippleX,
        rippleY,
        rippleSize,
        cb
      });
    }
  }, [centerProp, startCommit]);
  var pulsate = useCallback5(function() {
    start3({}, {
      pulsate: true
    });
  }, [start3]);
  var stop = useCallback5(function(event, cb) {
    clearTimeout(startTimer.current);
    if (event.type === "touchend" && startTimerCommit.current) {
      event.persist();
      startTimerCommit.current();
      startTimerCommit.current = null;
      startTimer.current = setTimeout(function() {
        stop(event, cb);
      });
      return;
    }
    startTimerCommit.current = null;
    setRipples(function(oldRipples) {
      if (oldRipples.length > 0) {
        return oldRipples.slice(1);
      }
      return oldRipples;
    });
    rippleCallback.current = cb;
  }, []);
  useImperativeHandle(ref2, function() {
    return {
      pulsate,
      start: start3,
      stop
    };
  }, [pulsate, start3, stop]);
  return /* @__PURE__ */ createElement7("span", _extends({
    className: clsx_m_default(classes.root, className),
    ref: container
  }, other), /* @__PURE__ */ createElement7(TransitionGroup_default, {
    component: null,
    exit: true
  }, ripples));
});
true ? TouchRipple.propTypes = {
  center: import_prop_types22.default.bool,
  classes: import_prop_types22.default.object.isRequired,
  className: import_prop_types22.default.string
} : void 0;
var TouchRipple_default = withStyles_default2(styles11, {
  flip: false,
  name: "MuiTouchRipple"
})(/* @__PURE__ */ memo105(TouchRipple));

// node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js
var styles13 = {
  root: {
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    position: "relative",
    WebkitTapHighlightColor: "transparent",
    backgroundColor: "transparent",
    outline: 0,
    border: 0,
    margin: 0,
    borderRadius: 0,
    padding: 0,
    cursor: "pointer",
    userSelect: "none",
    verticalAlign: "middle",
    "-moz-appearance": "none",
    "-webkit-appearance": "none",
    textDecoration: "none",
    color: "inherit",
    "&::-moz-focus-inner": {
      borderStyle: "none"
    },
    "&$disabled": {
      pointerEvents: "none",
      cursor: "default"
    },
    "@media print": {
      colorAdjust: "exact"
    }
  },
  disabled: {},
  focusVisible: {}
};
var ButtonBase = /* @__PURE__ */ forwardRef111(function ButtonBase2(props, ref2) {
  var action3 = props.action, buttonRefProp = props.buttonRef, _props$centerRipple = props.centerRipple, centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple, children2 = props.children, classes = props.classes, className = props.className, _props$component = props.component, component = _props$component === void 0 ? "button" : _props$component, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$disableRipple = props.disableRipple, disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple, _props$disableTouchRi = props.disableTouchRipple, disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi, _props$focusRipple = props.focusRipple, focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple, focusVisibleClassName = props.focusVisibleClassName, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onFocusVisible = props.onFocusVisible, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, onMouseDown = props.onMouseDown, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, onTouchEnd = props.onTouchEnd, onTouchMove = props.onTouchMove, onTouchStart = props.onTouchStart, onDragLeave = props.onDragLeave, _props$tabIndex = props.tabIndex, tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex, TouchRippleProps = props.TouchRippleProps, _props$type = props.type, type3 = _props$type === void 0 ? "button" : _props$type, other = _objectWithoutProperties(props, ["action", "buttonRef", "centerRipple", "children", "classes", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "onBlur", "onClick", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "onDragLeave", "tabIndex", "TouchRippleProps", "type"]);
  var buttonRef = useRef5(null);
  function getButtonNode() {
    return findDOMNode2(buttonRef.current);
  }
  var rippleRef = useRef5(null);
  var _React$useState = useState5(false), focusVisible2 = _React$useState[0], setFocusVisible = _React$useState[1];
  if (disabled3 && focusVisible2) {
    setFocusVisible(false);
  }
  var _useIsFocusVisible = useIsFocusVisible(), isFocusVisible2 = _useIsFocusVisible.isFocusVisible, onBlurVisible = _useIsFocusVisible.onBlurVisible, focusVisibleRef = _useIsFocusVisible.ref;
  useImperativeHandle2(action3, function() {
    return {
      focusVisible: function focusVisible3() {
        setFocusVisible(true);
        buttonRef.current.focus();
      }
    };
  }, []);
  useEffect7(function() {
    if (focusVisible2 && focusRipple && !disableRipple) {
      rippleRef.current.pulsate();
    }
  }, [disableRipple, focusRipple, focusVisible2]);
  function useRippleHandler(rippleAction, eventCallback) {
    var skipRippleAction = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : disableTouchRipple;
    return useEventCallback(function(event) {
      if (eventCallback) {
        eventCallback(event);
      }
      var ignore = skipRippleAction;
      if (!ignore && rippleRef.current) {
        rippleRef.current[rippleAction](event);
      }
      return true;
    });
  }
  var handleMouseDown = useRippleHandler("start", onMouseDown);
  var handleDragLeave = useRippleHandler("stop", onDragLeave);
  var handleMouseUp = useRippleHandler("stop", onMouseUp);
  var handleMouseLeave = useRippleHandler("stop", function(event) {
    if (focusVisible2) {
      event.preventDefault();
    }
    if (onMouseLeave) {
      onMouseLeave(event);
    }
  });
  var handleTouchStart = useRippleHandler("start", onTouchStart);
  var handleTouchEnd = useRippleHandler("stop", onTouchEnd);
  var handleTouchMove = useRippleHandler("stop", onTouchMove);
  var handleBlur = useRippleHandler("stop", function(event) {
    if (focusVisible2) {
      onBlurVisible(event);
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event);
    }
  }, false);
  var handleFocus = useEventCallback(function(event) {
    if (!buttonRef.current) {
      buttonRef.current = event.currentTarget;
    }
    if (isFocusVisible2(event)) {
      setFocusVisible(true);
      if (onFocusVisible) {
        onFocusVisible(event);
      }
    }
    if (onFocus) {
      onFocus(event);
    }
  });
  var isNonNativeButton = function isNonNativeButton2() {
    var button2 = getButtonNode();
    return component && component !== "button" && !(button2.tagName === "A" && button2.href);
  };
  var keydownRef = useRef5(false);
  var handleKeyDown2 = useEventCallback(function(event) {
    if (focusRipple && !keydownRef.current && focusVisible2 && rippleRef.current && event.key === " ") {
      keydownRef.current = true;
      event.persist();
      rippleRef.current.stop(event, function() {
        rippleRef.current.start(event);
      });
    }
    if (event.target === event.currentTarget && isNonNativeButton() && event.key === " ") {
      event.preventDefault();
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
    if (event.target === event.currentTarget && isNonNativeButton() && event.key === "Enter" && !disabled3) {
      event.preventDefault();
      if (onClick) {
        onClick(event);
      }
    }
  });
  var handleKeyUp = useEventCallback(function(event) {
    if (focusRipple && event.key === " " && rippleRef.current && focusVisible2 && !event.defaultPrevented) {
      keydownRef.current = false;
      event.persist();
      rippleRef.current.stop(event, function() {
        rippleRef.current.pulsate(event);
      });
    }
    if (onKeyUp) {
      onKeyUp(event);
    }
    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === " " && !event.defaultPrevented) {
      onClick(event);
    }
  });
  var ComponentProp = component;
  if (ComponentProp === "button" && other.href) {
    ComponentProp = "a";
  }
  var buttonProps = {};
  if (ComponentProp === "button") {
    buttonProps.type = type3;
    buttonProps.disabled = disabled3;
  } else {
    if (ComponentProp !== "a" || !other.href) {
      buttonProps.role = "button";
    }
    buttonProps["aria-disabled"] = disabled3;
  }
  var handleUserRef = useForkRef(buttonRefProp, ref2);
  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);
  var handleRef = useForkRef(handleUserRef, handleOwnRef);
  var _React$useState2 = useState5(false), mountedState = _React$useState2[0], setMountedState = _React$useState2[1];
  useEffect7(function() {
    setMountedState(true);
  }, []);
  var enableTouchRipple = mountedState && !disableRipple && !disabled3;
  if (true) {
    useEffect7(function() {
      if (enableTouchRipple && !rippleRef.current) {
        console.error(["Material-UI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join("\n"));
      }
    }, [enableTouchRipple]);
  }
  return /* @__PURE__ */ createElement8(ComponentProp, _extends({
    className: clsx_m_default(classes.root, className, focusVisible2 && [classes.focusVisible, focusVisibleClassName], disabled3 && classes.disabled),
    onBlur: handleBlur,
    onClick,
    onFocus: handleFocus,
    onKeyDown: handleKeyDown2,
    onKeyUp: handleKeyUp,
    onMouseDown: handleMouseDown,
    onMouseLeave: handleMouseLeave,
    onMouseUp: handleMouseUp,
    onDragLeave: handleDragLeave,
    onTouchEnd: handleTouchEnd,
    onTouchMove: handleTouchMove,
    onTouchStart: handleTouchStart,
    ref: handleRef,
    tabIndex: disabled3 ? -1 : tabIndex
  }, buttonProps, other), children2, enableTouchRipple ? /* @__PURE__ */ createElement8(TouchRipple_default, _extends({
    ref: rippleRef,
    center: centerRipple
  }, TouchRippleProps)) : null);
});
true ? ButtonBase.propTypes = {
  action: refType_default,
  buttonRef: deprecatedPropType(refType_default, "Use `ref` instead."),
  centerRipple: import_prop_types23.default.bool,
  children: import_prop_types23.default.node,
  classes: import_prop_types23.default.object,
  className: import_prop_types23.default.string,
  component: elementTypeAcceptingRef_default,
  disabled: import_prop_types23.default.bool,
  disableRipple: import_prop_types23.default.bool,
  disableTouchRipple: import_prop_types23.default.bool,
  focusRipple: import_prop_types23.default.bool,
  focusVisibleClassName: import_prop_types23.default.string,
  href: import_prop_types23.default.string,
  onBlur: import_prop_types23.default.func,
  onClick: import_prop_types23.default.func,
  onDragLeave: import_prop_types23.default.func,
  onFocus: import_prop_types23.default.func,
  onFocusVisible: import_prop_types23.default.func,
  onKeyDown: import_prop_types23.default.func,
  onKeyUp: import_prop_types23.default.func,
  onMouseDown: import_prop_types23.default.func,
  onMouseLeave: import_prop_types23.default.func,
  onMouseUp: import_prop_types23.default.func,
  onTouchEnd: import_prop_types23.default.func,
  onTouchMove: import_prop_types23.default.func,
  onTouchStart: import_prop_types23.default.func,
  tabIndex: import_prop_types23.default.oneOfType([import_prop_types23.default.number, import_prop_types23.default.string]),
  TouchRippleProps: import_prop_types23.default.object,
  type: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["button", "reset", "submit"]), import_prop_types23.default.string])
} : void 0;
var ButtonBase_default = withStyles_default2(styles13, {
  name: "MuiButtonBase"
})(ButtonBase);

// node_modules/@material-ui/core/esm/IconButton/IconButton.js
var import_prop_types24 = __toModule(require_prop_types());
import {
  Children as Children3,
  createElement as createElement9,
  forwardRef as forwardRef112,
  isValidElement as isValidElement4
} from "react";
var styles14 = function styles15(theme) {
  return {
    root: {
      textAlign: "center",
      flex: "0 0 auto",
      fontSize: theme.typography.pxToRem(24),
      padding: 12,
      borderRadius: "50%",
      overflow: "visible",
      color: theme.palette.action.active,
      transition: theme.transitions.create("background-color", {
        duration: theme.transitions.duration.shortest
      }),
      "&:hover": {
        backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      },
      "&$disabled": {
        backgroundColor: "transparent",
        color: theme.palette.action.disabled
      }
    },
    edgeStart: {
      marginLeft: -12,
      "$sizeSmall&": {
        marginLeft: -3
      }
    },
    edgeEnd: {
      marginRight: -12,
      "$sizeSmall&": {
        marginRight: -3
      }
    },
    colorInherit: {
      color: "inherit"
    },
    colorPrimary: {
      color: theme.palette.primary.main,
      "&:hover": {
        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    },
    colorSecondary: {
      color: theme.palette.secondary.main,
      "&:hover": {
        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    },
    disabled: {},
    sizeSmall: {
      padding: 3,
      fontSize: theme.typography.pxToRem(18)
    },
    label: {
      width: "100%",
      display: "flex",
      alignItems: "inherit",
      justifyContent: "inherit"
    }
  };
};
var IconButton = /* @__PURE__ */ forwardRef112(function IconButton2(props, ref2) {
  var _props$edge = props.edge, edge = _props$edge === void 0 ? false : _props$edge, children2 = props.children, classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "default" : _props$color, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, other = _objectWithoutProperties(props, ["edge", "children", "classes", "className", "color", "disabled", "disableFocusRipple", "size"]);
  return /* @__PURE__ */ createElement9(ButtonBase_default, _extends({
    className: clsx_m_default(classes.root, className, color2 !== "default" && classes["color".concat(capitalize(color2))], disabled3 && classes.disabled, size === "small" && classes["size".concat(capitalize(size))], {
      "start": classes.edgeStart,
      "end": classes.edgeEnd
    }[edge]),
    centerRipple: true,
    focusRipple: !disableFocusRipple,
    disabled: disabled3,
    ref: ref2
  }, other), /* @__PURE__ */ createElement9("span", {
    className: classes.label
  }, children2));
});
true ? IconButton.propTypes = {
  children: chainPropTypes(import_prop_types24.default.node, function(props) {
    var found = Children3.toArray(props.children).some(function(child) {
      return /* @__PURE__ */ isValidElement4(child) && child.props.onClick;
    });
    if (found) {
      return new Error(["Material-UI: You are providing an onClick event listener to a child of a button element.", "Firefox will never trigger the event.", "You should move the onClick listener to the parent button element.", "https://github.com/mui-org/material-ui/issues/13957"].join("\n"));
    }
    return null;
  }),
  classes: import_prop_types24.default.object.isRequired,
  className: import_prop_types24.default.string,
  color: import_prop_types24.default.oneOf(["default", "inherit", "primary", "secondary"]),
  disabled: import_prop_types24.default.bool,
  disableFocusRipple: import_prop_types24.default.bool,
  disableRipple: import_prop_types24.default.bool,
  edge: import_prop_types24.default.oneOf(["start", "end", false]),
  size: import_prop_types24.default.oneOf(["small", "medium"])
} : void 0;
var IconButton_default = withStyles_default2(styles14, {
  name: "MuiIconButton"
})(IconButton);

// node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js
var styles16 = function styles17(theme) {
  var transition3 = {
    duration: theme.transitions.duration.shortest
  };
  return {
    root: {
      display: "flex",
      minHeight: 8 * 6,
      transition: theme.transitions.create(["min-height", "background-color"], transition3),
      padding: theme.spacing(0, 2),
      "&:hover:not($disabled)": {
        cursor: "pointer"
      },
      "&$expanded": {
        minHeight: 64
      },
      "&$focused, &$focusVisible": {
        backgroundColor: theme.palette.action.focus
      },
      "&$disabled": {
        opacity: theme.palette.action.disabledOpacity
      }
    },
    expanded: {},
    focused: {},
    focusVisible: {},
    disabled: {},
    content: {
      display: "flex",
      flexGrow: 1,
      transition: theme.transitions.create(["margin"], transition3),
      margin: "12px 0",
      "&$expanded": {
        margin: "20px 0"
      }
    },
    expandIcon: {
      transform: "rotate(0deg)",
      transition: theme.transitions.create("transform", transition3),
      "&:hover": {
        backgroundColor: "transparent"
      },
      "&$expanded": {
        transform: "rotate(180deg)"
      }
    }
  };
};
var AccordionSummary = /* @__PURE__ */ forwardRef113(function AccordionSummary2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, expandIcon = props.expandIcon, focusVisibleClassName = props.focusVisibleClassName, _props$IconButtonProp = props.IconButtonProps, IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp, onClick = props.onClick, other = _objectWithoutProperties(props, ["children", "classes", "className", "expandIcon", "focusVisibleClassName", "IconButtonProps", "onClick"]);
  var _React$useContext = useContext(AccordionContext_default), _React$useContext$dis = _React$useContext.disabled, disabled3 = _React$useContext$dis === void 0 ? false : _React$useContext$dis, expanded = _React$useContext.expanded, toggle = _React$useContext.toggle;
  var handleChange = function handleChange2(event) {
    if (toggle) {
      toggle(event);
    }
    if (onClick) {
      onClick(event);
    }
  };
  return /* @__PURE__ */ createElement10(ButtonBase_default, _extends({
    focusRipple: false,
    disableRipple: true,
    disabled: disabled3,
    component: "div",
    "aria-expanded": expanded,
    className: clsx_m_default(classes.root, className, disabled3 && classes.disabled, expanded && classes.expanded),
    focusVisibleClassName: clsx_m_default(classes.focusVisible, classes.focused, focusVisibleClassName),
    onClick: handleChange,
    ref: ref2
  }, other), /* @__PURE__ */ createElement10("div", {
    className: clsx_m_default(classes.content, expanded && classes.expanded)
  }, children2), expandIcon && /* @__PURE__ */ createElement10(IconButton_default, _extends({
    className: clsx_m_default(classes.expandIcon, expanded && classes.expanded),
    edge: "end",
    component: "div",
    tabIndex: null,
    role: null,
    "aria-hidden": true
  }, IconButtonProps), expandIcon));
});
true ? AccordionSummary.propTypes = {
  children: import_prop_types25.default.node,
  classes: chainPropTypes(import_prop_types25.default.object, function(props) {
    if (props.classes.focused !== void 0 && props.classes.focused.indexOf(" ") !== -1) {
      return new Error(["Material-UI: The `classes.focused` key is deprecated.", "Use `classes.focusVisible` instead.", "The name of the pseudo-class was changed for consistency."].join("\n"));
    }
    return null;
  }),
  className: import_prop_types25.default.string,
  expandIcon: import_prop_types25.default.node,
  focusVisibleClassName: import_prop_types25.default.string,
  IconButtonProps: import_prop_types25.default.object,
  onClick: import_prop_types25.default.func
} : void 0;
var AccordionSummary_default = withStyles_default2(styles16, {
  name: "MuiAccordionSummary"
})(AccordionSummary);

// node_modules/@material-ui/core/esm/AppBar/AppBar.js
var import_prop_types26 = __toModule(require_prop_types());
import {
  createElement as createElement11,
  forwardRef as forwardRef114
} from "react";
var styles18 = function styles19(theme) {
  var backgroundColorDefault = theme.palette.type === "light" ? theme.palette.grey[100] : theme.palette.grey[900];
  return {
    root: {
      display: "flex",
      flexDirection: "column",
      width: "100%",
      boxSizing: "border-box",
      zIndex: theme.zIndex.appBar,
      flexShrink: 0
    },
    positionFixed: {
      position: "fixed",
      top: 0,
      left: "auto",
      right: 0,
      "@media print": {
        position: "absolute"
      }
    },
    positionAbsolute: {
      position: "absolute",
      top: 0,
      left: "auto",
      right: 0
    },
    positionSticky: {
      position: "sticky",
      top: 0,
      left: "auto",
      right: 0
    },
    positionStatic: {
      position: "static"
    },
    positionRelative: {
      position: "relative"
    },
    colorDefault: {
      backgroundColor: backgroundColorDefault,
      color: theme.palette.getContrastText(backgroundColorDefault)
    },
    colorPrimary: {
      backgroundColor: theme.palette.primary.main,
      color: theme.palette.primary.contrastText
    },
    colorSecondary: {
      backgroundColor: theme.palette.secondary.main,
      color: theme.palette.secondary.contrastText
    },
    colorInherit: {
      color: "inherit"
    },
    colorTransparent: {
      backgroundColor: "transparent",
      color: "inherit"
    }
  };
};
var AppBar = /* @__PURE__ */ forwardRef114(function AppBar2(props, ref2) {
  var classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "primary" : _props$color, _props$position = props.position, position4 = _props$position === void 0 ? "fixed" : _props$position, other = _objectWithoutProperties(props, ["classes", "className", "color", "position"]);
  return /* @__PURE__ */ createElement11(Paper_default, _extends({
    square: true,
    component: "header",
    elevation: 4,
    className: clsx_m_default(classes.root, classes["position".concat(capitalize(position4))], classes["color".concat(capitalize(color2))], className, position4 === "fixed" && "mui-fixed"),
    ref: ref2
  }, other));
});
true ? AppBar.propTypes = {
  children: import_prop_types26.default.node,
  classes: import_prop_types26.default.object,
  className: import_prop_types26.default.string,
  color: import_prop_types26.default.oneOf(["default", "inherit", "primary", "secondary", "transparent"]),
  position: import_prop_types26.default.oneOf(["absolute", "fixed", "relative", "static", "sticky"])
} : void 0;
var AppBar_default = withStyles_default2(styles18, {
  name: "MuiAppBar"
})(AppBar);

// node_modules/@material-ui/core/esm/Backdrop/Backdrop.js
var import_prop_types28 = __toModule(require_prop_types());
import {
  createElement as createElement13,
  forwardRef as forwardRef116
} from "react";

// node_modules/@material-ui/core/esm/Fade/Fade.js
var import_prop_types27 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement2,
  createElement as createElement12,
  forwardRef as forwardRef115,
  useRef as useRef6
} from "react";
var styles20 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
};
var defaultTimeout = {
  enter: duration.enteringScreen,
  exit: duration.leavingScreen
};
var Fade = /* @__PURE__ */ forwardRef115(function Fade2(props, ref2) {
  var children2 = props.children, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style3 = props.style, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition_default : _props$TransitionComp, _props$timeout = props.timeout, timeout2 = _props$timeout === void 0 ? defaultTimeout : _props$timeout, other = _objectWithoutProperties(props, ["children", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "TransitionComponent", "timeout"]);
  var theme = useTheme2();
  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
  var nodeRef = useRef6(null);
  var foreignRef = useForkRef(children2.ref, ref2);
  var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : void 0, foreignRef);
  var normalizedTransitionCallback = function normalizedTransitionCallback2(callback) {
    return function(nodeOrAppearing, maybeAppearing) {
      if (callback) {
        var _ref6 = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing], _ref23 = _slicedToArray(_ref6, 2), node4 = _ref23[0], isAppearing = _ref23[1];
        if (isAppearing === void 0) {
          callback(node4);
        } else {
          callback(node4, isAppearing);
        }
      }
    };
  };
  var handleEntering = normalizedTransitionCallback(onEntering);
  var handleEnter = normalizedTransitionCallback(function(node4, isAppearing) {
    reflow(node4);
    var transitionProps = getTransitionProps({
      style: style3,
      timeout: timeout2
    }, {
      mode: "enter"
    });
    node4.style.webkitTransition = theme.transitions.create("opacity", transitionProps);
    node4.style.transition = theme.transitions.create("opacity", transitionProps);
    if (onEnter) {
      onEnter(node4, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(function(node4) {
    var transitionProps = getTransitionProps({
      style: style3,
      timeout: timeout2
    }, {
      mode: "exit"
    });
    node4.style.webkitTransition = theme.transitions.create("opacity", transitionProps);
    node4.style.transition = theme.transitions.create("opacity", transitionProps);
    if (onExit) {
      onExit(node4);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);
  return /* @__PURE__ */ createElement12(TransitionComponent, _extends({
    appear: true,
    in: inProp,
    nodeRef: enableStrictModeCompat ? nodeRef : void 0,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    timeout: timeout2
  }, other), function(state, childProps) {
    return /* @__PURE__ */ cloneElement2(children2, _extends({
      style: _extends({
        opacity: 0,
        visibility: state === "exited" && !inProp ? "hidden" : void 0
      }, styles20[state], style3, children2.props.style),
      ref: handleRef
    }, childProps));
  });
});
true ? Fade.propTypes = {
  children: import_prop_types27.default.element,
  disableStrictModeCompat: import_prop_types27.default.bool,
  in: import_prop_types27.default.bool,
  onEnter: import_prop_types27.default.func,
  onEntered: import_prop_types27.default.func,
  onEntering: import_prop_types27.default.func,
  onExit: import_prop_types27.default.func,
  onExited: import_prop_types27.default.func,
  onExiting: import_prop_types27.default.func,
  style: import_prop_types27.default.object,
  timeout: import_prop_types27.default.oneOfType([import_prop_types27.default.number, import_prop_types27.default.shape({
    appear: import_prop_types27.default.number,
    enter: import_prop_types27.default.number,
    exit: import_prop_types27.default.number
  })])
} : void 0;
var Fade_default = Fade;

// node_modules/@material-ui/core/esm/Backdrop/Backdrop.js
var styles21 = {
  root: {
    zIndex: -1,
    position: "fixed",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    right: 0,
    bottom: 0,
    top: 0,
    left: 0,
    backgroundColor: "rgba(0, 0, 0, 0.5)",
    WebkitTapHighlightColor: "transparent"
  },
  invisible: {
    backgroundColor: "transparent"
  }
};
var Backdrop = /* @__PURE__ */ forwardRef116(function Backdrop2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$invisible = props.invisible, invisible = _props$invisible === void 0 ? false : _props$invisible, open = props.open, transitionDuration = props.transitionDuration, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Fade_default : _props$TransitionComp, other = _objectWithoutProperties(props, ["children", "classes", "className", "invisible", "open", "transitionDuration", "TransitionComponent"]);
  return /* @__PURE__ */ createElement13(TransitionComponent, _extends({
    in: open,
    timeout: transitionDuration
  }, other), /* @__PURE__ */ createElement13("div", {
    className: clsx_m_default(classes.root, className, invisible && classes.invisible),
    "aria-hidden": true,
    ref: ref2
  }, children2));
});
true ? Backdrop.propTypes = {
  children: import_prop_types28.default.node,
  classes: import_prop_types28.default.object,
  className: import_prop_types28.default.string,
  invisible: import_prop_types28.default.bool,
  open: import_prop_types28.default.bool.isRequired,
  transitionDuration: import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.shape({
    appear: import_prop_types28.default.number,
    enter: import_prop_types28.default.number,
    exit: import_prop_types28.default.number
  })])
} : void 0;
var Backdrop_default = withStyles_default2(styles21, {
  name: "MuiBackdrop"
})(Backdrop);

// node_modules/@material-ui/core/esm/Badge/Badge.js
var import_prop_types29 = __toModule(require_prop_types());
import {
  createElement as createElement14,
  forwardRef as forwardRef117
} from "react";
var RADIUS_STANDARD = 10;
var RADIUS_DOT = 4;
var styles22 = function styles23(theme) {
  return {
    root: {
      position: "relative",
      display: "inline-flex",
      verticalAlign: "middle",
      flexShrink: 0
    },
    badge: {
      display: "flex",
      flexDirection: "row",
      flexWrap: "wrap",
      justifyContent: "center",
      alignContent: "center",
      alignItems: "center",
      position: "absolute",
      boxSizing: "border-box",
      fontFamily: theme.typography.fontFamily,
      fontWeight: theme.typography.fontWeightMedium,
      fontSize: theme.typography.pxToRem(12),
      minWidth: RADIUS_STANDARD * 2,
      lineHeight: 1,
      padding: "0 6px",
      height: RADIUS_STANDARD * 2,
      borderRadius: RADIUS_STANDARD,
      zIndex: 1,
      transition: theme.transitions.create("transform", {
        easing: theme.transitions.easing.easeInOut,
        duration: theme.transitions.duration.enteringScreen
      })
    },
    colorPrimary: {
      backgroundColor: theme.palette.primary.main,
      color: theme.palette.primary.contrastText
    },
    colorSecondary: {
      backgroundColor: theme.palette.secondary.main,
      color: theme.palette.secondary.contrastText
    },
    colorError: {
      backgroundColor: theme.palette.error.main,
      color: theme.palette.error.contrastText
    },
    dot: {
      borderRadius: RADIUS_DOT,
      height: RADIUS_DOT * 2,
      minWidth: RADIUS_DOT * 2,
      padding: 0
    },
    anchorOriginTopRightRectangle: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      "&$invisible": {
        transform: "scale(0) translate(50%, -50%)"
      }
    },
    anchorOriginTopRightRectangular: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      "&$invisible": {
        transform: "scale(0) translate(50%, -50%)"
      }
    },
    anchorOriginBottomRightRectangle: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      "&$invisible": {
        transform: "scale(0) translate(50%, 50%)"
      }
    },
    anchorOriginBottomRightRectangular: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      "&$invisible": {
        transform: "scale(0) translate(50%, 50%)"
      }
    },
    anchorOriginTopLeftRectangle: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      "&$invisible": {
        transform: "scale(0) translate(-50%, -50%)"
      }
    },
    anchorOriginTopLeftRectangular: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      "&$invisible": {
        transform: "scale(0) translate(-50%, -50%)"
      }
    },
    anchorOriginBottomLeftRectangle: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      "&$invisible": {
        transform: "scale(0) translate(-50%, 50%)"
      }
    },
    anchorOriginBottomLeftRectangular: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      "&$invisible": {
        transform: "scale(0) translate(-50%, 50%)"
      }
    },
    anchorOriginTopRightCircle: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      "&$invisible": {
        transform: "scale(0) translate(50%, -50%)"
      }
    },
    anchorOriginTopRightCircular: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      "&$invisible": {
        transform: "scale(0) translate(50%, -50%)"
      }
    },
    anchorOriginBottomRightCircle: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      "&$invisible": {
        transform: "scale(0) translate(50%, 50%)"
      }
    },
    anchorOriginBottomRightCircular: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      "&$invisible": {
        transform: "scale(0) translate(50%, 50%)"
      }
    },
    anchorOriginTopLeftCircle: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      "&$invisible": {
        transform: "scale(0) translate(-50%, -50%)"
      }
    },
    anchorOriginTopLeftCircular: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      "&$invisible": {
        transform: "scale(0) translate(-50%, -50%)"
      }
    },
    anchorOriginBottomLeftCircle: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      "&$invisible": {
        transform: "scale(0) translate(-50%, 50%)"
      }
    },
    anchorOriginBottomLeftCircular: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      "&$invisible": {
        transform: "scale(0) translate(-50%, 50%)"
      }
    },
    invisible: {
      transition: theme.transitions.create("transform", {
        easing: theme.transitions.easing.easeInOut,
        duration: theme.transitions.duration.leavingScreen
      })
    }
  };
};
var Badge = /* @__PURE__ */ forwardRef117(function Badge2(props, ref2) {
  var _props$anchorOrigin = props.anchorOrigin, anchorOrigin = _props$anchorOrigin === void 0 ? {
    vertical: "top",
    horizontal: "right"
  } : _props$anchorOrigin, badgeContent = props.badgeContent, children2 = props.children, classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "default" : _props$color, _props$component = props.component, ComponentProp = _props$component === void 0 ? "span" : _props$component, invisibleProp = props.invisible, _props$max = props.max, max2 = _props$max === void 0 ? 99 : _props$max, _props$overlap = props.overlap, overlap = _props$overlap === void 0 ? "rectangle" : _props$overlap, _props$showZero = props.showZero, showZero = _props$showZero === void 0 ? false : _props$showZero, _props$variant = props.variant, variant = _props$variant === void 0 ? "standard" : _props$variant, other = _objectWithoutProperties(props, ["anchorOrigin", "badgeContent", "children", "classes", "className", "color", "component", "invisible", "max", "overlap", "showZero", "variant"]);
  var invisible = invisibleProp;
  if (invisibleProp == null && (badgeContent === 0 && !showZero || badgeContent == null && variant !== "dot")) {
    invisible = true;
  }
  var displayValue = "";
  if (variant !== "dot") {
    displayValue = badgeContent > max2 ? "".concat(max2, "+") : badgeContent;
  }
  return /* @__PURE__ */ createElement14(ComponentProp, _extends({
    className: clsx_m_default(classes.root, className),
    ref: ref2
  }, other), children2, /* @__PURE__ */ createElement14("span", {
    className: clsx_m_default(classes.badge, classes["".concat(anchorOrigin.horizontal).concat(capitalize(anchorOrigin.vertical), "}")], classes["anchorOrigin".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)).concat(capitalize(overlap))], color2 !== "default" && classes["color".concat(capitalize(color2))], invisible && classes.invisible, variant === "dot" && classes.dot)
  }, displayValue));
});
true ? Badge.propTypes = {
  anchorOrigin: import_prop_types29.default.shape({
    horizontal: import_prop_types29.default.oneOf(["left", "right"]).isRequired,
    vertical: import_prop_types29.default.oneOf(["bottom", "top"]).isRequired
  }),
  badgeContent: import_prop_types29.default.node,
  children: import_prop_types29.default.node,
  classes: chainPropTypes(import_prop_types29.default.object, function(props) {
    var classes = props.classes;
    if (classes == null) {
      return null;
    }
    [["anchorOriginTopRightRectangle", "anchorOriginTopRightRectangular"], ["anchorOriginBottomRightRectangle", "anchorOriginBottomRightRectangular"], ["anchorOriginTopLeftRectangle", "anchorOriginTopLeftRectangular"], ["anchorOriginBottomLeftRectangle", "anchorOriginBottomLeftRectangular"], ["anchorOriginTopRightCircle", "anchorOriginTopRightCircular"], ["anchorOriginBottomRightCircle", "anchorOriginBottomRightCircular"], ["anchorOriginTopLeftCircle", "anchorOriginTopLeftCircular"]].forEach(function(_ref6) {
      var _ref23 = _slicedToArray(_ref6, 2), deprecatedClassKey = _ref23[0], newClassKey = _ref23[1];
      if (classes[deprecatedClassKey] != null && classes[deprecatedClassKey].split(" ").length > 1) {
        throw new Error("Material-UI: The `".concat(deprecatedClassKey, "` class was deprecated. Use `").concat(newClassKey, "` instead."));
      }
    });
    return null;
  }),
  className: import_prop_types29.default.string,
  color: import_prop_types29.default.oneOf(["default", "error", "primary", "secondary"]),
  component: import_prop_types29.default.elementType,
  invisible: import_prop_types29.default.bool,
  max: import_prop_types29.default.number,
  overlap: chainPropTypes(import_prop_types29.default.oneOf(["circle", "rectangle", "circular", "rectangular"]), function(props) {
    var overlap = props.overlap;
    if (overlap === "rectangle") {
      throw new Error('Material-UI: `overlap="rectangle"` was deprecated. Use `overlap="rectangular"` instead.');
    }
    if (overlap === "circle") {
      throw new Error('Material-UI: `overlap="circle"` was deprecated. Use `overlap="circular"` instead.');
    }
    return null;
  }),
  showZero: import_prop_types29.default.bool,
  variant: import_prop_types29.default.oneOf(["dot", "standard"])
} : void 0;
var Badge_default = withStyles_default2(styles22, {
  name: "MuiBadge"
})(Badge);

// node_modules/@material-ui/core/esm/Box/Box.js
var styleFunction = styleFunctionSx_default(compose_default(borders_default, display_default, flexbox_default, grid_default, positions_default, palette_default, shadows_default2, sizing_default, spacing_default, typography_default));
var Box2 = styled_default("div")(styleFunction, {
  name: "MuiBox"
});
var Box_default2 = Box2;

// node_modules/@material-ui/core/esm/Typography/Typography.js
var import_prop_types30 = __toModule(require_prop_types());
import {
  createElement as createElement15,
  forwardRef as forwardRef118
} from "react";
var styles24 = function styles25(theme) {
  return {
    root: {
      margin: 0
    },
    body2: theme.typography.body2,
    body1: theme.typography.body1,
    caption: theme.typography.caption,
    button: theme.typography.button,
    h1: theme.typography.h1,
    h2: theme.typography.h2,
    h3: theme.typography.h3,
    h4: theme.typography.h4,
    h5: theme.typography.h5,
    h6: theme.typography.h6,
    subtitle1: theme.typography.subtitle1,
    subtitle2: theme.typography.subtitle2,
    overline: theme.typography.overline,
    srOnly: {
      position: "absolute",
      height: 1,
      width: 1,
      overflow: "hidden"
    },
    alignLeft: {
      textAlign: "left"
    },
    alignCenter: {
      textAlign: "center"
    },
    alignRight: {
      textAlign: "right"
    },
    alignJustify: {
      textAlign: "justify"
    },
    noWrap: {
      overflow: "hidden",
      textOverflow: "ellipsis",
      whiteSpace: "nowrap"
    },
    gutterBottom: {
      marginBottom: "0.35em"
    },
    paragraph: {
      marginBottom: 16
    },
    colorInherit: {
      color: "inherit"
    },
    colorPrimary: {
      color: theme.palette.primary.main
    },
    colorSecondary: {
      color: theme.palette.secondary.main
    },
    colorTextPrimary: {
      color: theme.palette.text.primary
    },
    colorTextSecondary: {
      color: theme.palette.text.secondary
    },
    colorError: {
      color: theme.palette.error.main
    },
    displayInline: {
      display: "inline"
    },
    displayBlock: {
      display: "block"
    }
  };
};
var defaultVariantMapping = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p"
};
var Typography = /* @__PURE__ */ forwardRef118(function Typography2(props, ref2) {
  var _props$align = props.align, align = _props$align === void 0 ? "inherit" : _props$align, classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "initial" : _props$color, component = props.component, _props$display = props.display, display = _props$display === void 0 ? "initial" : _props$display, _props$gutterBottom = props.gutterBottom, gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom, _props$noWrap = props.noWrap, noWrap = _props$noWrap === void 0 ? false : _props$noWrap, _props$paragraph = props.paragraph, paragraph = _props$paragraph === void 0 ? false : _props$paragraph, _props$variant = props.variant, variant = _props$variant === void 0 ? "body1" : _props$variant, _props$variantMapping = props.variantMapping, variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping, other = _objectWithoutProperties(props, ["align", "classes", "className", "color", "component", "display", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"]);
  var Component7 = component || (paragraph ? "p" : variantMapping[variant] || defaultVariantMapping[variant]) || "span";
  return /* @__PURE__ */ createElement15(Component7, _extends({
    className: clsx_m_default(classes.root, className, variant !== "inherit" && classes[variant], color2 !== "initial" && classes["color".concat(capitalize(color2))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== "inherit" && classes["align".concat(capitalize(align))], display !== "initial" && classes["display".concat(capitalize(display))]),
    ref: ref2
  }, other));
});
true ? Typography.propTypes = {
  align: import_prop_types30.default.oneOf(["inherit", "left", "center", "right", "justify"]),
  children: import_prop_types30.default.node,
  classes: import_prop_types30.default.object.isRequired,
  className: import_prop_types30.default.string,
  color: import_prop_types30.default.oneOf(["initial", "inherit", "primary", "secondary", "textPrimary", "textSecondary", "error"]),
  component: import_prop_types30.default.elementType,
  display: import_prop_types30.default.oneOf(["initial", "block", "inline"]),
  gutterBottom: import_prop_types30.default.bool,
  noWrap: import_prop_types30.default.bool,
  paragraph: import_prop_types30.default.bool,
  variant: import_prop_types30.default.oneOf(["h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "caption", "button", "overline", "srOnly", "inherit"]),
  variantMapping: import_prop_types30.default.object
} : void 0;
var Typography_default = withStyles_default2(styles24, {
  name: "MuiTypography"
})(Typography);

// node_modules/@material-ui/core/esm/Button/Button.js
var import_prop_types31 = __toModule(require_prop_types());
import {
  createElement as createElement16,
  forwardRef as forwardRef119
} from "react";
var styles26 = function styles27(theme) {
  return {
    root: _extends({}, theme.typography.button, {
      boxSizing: "border-box",
      minWidth: 64,
      padding: "6px 16px",
      borderRadius: theme.shape.borderRadius,
      color: theme.palette.text.primary,
      transition: theme.transitions.create(["background-color", "box-shadow", "border"], {
        duration: theme.transitions.duration.short
      }),
      "&:hover": {
        textDecoration: "none",
        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        },
        "&$disabled": {
          backgroundColor: "transparent"
        }
      },
      "&$disabled": {
        color: theme.palette.action.disabled
      }
    }),
    label: {
      width: "100%",
      display: "inherit",
      alignItems: "inherit",
      justifyContent: "inherit"
    },
    text: {
      padding: "6px 8px"
    },
    textPrimary: {
      color: theme.palette.primary.main,
      "&:hover": {
        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    },
    textSecondary: {
      color: theme.palette.secondary.main,
      "&:hover": {
        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    },
    outlined: {
      padding: "5px 15px",
      border: "1px solid ".concat(theme.palette.type === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"),
      "&$disabled": {
        border: "1px solid ".concat(theme.palette.action.disabledBackground)
      }
    },
    outlinedPrimary: {
      color: theme.palette.primary.main,
      border: "1px solid ".concat(alpha(theme.palette.primary.main, 0.5)),
      "&:hover": {
        border: "1px solid ".concat(theme.palette.primary.main),
        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    },
    outlinedSecondary: {
      color: theme.palette.secondary.main,
      border: "1px solid ".concat(alpha(theme.palette.secondary.main, 0.5)),
      "&:hover": {
        border: "1px solid ".concat(theme.palette.secondary.main),
        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      },
      "&$disabled": {
        border: "1px solid ".concat(theme.palette.action.disabled)
      }
    },
    contained: {
      color: theme.palette.getContrastText(theme.palette.grey[300]),
      backgroundColor: theme.palette.grey[300],
      boxShadow: theme.shadows[2],
      "&:hover": {
        backgroundColor: theme.palette.grey.A100,
        boxShadow: theme.shadows[4],
        "@media (hover: none)": {
          boxShadow: theme.shadows[2],
          backgroundColor: theme.palette.grey[300]
        },
        "&$disabled": {
          backgroundColor: theme.palette.action.disabledBackground
        }
      },
      "&$focusVisible": {
        boxShadow: theme.shadows[6]
      },
      "&:active": {
        boxShadow: theme.shadows[8]
      },
      "&$disabled": {
        color: theme.palette.action.disabled,
        boxShadow: theme.shadows[0],
        backgroundColor: theme.palette.action.disabledBackground
      }
    },
    containedPrimary: {
      color: theme.palette.primary.contrastText,
      backgroundColor: theme.palette.primary.main,
      "&:hover": {
        backgroundColor: theme.palette.primary.dark,
        "@media (hover: none)": {
          backgroundColor: theme.palette.primary.main
        }
      }
    },
    containedSecondary: {
      color: theme.palette.secondary.contrastText,
      backgroundColor: theme.palette.secondary.main,
      "&:hover": {
        backgroundColor: theme.palette.secondary.dark,
        "@media (hover: none)": {
          backgroundColor: theme.palette.secondary.main
        }
      }
    },
    disableElevation: {
      boxShadow: "none",
      "&:hover": {
        boxShadow: "none"
      },
      "&$focusVisible": {
        boxShadow: "none"
      },
      "&:active": {
        boxShadow: "none"
      },
      "&$disabled": {
        boxShadow: "none"
      }
    },
    focusVisible: {},
    disabled: {},
    colorInherit: {
      color: "inherit",
      borderColor: "currentColor"
    },
    textSizeSmall: {
      padding: "4px 5px",
      fontSize: theme.typography.pxToRem(13)
    },
    textSizeLarge: {
      padding: "8px 11px",
      fontSize: theme.typography.pxToRem(15)
    },
    outlinedSizeSmall: {
      padding: "3px 9px",
      fontSize: theme.typography.pxToRem(13)
    },
    outlinedSizeLarge: {
      padding: "7px 21px",
      fontSize: theme.typography.pxToRem(15)
    },
    containedSizeSmall: {
      padding: "4px 10px",
      fontSize: theme.typography.pxToRem(13)
    },
    containedSizeLarge: {
      padding: "8px 22px",
      fontSize: theme.typography.pxToRem(15)
    },
    sizeSmall: {},
    sizeLarge: {},
    fullWidth: {
      width: "100%"
    },
    startIcon: {
      display: "inherit",
      marginRight: 8,
      marginLeft: -4,
      "&$iconSizeSmall": {
        marginLeft: -2
      }
    },
    endIcon: {
      display: "inherit",
      marginRight: -4,
      marginLeft: 8,
      "&$iconSizeSmall": {
        marginRight: -2
      }
    },
    iconSizeSmall: {
      "& > *:first-child": {
        fontSize: 18
      }
    },
    iconSizeMedium: {
      "& > *:first-child": {
        fontSize: 20
      }
    },
    iconSizeLarge: {
      "& > *:first-child": {
        fontSize: 22
      }
    }
  };
};
var Button = /* @__PURE__ */ forwardRef119(function Button2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "default" : _props$color, _props$component = props.component, component = _props$component === void 0 ? "button" : _props$component, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$disableElevati = props.disableElevation, disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, endIconProp = props.endIcon, focusVisibleClassName = props.focusVisibleClassName, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, startIconProp = props.startIcon, _props$type = props.type, type3 = _props$type === void 0 ? "button" : _props$type, _props$variant = props.variant, variant = _props$variant === void 0 ? "text" : _props$variant, other = _objectWithoutProperties(props, ["children", "classes", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"]);
  var startIcon = startIconProp && /* @__PURE__ */ createElement16("span", {
    className: clsx_m_default(classes.startIcon, classes["iconSize".concat(capitalize(size))])
  }, startIconProp);
  var endIcon = endIconProp && /* @__PURE__ */ createElement16("span", {
    className: clsx_m_default(classes.endIcon, classes["iconSize".concat(capitalize(size))])
  }, endIconProp);
  return /* @__PURE__ */ createElement16(ButtonBase_default, _extends({
    className: clsx_m_default(classes.root, classes[variant], className, color2 === "inherit" ? classes.colorInherit : color2 !== "default" && classes["".concat(variant).concat(capitalize(color2))], size !== "medium" && [classes["".concat(variant, "Size").concat(capitalize(size))], classes["size".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled3 && classes.disabled, fullWidth && classes.fullWidth),
    component,
    disabled: disabled3,
    focusRipple: !disableFocusRipple,
    focusVisibleClassName: clsx_m_default(classes.focusVisible, focusVisibleClassName),
    ref: ref2,
    type: type3
  }, other), /* @__PURE__ */ createElement16("span", {
    className: classes.label
  }, startIcon, children2, endIcon));
});
true ? Button.propTypes = {
  children: import_prop_types31.default.node,
  classes: import_prop_types31.default.object,
  className: import_prop_types31.default.string,
  color: import_prop_types31.default.oneOf(["default", "inherit", "primary", "secondary"]),
  component: import_prop_types31.default.elementType,
  disabled: import_prop_types31.default.bool,
  disableElevation: import_prop_types31.default.bool,
  disableFocusRipple: import_prop_types31.default.bool,
  disableRipple: import_prop_types31.default.bool,
  endIcon: import_prop_types31.default.node,
  focusVisibleClassName: import_prop_types31.default.string,
  fullWidth: import_prop_types31.default.bool,
  href: import_prop_types31.default.string,
  size: import_prop_types31.default.oneOf(["large", "medium", "small"]),
  startIcon: import_prop_types31.default.node,
  type: import_prop_types31.default.oneOfType([import_prop_types31.default.oneOf(["button", "reset", "submit"]), import_prop_types31.default.string]),
  variant: import_prop_types31.default.oneOf(["contained", "outlined", "text"])
} : void 0;
var Button_default = withStyles_default2(styles26, {
  name: "MuiButton"
})(Button);

// node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js
var import_react_is3 = __toModule(require_react_is2());
var import_prop_types32 = __toModule(require_prop_types());
import {
  Children as Children4,
  cloneElement as cloneElement3,
  createElement as createElement17,
  forwardRef as forwardRef120,
  isValidElement as isValidElement5
} from "react";
Button_default.styles;
var styles28 = function styles29(theme) {
  return {
    root: {
      display: "inline-flex",
      borderRadius: theme.shape.borderRadius
    },
    contained: {
      boxShadow: theme.shadows[2]
    },
    disableElevation: {
      boxShadow: "none"
    },
    disabled: {},
    fullWidth: {
      width: "100%"
    },
    vertical: {
      flexDirection: "column"
    },
    grouped: {
      minWidth: 40
    },
    groupedHorizontal: {
      "&:not(:first-child)": {
        borderTopLeftRadius: 0,
        borderBottomLeftRadius: 0
      },
      "&:not(:last-child)": {
        borderTopRightRadius: 0,
        borderBottomRightRadius: 0
      }
    },
    groupedVertical: {
      "&:not(:first-child)": {
        borderTopRightRadius: 0,
        borderTopLeftRadius: 0
      },
      "&:not(:last-child)": {
        borderBottomRightRadius: 0,
        borderBottomLeftRadius: 0
      }
    },
    groupedText: {},
    groupedTextHorizontal: {
      "&:not(:last-child)": {
        borderRight: "1px solid ".concat(theme.palette.type === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)")
      }
    },
    groupedTextVertical: {
      "&:not(:last-child)": {
        borderBottom: "1px solid ".concat(theme.palette.type === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)")
      }
    },
    groupedTextPrimary: {
      "&:not(:last-child)": {
        borderColor: alpha(theme.palette.primary.main, 0.5)
      }
    },
    groupedTextSecondary: {
      "&:not(:last-child)": {
        borderColor: alpha(theme.palette.secondary.main, 0.5)
      }
    },
    groupedOutlined: {},
    groupedOutlinedHorizontal: {
      "&:not(:first-child)": {
        marginLeft: -1
      },
      "&:not(:last-child)": {
        borderRightColor: "transparent"
      }
    },
    groupedOutlinedVertical: {
      "&:not(:first-child)": {
        marginTop: -1
      },
      "&:not(:last-child)": {
        borderBottomColor: "transparent"
      }
    },
    groupedOutlinedPrimary: {
      "&:hover": {
        borderColor: theme.palette.primary.main
      }
    },
    groupedOutlinedSecondary: {
      "&:hover": {
        borderColor: theme.palette.secondary.main
      }
    },
    groupedContained: {
      boxShadow: "none"
    },
    groupedContainedHorizontal: {
      "&:not(:last-child)": {
        borderRight: "1px solid ".concat(theme.palette.grey[400]),
        "&$disabled": {
          borderRight: "1px solid ".concat(theme.palette.action.disabled)
        }
      }
    },
    groupedContainedVertical: {
      "&:not(:last-child)": {
        borderBottom: "1px solid ".concat(theme.palette.grey[400]),
        "&$disabled": {
          borderBottom: "1px solid ".concat(theme.palette.action.disabled)
        }
      }
    },
    groupedContainedPrimary: {
      "&:not(:last-child)": {
        borderColor: theme.palette.primary.dark
      }
    },
    groupedContainedSecondary: {
      "&:not(:last-child)": {
        borderColor: theme.palette.secondary.dark
      }
    }
  };
};
var ButtonGroup = /* @__PURE__ */ forwardRef120(function ButtonGroup2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "default" : _props$color, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$disableElevati = props.disableElevation, disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, _props$disableRipple = props.disableRipple, disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, _props$variant = props.variant, variant = _props$variant === void 0 ? "outlined" : _props$variant, other = _objectWithoutProperties(props, ["children", "classes", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "disableRipple", "fullWidth", "orientation", "size", "variant"]);
  var buttonClassName = clsx_m_default(classes.grouped, classes["grouped".concat(capitalize(orientation))], classes["grouped".concat(capitalize(variant))], classes["grouped".concat(capitalize(variant)).concat(capitalize(orientation))], classes["grouped".concat(capitalize(variant)).concat(color2 !== "default" ? capitalize(color2) : "")], disabled3 && classes.disabled);
  return /* @__PURE__ */ createElement17(Component7, _extends({
    role: "group",
    className: clsx_m_default(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === "contained" && classes.contained, orientation === "vertical" && classes.vertical),
    ref: ref2
  }, other), Children4.map(children2, function(child) {
    if (!/* @__PURE__ */ isValidElement5(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is3.isFragment)(child)) {
        console.error(["Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return /* @__PURE__ */ cloneElement3(child, {
      className: clsx_m_default(buttonClassName, child.props.className),
      color: child.props.color || color2,
      disabled: child.props.disabled || disabled3,
      disableElevation: child.props.disableElevation || disableElevation,
      disableFocusRipple,
      disableRipple,
      fullWidth,
      size: child.props.size || size,
      variant: child.props.variant || variant
    });
  }));
});
true ? ButtonGroup.propTypes = {
  children: import_prop_types32.default.node,
  classes: import_prop_types32.default.object,
  className: import_prop_types32.default.string,
  color: import_prop_types32.default.oneOf(["default", "inherit", "primary", "secondary"]),
  component: import_prop_types32.default.elementType,
  disabled: import_prop_types32.default.bool,
  disableElevation: import_prop_types32.default.bool,
  disableFocusRipple: import_prop_types32.default.bool,
  disableRipple: import_prop_types32.default.bool,
  fullWidth: import_prop_types32.default.bool,
  orientation: import_prop_types32.default.oneOf(["horizontal", "vertical"]),
  size: import_prop_types32.default.oneOf(["large", "medium", "small"]),
  variant: import_prop_types32.default.oneOf(["contained", "outlined", "text"])
} : void 0;
var ButtonGroup_default = withStyles_default2(styles28, {
  name: "MuiButtonGroup"
})(ButtonGroup);

// node_modules/@material-ui/core/esm/Card/Card.js
var import_prop_types33 = __toModule(require_prop_types());
import {
  createElement as createElement18,
  forwardRef as forwardRef121
} from "react";
var styles30 = {
  root: {
    overflow: "hidden"
  }
};
var Card = /* @__PURE__ */ forwardRef121(function Card2(props, ref2) {
  var classes = props.classes, className = props.className, _props$raised = props.raised, raised = _props$raised === void 0 ? false : _props$raised, other = _objectWithoutProperties(props, ["classes", "className", "raised"]);
  return /* @__PURE__ */ createElement18(Paper_default, _extends({
    className: clsx_m_default(classes.root, className),
    elevation: raised ? 8 : 1,
    ref: ref2
  }, other));
});
true ? Card.propTypes = {
  children: import_prop_types33.default.node,
  classes: import_prop_types33.default.object,
  className: import_prop_types33.default.string,
  raised: import_prop_types33.default.bool
} : void 0;
var Card_default = withStyles_default2(styles30, {
  name: "MuiCard"
})(Card);

// node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js
var import_prop_types34 = __toModule(require_prop_types());
import {
  createElement as createElement19,
  forwardRef as forwardRef122
} from "react";
var styles31 = function styles32(theme) {
  return {
    root: {
      display: "block",
      textAlign: "inherit",
      width: "100%",
      "&:hover $focusHighlight": {
        opacity: theme.palette.action.hoverOpacity
      },
      "&$focusVisible $focusHighlight": {
        opacity: 0.12
      }
    },
    focusVisible: {},
    focusHighlight: {
      overflow: "hidden",
      pointerEvents: "none",
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      borderRadius: "inherit",
      opacity: 0,
      backgroundColor: "currentcolor",
      transition: theme.transitions.create("opacity", {
        duration: theme.transitions.duration.short
      })
    }
  };
};
var CardActionArea = /* @__PURE__ */ forwardRef122(function CardActionArea2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, focusVisibleClassName = props.focusVisibleClassName, other = _objectWithoutProperties(props, ["children", "classes", "className", "focusVisibleClassName"]);
  return /* @__PURE__ */ createElement19(ButtonBase_default, _extends({
    className: clsx_m_default(classes.root, className),
    focusVisibleClassName: clsx_m_default(focusVisibleClassName, classes.focusVisible),
    ref: ref2
  }, other), children2, /* @__PURE__ */ createElement19("span", {
    className: classes.focusHighlight
  }));
});
true ? CardActionArea.propTypes = {
  children: import_prop_types34.default.node,
  classes: import_prop_types34.default.object,
  className: import_prop_types34.default.string,
  focusVisibleClassName: import_prop_types34.default.string
} : void 0;
var CardActionArea_default = withStyles_default2(styles31, {
  name: "MuiCardActionArea"
})(CardActionArea);

// node_modules/@material-ui/core/esm/CardActions/CardActions.js
var import_prop_types35 = __toModule(require_prop_types());
import {
  createElement as createElement20,
  forwardRef as forwardRef123
} from "react";
var styles33 = {
  root: {
    display: "flex",
    alignItems: "center",
    padding: 8
  },
  spacing: {
    "& > :not(:first-child)": {
      marginLeft: 8
    }
  }
};
var CardActions = /* @__PURE__ */ forwardRef123(function CardActions2(props, ref2) {
  var _props$disableSpacing = props.disableSpacing, disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing, classes = props.classes, className = props.className, other = _objectWithoutProperties(props, ["disableSpacing", "classes", "className"]);
  return /* @__PURE__ */ createElement20("div", _extends({
    className: clsx_m_default(classes.root, className, !disableSpacing && classes.spacing),
    ref: ref2
  }, other));
});
true ? CardActions.propTypes = {
  children: import_prop_types35.default.node,
  classes: import_prop_types35.default.object,
  className: import_prop_types35.default.string,
  disableSpacing: import_prop_types35.default.bool
} : void 0;
var CardActions_default = withStyles_default2(styles33, {
  name: "MuiCardActions"
})(CardActions);

// node_modules/@material-ui/core/esm/CardContent/CardContent.js
var import_prop_types36 = __toModule(require_prop_types());
import {
  createElement as createElement21,
  forwardRef as forwardRef124
} from "react";
var styles34 = {
  root: {
    padding: 16,
    "&:last-child": {
      paddingBottom: 24
    }
  }
};
var CardContent = /* @__PURE__ */ forwardRef124(function CardContent2(props, ref2) {
  var classes = props.classes, className = props.className, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, other = _objectWithoutProperties(props, ["classes", "className", "component"]);
  return /* @__PURE__ */ createElement21(Component7, _extends({
    className: clsx_m_default(classes.root, className),
    ref: ref2
  }, other));
});
true ? CardContent.propTypes = {
  children: import_prop_types36.default.node,
  classes: import_prop_types36.default.object,
  className: import_prop_types36.default.string,
  component: import_prop_types36.default.elementType
} : void 0;
var CardContent_default = withStyles_default2(styles34, {
  name: "MuiCardContent"
})(CardContent);

// node_modules/@material-ui/core/esm/CardHeader/CardHeader.js
var import_prop_types37 = __toModule(require_prop_types());
import {
  createElement as createElement22,
  forwardRef as forwardRef125
} from "react";
var styles35 = {
  root: {
    display: "flex",
    alignItems: "center",
    padding: 16
  },
  avatar: {
    flex: "0 0 auto",
    marginRight: 16
  },
  action: {
    flex: "0 0 auto",
    alignSelf: "flex-start",
    marginTop: -8,
    marginRight: -8
  },
  content: {
    flex: "1 1 auto"
  },
  title: {},
  subheader: {}
};
var CardHeader = /* @__PURE__ */ forwardRef125(function CardHeader2(props, ref2) {
  var action3 = props.action, avatar3 = props.avatar, classes = props.classes, className = props.className, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, _props$disableTypogra = props.disableTypography, disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra, subheaderProp = props.subheader, subheaderTypographyProps = props.subheaderTypographyProps, titleProp = props.title, titleTypographyProps = props.titleTypographyProps, other = _objectWithoutProperties(props, ["action", "avatar", "classes", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"]);
  var title = titleProp;
  if (title != null && title.type !== Typography_default && !disableTypography) {
    title = /* @__PURE__ */ createElement22(Typography_default, _extends({
      variant: avatar3 ? "body2" : "h5",
      className: classes.title,
      component: "span",
      display: "block"
    }, titleTypographyProps), title);
  }
  var subheader = subheaderProp;
  if (subheader != null && subheader.type !== Typography_default && !disableTypography) {
    subheader = /* @__PURE__ */ createElement22(Typography_default, _extends({
      variant: avatar3 ? "body2" : "body1",
      className: classes.subheader,
      color: "textSecondary",
      component: "span",
      display: "block"
    }, subheaderTypographyProps), subheader);
  }
  return /* @__PURE__ */ createElement22(Component7, _extends({
    className: clsx_m_default(classes.root, className),
    ref: ref2
  }, other), avatar3 && /* @__PURE__ */ createElement22("div", {
    className: classes.avatar
  }, avatar3), /* @__PURE__ */ createElement22("div", {
    className: classes.content
  }, title, subheader), action3 && /* @__PURE__ */ createElement22("div", {
    className: classes.action
  }, action3));
});
true ? CardHeader.propTypes = {
  action: import_prop_types37.default.node,
  avatar: import_prop_types37.default.node,
  children: import_prop_types37.default.node,
  classes: import_prop_types37.default.object,
  className: import_prop_types37.default.string,
  component: import_prop_types37.default.elementType,
  disableTypography: import_prop_types37.default.bool,
  subheader: import_prop_types37.default.node,
  subheaderTypographyProps: import_prop_types37.default.object,
  title: import_prop_types37.default.node,
  titleTypographyProps: import_prop_types37.default.object
} : void 0;
var CardHeader_default = withStyles_default2(styles35, {
  name: "MuiCardHeader"
})(CardHeader);

// node_modules/@material-ui/core/esm/CardMedia/CardMedia.js
var import_prop_types38 = __toModule(require_prop_types());
import {
  createElement as createElement23,
  forwardRef as forwardRef126
} from "react";
var styles36 = {
  root: {
    display: "block",
    backgroundSize: "cover",
    backgroundRepeat: "no-repeat",
    backgroundPosition: "center"
  },
  media: {
    width: "100%"
  },
  img: {
    objectFit: "cover"
  }
};
var MEDIA_COMPONENTS = ["video", "audio", "picture", "iframe", "img"];
var CardMedia = /* @__PURE__ */ forwardRef126(function CardMedia2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, image = props.image, src = props.src, style3 = props.style, other = _objectWithoutProperties(props, ["children", "classes", "className", "component", "image", "src", "style"]);
  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component7) !== -1;
  var composedStyle = !isMediaComponent && image ? _extends({
    backgroundImage: 'url("'.concat(image, '")')
  }, style3) : style3;
  return /* @__PURE__ */ createElement23(Component7, _extends({
    className: clsx_m_default(classes.root, className, isMediaComponent && classes.media, "picture img".indexOf(Component7) !== -1 && classes.img),
    ref: ref2,
    style: composedStyle,
    src: isMediaComponent ? image || src : void 0
  }, other), children2);
});
true ? CardMedia.propTypes = {
  children: chainPropTypes(import_prop_types38.default.node, function(props) {
    if (!props.children && !props.image && !props.src && !props.component) {
      return new Error("Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.");
    }
    return null;
  }),
  classes: import_prop_types38.default.object,
  className: import_prop_types38.default.string,
  component: import_prop_types38.default.elementType,
  image: import_prop_types38.default.string,
  src: import_prop_types38.default.string,
  style: import_prop_types38.default.object
} : void 0;
var CardMedia_default = withStyles_default2(styles36, {
  name: "MuiCardMedia"
})(CardMedia);

// node_modules/@material-ui/core/esm/Checkbox/Checkbox.js
var import_prop_types40 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement4,
  createElement as createElement28,
  forwardRef as forwardRef128
} from "react";

// node_modules/@material-ui/core/esm/internal/SwitchBase.js
var import_prop_types39 = __toModule(require_prop_types());
import {
  createElement as createElement24,
  forwardRef as forwardRef127
} from "react";

// node_modules/@material-ui/core/esm/FormControl/useFormControl.js
import {
  useContext as useContext3
} from "react";

// node_modules/@material-ui/core/esm/FormControl/FormControlContext.js
import {
  createContext as createContext2,
  useContext as useContext2
} from "react";
var FormControlContext = createContext2();
if (true) {
  FormControlContext.displayName = "FormControlContext";
}
function useFormControl() {
  return useContext2(FormControlContext);
}
var FormControlContext_default = FormControlContext;

// node_modules/@material-ui/core/esm/FormControl/useFormControl.js
function useFormControl2() {
  return useContext3(FormControlContext_default);
}

// node_modules/@material-ui/core/esm/internal/SwitchBase.js
var styles37 = {
  root: {
    padding: 9
  },
  checked: {},
  disabled: {},
  input: {
    cursor: "inherit",
    position: "absolute",
    opacity: 0,
    width: "100%",
    height: "100%",
    top: 0,
    left: 0,
    margin: 0,
    padding: 0,
    zIndex: 1
  }
};
var SwitchBase = /* @__PURE__ */ forwardRef127(function SwitchBase2(props, ref2) {
  var autoFocus = props.autoFocus, checkedProp = props.checked, checkedIcon = props.checkedIcon, classes = props.classes, className = props.className, defaultChecked = props.defaultChecked, disabledProp = props.disabled, icon = props.icon, id3 = props.id, inputProps = props.inputProps, inputRef = props.inputRef, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, readOnly = props.readOnly, required2 = props.required, tabIndex = props.tabIndex, type3 = props.type, value = props.value, other = _objectWithoutProperties(props, ["autoFocus", "checked", "checkedIcon", "classes", "className", "defaultChecked", "disabled", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"]);
  var _useControlled = useControlled({
    controlled: checkedProp,
    default: Boolean(defaultChecked),
    name: "SwitchBase",
    state: "checked"
  }), _useControlled2 = _slicedToArray(_useControlled, 2), checked = _useControlled2[0], setCheckedState = _useControlled2[1];
  var muiFormControl = useFormControl2();
  var handleFocus = function handleFocus2(event) {
    if (onFocus) {
      onFocus(event);
    }
    if (muiFormControl && muiFormControl.onFocus) {
      muiFormControl.onFocus(event);
    }
  };
  var handleBlur = function handleBlur2(event) {
    if (onBlur) {
      onBlur(event);
    }
    if (muiFormControl && muiFormControl.onBlur) {
      muiFormControl.onBlur(event);
    }
  };
  var handleInputChange = function handleInputChange2(event) {
    var newChecked = event.target.checked;
    setCheckedState(newChecked);
    if (onChange) {
      onChange(event, newChecked);
    }
  };
  var disabled3 = disabledProp;
  if (muiFormControl) {
    if (typeof disabled3 === "undefined") {
      disabled3 = muiFormControl.disabled;
    }
  }
  var hasLabelFor = type3 === "checkbox" || type3 === "radio";
  return /* @__PURE__ */ createElement24(IconButton_default, _extends({
    component: "span",
    className: clsx_m_default(classes.root, className, checked && classes.checked, disabled3 && classes.disabled),
    disabled: disabled3,
    tabIndex: null,
    role: void 0,
    onFocus: handleFocus,
    onBlur: handleBlur,
    ref: ref2
  }, other), /* @__PURE__ */ createElement24("input", _extends({
    autoFocus,
    checked: checkedProp,
    defaultChecked,
    className: classes.input,
    disabled: disabled3,
    id: hasLabelFor && id3,
    name,
    onChange: handleInputChange,
    readOnly,
    ref: inputRef,
    required: required2,
    tabIndex,
    type: type3,
    value
  }, inputProps)), checked ? checkedIcon : icon);
});
true ? SwitchBase.propTypes = {
  autoFocus: import_prop_types39.default.bool,
  checked: import_prop_types39.default.bool,
  checkedIcon: import_prop_types39.default.node.isRequired,
  classes: import_prop_types39.default.object.isRequired,
  className: import_prop_types39.default.string,
  defaultChecked: import_prop_types39.default.bool,
  disabled: import_prop_types39.default.bool,
  icon: import_prop_types39.default.node.isRequired,
  id: import_prop_types39.default.string,
  inputProps: import_prop_types39.default.object,
  inputRef: refType_default,
  name: import_prop_types39.default.string,
  onBlur: import_prop_types39.default.func,
  onChange: import_prop_types39.default.func,
  onFocus: import_prop_types39.default.func,
  readOnly: import_prop_types39.default.bool,
  required: import_prop_types39.default.bool,
  tabIndex: import_prop_types39.default.oneOfType([import_prop_types39.default.number, import_prop_types39.default.string]),
  type: import_prop_types39.default.string.isRequired,
  value: import_prop_types39.default.any
} : void 0;
var SwitchBase_default = withStyles_default2(styles37, {
  name: "PrivateSwitchBase"
})(SwitchBase);

// node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js
import {
  createElement as createElement25
} from "react";
var CheckBoxOutlineBlank_default = createSvgIcon(/* @__PURE__ */ createElement25("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank");

// node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js
import {
  createElement as createElement26
} from "react";
var CheckBox_default = createSvgIcon(/* @__PURE__ */ createElement26("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox");

// node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js
import {
  createElement as createElement27
} from "react";
var IndeterminateCheckBox_default = createSvgIcon(/* @__PURE__ */ createElement27("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");

// node_modules/@material-ui/core/esm/Checkbox/Checkbox.js
var styles38 = function styles39(theme) {
  return {
    root: {
      color: theme.palette.text.secondary
    },
    checked: {},
    disabled: {},
    indeterminate: {},
    colorPrimary: {
      "&$checked": {
        color: theme.palette.primary.main,
        "&:hover": {
          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        }
      },
      "&$disabled": {
        color: theme.palette.action.disabled
      }
    },
    colorSecondary: {
      "&$checked": {
        color: theme.palette.secondary.main,
        "&:hover": {
          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        }
      },
      "&$disabled": {
        color: theme.palette.action.disabled
      }
    }
  };
};
var defaultCheckedIcon = /* @__PURE__ */ createElement28(CheckBox_default, null);
var defaultIcon = /* @__PURE__ */ createElement28(CheckBoxOutlineBlank_default, null);
var defaultIndeterminateIcon = /* @__PURE__ */ createElement28(IndeterminateCheckBox_default, null);
var Checkbox = /* @__PURE__ */ forwardRef128(function Checkbox2(props, ref2) {
  var _props$checkedIcon = props.checkedIcon, checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon, classes = props.classes, _props$color = props.color, color2 = _props$color === void 0 ? "secondary" : _props$color, _props$icon = props.icon, iconProp = _props$icon === void 0 ? defaultIcon : _props$icon, _props$indeterminate = props.indeterminate, indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate, _props$indeterminateI = props.indeterminateIcon, indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI, inputProps = props.inputProps, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, other = _objectWithoutProperties(props, ["checkedIcon", "classes", "color", "icon", "indeterminate", "indeterminateIcon", "inputProps", "size"]);
  var icon = indeterminate ? indeterminateIconProp : iconProp;
  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;
  return /* @__PURE__ */ createElement28(SwitchBase_default, _extends({
    type: "checkbox",
    classes: {
      root: clsx_m_default(classes.root, classes["color".concat(capitalize(color2))], indeterminate && classes.indeterminate),
      checked: classes.checked,
      disabled: classes.disabled
    },
    color: color2,
    inputProps: _extends({
      "data-indeterminate": indeterminate
    }, inputProps),
    icon: /* @__PURE__ */ cloneElement4(icon, {
      fontSize: icon.props.fontSize === void 0 && size === "small" ? size : icon.props.fontSize
    }),
    checkedIcon: /* @__PURE__ */ cloneElement4(indeterminateIcon, {
      fontSize: indeterminateIcon.props.fontSize === void 0 && size === "small" ? size : indeterminateIcon.props.fontSize
    }),
    ref: ref2
  }, other));
});
true ? Checkbox.propTypes = {
  checked: import_prop_types40.default.bool,
  checkedIcon: import_prop_types40.default.node,
  classes: import_prop_types40.default.object,
  color: import_prop_types40.default.oneOf(["default", "primary", "secondary"]),
  disabled: import_prop_types40.default.bool,
  disableRipple: import_prop_types40.default.bool,
  icon: import_prop_types40.default.node,
  id: import_prop_types40.default.string,
  indeterminate: import_prop_types40.default.bool,
  indeterminateIcon: import_prop_types40.default.node,
  inputProps: import_prop_types40.default.object,
  inputRef: refType_default,
  onChange: import_prop_types40.default.func,
  required: import_prop_types40.default.bool,
  size: import_prop_types40.default.oneOf(["medium", "small"]),
  value: import_prop_types40.default.any
} : void 0;
var Checkbox_default = withStyles_default2(styles38, {
  name: "MuiCheckbox"
})(Checkbox);

// node_modules/@material-ui/core/esm/Chip/Chip.js
var import_prop_types41 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement5,
  createElement as createElement30,
  forwardRef as forwardRef129,
  isValidElement as isValidElement6,
  useRef as useRef7
} from "react";

// node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js
import {
  createElement as createElement29
} from "react";
var Cancel_default = createSvgIcon(/* @__PURE__ */ createElement29("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");

// node_modules/@material-ui/core/esm/Chip/Chip.js
var styles40 = function styles41(theme) {
  var backgroundColor3 = theme.palette.type === "light" ? theme.palette.grey[300] : theme.palette.grey[700];
  var deleteIconColor = alpha(theme.palette.text.primary, 0.26);
  return {
    root: {
      fontFamily: theme.typography.fontFamily,
      fontSize: theme.typography.pxToRem(13),
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      height: 32,
      color: theme.palette.getContrastText(backgroundColor3),
      backgroundColor: backgroundColor3,
      borderRadius: 32 / 2,
      whiteSpace: "nowrap",
      transition: theme.transitions.create(["background-color", "box-shadow"]),
      cursor: "default",
      outline: 0,
      textDecoration: "none",
      border: "none",
      padding: 0,
      verticalAlign: "middle",
      boxSizing: "border-box",
      "&$disabled": {
        opacity: 0.5,
        pointerEvents: "none"
      },
      "& $avatar": {
        marginLeft: 5,
        marginRight: -6,
        width: 24,
        height: 24,
        color: theme.palette.type === "light" ? theme.palette.grey[700] : theme.palette.grey[300],
        fontSize: theme.typography.pxToRem(12)
      },
      "& $avatarColorPrimary": {
        color: theme.palette.primary.contrastText,
        backgroundColor: theme.palette.primary.dark
      },
      "& $avatarColorSecondary": {
        color: theme.palette.secondary.contrastText,
        backgroundColor: theme.palette.secondary.dark
      },
      "& $avatarSmall": {
        marginLeft: 4,
        marginRight: -4,
        width: 18,
        height: 18,
        fontSize: theme.typography.pxToRem(10)
      }
    },
    sizeSmall: {
      height: 24
    },
    colorPrimary: {
      backgroundColor: theme.palette.primary.main,
      color: theme.palette.primary.contrastText
    },
    colorSecondary: {
      backgroundColor: theme.palette.secondary.main,
      color: theme.palette.secondary.contrastText
    },
    disabled: {},
    clickable: {
      userSelect: "none",
      WebkitTapHighlightColor: "transparent",
      cursor: "pointer",
      "&:hover, &:focus": {
        backgroundColor: emphasize(backgroundColor3, 0.08)
      },
      "&:active": {
        boxShadow: theme.shadows[1]
      }
    },
    clickableColorPrimary: {
      "&:hover, &:focus": {
        backgroundColor: emphasize(theme.palette.primary.main, 0.08)
      }
    },
    clickableColorSecondary: {
      "&:hover, &:focus": {
        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)
      }
    },
    deletable: {
      "&:focus": {
        backgroundColor: emphasize(backgroundColor3, 0.08)
      }
    },
    deletableColorPrimary: {
      "&:focus": {
        backgroundColor: emphasize(theme.palette.primary.main, 0.2)
      }
    },
    deletableColorSecondary: {
      "&:focus": {
        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)
      }
    },
    outlined: {
      backgroundColor: "transparent",
      border: "1px solid ".concat(theme.palette.type === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"),
      "$clickable&:hover, $clickable&:focus, $deletable&:focus": {
        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity)
      },
      "& $avatar": {
        marginLeft: 4
      },
      "& $avatarSmall": {
        marginLeft: 2
      },
      "& $icon": {
        marginLeft: 4
      },
      "& $iconSmall": {
        marginLeft: 2
      },
      "& $deleteIcon": {
        marginRight: 5
      },
      "& $deleteIconSmall": {
        marginRight: 3
      }
    },
    outlinedPrimary: {
      color: theme.palette.primary.main,
      border: "1px solid ".concat(theme.palette.primary.main),
      "$clickable&:hover, $clickable&:focus, $deletable&:focus": {
        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)
      }
    },
    outlinedSecondary: {
      color: theme.palette.secondary.main,
      border: "1px solid ".concat(theme.palette.secondary.main),
      "$clickable&:hover, $clickable&:focus, $deletable&:focus": {
        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity)
      }
    },
    avatar: {},
    avatarSmall: {},
    avatarColorPrimary: {},
    avatarColorSecondary: {},
    icon: {
      color: theme.palette.type === "light" ? theme.palette.grey[700] : theme.palette.grey[300],
      marginLeft: 5,
      marginRight: -6
    },
    iconSmall: {
      width: 18,
      height: 18,
      marginLeft: 4,
      marginRight: -4
    },
    iconColorPrimary: {
      color: "inherit"
    },
    iconColorSecondary: {
      color: "inherit"
    },
    label: {
      overflow: "hidden",
      textOverflow: "ellipsis",
      paddingLeft: 12,
      paddingRight: 12,
      whiteSpace: "nowrap"
    },
    labelSmall: {
      paddingLeft: 8,
      paddingRight: 8
    },
    deleteIcon: {
      WebkitTapHighlightColor: "transparent",
      color: deleteIconColor,
      height: 22,
      width: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: alpha(deleteIconColor, 0.4)
      }
    },
    deleteIconSmall: {
      height: 16,
      width: 16,
      marginRight: 4,
      marginLeft: -4
    },
    deleteIconColorPrimary: {
      color: alpha(theme.palette.primary.contrastText, 0.7),
      "&:hover, &:active": {
        color: theme.palette.primary.contrastText
      }
    },
    deleteIconColorSecondary: {
      color: alpha(theme.palette.secondary.contrastText, 0.7),
      "&:hover, &:active": {
        color: theme.palette.secondary.contrastText
      }
    },
    deleteIconOutlinedColorPrimary: {
      color: alpha(theme.palette.primary.main, 0.7),
      "&:hover, &:active": {
        color: theme.palette.primary.main
      }
    },
    deleteIconOutlinedColorSecondary: {
      color: alpha(theme.palette.secondary.main, 0.7),
      "&:hover, &:active": {
        color: theme.palette.secondary.main
      }
    }
  };
};
function isDeleteKeyboardEvent(keyboardEvent) {
  return keyboardEvent.key === "Backspace" || keyboardEvent.key === "Delete";
}
var Chip = /* @__PURE__ */ forwardRef129(function Chip2(props, ref2) {
  var avatarProp = props.avatar, classes = props.classes, className = props.className, clickableProp = props.clickable, _props$color = props.color, color2 = _props$color === void 0 ? "default" : _props$color, ComponentProp = props.component, deleteIconProp = props.deleteIcon, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, iconProp = props.icon, label3 = props.label, onClick = props.onClick, onDelete = props.onDelete, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, _props$variant = props.variant, variant = _props$variant === void 0 ? "default" : _props$variant, other = _objectWithoutProperties(props, ["avatar", "classes", "className", "clickable", "color", "component", "deleteIcon", "disabled", "icon", "label", "onClick", "onDelete", "onKeyDown", "onKeyUp", "size", "variant"]);
  var chipRef = useRef7(null);
  var handleRef = useForkRef(chipRef, ref2);
  var handleDeleteIconClick = function handleDeleteIconClick2(event) {
    event.stopPropagation();
    if (onDelete) {
      onDelete(event);
    }
  };
  var handleKeyDown2 = function handleKeyDown3(event) {
    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {
      event.preventDefault();
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
  };
  var handleKeyUp = function handleKeyUp2(event) {
    if (event.currentTarget === event.target) {
      if (onDelete && isDeleteKeyboardEvent(event)) {
        onDelete(event);
      } else if (event.key === "Escape" && chipRef.current) {
        chipRef.current.blur();
      }
    }
    if (onKeyUp) {
      onKeyUp(event);
    }
  };
  var clickable = clickableProp !== false && onClick ? true : clickableProp;
  var small = size === "small";
  var Component7 = ComponentProp || (clickable ? ButtonBase_default : "div");
  var moreProps = Component7 === ButtonBase_default ? {
    component: "div"
  } : {};
  var deleteIcon = null;
  if (onDelete) {
    var customClasses = clsx_m_default(color2 !== "default" && (variant === "default" ? classes["deleteIconColor".concat(capitalize(color2))] : classes["deleteIconOutlinedColor".concat(capitalize(color2))]), small && classes.deleteIconSmall);
    deleteIcon = deleteIconProp && /* @__PURE__ */ isValidElement6(deleteIconProp) ? /* @__PURE__ */ cloneElement5(deleteIconProp, {
      className: clsx_m_default(deleteIconProp.props.className, classes.deleteIcon, customClasses),
      onClick: handleDeleteIconClick
    }) : /* @__PURE__ */ createElement30(Cancel_default, {
      className: clsx_m_default(classes.deleteIcon, customClasses),
      onClick: handleDeleteIconClick
    });
  }
  var avatar3 = null;
  if (avatarProp && /* @__PURE__ */ isValidElement6(avatarProp)) {
    avatar3 = /* @__PURE__ */ cloneElement5(avatarProp, {
      className: clsx_m_default(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color2 !== "default" && classes["avatarColor".concat(capitalize(color2))])
    });
  }
  var icon = null;
  if (iconProp && /* @__PURE__ */ isValidElement6(iconProp)) {
    icon = /* @__PURE__ */ cloneElement5(iconProp, {
      className: clsx_m_default(classes.icon, iconProp.props.className, small && classes.iconSmall, color2 !== "default" && classes["iconColor".concat(capitalize(color2))])
    });
  }
  if (true) {
    if (avatar3 && icon) {
      console.error("Material-UI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one.");
    }
  }
  return /* @__PURE__ */ createElement30(Component7, _extends({
    role: clickable || onDelete ? "button" : void 0,
    className: clsx_m_default(classes.root, className, color2 !== "default" && [classes["color".concat(capitalize(color2))], clickable && classes["clickableColor".concat(capitalize(color2))], onDelete && classes["deletableColor".concat(capitalize(color2))]], variant !== "default" && [classes.outlined, {
      "primary": classes.outlinedPrimary,
      "secondary": classes.outlinedSecondary
    }[color2]], disabled3 && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),
    "aria-disabled": disabled3 ? true : void 0,
    tabIndex: clickable || onDelete ? 0 : void 0,
    onClick,
    onKeyDown: handleKeyDown2,
    onKeyUp: handleKeyUp,
    ref: handleRef
  }, moreProps, other), avatar3 || icon, /* @__PURE__ */ createElement30("span", {
    className: clsx_m_default(classes.label, small && classes.labelSmall)
  }, label3), deleteIcon);
});
true ? Chip.propTypes = {
  avatar: import_prop_types41.default.element,
  children: unsupportedProp,
  classes: import_prop_types41.default.object,
  className: import_prop_types41.default.string,
  clickable: import_prop_types41.default.bool,
  color: import_prop_types41.default.oneOf(["default", "primary", "secondary"]),
  component: import_prop_types41.default.elementType,
  deleteIcon: import_prop_types41.default.element,
  disabled: import_prop_types41.default.bool,
  icon: import_prop_types41.default.element,
  label: import_prop_types41.default.node,
  onClick: import_prop_types41.default.func,
  onDelete: import_prop_types41.default.func,
  onKeyDown: import_prop_types41.default.func,
  onKeyUp: import_prop_types41.default.func,
  size: import_prop_types41.default.oneOf(["medium", "small"]),
  variant: import_prop_types41.default.oneOf(["default", "outlined"])
} : void 0;
var Chip_default = withStyles_default2(styles40, {
  name: "MuiChip"
})(Chip);

// node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js
var import_prop_types42 = __toModule(require_prop_types());
import {
  createElement as createElement31,
  forwardRef as forwardRef130
} from "react";
var SIZE = 44;
var styles42 = function styles43(theme) {
  return {
    root: {
      display: "inline-block"
    },
    static: {
      transition: theme.transitions.create("transform")
    },
    indeterminate: {
      animation: "$circular-rotate 1.4s linear infinite"
    },
    determinate: {
      transition: theme.transitions.create("transform")
    },
    colorPrimary: {
      color: theme.palette.primary.main
    },
    colorSecondary: {
      color: theme.palette.secondary.main
    },
    svg: {
      display: "block"
    },
    circle: {
      stroke: "currentColor"
    },
    circleStatic: {
      transition: theme.transitions.create("stroke-dashoffset")
    },
    circleIndeterminate: {
      animation: "$circular-dash 1.4s ease-in-out infinite",
      strokeDasharray: "80px, 200px",
      strokeDashoffset: "0px"
    },
    circleDeterminate: {
      transition: theme.transitions.create("stroke-dashoffset")
    },
    "@keyframes circular-rotate": {
      "0%": {
        transformOrigin: "50% 50%"
      },
      "100%": {
        transform: "rotate(360deg)"
      }
    },
    "@keyframes circular-dash": {
      "0%": {
        strokeDasharray: "1px, 200px",
        strokeDashoffset: "0px"
      },
      "50%": {
        strokeDasharray: "100px, 200px",
        strokeDashoffset: "-15px"
      },
      "100%": {
        strokeDasharray: "100px, 200px",
        strokeDashoffset: "-125px"
      }
    },
    circleDisableShrink: {
      animation: "none"
    }
  };
};
var CircularProgress = /* @__PURE__ */ forwardRef130(function CircularProgress2(props, ref2) {
  var classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "primary" : _props$color, _props$disableShrink = props.disableShrink, disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink, _props$size = props.size, size = _props$size === void 0 ? 40 : _props$size, style3 = props.style, _props$thickness = props.thickness, thickness = _props$thickness === void 0 ? 3.6 : _props$thickness, _props$value = props.value, value = _props$value === void 0 ? 0 : _props$value, _props$variant = props.variant, variant = _props$variant === void 0 ? "indeterminate" : _props$variant, other = _objectWithoutProperties(props, ["classes", "className", "color", "disableShrink", "size", "style", "thickness", "value", "variant"]);
  var circleStyle = {};
  var rootStyle = {};
  var rootProps = {};
  if (variant === "determinate" || variant === "static") {
    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);
    circleStyle.strokeDasharray = circumference.toFixed(3);
    rootProps["aria-valuenow"] = Math.round(value);
    circleStyle.strokeDashoffset = "".concat(((100 - value) / 100 * circumference).toFixed(3), "px");
    rootStyle.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ createElement31("div", _extends({
    className: clsx_m_default(classes.root, className, color2 !== "inherit" && classes["color".concat(capitalize(color2))], {
      "determinate": classes.determinate,
      "indeterminate": classes.indeterminate,
      "static": classes.static
    }[variant]),
    style: _extends({
      width: size,
      height: size
    }, rootStyle, style3),
    ref: ref2,
    role: "progressbar"
  }, rootProps, other), /* @__PURE__ */ createElement31("svg", {
    className: classes.svg,
    viewBox: "".concat(SIZE / 2, " ").concat(SIZE / 2, " ").concat(SIZE, " ").concat(SIZE)
  }, /* @__PURE__ */ createElement31("circle", {
    className: clsx_m_default(classes.circle, disableShrink && classes.circleDisableShrink, {
      "determinate": classes.circleDeterminate,
      "indeterminate": classes.circleIndeterminate,
      "static": classes.circleStatic
    }[variant]),
    style: circleStyle,
    cx: SIZE,
    cy: SIZE,
    r: (SIZE - thickness) / 2,
    fill: "none",
    strokeWidth: thickness
  })));
});
true ? CircularProgress.propTypes = {
  classes: import_prop_types42.default.object,
  className: import_prop_types42.default.string,
  color: import_prop_types42.default.oneOf(["inherit", "primary", "secondary"]),
  disableShrink: chainPropTypes(import_prop_types42.default.bool, function(props) {
    if (props.disableShrink && props.variant && props.variant !== "indeterminate") {
      return new Error("Material-UI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.");
    }
    return null;
  }),
  size: import_prop_types42.default.oneOfType([import_prop_types42.default.number, import_prop_types42.default.string]),
  style: import_prop_types42.default.object,
  thickness: import_prop_types42.default.number,
  value: import_prop_types42.default.number,
  variant: chainPropTypes(import_prop_types42.default.oneOf(["determinate", "indeterminate", "static"]), function(props) {
    var variant = props.variant;
    if (variant === "static") {
      throw new Error('Material-UI: `variant="static"` was deprecated. Use `variant="determinate"` instead.');
    }
    return null;
  })
} : void 0;
var CircularProgress_default = withStyles_default2(styles42, {
  name: "MuiCircularProgress",
  flip: false
})(CircularProgress);

// node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js
var import_prop_types43 = __toModule(require_prop_types());
import {
  Fragment,
  cloneElement as cloneElement6,
  createElement as createElement32,
  useCallback as useCallback6,
  useEffect as useEffect8,
  useRef as useRef8
} from "react";
import {
  findDOMNode as findDOMNode3
} from "react-dom";
function mapEventPropToEvent(eventProp) {
  return eventProp.substring(2).toLowerCase();
}
function clickedRootScrollbar(event) {
  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;
}
function ClickAwayListener(props) {
  var children2 = props.children, _props$disableReactTr = props.disableReactTree, disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr, _props$mouseEvent = props.mouseEvent, mouseEvent = _props$mouseEvent === void 0 ? "onClick" : _props$mouseEvent, onClickAway = props.onClickAway, _props$touchEvent = props.touchEvent, touchEvent = _props$touchEvent === void 0 ? "onTouchEnd" : _props$touchEvent;
  var movedRef = useRef8(false);
  var nodeRef = useRef8(null);
  var activatedRef = useRef8(false);
  var syntheticEventRef = useRef8(false);
  useEffect8(function() {
    setTimeout(function() {
      activatedRef.current = true;
    }, 0);
    return function() {
      activatedRef.current = false;
    };
  }, []);
  var handleOwnRef = useCallback6(function(instance) {
    nodeRef.current = findDOMNode3(instance);
  }, []);
  var handleRef = useForkRef(children2.ref, handleOwnRef);
  var handleClickAway = useEventCallback(function(event) {
    var insideReactTree = syntheticEventRef.current;
    syntheticEventRef.current = false;
    if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {
      return;
    }
    if (movedRef.current) {
      movedRef.current = false;
      return;
    }
    var insideDOM;
    if (event.composedPath) {
      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;
    } else {
      var doc = ownerDocument(nodeRef.current);
      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);
    }
    if (!insideDOM && (disableReactTree || !insideReactTree)) {
      onClickAway(event);
    }
  });
  var createHandleSynthetic = function createHandleSynthetic2(handlerName) {
    return function(event) {
      syntheticEventRef.current = true;
      var childrenPropsHandler = children2.props[handlerName];
      if (childrenPropsHandler) {
        childrenPropsHandler(event);
      }
    };
  };
  var childrenProps = {
    ref: handleRef
  };
  if (touchEvent !== false) {
    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);
  }
  useEffect8(function() {
    if (touchEvent !== false) {
      var mappedTouchEvent = mapEventPropToEvent(touchEvent);
      var doc = ownerDocument(nodeRef.current);
      var handleTouchMove = function handleTouchMove2() {
        movedRef.current = true;
      };
      doc.addEventListener(mappedTouchEvent, handleClickAway);
      doc.addEventListener("touchmove", handleTouchMove);
      return function() {
        doc.removeEventListener(mappedTouchEvent, handleClickAway);
        doc.removeEventListener("touchmove", handleTouchMove);
      };
    }
    return void 0;
  }, [handleClickAway, touchEvent]);
  if (mouseEvent !== false) {
    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);
  }
  useEffect8(function() {
    if (mouseEvent !== false) {
      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);
      var doc = ownerDocument(nodeRef.current);
      doc.addEventListener(mappedMouseEvent, handleClickAway);
      return function() {
        doc.removeEventListener(mappedMouseEvent, handleClickAway);
      };
    }
    return void 0;
  }, [handleClickAway, mouseEvent]);
  return /* @__PURE__ */ createElement32(Fragment, null, /* @__PURE__ */ cloneElement6(children2, childrenProps));
}
true ? ClickAwayListener.propTypes = {
  children: elementAcceptingRef_default.isRequired,
  disableReactTree: import_prop_types43.default.bool,
  mouseEvent: import_prop_types43.default.oneOf(["onClick", "onMouseDown", "onMouseUp", false]),
  onClickAway: import_prop_types43.default.func.isRequired,
  touchEvent: import_prop_types43.default.oneOf(["onTouchEnd", "onTouchStart", false])
} : void 0;
if (true) {
  ClickAwayListener["propTypes"] = exactProp(ClickAwayListener.propTypes);
}
var ClickAwayListener_default = ClickAwayListener;

// node_modules/@material-ui/core/esm/Dialog/Dialog.js
var import_prop_types48 = __toModule(require_prop_types());
import {
  createElement as createElement36,
  forwardRef as forwardRef134,
  useRef as useRef11
} from "react";

// node_modules/@material-ui/core/esm/Modal/Modal.js
var import_prop_types47 = __toModule(require_prop_types());
import {
  Component as Component2,
  cloneElement as cloneElement9,
  createElement as createElement35,
  forwardRef as forwardRef133,
  useCallback as useCallback8,
  useEffect as useEffect11,
  useRef as useRef10,
  useState as useState7
} from "react";
import {
  findDOMNode as findDOMNode6
} from "react-dom";

// node_modules/@material-ui/core/esm/Portal/Portal.js
var import_prop_types44 = __toModule(require_prop_types());
import {
  Component,
  cloneElement as cloneElement7,
  forwardRef as forwardRef131,
  isValidElement as isValidElement7,
  useEffect as useEffect9,
  useLayoutEffect as useLayoutEffect3,
  useState as useState6
} from "react";
import {
  createPortal,
  findDOMNode as findDOMNode4
} from "react-dom";
function getContainer(container) {
  container = typeof container === "function" ? container() : container;
  return findDOMNode4(container);
}
var useEnhancedEffect3 = typeof window !== "undefined" ? useLayoutEffect3 : useEffect9;
var Portal = /* @__PURE__ */ forwardRef131(function Portal2(props, ref2) {
  var children2 = props.children, container = props.container, _props$disablePortal = props.disablePortal, disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal, onRendered = props.onRendered;
  var _React$useState = useState6(null), mountNode = _React$useState[0], setMountNode = _React$useState[1];
  var handleRef = useForkRef(/* @__PURE__ */ isValidElement7(children2) ? children2.ref : null, ref2);
  useEnhancedEffect3(function() {
    if (!disablePortal) {
      setMountNode(getContainer(container) || document.body);
    }
  }, [container, disablePortal]);
  useEnhancedEffect3(function() {
    if (mountNode && !disablePortal) {
      setRef(ref2, mountNode);
      return function() {
        setRef(ref2, null);
      };
    }
    return void 0;
  }, [ref2, mountNode, disablePortal]);
  useEnhancedEffect3(function() {
    if (onRendered && (mountNode || disablePortal)) {
      onRendered();
    }
  }, [onRendered, mountNode, disablePortal]);
  if (disablePortal) {
    if (/* @__PURE__ */ isValidElement7(children2)) {
      return /* @__PURE__ */ cloneElement7(children2, {
        ref: handleRef
      });
    }
    return children2;
  }
  return mountNode ? /* @__PURE__ */ createPortal(children2, mountNode) : mountNode;
});
true ? Portal.propTypes = {
  children: import_prop_types44.default.node,
  container: import_prop_types44.default.oneOfType([HTMLElementType, import_prop_types44.default.instanceOf(Component), import_prop_types44.default.func]),
  disablePortal: import_prop_types44.default.bool,
  onRendered: deprecatedPropType(import_prop_types44.default.func, "Use the ref instead.")
} : void 0;
if (true) {
  Portal["propTypes"] = exactProp(Portal.propTypes);
}
var Portal_default = Portal;

// node_modules/@material-ui/core/esm/utils/getScrollbarSize.js
function getScrollbarSize() {
  var scrollDiv = document.createElement("div");
  scrollDiv.style.width = "99px";
  scrollDiv.style.height = "99px";
  scrollDiv.style.position = "absolute";
  scrollDiv.style.top = "-9999px";
  scrollDiv.style.overflow = "scroll";
  document.body.appendChild(scrollDiv);
  var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  document.body.removeChild(scrollDiv);
  return scrollbarSize;
}

// node_modules/@material-ui/core/esm/Modal/ModalManager.js
function isOverflowing(container) {
  var doc = ownerDocument(container);
  if (doc.body === container) {
    return ownerWindow(doc).innerWidth > doc.documentElement.clientWidth;
  }
  return container.scrollHeight > container.clientHeight;
}
function ariaHidden(node4, show) {
  if (show) {
    node4.setAttribute("aria-hidden", "true");
  } else {
    node4.removeAttribute("aria-hidden");
  }
}
function getPaddingRight(node4) {
  return parseInt(window.getComputedStyle(node4)["padding-right"], 10) || 0;
}
function ariaHiddenSiblings(container, mountNode, currentNode) {
  var nodesToExclude = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
  var show = arguments.length > 4 ? arguments[4] : void 0;
  var blacklist = [mountNode, currentNode].concat(_toConsumableArray(nodesToExclude));
  var blacklistTagNames = ["TEMPLATE", "SCRIPT", "STYLE"];
  [].forEach.call(container.children, function(node4) {
    if (node4.nodeType === 1 && blacklist.indexOf(node4) === -1 && blacklistTagNames.indexOf(node4.tagName) === -1) {
      ariaHidden(node4, show);
    }
  });
}
function findIndexOf(containerInfo, callback) {
  var idx = -1;
  containerInfo.some(function(item, index4) {
    if (callback(item)) {
      idx = index4;
      return true;
    }
    return false;
  });
  return idx;
}
function handleContainer(containerInfo, props) {
  var restoreStyle = [];
  var restorePaddings = [];
  var container = containerInfo.container;
  var fixedNodes;
  if (!props.disableScrollLock) {
    if (isOverflowing(container)) {
      var scrollbarSize = getScrollbarSize();
      restoreStyle.push({
        value: container.style.paddingRight,
        key: "padding-right",
        el: container
      });
      container.style["padding-right"] = "".concat(getPaddingRight(container) + scrollbarSize, "px");
      fixedNodes = ownerDocument(container).querySelectorAll(".mui-fixed");
      [].forEach.call(fixedNodes, function(node4) {
        restorePaddings.push(node4.style.paddingRight);
        node4.style.paddingRight = "".concat(getPaddingRight(node4) + scrollbarSize, "px");
      });
    }
    var parent = container.parentElement;
    var scrollContainer2 = parent.nodeName === "HTML" && window.getComputedStyle(parent)["overflow-y"] === "scroll" ? parent : container;
    restoreStyle.push({
      value: scrollContainer2.style.overflow,
      key: "overflow",
      el: scrollContainer2
    });
    scrollContainer2.style.overflow = "hidden";
  }
  var restore = function restore2() {
    if (fixedNodes) {
      [].forEach.call(fixedNodes, function(node4, i2) {
        if (restorePaddings[i2]) {
          node4.style.paddingRight = restorePaddings[i2];
        } else {
          node4.style.removeProperty("padding-right");
        }
      });
    }
    restoreStyle.forEach(function(_ref6) {
      var value = _ref6.value, el2 = _ref6.el, key = _ref6.key;
      if (value) {
        el2.style.setProperty(key, value);
      } else {
        el2.style.removeProperty(key);
      }
    });
  };
  return restore;
}
function getHiddenSiblings(container) {
  var hiddenSiblings = [];
  [].forEach.call(container.children, function(node4) {
    if (node4.getAttribute && node4.getAttribute("aria-hidden") === "true") {
      hiddenSiblings.push(node4);
    }
  });
  return hiddenSiblings;
}
var ModalManager = /* @__PURE__ */ function() {
  function ModalManager2() {
    _classCallCheck(this, ModalManager2);
    this.modals = [];
    this.containers = [];
  }
  _createClass(ModalManager2, [{
    key: "add",
    value: function add3(modal2, container) {
      var modalIndex = this.modals.indexOf(modal2);
      if (modalIndex !== -1) {
        return modalIndex;
      }
      modalIndex = this.modals.length;
      this.modals.push(modal2);
      if (modal2.modalRef) {
        ariaHidden(modal2.modalRef, false);
      }
      var hiddenSiblingNodes = getHiddenSiblings(container);
      ariaHiddenSiblings(container, modal2.mountNode, modal2.modalRef, hiddenSiblingNodes, true);
      var containerIndex = findIndexOf(this.containers, function(item) {
        return item.container === container;
      });
      if (containerIndex !== -1) {
        this.containers[containerIndex].modals.push(modal2);
        return modalIndex;
      }
      this.containers.push({
        modals: [modal2],
        container,
        restore: null,
        hiddenSiblingNodes
      });
      return modalIndex;
    }
  }, {
    key: "mount",
    value: function mount(modal2, props) {
      var containerIndex = findIndexOf(this.containers, function(item) {
        return item.modals.indexOf(modal2) !== -1;
      });
      var containerInfo = this.containers[containerIndex];
      if (!containerInfo.restore) {
        containerInfo.restore = handleContainer(containerInfo, props);
      }
    }
  }, {
    key: "remove",
    value: function remove2(modal2) {
      var modalIndex = this.modals.indexOf(modal2);
      if (modalIndex === -1) {
        return modalIndex;
      }
      var containerIndex = findIndexOf(this.containers, function(item) {
        return item.modals.indexOf(modal2) !== -1;
      });
      var containerInfo = this.containers[containerIndex];
      containerInfo.modals.splice(containerInfo.modals.indexOf(modal2), 1);
      this.modals.splice(modalIndex, 1);
      if (containerInfo.modals.length === 0) {
        if (containerInfo.restore) {
          containerInfo.restore();
        }
        if (modal2.modalRef) {
          ariaHidden(modal2.modalRef, true);
        }
        ariaHiddenSiblings(containerInfo.container, modal2.mountNode, modal2.modalRef, containerInfo.hiddenSiblingNodes, false);
        this.containers.splice(containerIndex, 1);
      } else {
        var nextTop = containerInfo.modals[containerInfo.modals.length - 1];
        if (nextTop.modalRef) {
          ariaHidden(nextTop.modalRef, false);
        }
      }
      return modalIndex;
    }
  }, {
    key: "isTopModal",
    value: function isTopModal(modal2) {
      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal2;
    }
  }]);
  return ModalManager2;
}();

// node_modules/@material-ui/core/esm/Unstable_TrapFocus/Unstable_TrapFocus.js
var import_prop_types45 = __toModule(require_prop_types());
import {
  Fragment as Fragment2,
  cloneElement as cloneElement8,
  createElement as createElement33,
  useCallback as useCallback7,
  useEffect as useEffect10,
  useRef as useRef9
} from "react";
import {
  findDOMNode as findDOMNode5
} from "react-dom";
function Unstable_TrapFocus(props) {
  var children2 = props.children, _props$disableAutoFoc = props.disableAutoFocus, disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc, _props$disableEnforce = props.disableEnforceFocus, disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce, _props$disableRestore = props.disableRestoreFocus, disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore, getDoc = props.getDoc, isEnabled = props.isEnabled, open = props.open;
  var ignoreNextEnforceFocus = useRef9();
  var sentinelStart = useRef9(null);
  var sentinelEnd = useRef9(null);
  var nodeToRestore = useRef9();
  var rootRef = useRef9(null);
  var handleOwnRef = useCallback7(function(instance) {
    rootRef.current = findDOMNode5(instance);
  }, []);
  var handleRef = useForkRef(children2.ref, handleOwnRef);
  var prevOpenRef = useRef9();
  useEffect10(function() {
    prevOpenRef.current = open;
  }, [open]);
  if (!prevOpenRef.current && open && typeof window !== "undefined") {
    nodeToRestore.current = getDoc().activeElement;
  }
  useEffect10(function() {
    if (!open) {
      return;
    }
    var doc = ownerDocument(rootRef.current);
    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {
      if (!rootRef.current.hasAttribute("tabIndex")) {
        if (true) {
          console.error(["Material-UI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join("\n"));
        }
        rootRef.current.setAttribute("tabIndex", -1);
      }
      rootRef.current.focus();
    }
    var contain = function contain2() {
      var rootElement = rootRef.current;
      if (rootElement === null) {
        return;
      }
      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {
        ignoreNextEnforceFocus.current = false;
        return;
      }
      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {
        rootRef.current.focus();
      }
    };
    var loopFocus = function loopFocus2(event) {
      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {
        return;
      }
      if (doc.activeElement === rootRef.current) {
        ignoreNextEnforceFocus.current = true;
        if (event.shiftKey) {
          sentinelEnd.current.focus();
        } else {
          sentinelStart.current.focus();
        }
      }
    };
    doc.addEventListener("focus", contain, true);
    doc.addEventListener("keydown", loopFocus, true);
    var interval = setInterval(function() {
      contain();
    }, 50);
    return function() {
      clearInterval(interval);
      doc.removeEventListener("focus", contain, true);
      doc.removeEventListener("keydown", loopFocus, true);
      if (!disableRestoreFocus) {
        if (nodeToRestore.current && nodeToRestore.current.focus) {
          nodeToRestore.current.focus();
        }
        nodeToRestore.current = null;
      }
    };
  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);
  return /* @__PURE__ */ createElement33(Fragment2, null, /* @__PURE__ */ createElement33("div", {
    tabIndex: 0,
    ref: sentinelStart,
    "data-test": "sentinelStart"
  }), /* @__PURE__ */ cloneElement8(children2, {
    ref: handleRef
  }), /* @__PURE__ */ createElement33("div", {
    tabIndex: 0,
    ref: sentinelEnd,
    "data-test": "sentinelEnd"
  }));
}
true ? Unstable_TrapFocus.propTypes = {
  children: import_prop_types45.default.node,
  disableAutoFocus: import_prop_types45.default.bool,
  disableEnforceFocus: import_prop_types45.default.bool,
  disableRestoreFocus: import_prop_types45.default.bool,
  getDoc: import_prop_types45.default.func.isRequired,
  isEnabled: import_prop_types45.default.func.isRequired,
  open: import_prop_types45.default.bool.isRequired
} : void 0;
if (true) {
  Unstable_TrapFocus["propTypes"] = exactProp(Unstable_TrapFocus.propTypes);
}
var Unstable_TrapFocus_default = Unstable_TrapFocus;

// node_modules/@material-ui/core/esm/Modal/SimpleBackdrop.js
var import_prop_types46 = __toModule(require_prop_types());
import {
  createElement as createElement34,
  forwardRef as forwardRef132
} from "react";
var styles44 = {
  root: {
    zIndex: -1,
    position: "fixed",
    right: 0,
    bottom: 0,
    top: 0,
    left: 0,
    backgroundColor: "rgba(0, 0, 0, 0.5)",
    WebkitTapHighlightColor: "transparent"
  },
  invisible: {
    backgroundColor: "transparent"
  }
};
var SimpleBackdrop = /* @__PURE__ */ forwardRef132(function SimpleBackdrop2(props, ref2) {
  var _props$invisible = props.invisible, invisible = _props$invisible === void 0 ? false : _props$invisible, open = props.open, other = _objectWithoutProperties(props, ["invisible", "open"]);
  return open ? /* @__PURE__ */ createElement34("div", _extends({
    "aria-hidden": true,
    ref: ref2
  }, other, {
    style: _extends({}, styles44.root, invisible ? styles44.invisible : {}, other.style)
  })) : null;
});
true ? SimpleBackdrop.propTypes = {
  invisible: import_prop_types46.default.bool,
  open: import_prop_types46.default.bool.isRequired
} : void 0;
var SimpleBackdrop_default = SimpleBackdrop;

// node_modules/@material-ui/core/esm/Modal/Modal.js
function getContainer2(container) {
  container = typeof container === "function" ? container() : container;
  return findDOMNode6(container);
}
function getHasTransition(props) {
  return props.children ? props.children.props.hasOwnProperty("in") : false;
}
var defaultManager = new ModalManager();
var styles45 = function styles46(theme) {
  return {
    root: {
      position: "fixed",
      zIndex: theme.zIndex.modal,
      right: 0,
      bottom: 0,
      top: 0,
      left: 0
    },
    hidden: {
      visibility: "hidden"
    }
  };
};
var Modal = /* @__PURE__ */ forwardRef133(function Modal2(inProps, ref2) {
  var theme = useTheme();
  var props = getThemeProps({
    name: "MuiModal",
    props: _extends({}, inProps),
    theme
  });
  var _props$BackdropCompon = props.BackdropComponent, BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop_default : _props$BackdropCompon, BackdropProps = props.BackdropProps, children2 = props.children, _props$closeAfterTran = props.closeAfterTransition, closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran, container = props.container, _props$disableAutoFoc = props.disableAutoFocus, disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc, _props$disableBackdro = props.disableBackdropClick, disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro, _props$disableEnforce = props.disableEnforceFocus, disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce, _props$disableEscapeK = props.disableEscapeKeyDown, disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK, _props$disablePortal = props.disablePortal, disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal, _props$disableRestore = props.disableRestoreFocus, disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore, _props$disableScrollL = props.disableScrollLock, disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL, _props$hideBackdrop = props.hideBackdrop, hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop, _props$keepMounted = props.keepMounted, keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted, _props$manager = props.manager, manager = _props$manager === void 0 ? defaultManager : _props$manager, onBackdropClick = props.onBackdropClick, onClose = props.onClose, onEscapeKeyDown = props.onEscapeKeyDown, onRendered = props.onRendered, open = props.open, other = _objectWithoutProperties(props, ["BackdropComponent", "BackdropProps", "children", "closeAfterTransition", "container", "disableAutoFocus", "disableBackdropClick", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onEscapeKeyDown", "onRendered", "open"]);
  var _React$useState = useState7(true), exited = _React$useState[0], setExited = _React$useState[1];
  var modal2 = useRef10({});
  var mountNodeRef = useRef10(null);
  var modalRef = useRef10(null);
  var handleRef = useForkRef(modalRef, ref2);
  var hasTransition = getHasTransition(props);
  var getDoc = function getDoc2() {
    return ownerDocument(mountNodeRef.current);
  };
  var getModal = function getModal2() {
    modal2.current.modalRef = modalRef.current;
    modal2.current.mountNode = mountNodeRef.current;
    return modal2.current;
  };
  var handleMounted = function handleMounted2() {
    manager.mount(getModal(), {
      disableScrollLock
    });
    modalRef.current.scrollTop = 0;
  };
  var handleOpen = useEventCallback(function() {
    var resolvedContainer = getContainer2(container) || getDoc().body;
    manager.add(getModal(), resolvedContainer);
    if (modalRef.current) {
      handleMounted();
    }
  });
  var isTopModal = useCallback8(function() {
    return manager.isTopModal(getModal());
  }, [manager]);
  var handlePortalRef = useEventCallback(function(node4) {
    mountNodeRef.current = node4;
    if (!node4) {
      return;
    }
    if (onRendered) {
      onRendered();
    }
    if (open && isTopModal()) {
      handleMounted();
    } else {
      ariaHidden(modalRef.current, true);
    }
  });
  var handleClose = useCallback8(function() {
    manager.remove(getModal());
  }, [manager]);
  useEffect11(function() {
    return function() {
      handleClose();
    };
  }, [handleClose]);
  useEffect11(function() {
    if (open) {
      handleOpen();
    } else if (!hasTransition || !closeAfterTransition) {
      handleClose();
    }
  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);
  if (!keepMounted && !open && (!hasTransition || exited)) {
    return null;
  }
  var handleEnter = function handleEnter2() {
    setExited(false);
  };
  var handleExited = function handleExited2() {
    setExited(true);
    if (closeAfterTransition) {
      handleClose();
    }
  };
  var handleBackdropClick = function handleBackdropClick2(event) {
    if (event.target !== event.currentTarget) {
      return;
    }
    if (onBackdropClick) {
      onBackdropClick(event);
    }
    if (!disableBackdropClick && onClose) {
      onClose(event, "backdropClick");
    }
  };
  var handleKeyDown2 = function handleKeyDown3(event) {
    if (event.key !== "Escape" || !isTopModal()) {
      return;
    }
    if (onEscapeKeyDown) {
      onEscapeKeyDown(event);
    }
    if (!disableEscapeKeyDown) {
      event.stopPropagation();
      if (onClose) {
        onClose(event, "escapeKeyDown");
      }
    }
  };
  var inlineStyle = styles45(theme || {
    zIndex: zIndex_default
  });
  var childProps = {};
  if (children2.props.tabIndex === void 0) {
    childProps.tabIndex = children2.props.tabIndex || "-1";
  }
  if (hasTransition) {
    childProps.onEnter = createChainedFunction(handleEnter, children2.props.onEnter);
    childProps.onExited = createChainedFunction(handleExited, children2.props.onExited);
  }
  return /* @__PURE__ */ createElement35(Portal_default, {
    ref: handlePortalRef,
    container,
    disablePortal
  }, /* @__PURE__ */ createElement35("div", _extends({
    ref: handleRef,
    onKeyDown: handleKeyDown2,
    role: "presentation"
  }, other, {
    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)
  }), hideBackdrop ? null : /* @__PURE__ */ createElement35(BackdropComponent, _extends({
    open,
    onClick: handleBackdropClick
  }, BackdropProps)), /* @__PURE__ */ createElement35(Unstable_TrapFocus_default, {
    disableEnforceFocus,
    disableAutoFocus,
    disableRestoreFocus,
    getDoc,
    isEnabled: isTopModal,
    open
  }, /* @__PURE__ */ cloneElement9(children2, childProps))));
});
true ? Modal.propTypes = {
  BackdropComponent: import_prop_types47.default.elementType,
  BackdropProps: import_prop_types47.default.object,
  children: elementAcceptingRef_default.isRequired,
  closeAfterTransition: import_prop_types47.default.bool,
  container: import_prop_types47.default.oneOfType([HTMLElementType, import_prop_types47.default.instanceOf(Component2), import_prop_types47.default.func]),
  disableAutoFocus: import_prop_types47.default.bool,
  disableBackdropClick: deprecatedPropType(import_prop_types47.default.bool, "Use the onClose prop with the `reason` argument to filter the `backdropClick` events."),
  disableEnforceFocus: import_prop_types47.default.bool,
  disableEscapeKeyDown: import_prop_types47.default.bool,
  disablePortal: import_prop_types47.default.bool,
  disableRestoreFocus: import_prop_types47.default.bool,
  disableScrollLock: import_prop_types47.default.bool,
  hideBackdrop: import_prop_types47.default.bool,
  keepMounted: import_prop_types47.default.bool,
  manager: import_prop_types47.default.object,
  onBackdropClick: deprecatedPropType(import_prop_types47.default.func, "Use the onClose prop with the `reason` argument to handle the `backdropClick` events."),
  onClose: import_prop_types47.default.func,
  onEscapeKeyDown: deprecatedPropType(import_prop_types47.default.func, "Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events."),
  onRendered: deprecatedPropType(import_prop_types47.default.func, "Use the ref instead."),
  open: import_prop_types47.default.bool.isRequired
} : void 0;
var Modal_default = Modal;

// node_modules/@material-ui/core/esm/Dialog/Dialog.js
var styles47 = function styles48(theme) {
  return {
    root: {
      "@media print": {
        position: "absolute !important"
      }
    },
    scrollPaper: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    },
    scrollBody: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&:after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    },
    container: {
      height: "100%",
      "@media print": {
        height: "auto"
      },
      outline: 0
    },
    paper: {
      margin: 32,
      position: "relative",
      overflowY: "auto",
      "@media print": {
        overflowY: "visible",
        boxShadow: "none"
      }
    },
    paperScrollPaper: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    },
    paperScrollBody: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "left"
    },
    paperWidthFalse: {
      maxWidth: "calc(100% - 64px)"
    },
    paperWidthXs: {
      maxWidth: Math.max(theme.breakpoints.values.xs, 444),
      "&$paperScrollBody": _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {
        maxWidth: "calc(100% - 64px)"
      })
    },
    paperWidthSm: {
      maxWidth: theme.breakpoints.values.sm,
      "&$paperScrollBody": _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {
        maxWidth: "calc(100% - 64px)"
      })
    },
    paperWidthMd: {
      maxWidth: theme.breakpoints.values.md,
      "&$paperScrollBody": _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {
        maxWidth: "calc(100% - 64px)"
      })
    },
    paperWidthLg: {
      maxWidth: theme.breakpoints.values.lg,
      "&$paperScrollBody": _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {
        maxWidth: "calc(100% - 64px)"
      })
    },
    paperWidthXl: {
      maxWidth: theme.breakpoints.values.xl,
      "&$paperScrollBody": _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {
        maxWidth: "calc(100% - 64px)"
      })
    },
    paperFullWidth: {
      width: "calc(100% - 64px)"
    },
    paperFullScreen: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      "&$paperScrollBody": {
        margin: 0,
        maxWidth: "100%"
      }
    }
  };
};
var defaultTransitionDuration = {
  enter: duration.enteringScreen,
  exit: duration.leavingScreen
};
var Dialog = /* @__PURE__ */ forwardRef134(function Dialog2(props, ref2) {
  var BackdropProps = props.BackdropProps, children2 = props.children, classes = props.classes, className = props.className, _props$disableBackdro = props.disableBackdropClick, disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro, _props$disableEscapeK = props.disableEscapeKeyDown, disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK, _props$fullScreen = props.fullScreen, fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$maxWidth = props.maxWidth, maxWidth2 = _props$maxWidth === void 0 ? "sm" : _props$maxWidth, onBackdropClick = props.onBackdropClick, onClose = props.onClose, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onEscapeKeyDown = props.onEscapeKeyDown, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, open = props.open, _props$PaperComponent = props.PaperComponent, PaperComponent = _props$PaperComponent === void 0 ? Paper_default : _props$PaperComponent, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, _props$scroll = props.scroll, scroll3 = _props$scroll === void 0 ? "paper" : _props$scroll, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Fade_default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura, TransitionProps4 = props.TransitionProps, ariaDescribedby = props["aria-describedby"], ariaLabelledby = props["aria-labelledby"], other = _objectWithoutProperties(props, ["BackdropProps", "children", "classes", "className", "disableBackdropClick", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "onEnter", "onEntered", "onEntering", "onEscapeKeyDown", "onExit", "onExited", "onExiting", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps", "aria-describedby", "aria-labelledby"]);
  var mouseDownTarget = useRef11();
  var handleMouseDown = function handleMouseDown2(event) {
    mouseDownTarget.current = event.target;
  };
  var handleBackdropClick = function handleBackdropClick2(event) {
    if (event.target !== event.currentTarget) {
      return;
    }
    if (event.target !== mouseDownTarget.current) {
      return;
    }
    mouseDownTarget.current = null;
    if (onBackdropClick) {
      onBackdropClick(event);
    }
    if (!disableBackdropClick && onClose) {
      onClose(event, "backdropClick");
    }
  };
  return /* @__PURE__ */ createElement36(Modal_default, _extends({
    className: clsx_m_default(classes.root, className),
    BackdropComponent: Backdrop_default,
    BackdropProps: _extends({
      transitionDuration
    }, BackdropProps),
    closeAfterTransition: true
  }, disableBackdropClick ? {
    disableBackdropClick
  } : {}, {
    disableEscapeKeyDown,
    onEscapeKeyDown,
    onClose,
    open,
    ref: ref2
  }, other), /* @__PURE__ */ createElement36(TransitionComponent, _extends({
    appear: true,
    in: open,
    timeout: transitionDuration,
    onEnter,
    onEntering,
    onEntered,
    onExit,
    onExiting,
    onExited,
    role: "none presentation"
  }, TransitionProps4), /* @__PURE__ */ createElement36("div", {
    className: clsx_m_default(classes.container, classes["scroll".concat(capitalize(scroll3))]),
    onMouseUp: handleBackdropClick,
    onMouseDown: handleMouseDown
  }, /* @__PURE__ */ createElement36(PaperComponent, _extends({
    elevation: 24,
    role: "dialog",
    "aria-describedby": ariaDescribedby,
    "aria-labelledby": ariaLabelledby
  }, PaperProps, {
    className: clsx_m_default(classes.paper, classes["paperScroll".concat(capitalize(scroll3))], classes["paperWidth".concat(capitalize(String(maxWidth2)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)
  }), children2))));
});
true ? Dialog.propTypes = {
  "aria-describedby": import_prop_types48.default.string,
  "aria-labelledby": import_prop_types48.default.string,
  BackdropProps: import_prop_types48.default.object,
  children: import_prop_types48.default.node,
  classes: import_prop_types48.default.object,
  className: import_prop_types48.default.string,
  disableBackdropClick: deprecatedPropType(import_prop_types48.default.bool, "Use the onClose prop with the `reason` argument to filter the `backdropClick` events."),
  disableEscapeKeyDown: import_prop_types48.default.bool,
  fullScreen: import_prop_types48.default.bool,
  fullWidth: import_prop_types48.default.bool,
  maxWidth: import_prop_types48.default.oneOf(["lg", "md", "sm", "xl", "xs", false]),
  onBackdropClick: deprecatedPropType(import_prop_types48.default.func, "Use the onClose prop with the `reason` argument to handle the `backdropClick` events."),
  onClose: import_prop_types48.default.func,
  onEnter: deprecatedPropType(import_prop_types48.default.func, "Use the `TransitionProps` prop instead."),
  onEntered: deprecatedPropType(import_prop_types48.default.func, "Use the `TransitionProps` prop instead."),
  onEntering: deprecatedPropType(import_prop_types48.default.func, "Use the `TransitionProps` prop instead."),
  onEscapeKeyDown: deprecatedPropType(import_prop_types48.default.func, "Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events."),
  onExit: deprecatedPropType(import_prop_types48.default.func, "Use the `TransitionProps` prop instead."),
  onExited: deprecatedPropType(import_prop_types48.default.func, "Use the `TransitionProps` prop instead."),
  onExiting: deprecatedPropType(import_prop_types48.default.func, "Use the `TransitionProps` prop instead."),
  open: import_prop_types48.default.bool.isRequired,
  PaperComponent: import_prop_types48.default.elementType,
  PaperProps: import_prop_types48.default.object,
  scroll: import_prop_types48.default.oneOf(["body", "paper"]),
  TransitionComponent: import_prop_types48.default.elementType,
  transitionDuration: import_prop_types48.default.oneOfType([import_prop_types48.default.number, import_prop_types48.default.shape({
    appear: import_prop_types48.default.number,
    enter: import_prop_types48.default.number,
    exit: import_prop_types48.default.number
  })]),
  TransitionProps: import_prop_types48.default.object
} : void 0;
var Dialog_default = withStyles_default2(styles47, {
  name: "MuiDialog"
})(Dialog);

// node_modules/@material-ui/core/esm/DialogActions/DialogActions.js
var import_prop_types49 = __toModule(require_prop_types());
import {
  createElement as createElement37,
  forwardRef as forwardRef135
} from "react";
var styles49 = {
  root: {
    display: "flex",
    alignItems: "center",
    padding: 8,
    justifyContent: "flex-end",
    flex: "0 0 auto"
  },
  spacing: {
    "& > :not(:first-child)": {
      marginLeft: 8
    }
  }
};
var DialogActions = /* @__PURE__ */ forwardRef135(function DialogActions2(props, ref2) {
  var _props$disableSpacing = props.disableSpacing, disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing, classes = props.classes, className = props.className, other = _objectWithoutProperties(props, ["disableSpacing", "classes", "className"]);
  return /* @__PURE__ */ createElement37("div", _extends({
    className: clsx_m_default(classes.root, className, !disableSpacing && classes.spacing),
    ref: ref2
  }, other));
});
true ? DialogActions.propTypes = {
  children: import_prop_types49.default.node,
  classes: import_prop_types49.default.object,
  className: import_prop_types49.default.string,
  disableSpacing: import_prop_types49.default.bool
} : void 0;
var DialogActions_default = withStyles_default2(styles49, {
  name: "MuiDialogActions"
})(DialogActions);

// node_modules/@material-ui/core/esm/DialogContent/DialogContent.js
var import_prop_types50 = __toModule(require_prop_types());
import {
  createElement as createElement38,
  forwardRef as forwardRef136
} from "react";
var styles50 = function styles51(theme) {
  return {
    root: {
      flex: "1 1 auto",
      WebkitOverflowScrolling: "touch",
      overflowY: "auto",
      padding: "8px 24px",
      "&:first-child": {
        paddingTop: 20
      }
    },
    dividers: {
      padding: "16px 24px",
      borderTop: "1px solid ".concat(theme.palette.divider),
      borderBottom: "1px solid ".concat(theme.palette.divider)
    }
  };
};
var DialogContent = /* @__PURE__ */ forwardRef136(function DialogContent2(props, ref2) {
  var classes = props.classes, className = props.className, _props$dividers = props.dividers, dividers = _props$dividers === void 0 ? false : _props$dividers, other = _objectWithoutProperties(props, ["classes", "className", "dividers"]);
  return /* @__PURE__ */ createElement38("div", _extends({
    className: clsx_m_default(classes.root, className, dividers && classes.dividers),
    ref: ref2
  }, other));
});
true ? DialogContent.propTypes = {
  children: import_prop_types50.default.node,
  classes: import_prop_types50.default.object,
  className: import_prop_types50.default.string,
  dividers: import_prop_types50.default.bool
} : void 0;
var DialogContent_default = withStyles_default2(styles50, {
  name: "MuiDialogContent"
})(DialogContent);

// node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js
var import_prop_types51 = __toModule(require_prop_types());
import {
  createElement as createElement39,
  forwardRef as forwardRef137
} from "react";
var styles52 = {
  root: {
    marginBottom: 12
  }
};
var DialogContentText = /* @__PURE__ */ forwardRef137(function DialogContentText2(props, ref2) {
  return /* @__PURE__ */ createElement39(Typography_default, _extends({
    component: "p",
    variant: "body1",
    color: "textSecondary",
    ref: ref2
  }, props));
});
true ? DialogContentText.propTypes = {
  children: import_prop_types51.default.node,
  classes: import_prop_types51.default.object
} : void 0;
var DialogContentText_default = withStyles_default2(styles52, {
  name: "MuiDialogContentText"
})(DialogContentText);

// node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js
var import_prop_types52 = __toModule(require_prop_types());
import {
  createElement as createElement40,
  forwardRef as forwardRef138
} from "react";
var styles53 = {
  root: {
    margin: 0,
    padding: "16px 24px",
    flex: "0 0 auto"
  }
};
var DialogTitle = /* @__PURE__ */ forwardRef138(function DialogTitle2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$disableTypogra = props.disableTypography, disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra, other = _objectWithoutProperties(props, ["children", "classes", "className", "disableTypography"]);
  return /* @__PURE__ */ createElement40("div", _extends({
    className: clsx_m_default(classes.root, className),
    ref: ref2
  }, other), disableTypography ? children2 : /* @__PURE__ */ createElement40(Typography_default, {
    component: "h2",
    variant: "h6"
  }, children2));
});
true ? DialogTitle.propTypes = {
  children: import_prop_types52.default.node,
  classes: import_prop_types52.default.object,
  className: import_prop_types52.default.string,
  disableTypography: import_prop_types52.default.bool
} : void 0;
var DialogTitle_default = withStyles_default2(styles53, {
  name: "MuiDialogTitle"
})(DialogTitle);

// node_modules/@material-ui/core/esm/Drawer/Drawer.js
var import_prop_types54 = __toModule(require_prop_types());
import {
  createElement as createElement42,
  forwardRef as forwardRef140,
  useEffect as useEffect13,
  useRef as useRef13
} from "react";

// node_modules/@material-ui/core/esm/Slide/Slide.js
var import_prop_types53 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement10,
  createElement as createElement41,
  forwardRef as forwardRef139,
  useCallback as useCallback9,
  useEffect as useEffect12,
  useRef as useRef12
} from "react";
import {
  findDOMNode as findDOMNode7
} from "react-dom";
function getTranslateValue(direction, node4) {
  var rect = node4.getBoundingClientRect();
  var transform4;
  if (node4.fakeTransform) {
    transform4 = node4.fakeTransform;
  } else {
    var computedStyle = window.getComputedStyle(node4);
    transform4 = computedStyle.getPropertyValue("-webkit-transform") || computedStyle.getPropertyValue("transform");
  }
  var offsetX = 0;
  var offsetY = 0;
  if (transform4 && transform4 !== "none" && typeof transform4 === "string") {
    var transformValues = transform4.split("(")[1].split(")")[0].split(",");
    offsetX = parseInt(transformValues[4], 10);
    offsetY = parseInt(transformValues[5], 10);
  }
  if (direction === "left") {
    return "translateX(".concat(window.innerWidth, "px) translateX(").concat(offsetX - rect.left, "px)");
  }
  if (direction === "right") {
    return "translateX(-".concat(rect.left + rect.width - offsetX, "px)");
  }
  if (direction === "up") {
    return "translateY(".concat(window.innerHeight, "px) translateY(").concat(offsetY - rect.top, "px)");
  }
  return "translateY(-".concat(rect.top + rect.height - offsetY, "px)");
}
function setTranslateValue(direction, node4) {
  var transform4 = getTranslateValue(direction, node4);
  if (transform4) {
    node4.style.webkitTransform = transform4;
    node4.style.transform = transform4;
  }
}
var defaultTimeout2 = {
  enter: duration.enteringScreen,
  exit: duration.leavingScreen
};
var Slide = /* @__PURE__ */ forwardRef139(function Slide2(props, ref2) {
  var children2 = props.children, _props$direction = props.direction, direction = _props$direction === void 0 ? "down" : _props$direction, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style3 = props.style, _props$timeout = props.timeout, timeout2 = _props$timeout === void 0 ? defaultTimeout2 : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition_default : _props$TransitionComp, other = _objectWithoutProperties(props, ["children", "direction", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"]);
  var theme = useTheme2();
  var childrenRef = useRef12(null);
  var handleOwnRef = useCallback9(function(instance) {
    childrenRef.current = findDOMNode7(instance);
  }, []);
  var handleRefIntermediary = useForkRef(children2.ref, handleOwnRef);
  var handleRef = useForkRef(handleRefIntermediary, ref2);
  var normalizedTransitionCallback = function normalizedTransitionCallback2(callback) {
    return function(isAppearing) {
      if (callback) {
        if (isAppearing === void 0) {
          callback(childrenRef.current);
        } else {
          callback(childrenRef.current, isAppearing);
        }
      }
    };
  };
  var handleEnter = normalizedTransitionCallback(function(node4, isAppearing) {
    setTranslateValue(direction, node4);
    reflow(node4);
    if (onEnter) {
      onEnter(node4, isAppearing);
    }
  });
  var handleEntering = normalizedTransitionCallback(function(node4, isAppearing) {
    var transitionProps = getTransitionProps({
      timeout: timeout2,
      style: style3
    }, {
      mode: "enter"
    });
    node4.style.webkitTransition = theme.transitions.create("-webkit-transform", _extends({}, transitionProps, {
      easing: theme.transitions.easing.easeOut
    }));
    node4.style.transition = theme.transitions.create("transform", _extends({}, transitionProps, {
      easing: theme.transitions.easing.easeOut
    }));
    node4.style.webkitTransform = "none";
    node4.style.transform = "none";
    if (onEntering) {
      onEntering(node4, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(function(node4) {
    var transitionProps = getTransitionProps({
      timeout: timeout2,
      style: style3
    }, {
      mode: "exit"
    });
    node4.style.webkitTransition = theme.transitions.create("-webkit-transform", _extends({}, transitionProps, {
      easing: theme.transitions.easing.sharp
    }));
    node4.style.transition = theme.transitions.create("transform", _extends({}, transitionProps, {
      easing: theme.transitions.easing.sharp
    }));
    setTranslateValue(direction, node4);
    if (onExit) {
      onExit(node4);
    }
  });
  var handleExited = normalizedTransitionCallback(function(node4) {
    node4.style.webkitTransition = "";
    node4.style.transition = "";
    if (onExited) {
      onExited(node4);
    }
  });
  var updatePosition = useCallback9(function() {
    if (childrenRef.current) {
      setTranslateValue(direction, childrenRef.current);
    }
  }, [direction]);
  useEffect12(function() {
    if (inProp || direction === "down" || direction === "right") {
      return void 0;
    }
    var handleResize = debounce(function() {
      if (childrenRef.current) {
        setTranslateValue(direction, childrenRef.current);
      }
    });
    window.addEventListener("resize", handleResize);
    return function() {
      handleResize.clear();
      window.removeEventListener("resize", handleResize);
    };
  }, [direction, inProp]);
  useEffect12(function() {
    if (!inProp) {
      updatePosition();
    }
  }, [inProp, updatePosition]);
  return /* @__PURE__ */ createElement41(TransitionComponent, _extends({
    nodeRef: childrenRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    appear: true,
    in: inProp,
    timeout: timeout2
  }, other), function(state, childProps) {
    return /* @__PURE__ */ cloneElement10(children2, _extends({
      ref: handleRef,
      style: _extends({
        visibility: state === "exited" && !inProp ? "hidden" : void 0
      }, style3, children2.props.style)
    }, childProps));
  });
});
true ? Slide.propTypes = {
  children: elementAcceptingRef_default,
  direction: import_prop_types53.default.oneOf(["down", "left", "right", "up"]),
  in: import_prop_types53.default.bool,
  onEnter: import_prop_types53.default.func,
  onEntered: import_prop_types53.default.func,
  onEntering: import_prop_types53.default.func,
  onExit: import_prop_types53.default.func,
  onExited: import_prop_types53.default.func,
  onExiting: import_prop_types53.default.func,
  style: import_prop_types53.default.object,
  timeout: import_prop_types53.default.oneOfType([import_prop_types53.default.number, import_prop_types53.default.shape({
    appear: import_prop_types53.default.number,
    enter: import_prop_types53.default.number,
    exit: import_prop_types53.default.number
  })])
} : void 0;
var Slide_default = Slide;

// node_modules/@material-ui/core/esm/Drawer/Drawer.js
var styles54 = function styles55(theme) {
  return {
    root: {},
    docked: {
      flex: "0 0 auto"
    },
    paper: {
      overflowY: "auto",
      display: "flex",
      flexDirection: "column",
      height: "100%",
      flex: "1 0 auto",
      zIndex: theme.zIndex.drawer,
      WebkitOverflowScrolling: "touch",
      position: "fixed",
      top: 0,
      outline: 0
    },
    paperAnchorLeft: {
      left: 0,
      right: "auto"
    },
    paperAnchorRight: {
      left: "auto",
      right: 0
    },
    paperAnchorTop: {
      top: 0,
      left: 0,
      bottom: "auto",
      right: 0,
      height: "auto",
      maxHeight: "100%"
    },
    paperAnchorBottom: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    },
    paperAnchorDockedLeft: {
      borderRight: "1px solid ".concat(theme.palette.divider)
    },
    paperAnchorDockedTop: {
      borderBottom: "1px solid ".concat(theme.palette.divider)
    },
    paperAnchorDockedRight: {
      borderLeft: "1px solid ".concat(theme.palette.divider)
    },
    paperAnchorDockedBottom: {
      borderTop: "1px solid ".concat(theme.palette.divider)
    },
    modal: {}
  };
};
var oppositeDirection = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function isHorizontal(anchor) {
  return ["left", "right"].indexOf(anchor) !== -1;
}
function getAnchor(theme, anchor) {
  return theme.direction === "rtl" && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;
}
var defaultTransitionDuration2 = {
  enter: duration.enteringScreen,
  exit: duration.leavingScreen
};
var Drawer = /* @__PURE__ */ forwardRef140(function Drawer2(props, ref2) {
  var _props$anchor = props.anchor, anchorProp = _props$anchor === void 0 ? "left" : _props$anchor, BackdropProps = props.BackdropProps, children2 = props.children, classes = props.classes, className = props.className, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 16 : _props$elevation, _props$ModalProps = props.ModalProps;
  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;
  var BackdropPropsProp = _props$ModalProps.BackdropProps, ModalProps = _objectWithoutProperties(_props$ModalProps, ["BackdropProps"]), onClose = props.onClose, _props$open = props.open, open = _props$open === void 0 ? false : _props$open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, SlideProps = props.SlideProps, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Slide_default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration2 : _props$transitionDura, _props$variant = props.variant, variant = _props$variant === void 0 ? "temporary" : _props$variant, other = _objectWithoutProperties(props, ["anchor", "BackdropProps", "children", "classes", "className", "elevation", "ModalProps", "onClose", "open", "PaperProps", "SlideProps", "TransitionComponent", "transitionDuration", "variant"]);
  var theme = useTheme2();
  var mounted = useRef13(false);
  useEffect13(function() {
    mounted.current = true;
  }, []);
  var anchor = getAnchor(theme, anchorProp);
  var drawer2 = /* @__PURE__ */ createElement42(Paper_default, _extends({
    elevation: variant === "temporary" ? elevation : 0,
    square: true
  }, PaperProps, {
    className: clsx_m_default(classes.paper, classes["paperAnchor".concat(capitalize(anchor))], PaperProps.className, variant !== "temporary" && classes["paperAnchorDocked".concat(capitalize(anchor))])
  }), children2);
  if (variant === "permanent") {
    return /* @__PURE__ */ createElement42("div", _extends({
      className: clsx_m_default(classes.root, classes.docked, className),
      ref: ref2
    }, other), drawer2);
  }
  var slidingDrawer = /* @__PURE__ */ createElement42(TransitionComponent, _extends({
    in: open,
    direction: oppositeDirection[anchor],
    timeout: transitionDuration,
    appear: mounted.current
  }, SlideProps), drawer2);
  if (variant === "persistent") {
    return /* @__PURE__ */ createElement42("div", _extends({
      className: clsx_m_default(classes.root, classes.docked, className),
      ref: ref2
    }, other), slidingDrawer);
  }
  return /* @__PURE__ */ createElement42(Modal_default, _extends({
    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {
      transitionDuration
    }),
    BackdropComponent: Backdrop_default,
    className: clsx_m_default(classes.root, classes.modal, className),
    open,
    onClose,
    ref: ref2
  }, other, ModalProps), slidingDrawer);
});
true ? Drawer.propTypes = {
  anchor: import_prop_types54.default.oneOf(["bottom", "left", "right", "top"]),
  BackdropProps: import_prop_types54.default.object,
  children: import_prop_types54.default.node,
  classes: import_prop_types54.default.object,
  className: import_prop_types54.default.string,
  elevation: import_prop_types54.default.number,
  ModalProps: import_prop_types54.default.object,
  onClose: import_prop_types54.default.func,
  open: import_prop_types54.default.bool,
  PaperProps: import_prop_types54.default.object,
  SlideProps: import_prop_types54.default.object,
  transitionDuration: import_prop_types54.default.oneOfType([import_prop_types54.default.number, import_prop_types54.default.shape({
    appear: import_prop_types54.default.number,
    enter: import_prop_types54.default.number,
    exit: import_prop_types54.default.number
  })]),
  variant: import_prop_types54.default.oneOf(["permanent", "persistent", "temporary"])
} : void 0;
var Drawer_default = withStyles_default2(styles54, {
  name: "MuiDrawer",
  flip: false
})(Drawer);

// node_modules/@material-ui/core/esm/FilledInput/FilledInput.js
var import_prop_types57 = __toModule(require_prop_types());
import {
  createElement as createElement45,
  forwardRef as forwardRef143
} from "react";

// node_modules/@material-ui/core/esm/InputBase/InputBase.js
var import_prop_types56 = __toModule(require_prop_types());
import {
  createElement as createElement44,
  forwardRef as forwardRef142,
  useCallback as useCallback11,
  useEffect as useEffect15,
  useLayoutEffect as useLayoutEffect5,
  useRef as useRef15,
  useState as useState9
} from "react";

// node_modules/@material-ui/core/esm/FormControl/formControlState.js
function formControlState(_ref6) {
  var props = _ref6.props, states = _ref6.states, muiFormControl = _ref6.muiFormControl;
  return states.reduce(function(acc, state) {
    acc[state] = props[state];
    if (muiFormControl) {
      if (typeof props[state] === "undefined") {
        acc[state] = muiFormControl[state];
      }
    }
    return acc;
  }, {});
}

// node_modules/@material-ui/core/esm/TextareaAutosize/TextareaAutosize.js
var import_prop_types55 = __toModule(require_prop_types());
import {
  Fragment as Fragment3,
  createElement as createElement43,
  forwardRef as forwardRef141,
  useCallback as useCallback10,
  useEffect as useEffect14,
  useLayoutEffect as useLayoutEffect4,
  useRef as useRef14,
  useState as useState8
} from "react";
function getStyleValue(computedStyle, property) {
  return parseInt(computedStyle[property], 10) || 0;
}
var useEnhancedEffect4 = typeof window !== "undefined" ? useLayoutEffect4 : useEffect14;
var styles56 = {
  shadow: {
    visibility: "hidden",
    position: "absolute",
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    transform: "translateZ(0)"
  }
};
var TextareaAutosize = /* @__PURE__ */ forwardRef141(function TextareaAutosize2(props, ref2) {
  var onChange = props.onChange, rows = props.rows, rowsMax = props.rowsMax, rowsMinProp = props.rowsMin, maxRowsProp = props.maxRows, _props$minRows = props.minRows, minRowsProp = _props$minRows === void 0 ? 1 : _props$minRows, style3 = props.style, value = props.value, other = _objectWithoutProperties(props, ["onChange", "rows", "rowsMax", "rowsMin", "maxRows", "minRows", "style", "value"]);
  var maxRows = maxRowsProp || rowsMax;
  var minRows = rows || rowsMinProp || minRowsProp;
  var _React$useRef = useRef14(value != null), isControlled = _React$useRef.current;
  var inputRef = useRef14(null);
  var handleRef = useForkRef(ref2, inputRef);
  var shadowRef = useRef14(null);
  var renders = useRef14(0);
  var _React$useState = useState8({}), state = _React$useState[0], setState = _React$useState[1];
  var syncHeight = useCallback10(function() {
    var input = inputRef.current;
    var computedStyle = window.getComputedStyle(input);
    var inputShallow = shadowRef.current;
    inputShallow.style.width = computedStyle.width;
    inputShallow.value = input.value || props.placeholder || "x";
    if (inputShallow.value.slice(-1) === "\n") {
      inputShallow.value += " ";
    }
    var boxSizing2 = computedStyle["box-sizing"];
    var padding = getStyleValue(computedStyle, "padding-bottom") + getStyleValue(computedStyle, "padding-top");
    var border2 = getStyleValue(computedStyle, "border-bottom-width") + getStyleValue(computedStyle, "border-top-width");
    var innerHeight = inputShallow.scrollHeight - padding;
    inputShallow.value = "x";
    var singleRowHeight = inputShallow.scrollHeight - padding;
    var outerHeight = innerHeight;
    if (minRows) {
      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
    }
    if (maxRows) {
      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
    }
    outerHeight = Math.max(outerHeight, singleRowHeight);
    var outerHeightStyle = outerHeight + (boxSizing2 === "border-box" ? padding + border2 : 0);
    var overflow2 = Math.abs(outerHeight - innerHeight) <= 1;
    setState(function(prevState) {
      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow2)) {
        renders.current += 1;
        return {
          overflow: overflow2,
          outerHeightStyle
        };
      }
      if (true) {
        if (renders.current === 20) {
          console.error(["Material-UI: Too many re-renders. The layout is unstable.", "TextareaAutosize limits the number of renders to prevent an infinite loop."].join("\n"));
        }
      }
      return prevState;
    });
  }, [maxRows, minRows, props.placeholder]);
  useEffect14(function() {
    var handleResize = debounce(function() {
      renders.current = 0;
      syncHeight();
    });
    window.addEventListener("resize", handleResize);
    return function() {
      handleResize.clear();
      window.removeEventListener("resize", handleResize);
    };
  }, [syncHeight]);
  useEnhancedEffect4(function() {
    syncHeight();
  });
  useEffect14(function() {
    renders.current = 0;
  }, [value]);
  var handleChange = function handleChange2(event) {
    renders.current = 0;
    if (!isControlled) {
      syncHeight();
    }
    if (onChange) {
      onChange(event);
    }
  };
  return /* @__PURE__ */ createElement43(Fragment3, null, /* @__PURE__ */ createElement43("textarea", _extends({
    value,
    onChange: handleChange,
    ref: handleRef,
    rows: minRows,
    style: _extends({
      height: state.outerHeightStyle,
      overflow: state.overflow ? "hidden" : null
    }, style3)
  }, other)), /* @__PURE__ */ createElement43("textarea", {
    "aria-hidden": true,
    className: props.className,
    readOnly: true,
    ref: shadowRef,
    tabIndex: -1,
    style: _extends({}, styles56.shadow, style3)
  }));
});
true ? TextareaAutosize.propTypes = {
  className: import_prop_types55.default.string,
  maxRows: import_prop_types55.default.oneOfType([import_prop_types55.default.number, import_prop_types55.default.string]),
  minRows: import_prop_types55.default.oneOfType([import_prop_types55.default.number, import_prop_types55.default.string]),
  onChange: import_prop_types55.default.func,
  placeholder: import_prop_types55.default.string,
  rows: deprecatedPropType(import_prop_types55.default.oneOfType([import_prop_types55.default.number, import_prop_types55.default.string]), "Use `minRows` instead."),
  rowsMax: deprecatedPropType(import_prop_types55.default.oneOfType([import_prop_types55.default.number, import_prop_types55.default.string]), "Use `maxRows` instead."),
  rowsMin: deprecatedPropType(import_prop_types55.default.oneOfType([import_prop_types55.default.number, import_prop_types55.default.string]), "Use `minRows` instead."),
  style: import_prop_types55.default.object,
  value: import_prop_types55.default.oneOfType([import_prop_types55.default.arrayOf(import_prop_types55.default.string), import_prop_types55.default.number, import_prop_types55.default.string])
} : void 0;
var TextareaAutosize_default = TextareaAutosize;

// node_modules/@material-ui/core/esm/InputBase/utils.js
function hasValue(value) {
  return value != null && !(Array.isArray(value) && value.length === 0);
}
function isFilled(obj) {
  var SSR = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  return obj && (hasValue(obj.value) && obj.value !== "" || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== "");
}
function isAdornedStart(obj) {
  return obj.startAdornment;
}

// node_modules/@material-ui/core/esm/InputBase/InputBase.js
var styles57 = function styles58(theme) {
  var light2 = theme.palette.type === "light";
  var placeholder2 = {
    color: "currentColor",
    opacity: light2 ? 0.42 : 0.5,
    transition: theme.transitions.create("opacity", {
      duration: theme.transitions.duration.shorter
    })
  };
  var placeholderHidden = {
    opacity: "0 !important"
  };
  var placeholderVisible = {
    opacity: light2 ? 0.42 : 0.5
  };
  return {
    "@global": {
      "@keyframes mui-auto-fill": {},
      "@keyframes mui-auto-fill-cancel": {}
    },
    root: _extends({}, theme.typography.body1, {
      color: theme.palette.text.primary,
      lineHeight: "1.1876em",
      boxSizing: "border-box",
      position: "relative",
      cursor: "text",
      display: "inline-flex",
      alignItems: "center",
      "&$disabled": {
        color: theme.palette.text.disabled,
        cursor: "default"
      }
    }),
    formControl: {},
    focused: {},
    disabled: {},
    adornedStart: {},
    adornedEnd: {},
    error: {},
    marginDense: {},
    multiline: {
      padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px"),
      "&$marginDense": {
        paddingTop: 4 - 1
      }
    },
    colorSecondary: {},
    fullWidth: {
      width: "100%"
    },
    input: {
      font: "inherit",
      letterSpacing: "inherit",
      color: "currentColor",
      padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px"),
      border: 0,
      boxSizing: "content-box",
      background: "none",
      height: "1.1876em",
      margin: 0,
      WebkitTapHighlightColor: "transparent",
      display: "block",
      minWidth: 0,
      width: "100%",
      animationName: "mui-auto-fill-cancel",
      animationDuration: "10ms",
      "&::-webkit-input-placeholder": placeholder2,
      "&::-moz-placeholder": placeholder2,
      "&:-ms-input-placeholder": placeholder2,
      "&::-ms-input-placeholder": placeholder2,
      "&:focus": {
        outline: 0
      },
      "&:invalid": {
        boxShadow: "none"
      },
      "&::-webkit-search-decoration": {
        "-webkit-appearance": "none"
      },
      "label[data-shrink=false] + $formControl &": {
        "&::-webkit-input-placeholder": placeholderHidden,
        "&::-moz-placeholder": placeholderHidden,
        "&:-ms-input-placeholder": placeholderHidden,
        "&::-ms-input-placeholder": placeholderHidden,
        "&:focus::-webkit-input-placeholder": placeholderVisible,
        "&:focus::-moz-placeholder": placeholderVisible,
        "&:focus:-ms-input-placeholder": placeholderVisible,
        "&:focus::-ms-input-placeholder": placeholderVisible
      },
      "&$disabled": {
        opacity: 1
      },
      "&:-webkit-autofill": {
        animationDuration: "5000s",
        animationName: "mui-auto-fill"
      }
    },
    inputMarginDense: {
      paddingTop: 4 - 1
    },
    inputMultiline: {
      height: "auto",
      resize: "none",
      padding: 0
    },
    inputTypeSearch: {
      "-moz-appearance": "textfield",
      "-webkit-appearance": "textfield"
    },
    inputAdornedStart: {},
    inputAdornedEnd: {},
    inputHiddenLabel: {}
  };
};
var useEnhancedEffect5 = typeof window === "undefined" ? useEffect15 : useLayoutEffect5;
var InputBase = /* @__PURE__ */ forwardRef142(function InputBase2(props, ref2) {
  var ariaDescribedby = props["aria-describedby"], autoComplete = props.autoComplete, autoFocus = props.autoFocus, classes = props.classes, className = props.className, color2 = props.color, defaultValue = props.defaultValue, disabled3 = props.disabled, endAdornment = props.endAdornment, error4 = props.error, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, id3 = props.id, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? "input" : _props$inputComponent, _props$inputProps = props.inputProps, inputPropsProp = _props$inputProps === void 0 ? {} : _props$inputProps, inputRefProp = props.inputRef, margin = props.margin, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onClick = props.onClick, onFocus = props.onFocus, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, placeholder2 = props.placeholder, readOnly = props.readOnly, renderSuffix = props.renderSuffix, rows = props.rows, rowsMax = props.rowsMax, rowsMin = props.rowsMin, maxRows = props.maxRows, minRows = props.minRows, startAdornment = props.startAdornment, _props$type = props.type, type3 = _props$type === void 0 ? "text" : _props$type, valueProp = props.value, other = _objectWithoutProperties(props, ["aria-describedby", "autoComplete", "autoFocus", "classes", "className", "color", "defaultValue", "disabled", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "rowsMax", "rowsMin", "maxRows", "minRows", "startAdornment", "type", "value"]);
  var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;
  var _React$useRef = useRef15(value != null), isControlled = _React$useRef.current;
  var inputRef = useRef15();
  var handleInputRefWarning = useCallback11(function(instance) {
    if (true) {
      if (instance && instance.nodeName !== "INPUT" && !instance.focus) {
        console.error(["Material-UI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `inputRef` prop.", "Make sure the `inputRef` prop is called with a HTMLInputElement."].join("\n"));
      }
    }
  }, []);
  var handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);
  var handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);
  var handleInputRef = useForkRef(inputRef, handleInputRefProp);
  var _React$useState = useState9(false), focused = _React$useState[0], setFocused = _React$useState[1];
  var muiFormControl = useFormControl();
  if (true) {
    useEffect15(function() {
      if (muiFormControl) {
        return muiFormControl.registerEffect();
      }
      return void 0;
    }, [muiFormControl]);
  }
  var fcs = formControlState({
    props,
    muiFormControl,
    states: ["color", "disabled", "error", "hiddenLabel", "margin", "required", "filled"]
  });
  fcs.focused = muiFormControl ? muiFormControl.focused : focused;
  useEffect15(function() {
    if (!muiFormControl && disabled3 && focused) {
      setFocused(false);
      if (onBlur) {
        onBlur();
      }
    }
  }, [muiFormControl, disabled3, focused, onBlur]);
  var onFilled = muiFormControl && muiFormControl.onFilled;
  var onEmpty = muiFormControl && muiFormControl.onEmpty;
  var checkDirty = useCallback11(function(obj) {
    if (isFilled(obj)) {
      if (onFilled) {
        onFilled();
      }
    } else if (onEmpty) {
      onEmpty();
    }
  }, [onFilled, onEmpty]);
  useEnhancedEffect5(function() {
    if (isControlled) {
      checkDirty({
        value
      });
    }
  }, [value, checkDirty, isControlled]);
  var handleFocus = function handleFocus2(event) {
    if (fcs.disabled) {
      event.stopPropagation();
      return;
    }
    if (onFocus) {
      onFocus(event);
    }
    if (inputPropsProp.onFocus) {
      inputPropsProp.onFocus(event);
    }
    if (muiFormControl && muiFormControl.onFocus) {
      muiFormControl.onFocus(event);
    } else {
      setFocused(true);
    }
  };
  var handleBlur = function handleBlur2(event) {
    if (onBlur) {
      onBlur(event);
    }
    if (inputPropsProp.onBlur) {
      inputPropsProp.onBlur(event);
    }
    if (muiFormControl && muiFormControl.onBlur) {
      muiFormControl.onBlur(event);
    } else {
      setFocused(false);
    }
  };
  var handleChange = function handleChange2(event) {
    if (!isControlled) {
      var element2 = event.target || inputRef.current;
      if (element2 == null) {
        throw new Error(true ? "Material-UI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info." : formatMuiErrorMessage(1));
      }
      checkDirty({
        value: element2.value
      });
    }
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    if (inputPropsProp.onChange) {
      inputPropsProp.onChange.apply(inputPropsProp, [event].concat(args));
    }
    if (onChange) {
      onChange.apply(void 0, [event].concat(args));
    }
  };
  useEffect15(function() {
    checkDirty(inputRef.current);
  }, []);
  var handleClick = function handleClick2(event) {
    if (inputRef.current && event.currentTarget === event.target) {
      inputRef.current.focus();
    }
    if (onClick) {
      onClick(event);
    }
  };
  var InputComponent = inputComponent;
  var inputProps = _extends({}, inputPropsProp, {
    ref: handleInputRef
  });
  if (typeof InputComponent !== "string") {
    inputProps = _extends({
      inputRef: handleInputRef,
      type: type3
    }, inputProps, {
      ref: null
    });
  } else if (multiline) {
    if (rows && !maxRows && !minRows && !rowsMax && !rowsMin) {
      InputComponent = "textarea";
    } else {
      inputProps = _extends({
        minRows: rows || minRows,
        rowsMax,
        maxRows
      }, inputProps);
      InputComponent = TextareaAutosize_default;
    }
  } else {
    inputProps = _extends({
      type: type3
    }, inputProps);
  }
  var handleAutoFill = function handleAutoFill2(event) {
    checkDirty(event.animationName === "mui-auto-fill-cancel" ? inputRef.current : {
      value: "x"
    });
  };
  useEffect15(function() {
    if (muiFormControl) {
      muiFormControl.setAdornedStart(Boolean(startAdornment));
    }
  }, [muiFormControl, startAdornment]);
  return /* @__PURE__ */ createElement44("div", _extends({
    className: clsx_m_default(classes.root, classes["color".concat(capitalize(fcs.color || "primary"))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.margin === "dense" && classes.marginDense),
    onClick: handleClick,
    ref: ref2
  }, other), startAdornment, /* @__PURE__ */ createElement44(FormControlContext_default.Provider, {
    value: null
  }, /* @__PURE__ */ createElement44(InputComponent, _extends({
    "aria-invalid": fcs.error,
    "aria-describedby": ariaDescribedby,
    autoComplete,
    autoFocus,
    defaultValue,
    disabled: fcs.disabled,
    id: id3,
    onAnimationStart: handleAutoFill,
    name,
    placeholder: placeholder2,
    readOnly,
    required: fcs.required,
    rows,
    value,
    onKeyDown,
    onKeyUp
  }, inputProps, {
    className: clsx_m_default(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type3 === "search" && classes.inputTypeSearch, fcs.margin === "dense" && classes.inputMarginDense),
    onBlur: handleBlur,
    onChange: handleChange,
    onFocus: handleFocus
  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {
    startAdornment
  })) : null);
});
true ? InputBase.propTypes = {
  "aria-describedby": import_prop_types56.default.string,
  autoComplete: import_prop_types56.default.string,
  autoFocus: import_prop_types56.default.bool,
  classes: import_prop_types56.default.object,
  className: import_prop_types56.default.string,
  color: import_prop_types56.default.oneOf(["primary", "secondary"]),
  defaultValue: import_prop_types56.default.any,
  disabled: import_prop_types56.default.bool,
  endAdornment: import_prop_types56.default.node,
  error: import_prop_types56.default.bool,
  fullWidth: import_prop_types56.default.bool,
  id: import_prop_types56.default.string,
  inputComponent: import_prop_types56.default.elementType,
  inputProps: import_prop_types56.default.object,
  inputRef: refType_default,
  margin: import_prop_types56.default.oneOf(["dense", "none"]),
  maxRows: import_prop_types56.default.oneOfType([import_prop_types56.default.number, import_prop_types56.default.string]),
  minRows: import_prop_types56.default.oneOfType([import_prop_types56.default.number, import_prop_types56.default.string]),
  multiline: import_prop_types56.default.bool,
  name: import_prop_types56.default.string,
  onBlur: import_prop_types56.default.func,
  onChange: import_prop_types56.default.func,
  onClick: import_prop_types56.default.func,
  onFocus: import_prop_types56.default.func,
  onKeyDown: import_prop_types56.default.func,
  onKeyUp: import_prop_types56.default.func,
  placeholder: import_prop_types56.default.string,
  readOnly: import_prop_types56.default.bool,
  renderSuffix: import_prop_types56.default.func,
  required: import_prop_types56.default.bool,
  rows: import_prop_types56.default.oneOfType([import_prop_types56.default.number, import_prop_types56.default.string]),
  rowsMax: import_prop_types56.default.oneOfType([import_prop_types56.default.number, import_prop_types56.default.string]),
  rowsMin: import_prop_types56.default.oneOfType([import_prop_types56.default.number, import_prop_types56.default.string]),
  startAdornment: import_prop_types56.default.node,
  type: import_prop_types56.default.string,
  value: import_prop_types56.default.any
} : void 0;
var InputBase_default = withStyles_default2(styles57, {
  name: "MuiInputBase"
})(InputBase);

// node_modules/@material-ui/core/esm/FilledInput/FilledInput.js
var styles59 = function styles60(theme) {
  var light2 = theme.palette.type === "light";
  var bottomLineColor = light2 ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  var backgroundColor3 = light2 ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.09)";
  return {
    root: {
      position: "relative",
      backgroundColor: backgroundColor3,
      borderTopLeftRadius: theme.shape.borderRadius,
      borderTopRightRadius: theme.shape.borderRadius,
      transition: theme.transitions.create("background-color", {
        duration: theme.transitions.duration.shorter,
        easing: theme.transitions.easing.easeOut
      }),
      "&:hover": {
        backgroundColor: light2 ? "rgba(0, 0, 0, 0.13)" : "rgba(255, 255, 255, 0.13)",
        "@media (hover: none)": {
          backgroundColor: backgroundColor3
        }
      },
      "&$focused": {
        backgroundColor: light2 ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.09)"
      },
      "&$disabled": {
        backgroundColor: light2 ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)"
      }
    },
    colorSecondary: {
      "&$underline:after": {
        borderBottomColor: theme.palette.secondary.main
      }
    },
    underline: {
      "&:after": {
        borderBottom: "2px solid ".concat(theme.palette.primary.main),
        left: 0,
        bottom: 0,
        content: '""',
        position: "absolute",
        right: 0,
        transform: "scaleX(0)",
        transition: theme.transitions.create("transform", {
          duration: theme.transitions.duration.shorter,
          easing: theme.transitions.easing.easeOut
        }),
        pointerEvents: "none"
      },
      "&$focused:after": {
        transform: "scaleX(1)"
      },
      "&$error:after": {
        borderBottomColor: theme.palette.error.main,
        transform: "scaleX(1)"
      },
      "&:before": {
        borderBottom: "1px solid ".concat(bottomLineColor),
        left: 0,
        bottom: 0,
        content: '"\\00a0"',
        position: "absolute",
        right: 0,
        transition: theme.transitions.create("border-bottom-color", {
          duration: theme.transitions.duration.shorter
        }),
        pointerEvents: "none"
      },
      "&:hover:before": {
        borderBottom: "1px solid ".concat(theme.palette.text.primary)
      },
      "&$disabled:before": {
        borderBottomStyle: "dotted"
      }
    },
    focused: {},
    disabled: {},
    adornedStart: {
      paddingLeft: 12
    },
    adornedEnd: {
      paddingRight: 12
    },
    error: {},
    marginDense: {},
    multiline: {
      padding: "27px 12px 10px",
      "&$marginDense": {
        paddingTop: 23,
        paddingBottom: 6
      }
    },
    input: {
      padding: "27px 12px 10px",
      "&:-webkit-autofill": {
        WebkitBoxShadow: theme.palette.type === "light" ? null : "0 0 0 100px #266798 inset",
        WebkitTextFillColor: theme.palette.type === "light" ? null : "#fff",
        caretColor: theme.palette.type === "light" ? null : "#fff",
        borderTopLeftRadius: "inherit",
        borderTopRightRadius: "inherit"
      }
    },
    inputMarginDense: {
      paddingTop: 23,
      paddingBottom: 6
    },
    inputHiddenLabel: {
      paddingTop: 18,
      paddingBottom: 19,
      "&$inputMarginDense": {
        paddingTop: 10,
        paddingBottom: 11
      }
    },
    inputMultiline: {
      padding: 0
    },
    inputAdornedStart: {
      paddingLeft: 0
    },
    inputAdornedEnd: {
      paddingRight: 0
    }
  };
};
var FilledInput = /* @__PURE__ */ forwardRef143(function FilledInput2(props, ref2) {
  var disableUnderline = props.disableUnderline, classes = props.classes, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? "input" : _props$inputComponent, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, _props$type = props.type, type3 = _props$type === void 0 ? "text" : _props$type, other = _objectWithoutProperties(props, ["disableUnderline", "classes", "fullWidth", "inputComponent", "multiline", "type"]);
  return /* @__PURE__ */ createElement45(InputBase_default, _extends({
    classes: _extends({}, classes, {
      root: clsx_m_default(classes.root, !disableUnderline && classes.underline),
      underline: null
    }),
    fullWidth,
    inputComponent,
    multiline,
    ref: ref2,
    type: type3
  }, other));
});
true ? FilledInput.propTypes = {
  autoComplete: import_prop_types57.default.string,
  autoFocus: import_prop_types57.default.bool,
  classes: import_prop_types57.default.object,
  color: import_prop_types57.default.oneOf(["primary", "secondary"]),
  defaultValue: import_prop_types57.default.any,
  disabled: import_prop_types57.default.bool,
  disableUnderline: import_prop_types57.default.bool,
  endAdornment: import_prop_types57.default.node,
  error: import_prop_types57.default.bool,
  fullWidth: import_prop_types57.default.bool,
  id: import_prop_types57.default.string,
  inputComponent: import_prop_types57.default.elementType,
  inputProps: import_prop_types57.default.object,
  inputRef: refType_default,
  margin: import_prop_types57.default.oneOf(["dense", "none"]),
  maxRows: import_prop_types57.default.oneOfType([import_prop_types57.default.number, import_prop_types57.default.string]),
  multiline: import_prop_types57.default.bool,
  name: import_prop_types57.default.string,
  onChange: import_prop_types57.default.func,
  placeholder: import_prop_types57.default.string,
  readOnly: import_prop_types57.default.bool,
  required: import_prop_types57.default.bool,
  rows: import_prop_types57.default.oneOfType([import_prop_types57.default.number, import_prop_types57.default.string]),
  startAdornment: import_prop_types57.default.node,
  type: import_prop_types57.default.string,
  value: import_prop_types57.default.any
} : void 0;
FilledInput.muiName = "Input";
var FilledInput_default = withStyles_default2(styles59, {
  name: "MuiFilledInput"
})(FilledInput);

// node_modules/@material-ui/core/esm/FormControl/FormControl.js
var import_prop_types58 = __toModule(require_prop_types());
import {
  Children as Children5,
  createElement as createElement46,
  forwardRef as forwardRef144,
  useCallback as useCallback12,
  useRef as useRef16,
  useState as useState10
} from "react";
var styles61 = {
  root: {
    display: "inline-flex",
    flexDirection: "column",
    position: "relative",
    minWidth: 0,
    padding: 0,
    margin: 0,
    border: 0,
    verticalAlign: "top"
  },
  marginNormal: {
    marginTop: 16,
    marginBottom: 8
  },
  marginDense: {
    marginTop: 8,
    marginBottom: 4
  },
  fullWidth: {
    width: "100%"
  }
};
var FormControl = /* @__PURE__ */ forwardRef144(function FormControl2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "primary" : _props$color, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$error = props.error, error4 = _props$error === void 0 ? false : _props$error, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, visuallyFocused = props.focused, _props$hiddenLabel = props.hiddenLabel, hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel, _props$margin = props.margin, margin = _props$margin === void 0 ? "none" : _props$margin, _props$required = props.required, required2 = _props$required === void 0 ? false : _props$required, size = props.size, _props$variant = props.variant, variant = _props$variant === void 0 ? "standard" : _props$variant, other = _objectWithoutProperties(props, ["children", "classes", "className", "color", "component", "disabled", "error", "fullWidth", "focused", "hiddenLabel", "margin", "required", "size", "variant"]);
  var _React$useState = useState10(function() {
    var initialAdornedStart = false;
    if (children2) {
      Children5.forEach(children2, function(child) {
        if (!isMuiElement(child, ["Input", "Select"])) {
          return;
        }
        var input = isMuiElement(child, ["Select"]) ? child.props.input : child;
        if (input && isAdornedStart(input.props)) {
          initialAdornedStart = true;
        }
      });
    }
    return initialAdornedStart;
  }), adornedStart = _React$useState[0], setAdornedStart = _React$useState[1];
  var _React$useState2 = useState10(function() {
    var initialFilled = false;
    if (children2) {
      Children5.forEach(children2, function(child) {
        if (!isMuiElement(child, ["Input", "Select"])) {
          return;
        }
        if (isFilled(child.props, true)) {
          initialFilled = true;
        }
      });
    }
    return initialFilled;
  }), filled = _React$useState2[0], setFilled = _React$useState2[1];
  var _React$useState3 = useState10(false), _focused = _React$useState3[0], setFocused = _React$useState3[1];
  var focused = visuallyFocused !== void 0 ? visuallyFocused : _focused;
  if (disabled3 && focused) {
    setFocused(false);
  }
  var registerEffect;
  if (true) {
    var registeredInput = useRef16(false);
    registerEffect = function registerEffect2() {
      if (registeredInput.current) {
        console.error(["Material-UI: There are multiple InputBase components inside a FormControl.", "This is not supported. It might cause infinite rendering loops.", "Only use one InputBase."].join("\n"));
      }
      registeredInput.current = true;
      return function() {
        registeredInput.current = false;
      };
    };
  }
  var onFilled = useCallback12(function() {
    setFilled(true);
  }, []);
  var onEmpty = useCallback12(function() {
    setFilled(false);
  }, []);
  var childContext = {
    adornedStart,
    setAdornedStart,
    color: color2,
    disabled: disabled3,
    error: error4,
    filled,
    focused,
    fullWidth,
    hiddenLabel,
    margin: (size === "small" ? "dense" : void 0) || margin,
    onBlur: function onBlur() {
      setFocused(false);
    },
    onEmpty,
    onFilled,
    onFocus: function onFocus() {
      setFocused(true);
    },
    registerEffect,
    required: required2,
    variant
  };
  return /* @__PURE__ */ createElement46(FormControlContext_default.Provider, {
    value: childContext
  }, /* @__PURE__ */ createElement46(Component7, _extends({
    className: clsx_m_default(classes.root, className, margin !== "none" && classes["margin".concat(capitalize(margin))], fullWidth && classes.fullWidth),
    ref: ref2
  }, other), children2));
});
true ? FormControl.propTypes = {
  children: import_prop_types58.default.node,
  classes: import_prop_types58.default.object,
  className: import_prop_types58.default.string,
  color: import_prop_types58.default.oneOf(["primary", "secondary"]),
  component: import_prop_types58.default.elementType,
  disabled: import_prop_types58.default.bool,
  error: import_prop_types58.default.bool,
  focused: import_prop_types58.default.bool,
  fullWidth: import_prop_types58.default.bool,
  hiddenLabel: import_prop_types58.default.bool,
  margin: import_prop_types58.default.oneOf(["dense", "none", "normal"]),
  required: import_prop_types58.default.bool,
  size: import_prop_types58.default.oneOf(["medium", "small"]),
  variant: import_prop_types58.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
var FormControl_default = withStyles_default2(styles61, {
  name: "MuiFormControl"
})(FormControl);

// node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js
var import_prop_types59 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement11,
  createElement as createElement47,
  forwardRef as forwardRef145
} from "react";
var styles62 = function styles63(theme) {
  return {
    root: {
      display: "inline-flex",
      alignItems: "center",
      cursor: "pointer",
      verticalAlign: "middle",
      WebkitTapHighlightColor: "transparent",
      marginLeft: -11,
      marginRight: 16,
      "&$disabled": {
        cursor: "default"
      }
    },
    labelPlacementStart: {
      flexDirection: "row-reverse",
      marginLeft: 16,
      marginRight: -11
    },
    labelPlacementTop: {
      flexDirection: "column-reverse",
      marginLeft: 16
    },
    labelPlacementBottom: {
      flexDirection: "column",
      marginLeft: 16
    },
    disabled: {},
    label: {
      "&$disabled": {
        color: theme.palette.text.disabled
      }
    }
  };
};
var FormControlLabel = /* @__PURE__ */ forwardRef145(function FormControlLabel2(props, ref2) {
  var checked = props.checked, classes = props.classes, className = props.className, control = props.control, disabledProp = props.disabled, inputRef = props.inputRef, label3 = props.label, _props$labelPlacement = props.labelPlacement, labelPlacement = _props$labelPlacement === void 0 ? "end" : _props$labelPlacement, name = props.name, onChange = props.onChange, value = props.value, other = _objectWithoutProperties(props, ["checked", "classes", "className", "control", "disabled", "inputRef", "label", "labelPlacement", "name", "onChange", "value"]);
  var muiFormControl = useFormControl2();
  var disabled3 = disabledProp;
  if (typeof disabled3 === "undefined" && typeof control.props.disabled !== "undefined") {
    disabled3 = control.props.disabled;
  }
  if (typeof disabled3 === "undefined" && muiFormControl) {
    disabled3 = muiFormControl.disabled;
  }
  var controlProps = {
    disabled: disabled3
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach(function(key) {
    if (typeof control.props[key] === "undefined" && typeof props[key] !== "undefined") {
      controlProps[key] = props[key];
    }
  });
  return /* @__PURE__ */ createElement47("label", _extends({
    className: clsx_m_default(classes.root, className, labelPlacement !== "end" && classes["labelPlacement".concat(capitalize(labelPlacement))], disabled3 && classes.disabled),
    ref: ref2
  }, other), /* @__PURE__ */ cloneElement11(control, controlProps), /* @__PURE__ */ createElement47(Typography_default, {
    component: "span",
    className: clsx_m_default(classes.label, disabled3 && classes.disabled)
  }, label3));
});
true ? FormControlLabel.propTypes = {
  checked: import_prop_types59.default.bool,
  classes: import_prop_types59.default.object,
  className: import_prop_types59.default.string,
  control: import_prop_types59.default.element.isRequired,
  disabled: import_prop_types59.default.bool,
  inputRef: refType_default,
  label: import_prop_types59.default.node,
  labelPlacement: import_prop_types59.default.oneOf(["bottom", "end", "start", "top"]),
  name: import_prop_types59.default.string,
  onChange: import_prop_types59.default.func,
  value: import_prop_types59.default.any
} : void 0;
var FormControlLabel_default = withStyles_default2(styles62, {
  name: "MuiFormControlLabel"
})(FormControlLabel);

// node_modules/@material-ui/core/esm/FormGroup/FormGroup.js
var import_prop_types60 = __toModule(require_prop_types());
import {
  createElement as createElement48,
  forwardRef as forwardRef146
} from "react";
var styles64 = {
  root: {
    display: "flex",
    flexDirection: "column",
    flexWrap: "wrap"
  },
  row: {
    flexDirection: "row"
  }
};
var FormGroup = /* @__PURE__ */ forwardRef146(function FormGroup2(props, ref2) {
  var classes = props.classes, className = props.className, _props$row = props.row, row = _props$row === void 0 ? false : _props$row, other = _objectWithoutProperties(props, ["classes", "className", "row"]);
  return /* @__PURE__ */ createElement48("div", _extends({
    className: clsx_m_default(classes.root, className, row && classes.row),
    ref: ref2
  }, other));
});
true ? FormGroup.propTypes = {
  children: import_prop_types60.default.node,
  classes: import_prop_types60.default.object,
  className: import_prop_types60.default.string,
  row: import_prop_types60.default.bool
} : void 0;
var FormGroup_default = withStyles_default2(styles64, {
  name: "MuiFormGroup"
})(FormGroup);

// node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js
var import_prop_types61 = __toModule(require_prop_types());
import {
  createElement as createElement49,
  forwardRef as forwardRef147
} from "react";
var styles65 = function styles66(theme) {
  return {
    root: _extends({
      color: theme.palette.text.secondary
    }, theme.typography.caption, {
      textAlign: "left",
      marginTop: 3,
      margin: 0,
      "&$disabled": {
        color: theme.palette.text.disabled
      },
      "&$error": {
        color: theme.palette.error.main
      }
    }),
    error: {},
    disabled: {},
    marginDense: {
      marginTop: 4
    },
    contained: {
      marginLeft: 14,
      marginRight: 14
    },
    focused: {},
    filled: {},
    required: {}
  };
};
var FormHelperText = /* @__PURE__ */ forwardRef147(function FormHelperText2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component7 = _props$component === void 0 ? "p" : _props$component, disabled3 = props.disabled, error4 = props.error, filled = props.filled, focused = props.focused, margin = props.margin, required2 = props.required, variant = props.variant, other = _objectWithoutProperties(props, ["children", "classes", "className", "component", "disabled", "error", "filled", "focused", "margin", "required", "variant"]);
  var muiFormControl = useFormControl2();
  var fcs = formControlState({
    props,
    muiFormControl,
    states: ["variant", "margin", "disabled", "error", "filled", "focused", "required"]
  });
  return /* @__PURE__ */ createElement49(Component7, _extends({
    className: clsx_m_default(classes.root, (fcs.variant === "filled" || fcs.variant === "outlined") && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === "dense" && classes.marginDense),
    ref: ref2
  }, other), children2 === " " ? /* @__PURE__ */ createElement49("span", {
    dangerouslySetInnerHTML: {
      __html: "&#8203;"
    }
  }) : children2);
});
true ? FormHelperText.propTypes = {
  children: import_prop_types61.default.node,
  classes: import_prop_types61.default.object,
  className: import_prop_types61.default.string,
  component: import_prop_types61.default.elementType,
  disabled: import_prop_types61.default.bool,
  error: import_prop_types61.default.bool,
  filled: import_prop_types61.default.bool,
  focused: import_prop_types61.default.bool,
  margin: import_prop_types61.default.oneOf(["dense"]),
  required: import_prop_types61.default.bool,
  variant: import_prop_types61.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
var FormHelperText_default = withStyles_default2(styles65, {
  name: "MuiFormHelperText"
})(FormHelperText);

// node_modules/@material-ui/core/esm/FormLabel/FormLabel.js
var import_prop_types62 = __toModule(require_prop_types());
import {
  createElement as createElement50,
  forwardRef as forwardRef148
} from "react";
var styles67 = function styles68(theme) {
  return {
    root: _extends({
      color: theme.palette.text.secondary
    }, theme.typography.body1, {
      lineHeight: 1,
      padding: 0,
      "&$focused": {
        color: theme.palette.primary.main
      },
      "&$disabled": {
        color: theme.palette.text.disabled
      },
      "&$error": {
        color: theme.palette.error.main
      }
    }),
    colorSecondary: {
      "&$focused": {
        color: theme.palette.secondary.main
      }
    },
    focused: {},
    disabled: {},
    error: {},
    filled: {},
    required: {},
    asterisk: {
      "&$error": {
        color: theme.palette.error.main
      }
    }
  };
};
var FormLabel = /* @__PURE__ */ forwardRef148(function FormLabel2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, color2 = props.color, _props$component = props.component, Component7 = _props$component === void 0 ? "label" : _props$component, disabled3 = props.disabled, error4 = props.error, filled = props.filled, focused = props.focused, required2 = props.required, other = _objectWithoutProperties(props, ["children", "classes", "className", "color", "component", "disabled", "error", "filled", "focused", "required"]);
  var muiFormControl = useFormControl2();
  var fcs = formControlState({
    props,
    muiFormControl,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  });
  return /* @__PURE__ */ createElement50(Component7, _extends({
    className: clsx_m_default(classes.root, classes["color".concat(capitalize(fcs.color || "primary"))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),
    ref: ref2
  }, other), children2, fcs.required && /* @__PURE__ */ createElement50("span", {
    "aria-hidden": true,
    className: clsx_m_default(classes.asterisk, fcs.error && classes.error)
  }, "\u2009", "*"));
});
true ? FormLabel.propTypes = {
  children: import_prop_types62.default.node,
  classes: import_prop_types62.default.object,
  className: import_prop_types62.default.string,
  color: import_prop_types62.default.oneOf(["primary", "secondary"]),
  component: import_prop_types62.default.elementType,
  disabled: import_prop_types62.default.bool,
  error: import_prop_types62.default.bool,
  filled: import_prop_types62.default.bool,
  focused: import_prop_types62.default.bool,
  required: import_prop_types62.default.bool
} : void 0;
var FormLabel_default = withStyles_default2(styles67, {
  name: "MuiFormLabel"
})(FormLabel);

// node_modules/@material-ui/core/esm/Grid/Grid.js
var import_prop_types63 = __toModule(require_prop_types());
import {
  createElement as createElement51,
  forwardRef as forwardRef149
} from "react";
var SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var GRID_SIZES = ["auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
function generateGrid(globalStyles, theme, breakpoint) {
  var styles158 = {};
  GRID_SIZES.forEach(function(size) {
    var key = "grid-".concat(breakpoint, "-").concat(size);
    if (size === true) {
      styles158[key] = {
        flexBasis: 0,
        flexGrow: 1,
        maxWidth: "100%"
      };
      return;
    }
    if (size === "auto") {
      styles158[key] = {
        flexBasis: "auto",
        flexGrow: 0,
        maxWidth: "none"
      };
      return;
    }
    var width2 = "".concat(Math.round(size / 12 * 1e8) / 1e6, "%");
    styles158[key] = {
      flexBasis: width2,
      flexGrow: 0,
      maxWidth: width2
    };
  });
  if (breakpoint === "xs") {
    _extends(globalStyles, styles158);
  } else {
    globalStyles[theme.breakpoints.up(breakpoint)] = styles158;
  }
}
function getOffset(val) {
  var div = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var parse3 = parseFloat(val);
  return "".concat(parse3 / div).concat(String(val).replace(String(parse3), "") || "px");
}
function generateGutter(theme, breakpoint) {
  var styles158 = {};
  SPACINGS.forEach(function(spacing4) {
    var themeSpacing = theme.spacing(spacing4);
    if (themeSpacing === 0) {
      return;
    }
    styles158["spacing-".concat(breakpoint, "-").concat(spacing4)] = {
      margin: "-".concat(getOffset(themeSpacing, 2)),
      width: "calc(100% + ".concat(getOffset(themeSpacing), ")"),
      "& > $item": {
        padding: getOffset(themeSpacing, 2)
      }
    };
  });
  return styles158;
}
var styles69 = function styles70(theme) {
  return _extends({
    root: {},
    container: {
      boxSizing: "border-box",
      display: "flex",
      flexWrap: "wrap",
      width: "100%"
    },
    item: {
      boxSizing: "border-box",
      margin: "0"
    },
    zeroMinWidth: {
      minWidth: 0
    },
    "direction-xs-column": {
      flexDirection: "column"
    },
    "direction-xs-column-reverse": {
      flexDirection: "column-reverse"
    },
    "direction-xs-row-reverse": {
      flexDirection: "row-reverse"
    },
    "wrap-xs-nowrap": {
      flexWrap: "nowrap"
    },
    "wrap-xs-wrap-reverse": {
      flexWrap: "wrap-reverse"
    },
    "align-items-xs-center": {
      alignItems: "center"
    },
    "align-items-xs-flex-start": {
      alignItems: "flex-start"
    },
    "align-items-xs-flex-end": {
      alignItems: "flex-end"
    },
    "align-items-xs-baseline": {
      alignItems: "baseline"
    },
    "align-content-xs-center": {
      alignContent: "center"
    },
    "align-content-xs-flex-start": {
      alignContent: "flex-start"
    },
    "align-content-xs-flex-end": {
      alignContent: "flex-end"
    },
    "align-content-xs-space-between": {
      alignContent: "space-between"
    },
    "align-content-xs-space-around": {
      alignContent: "space-around"
    },
    "justify-content-xs-center": {
      justifyContent: "center"
    },
    "justify-content-xs-flex-end": {
      justifyContent: "flex-end"
    },
    "justify-content-xs-space-between": {
      justifyContent: "space-between"
    },
    "justify-content-xs-space-around": {
      justifyContent: "space-around"
    },
    "justify-content-xs-space-evenly": {
      justifyContent: "space-evenly"
    }
  }, generateGutter(theme, "xs"), theme.breakpoints.keys.reduce(function(accumulator, key) {
    generateGrid(accumulator, theme, key);
    return accumulator;
  }, {}));
};
var Grid = /* @__PURE__ */ forwardRef149(function Grid2(props, ref2) {
  var _props$alignContent = props.alignContent, alignContent2 = _props$alignContent === void 0 ? "stretch" : _props$alignContent, _props$alignItems = props.alignItems, alignItems2 = _props$alignItems === void 0 ? "stretch" : _props$alignItems, classes = props.classes, classNameProp = props.className, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, _props$container = props.container, container = _props$container === void 0 ? false : _props$container, _props$direction = props.direction, direction = _props$direction === void 0 ? "row" : _props$direction, _props$item = props.item, item = _props$item === void 0 ? false : _props$item, justify = props.justify, _props$justifyContent = props.justifyContent, justifyContent2 = _props$justifyContent === void 0 ? "flex-start" : _props$justifyContent, _props$lg = props.lg, lg2 = _props$lg === void 0 ? false : _props$lg, _props$md = props.md, md2 = _props$md === void 0 ? false : _props$md, _props$sm = props.sm, sm2 = _props$sm === void 0 ? false : _props$sm, _props$spacing = props.spacing, spacing4 = _props$spacing === void 0 ? 0 : _props$spacing, _props$wrap = props.wrap, wrap = _props$wrap === void 0 ? "wrap" : _props$wrap, _props$xl = props.xl, xl2 = _props$xl === void 0 ? false : _props$xl, _props$xs = props.xs, xs = _props$xs === void 0 ? false : _props$xs, _props$zeroMinWidth = props.zeroMinWidth, zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth, other = _objectWithoutProperties(props, ["alignContent", "alignItems", "classes", "className", "component", "container", "direction", "item", "justify", "justifyContent", "lg", "md", "sm", "spacing", "wrap", "xl", "xs", "zeroMinWidth"]);
  var className = clsx_m_default(classes.root, classNameProp, container && [classes.container, spacing4 !== 0 && classes["spacing-xs-".concat(String(spacing4))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== "row" && classes["direction-xs-".concat(String(direction))], wrap !== "wrap" && classes["wrap-xs-".concat(String(wrap))], alignItems2 !== "stretch" && classes["align-items-xs-".concat(String(alignItems2))], alignContent2 !== "stretch" && classes["align-content-xs-".concat(String(alignContent2))], (justify || justifyContent2) !== "flex-start" && classes["justify-content-xs-".concat(String(justify || justifyContent2))], xs !== false && classes["grid-xs-".concat(String(xs))], sm2 !== false && classes["grid-sm-".concat(String(sm2))], md2 !== false && classes["grid-md-".concat(String(md2))], lg2 !== false && classes["grid-lg-".concat(String(lg2))], xl2 !== false && classes["grid-xl-".concat(String(xl2))]);
  return /* @__PURE__ */ createElement51(Component7, _extends({
    className,
    ref: ref2
  }, other));
});
true ? Grid.propTypes = {
  alignContent: import_prop_types63.default.oneOf(["stretch", "center", "flex-start", "flex-end", "space-between", "space-around"]),
  alignItems: import_prop_types63.default.oneOf(["flex-start", "center", "flex-end", "stretch", "baseline"]),
  children: import_prop_types63.default.node,
  classes: import_prop_types63.default.object.isRequired,
  className: import_prop_types63.default.string,
  component: import_prop_types63.default.elementType,
  container: import_prop_types63.default.bool,
  direction: import_prop_types63.default.oneOf(["row", "row-reverse", "column", "column-reverse"]),
  item: import_prop_types63.default.bool,
  justify: deprecatedPropType(import_prop_types63.default.oneOf(["flex-start", "center", "flex-end", "space-between", "space-around", "space-evenly"]), "Use `justifyContent` instead, the prop was renamed."),
  justifyContent: import_prop_types63.default.oneOf(["flex-start", "center", "flex-end", "space-between", "space-around", "space-evenly"]),
  lg: import_prop_types63.default.oneOf([false, "auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  md: import_prop_types63.default.oneOf([false, "auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  sm: import_prop_types63.default.oneOf([false, "auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  spacing: import_prop_types63.default.oneOf(SPACINGS),
  wrap: import_prop_types63.default.oneOf(["nowrap", "wrap", "wrap-reverse"]),
  xl: import_prop_types63.default.oneOf([false, "auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  xs: import_prop_types63.default.oneOf([false, "auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  zeroMinWidth: import_prop_types63.default.bool
} : void 0;
var StyledGrid = withStyles_default2(styles69, {
  name: "MuiGrid"
})(Grid);
if (true) {
  requireProp = requirePropFactory("Grid");
  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {
    alignContent: requireProp("container"),
    alignItems: requireProp("container"),
    direction: requireProp("container"),
    justifyContent: requireProp("container"),
    lg: requireProp("item"),
    md: requireProp("item"),
    sm: requireProp("item"),
    spacing: requireProp("container"),
    wrap: requireProp("container"),
    xs: requireProp("item"),
    zeroMinWidth: requireProp("item")
  });
}
var requireProp;
var Grid_default = StyledGrid;

// node_modules/@material-ui/core/esm/Grow/Grow.js
var import_prop_types64 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement12,
  createElement as createElement52,
  forwardRef as forwardRef150,
  useEffect as useEffect16,
  useRef as useRef17
} from "react";
function getScale(value) {
  return "scale(".concat(value, ", ").concat(Math.pow(value, 2), ")");
}
var styles71 = {
  entering: {
    opacity: 1,
    transform: getScale(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
};
var Grow = /* @__PURE__ */ forwardRef150(function Grow2(props, ref2) {
  var children2 = props.children, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style3 = props.style, _props$timeout = props.timeout, timeout2 = _props$timeout === void 0 ? "auto" : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition_default : _props$TransitionComp, other = _objectWithoutProperties(props, ["children", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"]);
  var timer = useRef17();
  var autoTimeout = useRef17();
  var theme = useTheme2();
  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
  var nodeRef = useRef17(null);
  var foreignRef = useForkRef(children2.ref, ref2);
  var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : void 0, foreignRef);
  var normalizedTransitionCallback = function normalizedTransitionCallback2(callback) {
    return function(nodeOrAppearing, maybeAppearing) {
      if (callback) {
        var _ref6 = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing], _ref23 = _slicedToArray(_ref6, 2), node4 = _ref23[0], isAppearing = _ref23[1];
        if (isAppearing === void 0) {
          callback(node4);
        } else {
          callback(node4, isAppearing);
        }
      }
    };
  };
  var handleEntering = normalizedTransitionCallback(onEntering);
  var handleEnter = normalizedTransitionCallback(function(node4, isAppearing) {
    reflow(node4);
    var _getTransitionProps = getTransitionProps({
      style: style3,
      timeout: timeout2
    }, {
      mode: "enter"
    }), transitionDuration = _getTransitionProps.duration, delay = _getTransitionProps.delay;
    var duration5;
    if (timeout2 === "auto") {
      duration5 = theme.transitions.getAutoHeightDuration(node4.clientHeight);
      autoTimeout.current = duration5;
    } else {
      duration5 = transitionDuration;
    }
    node4.style.transition = [theme.transitions.create("opacity", {
      duration: duration5,
      delay
    }), theme.transitions.create("transform", {
      duration: duration5 * 0.666,
      delay
    })].join(",");
    if (onEnter) {
      onEnter(node4, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(function(node4) {
    var _getTransitionProps2 = getTransitionProps({
      style: style3,
      timeout: timeout2
    }, {
      mode: "exit"
    }), transitionDuration = _getTransitionProps2.duration, delay = _getTransitionProps2.delay;
    var duration5;
    if (timeout2 === "auto") {
      duration5 = theme.transitions.getAutoHeightDuration(node4.clientHeight);
      autoTimeout.current = duration5;
    } else {
      duration5 = transitionDuration;
    }
    node4.style.transition = [theme.transitions.create("opacity", {
      duration: duration5,
      delay
    }), theme.transitions.create("transform", {
      duration: duration5 * 0.666,
      delay: delay || duration5 * 0.333
    })].join(",");
    node4.style.opacity = "0";
    node4.style.transform = getScale(0.75);
    if (onExit) {
      onExit(node4);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);
  var addEndListener = function addEndListener2(nodeOrNext, maybeNext) {
    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;
    if (timeout2 === "auto") {
      timer.current = setTimeout(next, autoTimeout.current || 0);
    }
  };
  useEffect16(function() {
    return function() {
      clearTimeout(timer.current);
    };
  }, []);
  return /* @__PURE__ */ createElement52(TransitionComponent, _extends({
    appear: true,
    in: inProp,
    nodeRef: enableStrictModeCompat ? nodeRef : void 0,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener,
    timeout: timeout2 === "auto" ? null : timeout2
  }, other), function(state, childProps) {
    return /* @__PURE__ */ cloneElement12(children2, _extends({
      style: _extends({
        opacity: 0,
        transform: getScale(0.75),
        visibility: state === "exited" && !inProp ? "hidden" : void 0
      }, styles71[state], style3, children2.props.style),
      ref: handleRef
    }, childProps));
  });
});
true ? Grow.propTypes = {
  children: import_prop_types64.default.element,
  disableStrictModeCompat: import_prop_types64.default.bool,
  in: import_prop_types64.default.bool,
  onEnter: import_prop_types64.default.func,
  onEntered: import_prop_types64.default.func,
  onEntering: import_prop_types64.default.func,
  onExit: import_prop_types64.default.func,
  onExited: import_prop_types64.default.func,
  onExiting: import_prop_types64.default.func,
  style: import_prop_types64.default.object,
  timeout: import_prop_types64.default.oneOfType([import_prop_types64.default.oneOf(["auto"]), import_prop_types64.default.number, import_prop_types64.default.shape({
    appear: import_prop_types64.default.number,
    enter: import_prop_types64.default.number,
    exit: import_prop_types64.default.number
  })])
} : void 0;
Grow.muiSupportAuto = true;
var Grow_default = Grow;

// node_modules/@material-ui/core/esm/Hidden/Hidden.js
var import_prop_types68 = __toModule(require_prop_types());
import {
  createElement as createElement55
} from "react";

// node_modules/@material-ui/core/esm/Hidden/HiddenJs.js
var import_prop_types66 = __toModule(require_prop_types());

// node_modules/@material-ui/core/esm/withWidth/withWidth.js
var import_prop_types65 = __toModule(require_prop_types());
import {
  createElement as createElement53,
  useEffect as useEffect18,
  useLayoutEffect as useLayoutEffect6,
  useState as useState12
} from "react";
var import_hoist_non_react_statics3 = __toModule(require_hoist_non_react_statics_cjs());

// node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js
import {
  useDebugValue as useDebugValue2,
  useEffect as useEffect17,
  useState as useState11
} from "react";
function useMediaQuery(queryInput) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var theme = useTheme();
  var props = getThemeProps({
    theme,
    name: "MuiUseMediaQuery",
    props: {}
  });
  if (true) {
    if (typeof queryInput === "function" && theme === null) {
      console.error(["Material-UI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join("\n"));
    }
  }
  var query = typeof queryInput === "function" ? queryInput(theme) : queryInput;
  query = query.replace(/^@media( ?)/m, "");
  var supportMatchMedia = typeof window !== "undefined" && typeof window.matchMedia !== "undefined";
  var _props$options = _extends({}, props, options), _props$options$defaul = _props$options.defaultMatches, defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul, _props$options$matchM = _props$options.matchMedia, matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM, _props$options$noSsr = _props$options.noSsr, noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr, _props$options$ssrMat = _props$options.ssrMatchMedia, ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;
  var _React$useState = useState11(function() {
    if (noSsr && supportMatchMedia) {
      return matchMedia(query).matches;
    }
    if (ssrMatchMedia) {
      return ssrMatchMedia(query).matches;
    }
    return defaultMatches;
  }), match2 = _React$useState[0], setMatch = _React$useState[1];
  useEffect17(function() {
    var active = true;
    if (!supportMatchMedia) {
      return void 0;
    }
    var queryList = matchMedia(query);
    var updateMatch = function updateMatch2() {
      if (active) {
        setMatch(queryList.matches);
      }
    };
    updateMatch();
    queryList.addListener(updateMatch);
    return function() {
      active = false;
      queryList.removeListener(updateMatch);
    };
  }, [query, matchMedia, supportMatchMedia]);
  if (true) {
    useDebugValue2({
      query,
      match: match2
    });
  }
  return match2;
}

// node_modules/@material-ui/core/esm/withWidth/withWidth.js
var isWidthUp = function isWidthUp2(breakpoint, width2) {
  var inclusive = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  if (inclusive) {
    return keys.indexOf(breakpoint) <= keys.indexOf(width2);
  }
  return keys.indexOf(breakpoint) < keys.indexOf(width2);
};
var isWidthDown = function isWidthDown2(breakpoint, width2) {
  var inclusive = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  if (inclusive) {
    return keys.indexOf(width2) <= keys.indexOf(breakpoint);
  }
  return keys.indexOf(width2) < keys.indexOf(breakpoint);
};
var useEnhancedEffect6 = typeof window === "undefined" ? useEffect18 : useLayoutEffect6;
var withWidth = function withWidth2() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return function(Component7) {
    var _options$withTheme = options.withTheme, withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme, _options$noSSR = options.noSSR, noSSR = _options$noSSR === void 0 ? false : _options$noSSR, initialWidthOption = options.initialWidth;
    function WithWidth(props) {
      var contextTheme = useTheme2();
      var theme = props.theme || contextTheme;
      var _getThemeProps = getThemeProps({
        theme,
        name: "MuiWithWidth",
        props: _extends({}, props)
      }), initialWidth = _getThemeProps.initialWidth, width2 = _getThemeProps.width, other = _objectWithoutProperties(_getThemeProps, ["initialWidth", "width"]);
      var _React$useState = useState12(false), mountedState = _React$useState[0], setMountedState = _React$useState[1];
      useEnhancedEffect6(function() {
        setMountedState(true);
      }, []);
      var keys3 = theme.breakpoints.keys.slice().reverse();
      var widthComputed = keys3.reduce(function(output, key) {
        var matches = useMediaQuery(theme.breakpoints.up(key));
        return !output && matches ? key : output;
      }, null);
      var more = _extends({
        width: width2 || (mountedState || noSSR ? widthComputed : void 0) || initialWidth || initialWidthOption
      }, withThemeOption ? {
        theme
      } : {}, other);
      if (more.width === void 0) {
        return null;
      }
      return /* @__PURE__ */ createElement53(Component7, more);
    }
    true ? WithWidth.propTypes = {
      initialWidth: import_prop_types65.default.oneOf(["xs", "sm", "md", "lg", "xl"]),
      theme: import_prop_types65.default.object,
      width: import_prop_types65.default.oneOf(["xs", "sm", "md", "lg", "xl"])
    } : void 0;
    if (true) {
      WithWidth.displayName = "WithWidth(".concat(getDisplayName(Component7), ")");
    }
    (0, import_hoist_non_react_statics3.default)(WithWidth, Component7);
    return WithWidth;
  };
};
var withWidth_default = withWidth;

// node_modules/@material-ui/core/esm/Hidden/HiddenJs.js
function HiddenJs(props) {
  var children2 = props.children, only = props.only, width2 = props.width;
  var theme = useTheme2();
  var visible = true;
  if (only) {
    if (Array.isArray(only)) {
      for (var i2 = 0; i2 < only.length; i2 += 1) {
        var breakpoint = only[i2];
        if (width2 === breakpoint) {
          visible = false;
          break;
        }
      }
    } else if (only && width2 === only) {
      visible = false;
    }
  }
  if (visible) {
    for (var _i = 0; _i < theme.breakpoints.keys.length; _i += 1) {
      var _breakpoint = theme.breakpoints.keys[_i];
      var breakpointUp = props["".concat(_breakpoint, "Up")];
      var breakpointDown = props["".concat(_breakpoint, "Down")];
      if (breakpointUp && isWidthUp(_breakpoint, width2) || breakpointDown && isWidthDown(_breakpoint, width2)) {
        visible = false;
        break;
      }
    }
  }
  if (!visible) {
    return null;
  }
  return children2;
}
HiddenJs.propTypes = {
  children: import_prop_types66.default.node,
  className: import_prop_types66.default.string,
  implementation: import_prop_types66.default.oneOf(["js", "css"]),
  initialWidth: import_prop_types66.default.oneOf(["xs", "sm", "md", "lg", "xl"]),
  lgDown: import_prop_types66.default.bool,
  lgUp: import_prop_types66.default.bool,
  mdDown: import_prop_types66.default.bool,
  mdUp: import_prop_types66.default.bool,
  only: import_prop_types66.default.oneOfType([import_prop_types66.default.oneOf(["xs", "sm", "md", "lg", "xl"]), import_prop_types66.default.arrayOf(import_prop_types66.default.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  smDown: import_prop_types66.default.bool,
  smUp: import_prop_types66.default.bool,
  width: import_prop_types66.default.string.isRequired,
  xlDown: import_prop_types66.default.bool,
  xlUp: import_prop_types66.default.bool,
  xsDown: import_prop_types66.default.bool,
  xsUp: import_prop_types66.default.bool
};
if (true) {
  HiddenJs.propTypes = exactProp(HiddenJs.propTypes);
}
var HiddenJs_default = withWidth_default()(HiddenJs);

// node_modules/@material-ui/core/esm/Hidden/HiddenCss.js
var import_prop_types67 = __toModule(require_prop_types());
import {
  createElement as createElement54
} from "react";
var styles72 = function styles73(theme) {
  var hidden = {
    display: "none"
  };
  return theme.breakpoints.keys.reduce(function(acc, key) {
    acc["only".concat(capitalize(key))] = _defineProperty({}, theme.breakpoints.only(key), hidden);
    acc["".concat(key, "Up")] = _defineProperty({}, theme.breakpoints.up(key), hidden);
    acc["".concat(key, "Down")] = _defineProperty({}, theme.breakpoints.down(key), hidden);
    return acc;
  }, {});
};
function HiddenCss(props) {
  var children2 = props.children, classes = props.classes, className = props.className, only = props.only, other = _objectWithoutProperties(props, ["children", "classes", "className", "only"]);
  var theme = useTheme2();
  if (true) {
    var unknownProps = Object.keys(other).filter(function(propName) {
      var isUndeclaredBreakpoint = !theme.breakpoints.keys.some(function(breakpoint2) {
        return "".concat(breakpoint2, "Up") === propName || "".concat(breakpoint2, "Down") === propName;
      });
      return isUndeclaredBreakpoint;
    });
    if (unknownProps.length > 0) {
      console.error('Material-UI: Unsupported props received by `<Hidden implementation="css" />`: '.concat(unknownProps.join(", "), ". Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?"));
    }
  }
  var clsx = [];
  if (className) {
    clsx.push(className);
  }
  for (var i2 = 0; i2 < theme.breakpoints.keys.length; i2 += 1) {
    var breakpoint = theme.breakpoints.keys[i2];
    var breakpointUp = props["".concat(breakpoint, "Up")];
    var breakpointDown = props["".concat(breakpoint, "Down")];
    if (breakpointUp) {
      clsx.push(classes["".concat(breakpoint, "Up")]);
    }
    if (breakpointDown) {
      clsx.push(classes["".concat(breakpoint, "Down")]);
    }
  }
  if (only) {
    var onlyBreakpoints = Array.isArray(only) ? only : [only];
    onlyBreakpoints.forEach(function(breakpoint2) {
      clsx.push(classes["only".concat(capitalize(breakpoint2))]);
    });
  }
  return /* @__PURE__ */ createElement54("div", {
    className: clsx.join(" ")
  }, children2);
}
true ? HiddenCss.propTypes = {
  children: import_prop_types67.default.node,
  classes: import_prop_types67.default.object.isRequired,
  className: import_prop_types67.default.string,
  implementation: import_prop_types67.default.oneOf(["js", "css"]),
  lgDown: import_prop_types67.default.bool,
  lgUp: import_prop_types67.default.bool,
  mdDown: import_prop_types67.default.bool,
  mdUp: import_prop_types67.default.bool,
  only: import_prop_types67.default.oneOfType([import_prop_types67.default.oneOf(["xs", "sm", "md", "lg", "xl"]), import_prop_types67.default.arrayOf(import_prop_types67.default.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  smDown: import_prop_types67.default.bool,
  smUp: import_prop_types67.default.bool,
  xlDown: import_prop_types67.default.bool,
  xlUp: import_prop_types67.default.bool,
  xsDown: import_prop_types67.default.bool,
  xsUp: import_prop_types67.default.bool
} : void 0;
var HiddenCss_default = withStyles_default2(styles72, {
  name: "PrivateHiddenCss"
})(HiddenCss);

// node_modules/@material-ui/core/esm/Hidden/Hidden.js
function Hidden(props) {
  var _props$implementation = props.implementation, implementation = _props$implementation === void 0 ? "js" : _props$implementation, _props$lgDown = props.lgDown, lgDown = _props$lgDown === void 0 ? false : _props$lgDown, _props$lgUp = props.lgUp, lgUp = _props$lgUp === void 0 ? false : _props$lgUp, _props$mdDown = props.mdDown, mdDown = _props$mdDown === void 0 ? false : _props$mdDown, _props$mdUp = props.mdUp, mdUp = _props$mdUp === void 0 ? false : _props$mdUp, _props$smDown = props.smDown, smDown = _props$smDown === void 0 ? false : _props$smDown, _props$smUp = props.smUp, smUp = _props$smUp === void 0 ? false : _props$smUp, _props$xlDown = props.xlDown, xlDown = _props$xlDown === void 0 ? false : _props$xlDown, _props$xlUp = props.xlUp, xlUp = _props$xlUp === void 0 ? false : _props$xlUp, _props$xsDown = props.xsDown, xsDown = _props$xsDown === void 0 ? false : _props$xsDown, _props$xsUp = props.xsUp, xsUp = _props$xsUp === void 0 ? false : _props$xsUp, other = _objectWithoutProperties(props, ["implementation", "lgDown", "lgUp", "mdDown", "mdUp", "smDown", "smUp", "xlDown", "xlUp", "xsDown", "xsUp"]);
  if (implementation === "js") {
    return /* @__PURE__ */ createElement55(HiddenJs_default, _extends({
      lgDown,
      lgUp,
      mdDown,
      mdUp,
      smDown,
      smUp,
      xlDown,
      xlUp,
      xsDown,
      xsUp
    }, other));
  }
  return /* @__PURE__ */ createElement55(HiddenCss_default, _extends({
    lgDown,
    lgUp,
    mdDown,
    mdUp,
    smDown,
    smUp,
    xlDown,
    xlUp,
    xsDown,
    xsUp
  }, other));
}
true ? Hidden.propTypes = {
  children: import_prop_types68.default.node,
  className: import_prop_types68.default.string,
  implementation: import_prop_types68.default.oneOf(["js", "css"]),
  initialWidth: import_prop_types68.default.oneOf(["xs", "sm", "md", "lg", "xl"]),
  lgDown: import_prop_types68.default.bool,
  lgUp: import_prop_types68.default.bool,
  mdDown: import_prop_types68.default.bool,
  mdUp: import_prop_types68.default.bool,
  only: import_prop_types68.default.oneOfType([import_prop_types68.default.oneOf(["xs", "sm", "md", "lg", "xl"]), import_prop_types68.default.arrayOf(import_prop_types68.default.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  smDown: import_prop_types68.default.bool,
  smUp: import_prop_types68.default.bool,
  xlDown: import_prop_types68.default.bool,
  xlUp: import_prop_types68.default.bool,
  xsDown: import_prop_types68.default.bool,
  xsUp: import_prop_types68.default.bool
} : void 0;
var Hidden_default = Hidden;

// node_modules/@material-ui/core/esm/Input/Input.js
var import_prop_types69 = __toModule(require_prop_types());
import {
  createElement as createElement56,
  forwardRef as forwardRef151
} from "react";
var styles74 = function styles75(theme) {
  var light2 = theme.palette.type === "light";
  var bottomLineColor = light2 ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return {
    root: {
      position: "relative"
    },
    formControl: {
      "label + &": {
        marginTop: 16
      }
    },
    focused: {},
    disabled: {},
    colorSecondary: {
      "&$underline:after": {
        borderBottomColor: theme.palette.secondary.main
      }
    },
    underline: {
      "&:after": {
        borderBottom: "2px solid ".concat(theme.palette.primary.main),
        left: 0,
        bottom: 0,
        content: '""',
        position: "absolute",
        right: 0,
        transform: "scaleX(0)",
        transition: theme.transitions.create("transform", {
          duration: theme.transitions.duration.shorter,
          easing: theme.transitions.easing.easeOut
        }),
        pointerEvents: "none"
      },
      "&$focused:after": {
        transform: "scaleX(1)"
      },
      "&$error:after": {
        borderBottomColor: theme.palette.error.main,
        transform: "scaleX(1)"
      },
      "&:before": {
        borderBottom: "1px solid ".concat(bottomLineColor),
        left: 0,
        bottom: 0,
        content: '"\\00a0"',
        position: "absolute",
        right: 0,
        transition: theme.transitions.create("border-bottom-color", {
          duration: theme.transitions.duration.shorter
        }),
        pointerEvents: "none"
      },
      "&:hover:not($disabled):before": {
        borderBottom: "2px solid ".concat(theme.palette.text.primary),
        "@media (hover: none)": {
          borderBottom: "1px solid ".concat(bottomLineColor)
        }
      },
      "&$disabled:before": {
        borderBottomStyle: "dotted"
      }
    },
    error: {},
    marginDense: {},
    multiline: {},
    fullWidth: {},
    input: {},
    inputMarginDense: {},
    inputMultiline: {},
    inputTypeSearch: {}
  };
};
var Input = /* @__PURE__ */ forwardRef151(function Input2(props, ref2) {
  var disableUnderline = props.disableUnderline, classes = props.classes, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? "input" : _props$inputComponent, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, _props$type = props.type, type3 = _props$type === void 0 ? "text" : _props$type, other = _objectWithoutProperties(props, ["disableUnderline", "classes", "fullWidth", "inputComponent", "multiline", "type"]);
  return /* @__PURE__ */ createElement56(InputBase_default, _extends({
    classes: _extends({}, classes, {
      root: clsx_m_default(classes.root, !disableUnderline && classes.underline),
      underline: null
    }),
    fullWidth,
    inputComponent,
    multiline,
    ref: ref2,
    type: type3
  }, other));
});
true ? Input.propTypes = {
  autoComplete: import_prop_types69.default.string,
  autoFocus: import_prop_types69.default.bool,
  classes: import_prop_types69.default.object,
  color: import_prop_types69.default.oneOf(["primary", "secondary"]),
  defaultValue: import_prop_types69.default.any,
  disabled: import_prop_types69.default.bool,
  disableUnderline: import_prop_types69.default.bool,
  endAdornment: import_prop_types69.default.node,
  error: import_prop_types69.default.bool,
  fullWidth: import_prop_types69.default.bool,
  id: import_prop_types69.default.string,
  inputComponent: import_prop_types69.default.elementType,
  inputProps: import_prop_types69.default.object,
  inputRef: refType_default,
  margin: import_prop_types69.default.oneOf(["dense", "none"]),
  maxRows: import_prop_types69.default.oneOfType([import_prop_types69.default.number, import_prop_types69.default.string]),
  multiline: import_prop_types69.default.bool,
  name: import_prop_types69.default.string,
  onChange: import_prop_types69.default.func,
  placeholder: import_prop_types69.default.string,
  readOnly: import_prop_types69.default.bool,
  required: import_prop_types69.default.bool,
  rows: import_prop_types69.default.oneOfType([import_prop_types69.default.number, import_prop_types69.default.string]),
  startAdornment: import_prop_types69.default.node,
  type: import_prop_types69.default.string,
  value: import_prop_types69.default.any
} : void 0;
Input.muiName = "Input";
var Input_default = withStyles_default2(styles74, {
  name: "MuiInput"
})(Input);

// node_modules/@material-ui/core/esm/InputLabel/InputLabel.js
var import_prop_types70 = __toModule(require_prop_types());
import {
  createElement as createElement57,
  forwardRef as forwardRef152
} from "react";
var styles76 = function styles77(theme) {
  return {
    root: {
      display: "block",
      transformOrigin: "top left"
    },
    focused: {},
    disabled: {},
    error: {},
    required: {},
    asterisk: {},
    formControl: {
      position: "absolute",
      left: 0,
      top: 0,
      transform: "translate(0, 24px) scale(1)"
    },
    marginDense: {
      transform: "translate(0, 21px) scale(1)"
    },
    shrink: {
      transform: "translate(0, 1.5px) scale(0.75)",
      transformOrigin: "top left"
    },
    animated: {
      transition: theme.transitions.create(["color", "transform"], {
        duration: theme.transitions.duration.shorter,
        easing: theme.transitions.easing.easeOut
      })
    },
    filled: {
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 20px) scale(1)",
      "&$marginDense": {
        transform: "translate(12px, 17px) scale(1)"
      },
      "&$shrink": {
        transform: "translate(12px, 10px) scale(0.75)",
        "&$marginDense": {
          transform: "translate(12px, 7px) scale(0.75)"
        }
      }
    },
    outlined: {
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 20px) scale(1)",
      "&$marginDense": {
        transform: "translate(14px, 12px) scale(1)"
      },
      "&$shrink": {
        transform: "translate(14px, -6px) scale(0.75)"
      }
    }
  };
};
var InputLabel = /* @__PURE__ */ forwardRef152(function InputLabel2(props, ref2) {
  var classes = props.classes, className = props.className, _props$disableAnimati = props.disableAnimation, disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati, margin = props.margin, shrinkProp = props.shrink, variant = props.variant, other = _objectWithoutProperties(props, ["classes", "className", "disableAnimation", "margin", "shrink", "variant"]);
  var muiFormControl = useFormControl2();
  var shrink3 = shrinkProp;
  if (typeof shrink3 === "undefined" && muiFormControl) {
    shrink3 = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;
  }
  var fcs = formControlState({
    props,
    muiFormControl,
    states: ["margin", "variant"]
  });
  return /* @__PURE__ */ createElement57(FormLabel_default, _extends({
    "data-shrink": shrink3,
    className: clsx_m_default(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink3 && classes.shrink, fcs.margin === "dense" && classes.marginDense, {
      "filled": classes.filled,
      "outlined": classes.outlined
    }[fcs.variant]),
    classes: {
      focused: classes.focused,
      disabled: classes.disabled,
      error: classes.error,
      required: classes.required,
      asterisk: classes.asterisk
    },
    ref: ref2
  }, other));
});
true ? InputLabel.propTypes = {
  children: import_prop_types70.default.node,
  classes: import_prop_types70.default.object,
  className: import_prop_types70.default.string,
  color: import_prop_types70.default.oneOf(["primary", "secondary"]),
  disableAnimation: import_prop_types70.default.bool,
  disabled: import_prop_types70.default.bool,
  error: import_prop_types70.default.bool,
  focused: import_prop_types70.default.bool,
  margin: import_prop_types70.default.oneOf(["dense"]),
  required: import_prop_types70.default.bool,
  shrink: import_prop_types70.default.bool,
  variant: import_prop_types70.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
var InputLabel_default = withStyles_default2(styles76, {
  name: "MuiInputLabel"
})(InputLabel);

// node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js
var import_prop_types71 = __toModule(require_prop_types());
import {
  createElement as createElement58,
  forwardRef as forwardRef153
} from "react";
var TRANSITION_DURATION = 4;
var styles78 = function styles79(theme) {
  var getColor2 = function getColor3(color2) {
    return theme.palette.type === "light" ? lighten(color2, 0.62) : darken(color2, 0.5);
  };
  var backgroundPrimary = getColor2(theme.palette.primary.main);
  var backgroundSecondary = getColor2(theme.palette.secondary.main);
  return {
    root: {
      position: "relative",
      overflow: "hidden",
      height: 4,
      "@media print": {
        colorAdjust: "exact"
      }
    },
    colorPrimary: {
      backgroundColor: backgroundPrimary
    },
    colorSecondary: {
      backgroundColor: backgroundSecondary
    },
    determinate: {},
    indeterminate: {},
    buffer: {
      backgroundColor: "transparent"
    },
    query: {
      transform: "rotate(180deg)"
    },
    dashed: {
      position: "absolute",
      marginTop: 0,
      height: "100%",
      width: "100%",
      animation: "$buffer 3s infinite linear"
    },
    dashedColorPrimary: {
      backgroundImage: "radial-gradient(".concat(backgroundPrimary, " 0%, ").concat(backgroundPrimary, " 16%, transparent 42%)"),
      backgroundSize: "10px 10px",
      backgroundPosition: "0 -23px"
    },
    dashedColorSecondary: {
      backgroundImage: "radial-gradient(".concat(backgroundSecondary, " 0%, ").concat(backgroundSecondary, " 16%, transparent 42%)"),
      backgroundSize: "10px 10px",
      backgroundPosition: "0 -23px"
    },
    bar: {
      width: "100%",
      position: "absolute",
      left: 0,
      bottom: 0,
      top: 0,
      transition: "transform 0.2s linear",
      transformOrigin: "left"
    },
    barColorPrimary: {
      backgroundColor: theme.palette.primary.main
    },
    barColorSecondary: {
      backgroundColor: theme.palette.secondary.main
    },
    bar1Indeterminate: {
      width: "auto",
      animation: "$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite"
    },
    bar1Determinate: {
      transition: "transform .".concat(TRANSITION_DURATION, "s linear")
    },
    bar1Buffer: {
      zIndex: 1,
      transition: "transform .".concat(TRANSITION_DURATION, "s linear")
    },
    bar2Indeterminate: {
      width: "auto",
      animation: "$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite"
    },
    bar2Buffer: {
      transition: "transform .".concat(TRANSITION_DURATION, "s linear")
    },
    "@keyframes indeterminate1": {
      "0%": {
        left: "-35%",
        right: "100%"
      },
      "60%": {
        left: "100%",
        right: "-90%"
      },
      "100%": {
        left: "100%",
        right: "-90%"
      }
    },
    "@keyframes indeterminate2": {
      "0%": {
        left: "-200%",
        right: "100%"
      },
      "60%": {
        left: "107%",
        right: "-8%"
      },
      "100%": {
        left: "107%",
        right: "-8%"
      }
    },
    "@keyframes buffer": {
      "0%": {
        opacity: 1,
        backgroundPosition: "0 -23px"
      },
      "50%": {
        opacity: 0,
        backgroundPosition: "0 -23px"
      },
      "100%": {
        opacity: 1,
        backgroundPosition: "-200px -23px"
      }
    }
  };
};
var LinearProgress = /* @__PURE__ */ forwardRef153(function LinearProgress2(props, ref2) {
  var classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "primary" : _props$color, value = props.value, valueBuffer = props.valueBuffer, _props$variant = props.variant, variant = _props$variant === void 0 ? "indeterminate" : _props$variant, other = _objectWithoutProperties(props, ["classes", "className", "color", "value", "valueBuffer", "variant"]);
  var theme = useTheme2();
  var rootProps = {};
  var inlineStyles = {
    bar1: {},
    bar2: {}
  };
  if (variant === "determinate" || variant === "buffer") {
    if (value !== void 0) {
      rootProps["aria-valuenow"] = Math.round(value);
      rootProps["aria-valuemin"] = 0;
      rootProps["aria-valuemax"] = 100;
      var transform4 = value - 100;
      if (theme.direction === "rtl") {
        transform4 = -transform4;
      }
      inlineStyles.bar1.transform = "translateX(".concat(transform4, "%)");
    } else if (true) {
      console.error("Material-UI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
    }
  }
  if (variant === "buffer") {
    if (valueBuffer !== void 0) {
      var _transform = (valueBuffer || 0) - 100;
      if (theme.direction === "rtl") {
        _transform = -_transform;
      }
      inlineStyles.bar2.transform = "translateX(".concat(_transform, "%)");
    } else if (true) {
      console.error("Material-UI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
    }
  }
  return /* @__PURE__ */ createElement58("div", _extends({
    className: clsx_m_default(classes.root, classes["color".concat(capitalize(color2))], className, {
      "determinate": classes.determinate,
      "indeterminate": classes.indeterminate,
      "buffer": classes.buffer,
      "query": classes.query
    }[variant]),
    role: "progressbar"
  }, rootProps, {
    ref: ref2
  }, other), variant === "buffer" ? /* @__PURE__ */ createElement58("div", {
    className: clsx_m_default(classes.dashed, classes["dashedColor".concat(capitalize(color2))])
  }) : null, /* @__PURE__ */ createElement58("div", {
    className: clsx_m_default(classes.bar, classes["barColor".concat(capitalize(color2))], (variant === "indeterminate" || variant === "query") && classes.bar1Indeterminate, {
      "determinate": classes.bar1Determinate,
      "buffer": classes.bar1Buffer
    }[variant]),
    style: inlineStyles.bar1
  }), variant === "determinate" ? null : /* @__PURE__ */ createElement58("div", {
    className: clsx_m_default(classes.bar, (variant === "indeterminate" || variant === "query") && classes.bar2Indeterminate, variant === "buffer" ? [classes["color".concat(capitalize(color2))], classes.bar2Buffer] : classes["barColor".concat(capitalize(color2))]),
    style: inlineStyles.bar2
  }));
});
true ? LinearProgress.propTypes = {
  classes: import_prop_types71.default.object,
  className: import_prop_types71.default.string,
  color: import_prop_types71.default.oneOf(["primary", "secondary"]),
  value: import_prop_types71.default.number,
  valueBuffer: import_prop_types71.default.number,
  variant: import_prop_types71.default.oneOf(["buffer", "determinate", "indeterminate", "query"])
} : void 0;
var LinearProgress_default = withStyles_default2(styles78, {
  name: "MuiLinearProgress"
})(LinearProgress);

// node_modules/@material-ui/core/esm/List/List.js
var import_prop_types72 = __toModule(require_prop_types());
import {
  createElement as createElement59,
  forwardRef as forwardRef154,
  useMemo as useMemo3
} from "react";

// node_modules/@material-ui/core/esm/List/ListContext.js
import {
  createContext as createContext3
} from "react";
var ListContext = createContext3({});
if (true) {
  ListContext.displayName = "ListContext";
}
var ListContext_default = ListContext;

// node_modules/@material-ui/core/esm/List/List.js
var styles80 = {
  root: {
    listStyle: "none",
    margin: 0,
    padding: 0,
    position: "relative"
  },
  padding: {
    paddingTop: 8,
    paddingBottom: 8
  },
  dense: {},
  subheader: {
    paddingTop: 0
  }
};
var List = /* @__PURE__ */ forwardRef154(function List2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component7 = _props$component === void 0 ? "ul" : _props$component, _props$dense = props.dense, dense = _props$dense === void 0 ? false : _props$dense, _props$disablePadding = props.disablePadding, disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding, subheader = props.subheader, other = _objectWithoutProperties(props, ["children", "classes", "className", "component", "dense", "disablePadding", "subheader"]);
  var context = useMemo3(function() {
    return {
      dense
    };
  }, [dense]);
  return /* @__PURE__ */ createElement59(ListContext_default.Provider, {
    value: context
  }, /* @__PURE__ */ createElement59(Component7, _extends({
    className: clsx_m_default(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),
    ref: ref2
  }, other), subheader, children2));
});
true ? List.propTypes = {
  children: import_prop_types72.default.node,
  classes: import_prop_types72.default.object.isRequired,
  className: import_prop_types72.default.string,
  component: import_prop_types72.default.elementType,
  dense: import_prop_types72.default.bool,
  disablePadding: import_prop_types72.default.bool,
  subheader: import_prop_types72.default.node
} : void 0;
var List_default = withStyles_default2(styles80, {
  name: "MuiList"
})(List);

// node_modules/@material-ui/core/esm/ListItem/ListItem.js
var import_prop_types73 = __toModule(require_prop_types());
import {
  Children as Children6,
  createElement as createElement60,
  forwardRef as forwardRef155,
  useCallback as useCallback13,
  useContext as useContext4,
  useEffect as useEffect19,
  useLayoutEffect as useLayoutEffect7,
  useRef as useRef18
} from "react";
import {
  findDOMNode as findDOMNode8
} from "react-dom";
var styles81 = function styles82(theme) {
  return {
    root: {
      display: "flex",
      justifyContent: "flex-start",
      alignItems: "center",
      position: "relative",
      textDecoration: "none",
      width: "100%",
      boxSizing: "border-box",
      textAlign: "left",
      paddingTop: 8,
      paddingBottom: 8,
      "&$focusVisible": {
        backgroundColor: theme.palette.action.selected
      },
      "&$selected, &$selected:hover": {
        backgroundColor: theme.palette.action.selected
      },
      "&$disabled": {
        opacity: 0.5
      }
    },
    container: {
      position: "relative"
    },
    focusVisible: {},
    dense: {
      paddingTop: 4,
      paddingBottom: 4
    },
    alignItemsFlexStart: {
      alignItems: "flex-start"
    },
    disabled: {},
    divider: {
      borderBottom: "1px solid ".concat(theme.palette.divider),
      backgroundClip: "padding-box"
    },
    gutters: {
      paddingLeft: 16,
      paddingRight: 16
    },
    button: {
      transition: theme.transitions.create("background-color", {
        duration: theme.transitions.duration.shortest
      }),
      "&:hover": {
        textDecoration: "none",
        backgroundColor: theme.palette.action.hover,
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    },
    secondaryAction: {
      paddingRight: 48
    },
    selected: {}
  };
};
var useEnhancedEffect7 = typeof window === "undefined" ? useEffect19 : useLayoutEffect7;
var ListItem = /* @__PURE__ */ forwardRef155(function ListItem2(props, ref2) {
  var _props$alignItems = props.alignItems, alignItems2 = _props$alignItems === void 0 ? "center" : _props$alignItems, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, _props$button = props.button, button2 = _props$button === void 0 ? false : _props$button, childrenProp = props.children, classes = props.classes, className = props.className, componentProp = props.component, _props$ContainerCompo = props.ContainerComponent, ContainerComponent = _props$ContainerCompo === void 0 ? "li" : _props$ContainerCompo, _props$ContainerProps = props.ContainerProps;
  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;
  var ContainerClassName = _props$ContainerProps.className, ContainerProps = _objectWithoutProperties(_props$ContainerProps, ["className"]), _props$dense = props.dense, dense = _props$dense === void 0 ? false : _props$dense, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$divider = props.divider, divider = _props$divider === void 0 ? false : _props$divider, focusVisibleClassName = props.focusVisibleClassName, _props$selected = props.selected, selected = _props$selected === void 0 ? false : _props$selected, other = _objectWithoutProperties(props, ["alignItems", "autoFocus", "button", "children", "classes", "className", "component", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "divider", "focusVisibleClassName", "selected"]);
  var context = useContext4(ListContext_default);
  var childContext = {
    dense: dense || context.dense || false,
    alignItems: alignItems2
  };
  var listItemRef = useRef18(null);
  useEnhancedEffect7(function() {
    if (autoFocus) {
      if (listItemRef.current) {
        listItemRef.current.focus();
      } else if (true) {
        console.error("Material-UI: Unable to set focus to a ListItem whose component has not been rendered.");
      }
    }
  }, [autoFocus]);
  var children2 = Children6.toArray(childrenProp);
  var hasSecondaryAction = children2.length && isMuiElement(children2[children2.length - 1], ["ListItemSecondaryAction"]);
  var handleOwnRef = useCallback13(function(instance) {
    listItemRef.current = findDOMNode8(instance);
  }, []);
  var handleRef = useForkRef(handleOwnRef, ref2);
  var componentProps = _extends({
    className: clsx_m_default(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled3 && classes.disabled, button2 && classes.button, alignItems2 !== "center" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),
    disabled: disabled3
  }, other);
  var Component7 = componentProp || "li";
  if (button2) {
    componentProps.component = componentProp || "div";
    componentProps.focusVisibleClassName = clsx_m_default(classes.focusVisible, focusVisibleClassName);
    Component7 = ButtonBase_default;
  }
  if (hasSecondaryAction) {
    Component7 = !componentProps.component && !componentProp ? "div" : Component7;
    if (ContainerComponent === "li") {
      if (Component7 === "li") {
        Component7 = "div";
      } else if (componentProps.component === "li") {
        componentProps.component = "div";
      }
    }
    return /* @__PURE__ */ createElement60(ListContext_default.Provider, {
      value: childContext
    }, /* @__PURE__ */ createElement60(ContainerComponent, _extends({
      className: clsx_m_default(classes.container, ContainerClassName),
      ref: handleRef
    }, ContainerProps), /* @__PURE__ */ createElement60(Component7, componentProps, children2), children2.pop()));
  }
  return /* @__PURE__ */ createElement60(ListContext_default.Provider, {
    value: childContext
  }, /* @__PURE__ */ createElement60(Component7, _extends({
    ref: handleRef
  }, componentProps), children2));
});
true ? ListItem.propTypes = {
  alignItems: import_prop_types73.default.oneOf(["flex-start", "center"]),
  autoFocus: import_prop_types73.default.bool,
  button: import_prop_types73.default.bool,
  children: chainPropTypes(import_prop_types73.default.node, function(props) {
    var children2 = Children6.toArray(props.children);
    var secondaryActionIndex = -1;
    for (var i2 = children2.length - 1; i2 >= 0; i2 -= 1) {
      var child = children2[i2];
      if (isMuiElement(child, ["ListItemSecondaryAction"])) {
        secondaryActionIndex = i2;
        break;
      }
    }
    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children2.length - 1) {
      return new Error("Material-UI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem.");
    }
    return null;
  }),
  classes: import_prop_types73.default.object.isRequired,
  className: import_prop_types73.default.string,
  component: import_prop_types73.default.elementType,
  ContainerComponent: import_prop_types73.default.elementType,
  ContainerProps: import_prop_types73.default.object,
  dense: import_prop_types73.default.bool,
  disabled: import_prop_types73.default.bool,
  disableGutters: import_prop_types73.default.bool,
  divider: import_prop_types73.default.bool,
  focusVisibleClassName: import_prop_types73.default.string,
  selected: import_prop_types73.default.bool
} : void 0;
var ListItem_default = withStyles_default2(styles81, {
  name: "MuiListItem"
})(ListItem);

// node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js
var import_prop_types74 = __toModule(require_prop_types());
import {
  createElement as createElement61,
  forwardRef as forwardRef156,
  useContext as useContext5
} from "react";
var styles83 = {
  root: {
    minWidth: 56,
    flexShrink: 0
  },
  alignItemsFlexStart: {
    marginTop: 8
  }
};
var ListItemAvatar = /* @__PURE__ */ forwardRef156(function ListItemAvatar2(props, ref2) {
  var classes = props.classes, className = props.className, other = _objectWithoutProperties(props, ["classes", "className"]);
  var context = useContext5(ListContext_default);
  return /* @__PURE__ */ createElement61("div", _extends({
    className: clsx_m_default(classes.root, className, context.alignItems === "flex-start" && classes.alignItemsFlexStart),
    ref: ref2
  }, other));
});
true ? ListItemAvatar.propTypes = {
  children: import_prop_types74.default.element.isRequired,
  classes: import_prop_types74.default.object,
  className: import_prop_types74.default.string
} : void 0;
var ListItemAvatar_default = withStyles_default2(styles83, {
  name: "MuiListItemAvatar"
})(ListItemAvatar);

// node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js
var import_prop_types75 = __toModule(require_prop_types());
import {
  createElement as createElement62,
  forwardRef as forwardRef157,
  useContext as useContext6
} from "react";
var styles84 = function styles85(theme) {
  return {
    root: {
      minWidth: 56,
      color: theme.palette.action.active,
      flexShrink: 0,
      display: "inline-flex"
    },
    alignItemsFlexStart: {
      marginTop: 8
    }
  };
};
var ListItemIcon = /* @__PURE__ */ forwardRef157(function ListItemIcon2(props, ref2) {
  var classes = props.classes, className = props.className, other = _objectWithoutProperties(props, ["classes", "className"]);
  var context = useContext6(ListContext_default);
  return /* @__PURE__ */ createElement62("div", _extends({
    className: clsx_m_default(classes.root, className, context.alignItems === "flex-start" && classes.alignItemsFlexStart),
    ref: ref2
  }, other));
});
true ? ListItemIcon.propTypes = {
  children: import_prop_types75.default.node,
  classes: import_prop_types75.default.object,
  className: import_prop_types75.default.string
} : void 0;
var ListItemIcon_default = withStyles_default2(styles84, {
  name: "MuiListItemIcon"
})(ListItemIcon);

// node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js
var import_prop_types76 = __toModule(require_prop_types());
import {
  createElement as createElement63,
  forwardRef as forwardRef158
} from "react";
var styles86 = {
  root: {
    position: "absolute",
    right: 16,
    top: "50%",
    transform: "translateY(-50%)"
  }
};
var ListItemSecondaryAction = /* @__PURE__ */ forwardRef158(function ListItemSecondaryAction2(props, ref2) {
  var classes = props.classes, className = props.className, other = _objectWithoutProperties(props, ["classes", "className"]);
  return /* @__PURE__ */ createElement63("div", _extends({
    className: clsx_m_default(classes.root, className),
    ref: ref2
  }, other));
});
true ? ListItemSecondaryAction.propTypes = {
  children: import_prop_types76.default.node,
  classes: import_prop_types76.default.object,
  className: import_prop_types76.default.string
} : void 0;
ListItemSecondaryAction.muiName = "ListItemSecondaryAction";
var ListItemSecondaryAction_default = withStyles_default2(styles86, {
  name: "MuiListItemSecondaryAction"
})(ListItemSecondaryAction);

// node_modules/@material-ui/core/esm/ListItemText/ListItemText.js
var import_prop_types77 = __toModule(require_prop_types());
import {
  createElement as createElement64,
  forwardRef as forwardRef159,
  useContext as useContext7
} from "react";
var styles87 = {
  root: {
    flex: "1 1 auto",
    minWidth: 0,
    marginTop: 4,
    marginBottom: 4
  },
  multiline: {
    marginTop: 6,
    marginBottom: 6
  },
  dense: {},
  inset: {
    paddingLeft: 56
  },
  primary: {},
  secondary: {}
};
var ListItemText = /* @__PURE__ */ forwardRef159(function ListItemText2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$disableTypogra = props.disableTypography, disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra, _props$inset = props.inset, inset = _props$inset === void 0 ? false : _props$inset, primaryProp = props.primary, primaryTypographyProps = props.primaryTypographyProps, secondaryProp = props.secondary, secondaryTypographyProps = props.secondaryTypographyProps, other = _objectWithoutProperties(props, ["children", "classes", "className", "disableTypography", "inset", "primary", "primaryTypographyProps", "secondary", "secondaryTypographyProps"]);
  var _React$useContext = useContext7(ListContext_default), dense = _React$useContext.dense;
  var primary3 = primaryProp != null ? primaryProp : children2;
  if (primary3 != null && primary3.type !== Typography_default && !disableTypography) {
    primary3 = /* @__PURE__ */ createElement64(Typography_default, _extends({
      variant: dense ? "body2" : "body1",
      className: classes.primary,
      component: "span",
      display: "block"
    }, primaryTypographyProps), primary3);
  }
  var secondary3 = secondaryProp;
  if (secondary3 != null && secondary3.type !== Typography_default && !disableTypography) {
    secondary3 = /* @__PURE__ */ createElement64(Typography_default, _extends({
      variant: "body2",
      className: classes.secondary,
      color: "textSecondary",
      display: "block"
    }, secondaryTypographyProps), secondary3);
  }
  return /* @__PURE__ */ createElement64("div", _extends({
    className: clsx_m_default(classes.root, className, dense && classes.dense, inset && classes.inset, primary3 && secondary3 && classes.multiline),
    ref: ref2
  }, other), primary3, secondary3);
});
true ? ListItemText.propTypes = {
  children: import_prop_types77.default.node,
  classes: import_prop_types77.default.object,
  className: import_prop_types77.default.string,
  disableTypography: import_prop_types77.default.bool,
  inset: import_prop_types77.default.bool,
  primary: import_prop_types77.default.node,
  primaryTypographyProps: import_prop_types77.default.object,
  secondary: import_prop_types77.default.node,
  secondaryTypographyProps: import_prop_types77.default.object
} : void 0;
var ListItemText_default = withStyles_default2(styles87, {
  name: "MuiListItemText"
})(ListItemText);

// node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js
var import_prop_types78 = __toModule(require_prop_types());
import {
  createElement as createElement65,
  forwardRef as forwardRef160
} from "react";
var styles88 = function styles89(theme) {
  return {
    root: {
      boxSizing: "border-box",
      lineHeight: "48px",
      listStyle: "none",
      color: theme.palette.text.secondary,
      fontFamily: theme.typography.fontFamily,
      fontWeight: theme.typography.fontWeightMedium,
      fontSize: theme.typography.pxToRem(14)
    },
    colorPrimary: {
      color: theme.palette.primary.main
    },
    colorInherit: {
      color: "inherit"
    },
    gutters: {
      paddingLeft: 16,
      paddingRight: 16
    },
    inset: {
      paddingLeft: 72
    },
    sticky: {
      position: "sticky",
      top: 0,
      zIndex: 1,
      backgroundColor: "inherit"
    }
  };
};
var ListSubheader = /* @__PURE__ */ forwardRef160(function ListSubheader2(props, ref2) {
  var classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "default" : _props$color, _props$component = props.component, Component7 = _props$component === void 0 ? "li" : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$disableSticky = props.disableSticky, disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky, _props$inset = props.inset, inset = _props$inset === void 0 ? false : _props$inset, other = _objectWithoutProperties(props, ["classes", "className", "color", "component", "disableGutters", "disableSticky", "inset"]);
  return /* @__PURE__ */ createElement65(Component7, _extends({
    className: clsx_m_default(classes.root, className, color2 !== "default" && classes["color".concat(capitalize(color2))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),
    ref: ref2
  }, other));
});
true ? ListSubheader.propTypes = {
  children: import_prop_types78.default.node,
  classes: import_prop_types78.default.object.isRequired,
  className: import_prop_types78.default.string,
  color: import_prop_types78.default.oneOf(["default", "primary", "inherit"]),
  component: import_prop_types78.default.elementType,
  disableGutters: import_prop_types78.default.bool,
  disableSticky: import_prop_types78.default.bool,
  inset: import_prop_types78.default.bool
} : void 0;
var ListSubheader_default = withStyles_default2(styles88, {
  name: "MuiListSubheader"
})(ListSubheader);

// node_modules/@material-ui/core/esm/Menu/Menu.js
var import_react_is5 = __toModule(require_react_is2());
var import_prop_types81 = __toModule(require_prop_types());
import {
  Children as Children8,
  cloneElement as cloneElement14,
  createElement as createElement68,
  forwardRef as forwardRef163,
  isValidElement as isValidElement9,
  useRef as useRef21
} from "react";

// node_modules/@material-ui/core/esm/Popover/Popover.js
var import_prop_types79 = __toModule(require_prop_types());
import {
  Component as Component3,
  createElement as createElement66,
  forwardRef as forwardRef161,
  useCallback as useCallback14,
  useEffect as useEffect20,
  useImperativeHandle as useImperativeHandle3,
  useRef as useRef19
} from "react";
import {
  findDOMNode as findDOMNode9
} from "react-dom";
function getOffsetTop(rect, vertical2) {
  var offset7 = 0;
  if (typeof vertical2 === "number") {
    offset7 = vertical2;
  } else if (vertical2 === "center") {
    offset7 = rect.height / 2;
  } else if (vertical2 === "bottom") {
    offset7 = rect.height;
  }
  return offset7;
}
function getOffsetLeft(rect, horizontal2) {
  var offset7 = 0;
  if (typeof horizontal2 === "number") {
    offset7 = horizontal2;
  } else if (horizontal2 === "center") {
    offset7 = rect.width / 2;
  } else if (horizontal2 === "right") {
    offset7 = rect.width;
  }
  return offset7;
}
function getTransformOriginValue(transformOrigin) {
  return [transformOrigin.horizontal, transformOrigin.vertical].map(function(n2) {
    return typeof n2 === "number" ? "".concat(n2, "px") : n2;
  }).join(" ");
}
function getScrollParent(parent, child) {
  var element2 = child;
  var scrollTop = 0;
  while (element2 && element2 !== parent) {
    element2 = element2.parentElement;
    scrollTop += element2.scrollTop;
  }
  return scrollTop;
}
function getAnchorEl(anchorEl) {
  return typeof anchorEl === "function" ? anchorEl() : anchorEl;
}
var styles90 = {
  root: {},
  paper: {
    position: "absolute",
    overflowY: "auto",
    overflowX: "hidden",
    minWidth: 16,
    minHeight: 16,
    maxWidth: "calc(100% - 32px)",
    maxHeight: "calc(100% - 32px)",
    outline: 0
  }
};
var Popover = /* @__PURE__ */ forwardRef161(function Popover2(props, ref2) {
  var action3 = props.action, anchorEl = props.anchorEl, _props$anchorOrigin = props.anchorOrigin, anchorOrigin = _props$anchorOrigin === void 0 ? {
    vertical: "top",
    horizontal: "left"
  } : _props$anchorOrigin, anchorPosition = props.anchorPosition, _props$anchorReferenc = props.anchorReference, anchorReference = _props$anchorReferenc === void 0 ? "anchorEl" : _props$anchorReferenc, children2 = props.children, classes = props.classes, className = props.className, containerProp = props.container, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 8 : _props$elevation, getContentAnchorEl = props.getContentAnchorEl, _props$marginThreshol = props.marginThreshold, marginThreshold = _props$marginThreshol === void 0 ? 16 : _props$marginThreshol, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, open = props.open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, _props$transformOrigi = props.transformOrigin, transformOrigin = _props$transformOrigi === void 0 ? {
    vertical: "top",
    horizontal: "left"
  } : _props$transformOrigi, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Grow_default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDurationProp = _props$transitionDura === void 0 ? "auto" : _props$transitionDura, _props$TransitionProp = props.TransitionProps, TransitionProps4 = _props$TransitionProp === void 0 ? {} : _props$TransitionProp, other = _objectWithoutProperties(props, ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "classes", "className", "container", "elevation", "getContentAnchorEl", "marginThreshold", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "open", "PaperProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps"]);
  var paperRef = useRef19();
  var getAnchorOffset = useCallback14(function(contentAnchorOffset) {
    if (anchorReference === "anchorPosition") {
      if (true) {
        if (!anchorPosition) {
          console.error('Material-UI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.');
        }
      }
      return anchorPosition;
    }
    var resolvedAnchorEl = getAnchorEl(anchorEl);
    var anchorElement = resolvedAnchorEl && resolvedAnchorEl.nodeType === 1 ? resolvedAnchorEl : ownerDocument(paperRef.current).body;
    var anchorRect = anchorElement.getBoundingClientRect();
    if (true) {
      var box = anchorElement.getBoundingClientRect();
      if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
        console.warn(["Material-UI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
      }
    }
    var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : "center";
    return {
      top: anchorRect.top + getOffsetTop(anchorRect, anchorVertical),
      left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)
    };
  }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]);
  var getContentAnchorOffset = useCallback14(function(element2) {
    var contentAnchorOffset = 0;
    if (getContentAnchorEl && anchorReference === "anchorEl") {
      var contentAnchorEl = getContentAnchorEl(element2);
      if (contentAnchorEl && element2.contains(contentAnchorEl)) {
        var scrollTop = getScrollParent(element2, contentAnchorEl);
        contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;
      }
      if (true) {
        if (anchorOrigin.vertical !== "top") {
          console.error(["Material-UI: You can not change the default `anchorOrigin.vertical` value ", "when also providing the `getContentAnchorEl` prop to the popover component.", "Only use one of the two props.", "Set `getContentAnchorEl` to `null | undefined` or leave `anchorOrigin.vertical` unchanged."].join("\n"));
        }
      }
    }
    return contentAnchorOffset;
  }, [anchorOrigin.vertical, anchorReference, getContentAnchorEl]);
  var getTransformOrigin = useCallback14(function(elemRect) {
    var contentAnchorOffset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
    return {
      vertical: getOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,
      horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)
    };
  }, [transformOrigin.horizontal, transformOrigin.vertical]);
  var getPositioningStyle = useCallback14(function(element2) {
    var contentAnchorOffset = getContentAnchorOffset(element2);
    var elemRect = {
      width: element2.offsetWidth,
      height: element2.offsetHeight
    };
    var elemTransformOrigin = getTransformOrigin(elemRect, contentAnchorOffset);
    if (anchorReference === "none") {
      return {
        top: null,
        left: null,
        transformOrigin: getTransformOriginValue(elemTransformOrigin)
      };
    }
    var anchorOffset = getAnchorOffset(contentAnchorOffset);
    var top2 = anchorOffset.top - elemTransformOrigin.vertical;
    var left2 = anchorOffset.left - elemTransformOrigin.horizontal;
    var bottom2 = top2 + elemRect.height;
    var right2 = left2 + elemRect.width;
    var containerWindow = ownerWindow(getAnchorEl(anchorEl));
    var heightThreshold = containerWindow.innerHeight - marginThreshold;
    var widthThreshold = containerWindow.innerWidth - marginThreshold;
    if (top2 < marginThreshold) {
      var diff = top2 - marginThreshold;
      top2 -= diff;
      elemTransformOrigin.vertical += diff;
    } else if (bottom2 > heightThreshold) {
      var _diff = bottom2 - heightThreshold;
      top2 -= _diff;
      elemTransformOrigin.vertical += _diff;
    }
    if (true) {
      if (elemRect.height > heightThreshold && elemRect.height && heightThreshold) {
        console.error(["Material-UI: The popover component is too tall.", "Some part of it can not be seen on the screen (".concat(elemRect.height - heightThreshold, "px)."), "Please consider adding a `max-height` to improve the user-experience."].join("\n"));
      }
    }
    if (left2 < marginThreshold) {
      var _diff2 = left2 - marginThreshold;
      left2 -= _diff2;
      elemTransformOrigin.horizontal += _diff2;
    } else if (right2 > widthThreshold) {
      var _diff3 = right2 - widthThreshold;
      left2 -= _diff3;
      elemTransformOrigin.horizontal += _diff3;
    }
    return {
      top: "".concat(Math.round(top2), "px"),
      left: "".concat(Math.round(left2), "px"),
      transformOrigin: getTransformOriginValue(elemTransformOrigin)
    };
  }, [anchorEl, anchorReference, getAnchorOffset, getContentAnchorOffset, getTransformOrigin, marginThreshold]);
  var setPositioningStyles = useCallback14(function() {
    var element2 = paperRef.current;
    if (!element2) {
      return;
    }
    var positioning = getPositioningStyle(element2);
    if (positioning.top !== null) {
      element2.style.top = positioning.top;
    }
    if (positioning.left !== null) {
      element2.style.left = positioning.left;
    }
    element2.style.transformOrigin = positioning.transformOrigin;
  }, [getPositioningStyle]);
  var handleEntering = function handleEntering2(element2, isAppearing) {
    if (onEntering) {
      onEntering(element2, isAppearing);
    }
    setPositioningStyles();
  };
  var handlePaperRef = useCallback14(function(instance) {
    paperRef.current = findDOMNode9(instance);
  }, []);
  useEffect20(function() {
    if (open) {
      setPositioningStyles();
    }
  });
  useImperativeHandle3(action3, function() {
    return open ? {
      updatePosition: function updatePosition() {
        setPositioningStyles();
      }
    } : null;
  }, [open, setPositioningStyles]);
  useEffect20(function() {
    if (!open) {
      return void 0;
    }
    var handleResize = debounce(function() {
      setPositioningStyles();
    });
    window.addEventListener("resize", handleResize);
    return function() {
      handleResize.clear();
      window.removeEventListener("resize", handleResize);
    };
  }, [open, setPositioningStyles]);
  var transitionDuration = transitionDurationProp;
  if (transitionDurationProp === "auto" && !TransitionComponent.muiSupportAuto) {
    transitionDuration = void 0;
  }
  var container = containerProp || (anchorEl ? ownerDocument(getAnchorEl(anchorEl)).body : void 0);
  return /* @__PURE__ */ createElement66(Modal_default, _extends({
    container,
    open,
    ref: ref2,
    BackdropProps: {
      invisible: true
    },
    className: clsx_m_default(classes.root, className)
  }, other), /* @__PURE__ */ createElement66(TransitionComponent, _extends({
    appear: true,
    in: open,
    onEnter,
    onEntered,
    onExit,
    onExited,
    onExiting,
    timeout: transitionDuration
  }, TransitionProps4, {
    onEntering: createChainedFunction(handleEntering, TransitionProps4.onEntering)
  }), /* @__PURE__ */ createElement66(Paper_default, _extends({
    elevation,
    ref: handlePaperRef
  }, PaperProps, {
    className: clsx_m_default(classes.paper, PaperProps.className)
  }), children2)));
});
true ? Popover.propTypes = {
  action: refType_default,
  anchorEl: chainPropTypes(import_prop_types79.default.oneOfType([HTMLElementType, import_prop_types79.default.func]), function(props) {
    if (props.open && (!props.anchorReference || props.anchorReference === "anchorEl")) {
      var resolvedAnchorEl = getAnchorEl(props.anchorEl);
      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
        var box = resolvedAnchorEl.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          return new Error(["Material-UI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      } else {
        return new Error(["Material-UI: The `anchorEl` prop provided to the component is invalid.", "It should be an Element instance but it's `".concat(resolvedAnchorEl, "` instead.")].join("\n"));
      }
    }
    return null;
  }),
  anchorOrigin: import_prop_types79.default.shape({
    horizontal: import_prop_types79.default.oneOfType([import_prop_types79.default.oneOf(["center", "left", "right"]), import_prop_types79.default.number]).isRequired,
    vertical: import_prop_types79.default.oneOfType([import_prop_types79.default.oneOf(["bottom", "center", "top"]), import_prop_types79.default.number]).isRequired
  }),
  anchorPosition: import_prop_types79.default.shape({
    left: import_prop_types79.default.number.isRequired,
    top: import_prop_types79.default.number.isRequired
  }),
  anchorReference: import_prop_types79.default.oneOf(["anchorEl", "anchorPosition", "none"]),
  children: import_prop_types79.default.node,
  classes: import_prop_types79.default.object,
  className: import_prop_types79.default.string,
  container: import_prop_types79.default.oneOfType([HTMLElementType, import_prop_types79.default.instanceOf(Component3), import_prop_types79.default.func]),
  elevation: import_prop_types79.default.number,
  getContentAnchorEl: import_prop_types79.default.func,
  marginThreshold: import_prop_types79.default.number,
  onClose: import_prop_types79.default.func,
  onEnter: deprecatedPropType(import_prop_types79.default.func, "Use the `TransitionProps` prop instead."),
  onEntered: deprecatedPropType(import_prop_types79.default.func, "Use the `TransitionProps` prop instead."),
  onEntering: deprecatedPropType(import_prop_types79.default.func, "Use the `TransitionProps` prop instead."),
  onExit: deprecatedPropType(import_prop_types79.default.func, "Use the `TransitionProps` prop instead."),
  onExited: deprecatedPropType(import_prop_types79.default.func, "Use the `TransitionProps` prop instead."),
  onExiting: deprecatedPropType(import_prop_types79.default.func, "Use the `TransitionProps` prop instead."),
  open: import_prop_types79.default.bool.isRequired,
  PaperProps: import_prop_types79.default.shape({
    component: elementTypeAcceptingRef_default
  }),
  transformOrigin: import_prop_types79.default.shape({
    horizontal: import_prop_types79.default.oneOfType([import_prop_types79.default.oneOf(["center", "left", "right"]), import_prop_types79.default.number]).isRequired,
    vertical: import_prop_types79.default.oneOfType([import_prop_types79.default.oneOf(["bottom", "center", "top"]), import_prop_types79.default.number]).isRequired
  }),
  TransitionComponent: import_prop_types79.default.elementType,
  transitionDuration: import_prop_types79.default.oneOfType([import_prop_types79.default.oneOf(["auto"]), import_prop_types79.default.number, import_prop_types79.default.shape({
    appear: import_prop_types79.default.number,
    enter: import_prop_types79.default.number,
    exit: import_prop_types79.default.number
  })]),
  TransitionProps: import_prop_types79.default.object
} : void 0;
var Popover_default = withStyles_default2(styles90, {
  name: "MuiPopover"
})(Popover);

// node_modules/@material-ui/core/esm/MenuList/MenuList.js
var import_react_is4 = __toModule(require_react_is2());
var import_prop_types80 = __toModule(require_prop_types());
import {
  Children as Children7,
  cloneElement as cloneElement13,
  createElement as createElement67,
  forwardRef as forwardRef162,
  isValidElement as isValidElement8,
  useCallback as useCallback15,
  useEffect as useEffect21,
  useImperativeHandle as useImperativeHandle4,
  useLayoutEffect as useLayoutEffect8,
  useRef as useRef20
} from "react";
import {
  findDOMNode as findDOMNode10
} from "react-dom";
function nextItem(list, item, disableListWrap) {
  if (list === item) {
    return list.firstChild;
  }
  if (item && item.nextElementSibling) {
    return item.nextElementSibling;
  }
  return disableListWrap ? null : list.firstChild;
}
function previousItem(list, item, disableListWrap) {
  if (list === item) {
    return disableListWrap ? list.firstChild : list.lastChild;
  }
  if (item && item.previousElementSibling) {
    return item.previousElementSibling;
  }
  return disableListWrap ? null : list.lastChild;
}
function textCriteriaMatches(nextFocus, textCriteria) {
  if (textCriteria === void 0) {
    return true;
  }
  var text = nextFocus.innerText;
  if (text === void 0) {
    text = nextFocus.textContent;
  }
  text = text.trim().toLowerCase();
  if (text.length === 0) {
    return false;
  }
  if (textCriteria.repeating) {
    return text[0] === textCriteria.keys[0];
  }
  return text.indexOf(textCriteria.keys.join("")) === 0;
}
function moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {
  var wrappedOnce = false;
  var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);
  while (nextFocus) {
    if (nextFocus === list.firstChild) {
      if (wrappedOnce) {
        return;
      }
      wrappedOnce = true;
    }
    var nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute("aria-disabled") === "true";
    if (!nextFocus.hasAttribute("tabindex") || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {
      nextFocus = traversalFunction(list, nextFocus, disableListWrap);
    } else {
      nextFocus.focus();
      return;
    }
  }
}
var useEnhancedEffect8 = typeof window === "undefined" ? useEffect21 : useLayoutEffect8;
var MenuList = /* @__PURE__ */ forwardRef162(function MenuList2(props, ref2) {
  var actions = props.actions, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, _props$autoFocusItem = props.autoFocusItem, autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem, children2 = props.children, className = props.className, _props$disabledItemsF = props.disabledItemsFocusable, disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF, _props$disableListWra = props.disableListWrap, disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra, onKeyDown = props.onKeyDown, _props$variant = props.variant, variant = _props$variant === void 0 ? "selectedMenu" : _props$variant, other = _objectWithoutProperties(props, ["actions", "autoFocus", "autoFocusItem", "children", "className", "disabledItemsFocusable", "disableListWrap", "onKeyDown", "variant"]);
  var listRef = useRef20(null);
  var textCriteriaRef = useRef20({
    keys: [],
    repeating: true,
    previousKeyMatched: true,
    lastTime: null
  });
  useEnhancedEffect8(function() {
    if (autoFocus) {
      listRef.current.focus();
    }
  }, [autoFocus]);
  useImperativeHandle4(actions, function() {
    return {
      adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) {
        var noExplicitWidth = !listRef.current.style.width;
        if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {
          var scrollbarSize = "".concat(getScrollbarSize(true), "px");
          listRef.current.style[theme.direction === "rtl" ? "paddingLeft" : "paddingRight"] = scrollbarSize;
          listRef.current.style.width = "calc(100% + ".concat(scrollbarSize, ")");
        }
        return listRef.current;
      }
    };
  }, []);
  var handleKeyDown2 = function handleKeyDown3(event) {
    var list = listRef.current;
    var key = event.key;
    var currentFocus = ownerDocument(list).activeElement;
    if (key === "ArrowDown") {
      event.preventDefault();
      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);
    } else if (key === "ArrowUp") {
      event.preventDefault();
      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);
    } else if (key === "Home") {
      event.preventDefault();
      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);
    } else if (key === "End") {
      event.preventDefault();
      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);
    } else if (key.length === 1) {
      var criteria = textCriteriaRef.current;
      var lowerKey = key.toLowerCase();
      var currTime = performance.now();
      if (criteria.keys.length > 0) {
        if (currTime - criteria.lastTime > 500) {
          criteria.keys = [];
          criteria.repeating = true;
          criteria.previousKeyMatched = true;
        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {
          criteria.repeating = false;
        }
      }
      criteria.lastTime = currTime;
      criteria.keys.push(lowerKey);
      var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);
      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {
        event.preventDefault();
      } else {
        criteria.previousKeyMatched = false;
      }
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
  };
  var handleOwnRef = useCallback15(function(instance) {
    listRef.current = findDOMNode10(instance);
  }, []);
  var handleRef = useForkRef(handleOwnRef, ref2);
  var activeItemIndex = -1;
  Children7.forEach(children2, function(child, index4) {
    if (!/* @__PURE__ */ isValidElement8(child)) {
      return;
    }
    if (true) {
      if ((0, import_react_is4.isFragment)(child)) {
        console.error(["Material-UI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    if (!child.props.disabled) {
      if (variant === "selectedMenu" && child.props.selected) {
        activeItemIndex = index4;
      } else if (activeItemIndex === -1) {
        activeItemIndex = index4;
      }
    }
  });
  var items = Children7.map(children2, function(child, index4) {
    if (index4 === activeItemIndex) {
      var newChildProps = {};
      if (autoFocusItem) {
        newChildProps.autoFocus = true;
      }
      if (child.props.tabIndex === void 0 && variant === "selectedMenu") {
        newChildProps.tabIndex = 0;
      }
      return /* @__PURE__ */ cloneElement13(child, newChildProps);
    }
    return child;
  });
  return /* @__PURE__ */ createElement67(List_default, _extends({
    role: "menu",
    ref: handleRef,
    className,
    onKeyDown: handleKeyDown2,
    tabIndex: autoFocus ? 0 : -1
  }, other), items);
});
true ? MenuList.propTypes = {
  autoFocus: import_prop_types80.default.bool,
  autoFocusItem: import_prop_types80.default.bool,
  children: import_prop_types80.default.node,
  className: import_prop_types80.default.string,
  disabledItemsFocusable: import_prop_types80.default.bool,
  disableListWrap: import_prop_types80.default.bool,
  onKeyDown: import_prop_types80.default.func,
  variant: import_prop_types80.default.oneOf(["menu", "selectedMenu"])
} : void 0;
var MenuList_default = MenuList;

// node_modules/@material-ui/core/esm/Menu/Menu.js
import {
  findDOMNode as findDOMNode11
} from "react-dom";
var RTL_ORIGIN = {
  vertical: "top",
  horizontal: "right"
};
var LTR_ORIGIN = {
  vertical: "top",
  horizontal: "left"
};
var styles91 = {
  paper: {
    maxHeight: "calc(100% - 96px)",
    WebkitOverflowScrolling: "touch"
  },
  list: {
    outline: 0
  }
};
var Menu = /* @__PURE__ */ forwardRef163(function Menu2(props, ref2) {
  var _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus, children2 = props.children, classes = props.classes, _props$disableAutoFoc = props.disableAutoFocusItem, disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc, _props$MenuListProps = props.MenuListProps, MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps, onClose = props.onClose, onEnteringProp = props.onEntering, open = props.open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, PopoverClasses = props.PopoverClasses, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? "auto" : _props$transitionDura, _props$TransitionProp = props.TransitionProps;
  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;
  var onEntering = _props$TransitionProp.onEntering, TransitionProps4 = _objectWithoutProperties(_props$TransitionProp, ["onEntering"]), _props$variant = props.variant, variant = _props$variant === void 0 ? "selectedMenu" : _props$variant, other = _objectWithoutProperties(props, ["autoFocus", "children", "classes", "disableAutoFocusItem", "MenuListProps", "onClose", "onEntering", "open", "PaperProps", "PopoverClasses", "transitionDuration", "TransitionProps", "variant"]);
  var theme = useTheme2();
  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;
  var menuListActionsRef = useRef21(null);
  var contentAnchorRef = useRef21(null);
  var getContentAnchorEl = function getContentAnchorEl2() {
    return contentAnchorRef.current;
  };
  var handleEntering = function handleEntering2(element2, isAppearing) {
    if (menuListActionsRef.current) {
      menuListActionsRef.current.adjustStyleForScrollbar(element2, theme);
    }
    if (onEnteringProp) {
      onEnteringProp(element2, isAppearing);
    }
    if (onEntering) {
      onEntering(element2, isAppearing);
    }
  };
  var handleListKeyDown = function handleListKeyDown2(event) {
    if (event.key === "Tab") {
      event.preventDefault();
      if (onClose) {
        onClose(event, "tabKeyDown");
      }
    }
  };
  var activeItemIndex = -1;
  Children8.map(children2, function(child, index4) {
    if (!/* @__PURE__ */ isValidElement9(child)) {
      return;
    }
    if (true) {
      if ((0, import_react_is5.isFragment)(child)) {
        console.error(["Material-UI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    if (!child.props.disabled) {
      if (variant !== "menu" && child.props.selected) {
        activeItemIndex = index4;
      } else if (activeItemIndex === -1) {
        activeItemIndex = index4;
      }
    }
  });
  var items = Children8.map(children2, function(child, index4) {
    if (index4 === activeItemIndex) {
      return /* @__PURE__ */ cloneElement14(child, {
        ref: function ref3(instance) {
          contentAnchorRef.current = findDOMNode11(instance);
          setRef(child.ref, instance);
        }
      });
    }
    return child;
  });
  return /* @__PURE__ */ createElement68(Popover_default, _extends({
    getContentAnchorEl,
    classes: PopoverClasses,
    onClose,
    TransitionProps: _extends({
      onEntering: handleEntering
    }, TransitionProps4),
    anchorOrigin: theme.direction === "rtl" ? RTL_ORIGIN : LTR_ORIGIN,
    transformOrigin: theme.direction === "rtl" ? RTL_ORIGIN : LTR_ORIGIN,
    PaperProps: _extends({}, PaperProps, {
      classes: _extends({}, PaperProps.classes, {
        root: classes.paper
      })
    }),
    open,
    ref: ref2,
    transitionDuration
  }, other), /* @__PURE__ */ createElement68(MenuList_default, _extends({
    onKeyDown: handleListKeyDown,
    actions: menuListActionsRef,
    autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),
    autoFocusItem,
    variant
  }, MenuListProps, {
    className: clsx_m_default(classes.list, MenuListProps.className)
  }), items));
});
true ? Menu.propTypes = {
  anchorEl: import_prop_types81.default.oneOfType([HTMLElementType, import_prop_types81.default.func]),
  autoFocus: import_prop_types81.default.bool,
  children: import_prop_types81.default.node,
  classes: import_prop_types81.default.object,
  disableAutoFocusItem: import_prop_types81.default.bool,
  MenuListProps: import_prop_types81.default.object,
  onClose: import_prop_types81.default.func,
  onEnter: deprecatedPropType(import_prop_types81.default.func, "Use the `TransitionProps` prop instead."),
  onEntered: deprecatedPropType(import_prop_types81.default.func, "Use the `TransitionProps` prop instead."),
  onEntering: deprecatedPropType(import_prop_types81.default.func, "Use the `TransitionProps` prop instead."),
  onExit: deprecatedPropType(import_prop_types81.default.func, "Use the `TransitionProps` prop instead."),
  onExited: deprecatedPropType(import_prop_types81.default.func, "Use the `TransitionProps` prop instead."),
  onExiting: deprecatedPropType(import_prop_types81.default.func, "Use the `TransitionProps` prop instead."),
  open: import_prop_types81.default.bool.isRequired,
  PaperProps: import_prop_types81.default.object,
  PopoverClasses: import_prop_types81.default.object,
  transitionDuration: import_prop_types81.default.oneOfType([import_prop_types81.default.oneOf(["auto"]), import_prop_types81.default.number, import_prop_types81.default.shape({
    appear: import_prop_types81.default.number,
    enter: import_prop_types81.default.number,
    exit: import_prop_types81.default.number
  })]),
  TransitionProps: import_prop_types81.default.object,
  variant: import_prop_types81.default.oneOf(["menu", "selectedMenu"])
} : void 0;
var Menu_default = withStyles_default2(styles91, {
  name: "MuiMenu"
})(Menu);

// node_modules/@material-ui/core/esm/MenuItem/MenuItem.js
var import_prop_types82 = __toModule(require_prop_types());
import {
  createElement as createElement69,
  forwardRef as forwardRef164
} from "react";
var styles92 = function styles93(theme) {
  return {
    root: _extends({}, theme.typography.body1, _defineProperty({
      minHeight: 48,
      paddingTop: 6,
      paddingBottom: 6,
      boxSizing: "border-box",
      width: "auto",
      overflow: "hidden",
      whiteSpace: "nowrap"
    }, theme.breakpoints.up("sm"), {
      minHeight: "auto"
    })),
    gutters: {},
    selected: {},
    dense: _extends({}, theme.typography.body2, {
      minHeight: "auto"
    })
  };
};
var MenuItem = /* @__PURE__ */ forwardRef164(function MenuItem2(props, ref2) {
  var classes = props.classes, className = props.className, _props$component = props.component, component = _props$component === void 0 ? "li" : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, ListItemClasses = props.ListItemClasses, _props$role = props.role, role = _props$role === void 0 ? "menuitem" : _props$role, selected = props.selected, tabIndexProp = props.tabIndex, other = _objectWithoutProperties(props, ["classes", "className", "component", "disableGutters", "ListItemClasses", "role", "selected", "tabIndex"]);
  var tabIndex;
  if (!props.disabled) {
    tabIndex = tabIndexProp !== void 0 ? tabIndexProp : -1;
  }
  return /* @__PURE__ */ createElement69(ListItem_default, _extends({
    button: true,
    role,
    tabIndex,
    component,
    selected,
    disableGutters,
    classes: _extends({
      dense: classes.dense
    }, ListItemClasses),
    className: clsx_m_default(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),
    ref: ref2
  }, other));
});
true ? MenuItem.propTypes = {
  children: import_prop_types82.default.node,
  classes: import_prop_types82.default.object.isRequired,
  className: import_prop_types82.default.string,
  component: import_prop_types82.default.elementType,
  dense: import_prop_types82.default.bool,
  disabled: import_prop_types82.default.bool,
  disableGutters: import_prop_types82.default.bool,
  ListItemClasses: import_prop_types82.default.object,
  role: import_prop_types82.default.string,
  selected: import_prop_types82.default.bool,
  tabIndex: import_prop_types82.default.number
} : void 0;
var MenuItem_default = withStyles_default2(styles92, {
  name: "MuiMenuItem"
})(MenuItem);

// node_modules/@material-ui/core/esm/NativeSelect/NativeSelect.js
var import_prop_types84 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement15,
  createElement as createElement72,
  forwardRef as forwardRef166
} from "react";

// node_modules/@material-ui/core/esm/NativeSelect/NativeSelectInput.js
var import_prop_types83 = __toModule(require_prop_types());
import {
  Fragment as Fragment4,
  createElement as createElement70,
  forwardRef as forwardRef165
} from "react";
var NativeSelectInput = /* @__PURE__ */ forwardRef165(function NativeSelectInput2(props, ref2) {
  var classes = props.classes, className = props.className, disabled3 = props.disabled, IconComponent = props.IconComponent, inputRef = props.inputRef, _props$variant = props.variant, variant = _props$variant === void 0 ? "standard" : _props$variant, other = _objectWithoutProperties(props, ["classes", "className", "disabled", "IconComponent", "inputRef", "variant"]);
  return /* @__PURE__ */ createElement70(Fragment4, null, /* @__PURE__ */ createElement70("select", _extends({
    className: clsx_m_default(classes.root, classes.select, classes[variant], className, disabled3 && classes.disabled),
    disabled: disabled3,
    ref: inputRef || ref2
  }, other)), props.multiple ? null : /* @__PURE__ */ createElement70(IconComponent, {
    className: clsx_m_default(classes.icon, classes["icon".concat(capitalize(variant))], disabled3 && classes.disabled)
  }));
});
true ? NativeSelectInput.propTypes = {
  children: import_prop_types83.default.node,
  classes: import_prop_types83.default.object.isRequired,
  className: import_prop_types83.default.string,
  disabled: import_prop_types83.default.bool,
  IconComponent: import_prop_types83.default.elementType.isRequired,
  inputRef: refType_default,
  multiple: import_prop_types83.default.bool,
  name: import_prop_types83.default.string,
  onChange: import_prop_types83.default.func,
  value: import_prop_types83.default.any,
  variant: import_prop_types83.default.oneOf(["standard", "outlined", "filled"])
} : void 0;
var NativeSelectInput_default = NativeSelectInput;

// node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDropDown.js
import {
  createElement as createElement71
} from "react";
var ArrowDropDown_default = createSvgIcon(/* @__PURE__ */ createElement71("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");

// node_modules/@material-ui/core/esm/NativeSelect/NativeSelect.js
var styles94 = function styles95(theme) {
  return {
    root: {},
    select: {
      "-moz-appearance": "none",
      "-webkit-appearance": "none",
      userSelect: "none",
      borderRadius: 0,
      minWidth: 16,
      cursor: "pointer",
      "&:focus": {
        backgroundColor: theme.palette.type === "light" ? "rgba(0, 0, 0, 0.05)" : "rgba(255, 255, 255, 0.05)",
        borderRadius: 0
      },
      "&::-ms-expand": {
        display: "none"
      },
      "&$disabled": {
        cursor: "default"
      },
      "&[multiple]": {
        height: "auto"
      },
      "&:not([multiple]) option, &:not([multiple]) optgroup": {
        backgroundColor: theme.palette.background.paper
      },
      "&&": {
        paddingRight: 24
      }
    },
    filled: {
      "&&": {
        paddingRight: 32
      }
    },
    outlined: {
      borderRadius: theme.shape.borderRadius,
      "&&": {
        paddingRight: 32
      }
    },
    selectMenu: {
      height: "auto",
      minHeight: "1.1876em",
      textOverflow: "ellipsis",
      whiteSpace: "nowrap",
      overflow: "hidden"
    },
    disabled: {},
    icon: {
      position: "absolute",
      right: 0,
      top: "calc(50% - 12px)",
      pointerEvents: "none",
      color: theme.palette.action.active,
      "&$disabled": {
        color: theme.palette.action.disabled
      }
    },
    iconOpen: {
      transform: "rotate(180deg)"
    },
    iconFilled: {
      right: 7
    },
    iconOutlined: {
      right: 7
    },
    nativeInput: {
      bottom: 0,
      left: 0,
      position: "absolute",
      opacity: 0,
      pointerEvents: "none",
      width: "100%"
    }
  };
};
var defaultInput = /* @__PURE__ */ createElement72(Input_default, null);
var NativeSelect = /* @__PURE__ */ forwardRef166(function NativeSelect2(props, ref2) {
  var children2 = props.children, classes = props.classes, _props$IconComponent = props.IconComponent, IconComponent = _props$IconComponent === void 0 ? ArrowDropDown_default : _props$IconComponent, _props$input = props.input, input = _props$input === void 0 ? defaultInput : _props$input, inputProps = props.inputProps, variant = props.variant, other = _objectWithoutProperties(props, ["children", "classes", "IconComponent", "input", "inputProps", "variant"]);
  var muiFormControl = useFormControl2();
  var fcs = formControlState({
    props,
    muiFormControl,
    states: ["variant"]
  });
  return /* @__PURE__ */ cloneElement15(input, _extends({
    inputComponent: NativeSelectInput_default,
    inputProps: _extends({
      children: children2,
      classes,
      IconComponent,
      variant: fcs.variant,
      type: void 0
    }, inputProps, input ? input.props.inputProps : {}),
    ref: ref2
  }, other));
});
true ? NativeSelect.propTypes = {
  children: import_prop_types84.default.node,
  classes: import_prop_types84.default.object,
  IconComponent: import_prop_types84.default.elementType,
  input: import_prop_types84.default.element,
  inputProps: import_prop_types84.default.object,
  onChange: import_prop_types84.default.func,
  value: import_prop_types84.default.any,
  variant: import_prop_types84.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
NativeSelect.muiName = "Select";
var NativeSelect_default = withStyles_default2(styles94, {
  name: "MuiNativeSelect"
})(NativeSelect);

// node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js
var import_prop_types86 = __toModule(require_prop_types());
import {
  createElement as createElement74,
  forwardRef as forwardRef168
} from "react";

// node_modules/@material-ui/core/esm/OutlinedInput/NotchedOutline.js
var import_prop_types85 = __toModule(require_prop_types());
import {
  createElement as createElement73,
  forwardRef as forwardRef167
} from "react";
var styles96 = function styles97(theme) {
  return {
    root: {
      position: "absolute",
      bottom: 0,
      right: 0,
      top: -5,
      left: 0,
      margin: 0,
      padding: "0 8px",
      pointerEvents: "none",
      borderRadius: "inherit",
      borderStyle: "solid",
      borderWidth: 1,
      overflow: "hidden"
    },
    legend: {
      textAlign: "left",
      padding: 0,
      lineHeight: "11px",
      transition: theme.transitions.create("width", {
        duration: 150,
        easing: theme.transitions.easing.easeOut
      })
    },
    legendLabelled: {
      display: "block",
      width: "auto",
      textAlign: "left",
      padding: 0,
      height: 11,
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: theme.transitions.create("max-width", {
        duration: 50,
        easing: theme.transitions.easing.easeOut
      }),
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block"
      }
    },
    legendNotched: {
      maxWidth: 1e3,
      transition: theme.transitions.create("max-width", {
        duration: 100,
        easing: theme.transitions.easing.easeOut,
        delay: 50
      })
    }
  };
};
var NotchedOutline = /* @__PURE__ */ forwardRef167(function NotchedOutline2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, label3 = props.label, labelWidthProp = props.labelWidth, notched = props.notched, style3 = props.style, other = _objectWithoutProperties(props, ["children", "classes", "className", "label", "labelWidth", "notched", "style"]);
  var theme = useTheme2();
  var align = theme.direction === "rtl" ? "right" : "left";
  if (label3 !== void 0) {
    return /* @__PURE__ */ createElement73("fieldset", _extends({
      "aria-hidden": true,
      className: clsx_m_default(classes.root, className),
      ref: ref2,
      style: style3
    }, other), /* @__PURE__ */ createElement73("legend", {
      className: clsx_m_default(classes.legendLabelled, notched && classes.legendNotched)
    }, label3 ? /* @__PURE__ */ createElement73("span", null, label3) : /* @__PURE__ */ createElement73("span", {
      dangerouslySetInnerHTML: {
        __html: "&#8203;"
      }
    })));
  }
  var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01;
  return /* @__PURE__ */ createElement73("fieldset", _extends({
    "aria-hidden": true,
    style: _extends(_defineProperty({}, "padding".concat(capitalize(align)), 8), style3),
    className: clsx_m_default(classes.root, className),
    ref: ref2
  }, other), /* @__PURE__ */ createElement73("legend", {
    className: classes.legend,
    style: {
      width: notched ? labelWidth : 0.01
    }
  }, /* @__PURE__ */ createElement73("span", {
    dangerouslySetInnerHTML: {
      __html: "&#8203;"
    }
  })));
});
true ? NotchedOutline.propTypes = {
  children: import_prop_types85.default.node,
  classes: import_prop_types85.default.object,
  className: import_prop_types85.default.string,
  label: import_prop_types85.default.node,
  labelWidth: import_prop_types85.default.number.isRequired,
  notched: import_prop_types85.default.bool.isRequired,
  style: import_prop_types85.default.object
} : void 0;
var NotchedOutline_default = withStyles_default2(styles96, {
  name: "PrivateNotchedOutline"
})(NotchedOutline);

// node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js
var styles98 = function styles99(theme) {
  var borderColor2 = theme.palette.type === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    root: {
      position: "relative",
      borderRadius: theme.shape.borderRadius,
      "&:hover $notchedOutline": {
        borderColor: theme.palette.text.primary
      },
      "@media (hover: none)": {
        "&:hover $notchedOutline": {
          borderColor: borderColor2
        }
      },
      "&$focused $notchedOutline": {
        borderColor: theme.palette.primary.main,
        borderWidth: 2
      },
      "&$error $notchedOutline": {
        borderColor: theme.palette.error.main
      },
      "&$disabled $notchedOutline": {
        borderColor: theme.palette.action.disabled
      }
    },
    colorSecondary: {
      "&$focused $notchedOutline": {
        borderColor: theme.palette.secondary.main
      }
    },
    focused: {},
    disabled: {},
    adornedStart: {
      paddingLeft: 14
    },
    adornedEnd: {
      paddingRight: 14
    },
    error: {},
    marginDense: {},
    multiline: {
      padding: "18.5px 14px",
      "&$marginDense": {
        paddingTop: 10.5,
        paddingBottom: 10.5
      }
    },
    notchedOutline: {
      borderColor: borderColor2
    },
    input: {
      padding: "18.5px 14px",
      "&:-webkit-autofill": {
        WebkitBoxShadow: theme.palette.type === "light" ? null : "0 0 0 100px #266798 inset",
        WebkitTextFillColor: theme.palette.type === "light" ? null : "#fff",
        caretColor: theme.palette.type === "light" ? null : "#fff",
        borderRadius: "inherit"
      }
    },
    inputMarginDense: {
      paddingTop: 10.5,
      paddingBottom: 10.5
    },
    inputMultiline: {
      padding: 0
    },
    inputAdornedStart: {
      paddingLeft: 0
    },
    inputAdornedEnd: {
      paddingRight: 0
    }
  };
};
var OutlinedInput = /* @__PURE__ */ forwardRef168(function OutlinedInput2(props, ref2) {
  var classes = props.classes, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? "input" : _props$inputComponent, label3 = props.label, _props$labelWidth = props.labelWidth, labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, notched = props.notched, _props$type = props.type, type3 = _props$type === void 0 ? "text" : _props$type, other = _objectWithoutProperties(props, ["classes", "fullWidth", "inputComponent", "label", "labelWidth", "multiline", "notched", "type"]);
  return /* @__PURE__ */ createElement74(InputBase_default, _extends({
    renderSuffix: function renderSuffix(state) {
      return /* @__PURE__ */ createElement74(NotchedOutline_default, {
        className: classes.notchedOutline,
        label: label3,
        labelWidth,
        notched: typeof notched !== "undefined" ? notched : Boolean(state.startAdornment || state.filled || state.focused)
      });
    },
    classes: _extends({}, classes, {
      root: clsx_m_default(classes.root, classes.underline),
      notchedOutline: null
    }),
    fullWidth,
    inputComponent,
    multiline,
    ref: ref2,
    type: type3
  }, other));
});
true ? OutlinedInput.propTypes = {
  autoComplete: import_prop_types86.default.string,
  autoFocus: import_prop_types86.default.bool,
  classes: import_prop_types86.default.object,
  color: import_prop_types86.default.oneOf(["primary", "secondary"]),
  defaultValue: import_prop_types86.default.any,
  disabled: import_prop_types86.default.bool,
  endAdornment: import_prop_types86.default.node,
  error: import_prop_types86.default.bool,
  fullWidth: import_prop_types86.default.bool,
  id: import_prop_types86.default.string,
  inputComponent: import_prop_types86.default.elementType,
  inputProps: import_prop_types86.default.object,
  inputRef: refType_default,
  label: import_prop_types86.default.node,
  labelWidth: import_prop_types86.default.number,
  margin: import_prop_types86.default.oneOf(["dense", "none"]),
  maxRows: import_prop_types86.default.oneOfType([import_prop_types86.default.number, import_prop_types86.default.string]),
  multiline: import_prop_types86.default.bool,
  name: import_prop_types86.default.string,
  notched: import_prop_types86.default.bool,
  onChange: import_prop_types86.default.func,
  placeholder: import_prop_types86.default.string,
  readOnly: import_prop_types86.default.bool,
  required: import_prop_types86.default.bool,
  rows: import_prop_types86.default.oneOfType([import_prop_types86.default.number, import_prop_types86.default.string]),
  startAdornment: import_prop_types86.default.node,
  type: import_prop_types86.default.string,
  value: import_prop_types86.default.any
} : void 0;
OutlinedInput.muiName = "Input";
var OutlinedInput_default = withStyles_default2(styles98, {
  name: "MuiOutlinedInput"
})(OutlinedInput);

// node_modules/@material-ui/core/esm/Popper/Popper.js
var import_prop_types87 = __toModule(require_prop_types());
import {
  Component as Component4,
  createElement as createElement75,
  forwardRef as forwardRef169,
  useCallback as useCallback16,
  useEffect as useEffect22,
  useImperativeHandle as useImperativeHandle5,
  useLayoutEffect as useLayoutEffect9,
  useRef as useRef22,
  useState as useState13
} from "react";

// node_modules/popper.js/dist/esm/popper.js
var isBrowser2 = typeof window !== "undefined" && typeof document !== "undefined" && typeof navigator !== "undefined";
var timeoutDuration = function() {
  var longerTimeoutBrowsers = ["Edge", "Trident", "Firefox"];
  for (var i2 = 0; i2 < longerTimeoutBrowsers.length; i2 += 1) {
    if (isBrowser2 && navigator.userAgent.indexOf(longerTimeoutBrowsers[i2]) >= 0) {
      return 1;
    }
  }
  return 0;
}();
function microtaskDebounce(fn) {
  var called = false;
  return function() {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function() {
      called = false;
      fn();
    });
  };
}
function taskDebounce(fn) {
  var scheduled = false;
  return function() {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function() {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}
var supportsMicroTasks = isBrowser2 && window.Promise;
var debounce2 = supportsMicroTasks ? microtaskDebounce : taskDebounce;
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === "[object Function]";
}
function getStyleComputedProperty(element2, property) {
  if (element2.nodeType !== 1) {
    return [];
  }
  var window2 = element2.ownerDocument.defaultView;
  var css3 = window2.getComputedStyle(element2, null);
  return property ? css3[property] : css3;
}
function getParentNode(element2) {
  if (element2.nodeName === "HTML") {
    return element2;
  }
  return element2.parentNode || element2.host;
}
function getScrollParent2(element2) {
  if (!element2) {
    return document.body;
  }
  switch (element2.nodeName) {
    case "HTML":
    case "BODY":
      return element2.ownerDocument.body;
    case "#document":
      return element2.body;
  }
  var _getStyleComputedProp = getStyleComputedProperty(element2), overflow2 = _getStyleComputedProp.overflow, overflowX = _getStyleComputedProp.overflowX, overflowY = _getStyleComputedProp.overflowY;
  if (/(auto|scroll|overlay)/.test(overflow2 + overflowY + overflowX)) {
    return element2;
  }
  return getScrollParent2(getParentNode(element2));
}
function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}
var isIE11 = isBrowser2 && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser2 && /MSIE 10/.test(navigator.userAgent);
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}
function getOffsetParent(element2) {
  if (!element2) {
    return document.documentElement;
  }
  var noOffsetParent = isIE(10) ? document.body : null;
  var offsetParent = element2.offsetParent || null;
  while (offsetParent === noOffsetParent && element2.nextElementSibling) {
    offsetParent = (element2 = element2.nextElementSibling).offsetParent;
  }
  var nodeName = offsetParent && offsetParent.nodeName;
  if (!nodeName || nodeName === "BODY" || nodeName === "HTML") {
    return element2 ? element2.ownerDocument.documentElement : document.documentElement;
  }
  if (["TH", "TD", "TABLE"].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, "position") === "static") {
    return getOffsetParent(offsetParent);
  }
  return offsetParent;
}
function isOffsetContainer(element2) {
  var nodeName = element2.nodeName;
  if (nodeName === "BODY") {
    return false;
  }
  return nodeName === "HTML" || getOffsetParent(element2.firstElementChild) === element2;
}
function getRoot(node4) {
  if (node4.parentNode !== null) {
    return getRoot(node4.parentNode);
  }
  return node4;
}
function findCommonOffsetParent(element1, element2) {
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }
  var order2 = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start3 = order2 ? element1 : element2;
  var end2 = order2 ? element2 : element1;
  var range = document.createRange();
  range.setStart(start3, 0);
  range.setEnd(end2, 0);
  var commonAncestorContainer = range.commonAncestorContainer;
  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start3.contains(end2)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }
    return getOffsetParent(commonAncestorContainer);
  }
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}
function getScroll(element2) {
  var side = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "top";
  var upperSide = side === "top" ? "scrollTop" : "scrollLeft";
  var nodeName = element2.nodeName;
  if (nodeName === "BODY" || nodeName === "HTML") {
    var html = element2.ownerDocument.documentElement;
    var scrollingElement = element2.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }
  return element2[upperSide];
}
function includeScroll(rect, element2) {
  var subtract3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var scrollTop = getScroll(element2, "top");
  var scrollLeft = getScroll(element2, "left");
  var modifier = subtract3 ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}
function getBordersSize(styles158, axis) {
  var sideA = axis === "x" ? "Left" : "Top";
  var sideB = sideA === "Left" ? "Right" : "Bottom";
  return parseFloat(styles158["border" + sideA + "Width"]) + parseFloat(styles158["border" + sideB + "Width"]);
}
function getSize(axis, body, html, computedStyle) {
  return Math.max(body["offset" + axis], body["scroll" + axis], html["client" + axis], html["offset" + axis], html["scroll" + axis], isIE(10) ? parseInt(html["offset" + axis]) + parseInt(computedStyle["margin" + (axis === "Height" ? "Top" : "Left")]) + parseInt(computedStyle["margin" + (axis === "Height" ? "Bottom" : "Right")]) : 0);
}
function getWindowSizes(document2) {
  var body = document2.body;
  var html = document2.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);
  return {
    height: getSize("Height", body, html, computedStyle),
    width: getSize("Width", body, html, computedStyle)
  };
}
var classCallCheck = function(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
var createClass = function() {
  function defineProperties(target, props) {
    for (var i2 = 0; i2 < props.length; i2++) {
      var descriptor = props[i2];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var defineProperty = function(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
};
var _extends2 = Object.assign || function(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function getClientRect(offsets) {
  return _extends2({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}
function getBoundingClientRect(element2) {
  var rect = {};
  try {
    if (isIE(10)) {
      rect = element2.getBoundingClientRect();
      var scrollTop = getScroll(element2, "top");
      var scrollLeft = getScroll(element2, "left");
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element2.getBoundingClientRect();
    }
  } catch (e2) {
  }
  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };
  var sizes = element2.nodeName === "HTML" ? getWindowSizes(element2.ownerDocument) : {};
  var width2 = sizes.width || element2.clientWidth || result.width;
  var height2 = sizes.height || element2.clientHeight || result.height;
  var horizScrollbar = element2.offsetWidth - width2;
  var vertScrollbar = element2.offsetHeight - height2;
  if (horizScrollbar || vertScrollbar) {
    var styles158 = getStyleComputedProperty(element2);
    horizScrollbar -= getBordersSize(styles158, "x");
    vertScrollbar -= getBordersSize(styles158, "y");
    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }
  return getClientRect(result);
}
function getOffsetRectRelativeToArbitraryNode(children2, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var isIE102 = isIE(10);
  var isHTML = parent.nodeName === "HTML";
  var childrenRect = getBoundingClientRect(children2);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent2(children2);
  var styles158 = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles158.borderTopWidth);
  var borderLeftWidth = parseFloat(styles158.borderLeftWidth);
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;
  if (!isIE102 && isHTML) {
    var marginTop = parseFloat(styles158.marginTop);
    var marginLeft = parseFloat(styles158.marginLeft);
    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }
  if (isIE102 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== "BODY") {
    offsets = includeScroll(offsets, parent);
  }
  return offsets;
}
function getViewportOffsetRectRelativeToArtbitraryNode(element2) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var html = element2.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element2, html);
  var width2 = Math.max(html.clientWidth, window.innerWidth || 0);
  var height2 = Math.max(html.clientHeight, window.innerHeight || 0);
  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, "left") : 0;
  var offset7 = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width2,
    height: height2
  };
  return getClientRect(offset7);
}
function isFixed(element2) {
  var nodeName = element2.nodeName;
  if (nodeName === "BODY" || nodeName === "HTML") {
    return false;
  }
  if (getStyleComputedProperty(element2, "position") === "fixed") {
    return true;
  }
  var parentNode = getParentNode(element2);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}
function getFixedPositionOffsetParent(element2) {
  if (!element2 || !element2.parentElement || isIE()) {
    return document.documentElement;
  }
  var el2 = element2.parentElement;
  while (el2 && getStyleComputedProperty(el2, "transform") === "none") {
    el2 = el2.parentElement;
  }
  return el2 || document.documentElement;
}
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  if (boundariesElement === "viewport") {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    var boundariesNode = void 0;
    if (boundariesElement === "scrollParent") {
      boundariesNode = getScrollParent2(getParentNode(reference));
      if (boundariesNode.nodeName === "BODY") {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === "window") {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }
    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
    if (boundariesNode.nodeName === "HTML" && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument), height2 = _getWindowSizes.height, width2 = _getWindowSizes.width;
      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height2 + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width2 + offsets.left;
    } else {
      boundaries = offsets;
    }
  }
  padding = padding || 0;
  var isPaddingNumber = typeof padding === "number";
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
  return boundaries;
}
function getArea(_ref6) {
  var width2 = _ref6.width, height2 = _ref6.height;
  return width2 * height2;
}
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0;
  if (placement.indexOf("auto") === -1) {
    return placement;
  }
  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };
  var sortedAreas = Object.keys(rects).map(function(key) {
    return _extends2({
      key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function(a2, b2) {
    return b2.area - a2.area;
  });
  var filteredAreas = sortedAreas.filter(function(_ref23) {
    var width2 = _ref23.width, height2 = _ref23.height;
    return width2 >= popper.clientWidth && height2 >= popper.clientHeight;
  });
  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
  var variation = placement.split("-")[1];
  return computedPlacement + (variation ? "-" + variation : "");
}
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
function getOuterSizes(element2) {
  var window2 = element2.ownerDocument.defaultView;
  var styles158 = window2.getComputedStyle(element2);
  var x2 = parseFloat(styles158.marginTop || 0) + parseFloat(styles158.marginBottom || 0);
  var y2 = parseFloat(styles158.marginLeft || 0) + parseFloat(styles158.marginRight || 0);
  var result = {
    width: element2.offsetWidth + y2,
    height: element2.offsetHeight + x2
  };
  return result;
}
function getOppositePlacement(placement) {
  var hash = { left: "right", right: "left", bottom: "top", top: "bottom" };
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split("-")[0];
  var popperRect = getOuterSizes(popper);
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };
  var isHoriz = ["right", "left"].indexOf(placement) !== -1;
  var mainSide = isHoriz ? "top" : "left";
  var secondarySide = isHoriz ? "left" : "top";
  var measurement = isHoriz ? "height" : "width";
  var secondaryMeasurement = !isHoriz ? "height" : "width";
  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }
  return popperOffsets;
}
function find(arr, check) {
  if (Array.prototype.find) {
    return arr.find(check);
  }
  return arr.filter(check)[0];
}
function findIndex(arr, prop2, value) {
  if (Array.prototype.findIndex) {
    return arr.findIndex(function(cur) {
      return cur[prop2] === value;
    });
  }
  var match2 = find(arr, function(obj) {
    return obj[prop2] === value;
  });
  return arr.indexOf(match2);
}
function runModifiers(modifiers2, data, ends) {
  var modifiersToRun = ends === void 0 ? modifiers2 : modifiers2.slice(0, findIndex(modifiers2, "name", ends));
  modifiersToRun.forEach(function(modifier) {
    if (modifier["function"]) {
      console.warn("`modifier.function` is deprecated, use `modifier.fn`!");
    }
    var fn = modifier["function"] || modifier.fn;
    if (modifier.enabled && isFunction(fn)) {
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);
      data = fn(data, modifier);
    }
  });
  return data;
}
function update2() {
  if (this.state.isDestroyed) {
    return;
  }
  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
  data.originalPlacement = data.placement;
  data.positionFixed = this.options.positionFixed;
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
  data.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute";
  data = runModifiers(this.modifiers, data);
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}
function isModifierEnabled(modifiers2, modifierName) {
  return modifiers2.some(function(_ref6) {
    var name = _ref6.name, enabled = _ref6.enabled;
    return enabled && name === modifierName;
  });
}
function getSupportedPropertyName(property) {
  var prefixes = [false, "ms", "Webkit", "Moz", "O"];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);
  for (var i2 = 0; i2 < prefixes.length; i2++) {
    var prefix4 = prefixes[i2];
    var toCheck = prefix4 ? "" + prefix4 + upperProp : property;
    if (typeof document.body.style[toCheck] !== "undefined") {
      return toCheck;
    }
  }
  return null;
}
function destroy() {
  this.state.isDestroyed = true;
  if (isModifierEnabled(this.modifiers, "applyStyle")) {
    this.popper.removeAttribute("x-placement");
    this.popper.style.position = "";
    this.popper.style.top = "";
    this.popper.style.left = "";
    this.popper.style.right = "";
    this.popper.style.bottom = "";
    this.popper.style.willChange = "";
    this.popper.style[getSupportedPropertyName("transform")] = "";
  }
  this.disableEventListeners();
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}
function getWindow(element2) {
  var ownerDocument2 = element2.ownerDocument;
  return ownerDocument2 ? ownerDocument2.defaultView : window;
}
function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === "BODY";
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });
  if (!isBody) {
    attachToScrollParents(getScrollParent2(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}
function setupEventListeners(reference, options, state, updateBound) {
  state.updateBound = updateBound;
  getWindow(reference).addEventListener("resize", state.updateBound, { passive: true });
  var scrollElement = getScrollParent2(reference);
  attachToScrollParents(scrollElement, "scroll", state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;
  return state;
}
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}
function removeEventListeners(reference, state) {
  getWindow(reference).removeEventListener("resize", state.updateBound);
  state.scrollParents.forEach(function(target) {
    target.removeEventListener("scroll", state.updateBound);
  });
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}
function isNumeric(n2) {
  return n2 !== "" && !isNaN(parseFloat(n2)) && isFinite(n2);
}
function setStyles(element2, styles158) {
  Object.keys(styles158).forEach(function(prop2) {
    var unit3 = "";
    if (["width", "height", "top", "right", "bottom", "left"].indexOf(prop2) !== -1 && isNumeric(styles158[prop2])) {
      unit3 = "px";
    }
    element2.style[prop2] = styles158[prop2] + unit3;
  });
}
function setAttributes(element2, attributes) {
  Object.keys(attributes).forEach(function(prop2) {
    var value = attributes[prop2];
    if (value !== false) {
      element2.setAttribute(prop2, attributes[prop2]);
    } else {
      element2.removeAttribute(prop2);
    }
  });
}
function applyStyle(data) {
  setStyles(data.instance.popper, data.styles);
  setAttributes(data.instance.popper, data.attributes);
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }
  return data;
}
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
  popper.setAttribute("x-placement", placement);
  setStyles(popper, { position: options.positionFixed ? "fixed" : "absolute" });
  return options;
}
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var round4 = Math.round, floor2 = Math.floor;
  var noRound = function noRound2(v2) {
    return v2;
  };
  var referenceWidth = round4(reference.width);
  var popperWidth = round4(popper.width);
  var isVertical = ["left", "right"].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf("-") !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round4 : floor2;
  var verticalToInteger = !shouldRound ? noRound : round4;
  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}
var isFirefox = isBrowser2 && /Firefox/i.test(navigator.userAgent);
function computeStyle(data, options) {
  var x2 = options.x, y2 = options.y;
  var popper = data.offsets.popper;
  var legacyGpuAccelerationOption = find(data.instance.modifiers, function(modifier) {
    return modifier.name === "applyStyle";
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== void 0) {
    console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== void 0 ? legacyGpuAccelerationOption : options.gpuAcceleration;
  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);
  var styles158 = {
    position: popper.position
  };
  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
  var sideA = x2 === "bottom" ? "top" : "bottom";
  var sideB = y2 === "right" ? "left" : "right";
  var prefixedProperty = getSupportedPropertyName("transform");
  var left2 = void 0, top2 = void 0;
  if (sideA === "bottom") {
    if (offsetParent.nodeName === "HTML") {
      top2 = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top2 = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top2 = offsets.top;
  }
  if (sideB === "right") {
    if (offsetParent.nodeName === "HTML") {
      left2 = -offsetParent.clientWidth + offsets.right;
    } else {
      left2 = -offsetParentRect.width + offsets.right;
    }
  } else {
    left2 = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles158[prefixedProperty] = "translate3d(" + left2 + "px, " + top2 + "px, 0)";
    styles158[sideA] = 0;
    styles158[sideB] = 0;
    styles158.willChange = "transform";
  } else {
    var invertTop = sideA === "bottom" ? -1 : 1;
    var invertLeft = sideB === "right" ? -1 : 1;
    styles158[sideA] = top2 * invertTop;
    styles158[sideB] = left2 * invertLeft;
    styles158.willChange = sideA + ", " + sideB;
  }
  var attributes = {
    "x-placement": data.placement
  };
  data.attributes = _extends2({}, attributes, data.attributes);
  data.styles = _extends2({}, styles158, data.styles);
  data.arrowStyles = _extends2({}, data.offsets.arrow, data.arrowStyles);
  return data;
}
function isModifierRequired(modifiers2, requestingName, requestedName) {
  var requesting = find(modifiers2, function(_ref6) {
    var name = _ref6.name;
    return name === requestingName;
  });
  var isRequired = !!requesting && modifiers2.some(function(modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });
  if (!isRequired) {
    var _requesting = "`" + requestingName + "`";
    var requested = "`" + requestedName + "`";
    console.warn(requested + " modifier is required by " + _requesting + " modifier in order to work, be sure to include it before " + _requesting + "!");
  }
  return isRequired;
}
function arrow(data, options) {
  var _data$offsets$arrow;
  if (!isModifierRequired(data.instance.modifiers, "arrow", "keepTogether")) {
    return data;
  }
  var arrowElement = options.element;
  if (typeof arrowElement === "string") {
    arrowElement = data.instance.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return data;
    }
  } else {
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn("WARNING: `arrow.element` must be child of its popper element!");
      return data;
    }
  }
  var placement = data.placement.split("-")[0];
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var isVertical = ["left", "right"].indexOf(placement) !== -1;
  var len = isVertical ? "height" : "width";
  var sideCapitalized = isVertical ? "Top" : "Left";
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? "left" : "top";
  var opSide = isVertical ? "bottom" : "right";
  var arrowElementSize = getOuterSizes(arrowElement)[len];
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;
  var css3 = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css3["margin" + sideCapitalized]);
  var popperBorderSide = parseFloat(css3["border" + sideCapitalized + "Width"]);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ""), _data$offsets$arrow);
  return data;
}
function getOppositeVariation(variation) {
  if (variation === "end") {
    return "start";
  } else if (variation === "start") {
    return "end";
  }
  return variation;
}
var placements = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"];
var validPlacements = placements.slice(3);
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var index4 = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index4 + 1).concat(validPlacements.slice(0, index4));
  return counter ? arr.reverse() : arr;
}
var BEHAVIORS = {
  FLIP: "flip",
  CLOCKWISE: "clockwise",
  COUNTERCLOCKWISE: "counterclockwise"
};
function flip(data, options) {
  if (isModifierEnabled(data.instance.modifiers, "inner")) {
    return data;
  }
  if (data.flipped && data.placement === data.originalPlacement) {
    return data;
  }
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
  var placement = data.placement.split("-")[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split("-")[1] || "";
  var flipOrder = [];
  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }
  flipOrder.forEach(function(step, index4) {
    if (placement !== step || flipOrder.length === index4 + 1) {
      return data;
    }
    placement = data.placement.split("-")[0];
    placementOpposite = getOppositePlacement(placement);
    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;
    var floor2 = Math.floor;
    var overlapsRef = placement === "left" && floor2(popperOffsets.right) > floor2(refOffsets.left) || placement === "right" && floor2(popperOffsets.left) < floor2(refOffsets.right) || placement === "top" && floor2(popperOffsets.bottom) > floor2(refOffsets.top) || placement === "bottom" && floor2(popperOffsets.top) < floor2(refOffsets.bottom);
    var overflowsLeft = floor2(popperOffsets.left) < floor2(boundaries.left);
    var overflowsRight = floor2(popperOffsets.right) > floor2(boundaries.right);
    var overflowsTop = floor2(popperOffsets.top) < floor2(boundaries.top);
    var overflowsBottom = floor2(popperOffsets.bottom) > floor2(boundaries.bottom);
    var overflowsBoundaries = placement === "left" && overflowsLeft || placement === "right" && overflowsRight || placement === "top" && overflowsTop || placement === "bottom" && overflowsBottom;
    var isVertical = ["top", "bottom"].indexOf(placement) !== -1;
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === "start" && overflowsLeft || isVertical && variation === "end" && overflowsRight || !isVertical && variation === "start" && overflowsTop || !isVertical && variation === "end" && overflowsBottom);
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === "start" && overflowsRight || isVertical && variation === "end" && overflowsLeft || !isVertical && variation === "start" && overflowsBottom || !isVertical && variation === "end" && overflowsTop);
    var flippedVariation = flippedVariationByRef || flippedVariationByContent;
    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      data.flipped = true;
      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index4 + 1];
      }
      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }
      data.placement = placement + (variation ? "-" + variation : "");
      data.offsets.popper = _extends2({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
      data = runModifiers(data.instance.modifiers, data, "flip");
    }
  });
  return data;
}
function keepTogether(data) {
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var placement = data.placement.split("-")[0];
  var floor2 = Math.floor;
  var isVertical = ["top", "bottom"].indexOf(placement) !== -1;
  var side = isVertical ? "right" : "bottom";
  var opSide = isVertical ? "left" : "top";
  var measurement = isVertical ? "width" : "height";
  if (popper[side] < floor2(reference[opSide])) {
    data.offsets.popper[opSide] = floor2(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor2(reference[side])) {
    data.offsets.popper[opSide] = floor2(reference[side]);
  }
  return data;
}
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  var split2 = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split2[1];
  var unit3 = split2[2];
  if (!value) {
    return str;
  }
  if (unit3.indexOf("%") === 0) {
    var element2 = void 0;
    switch (unit3) {
      case "%p":
        element2 = popperOffsets;
        break;
      case "%":
      case "%r":
      default:
        element2 = referenceOffsets;
    }
    var rect = getClientRect(element2);
    return rect[measurement] / 100 * value;
  } else if (unit3 === "vh" || unit3 === "vw") {
    var size = void 0;
    if (unit3 === "vh") {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    return value;
  }
}
function parseOffset(offset7, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];
  var useHeight = ["right", "left"].indexOf(basePlacement) !== -1;
  var fragments = offset7.split(/(\+|\-)/).map(function(frag) {
    return frag.trim();
  });
  var divider = fragments.indexOf(find(fragments, function(frag) {
    return frag.search(/,|\s/) !== -1;
  }));
  if (fragments[divider] && fragments[divider].indexOf(",") === -1) {
    console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");
  }
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];
  ops = ops.map(function(op, index4) {
    var measurement = (index4 === 1 ? !useHeight : useHeight) ? "height" : "width";
    var mergeWithPrevious = false;
    return op.reduce(function(a2, b2) {
      if (a2[a2.length - 1] === "" && ["+", "-"].indexOf(b2) !== -1) {
        a2[a2.length - 1] = b2;
        mergeWithPrevious = true;
        return a2;
      } else if (mergeWithPrevious) {
        a2[a2.length - 1] += b2;
        mergeWithPrevious = false;
        return a2;
      } else {
        return a2.concat(b2);
      }
    }, []).map(function(str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });
  ops.forEach(function(op, index4) {
    op.forEach(function(frag, index22) {
      if (isNumeric(frag)) {
        offsets[index4] += frag * (op[index22 - 1] === "-" ? -1 : 1);
      }
    });
  });
  return offsets;
}
function offset(data, _ref6) {
  var offset7 = _ref6.offset;
  var placement = data.placement, _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var basePlacement = placement.split("-")[0];
  var offsets = void 0;
  if (isNumeric(+offset7)) {
    offsets = [+offset7, 0];
  } else {
    offsets = parseOffset(offset7, popper, reference, basePlacement);
  }
  if (basePlacement === "left") {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === "right") {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === "top") {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === "bottom") {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }
  data.popper = popper;
  return data;
}
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }
  var transformProp = getSupportedPropertyName("transform");
  var popperStyles = data.instance.popper.style;
  var top2 = popperStyles.top, left2 = popperStyles.left, transform4 = popperStyles[transformProp];
  popperStyles.top = "";
  popperStyles.left = "";
  popperStyles[transformProp] = "";
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
  popperStyles.top = top2;
  popperStyles.left = left2;
  popperStyles[transformProp] = transform4;
  options.boundaries = boundaries;
  var order2 = options.priority;
  var popper = data.offsets.popper;
  var check = {
    primary: function primary3(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary3(placement) {
      var mainSide = placement === "right" ? "left" : "top";
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === "right" ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };
  order2.forEach(function(placement) {
    var side = ["left", "top"].indexOf(placement) !== -1 ? "primary" : "secondary";
    popper = _extends2({}, popper, check[side](placement));
  });
  data.offsets.popper = popper;
  return data;
}
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split("-")[0];
  var shiftvariation = placement.split("-")[1];
  if (shiftvariation) {
    var _data$offsets = data.offsets, reference = _data$offsets.reference, popper = _data$offsets.popper;
    var isVertical = ["bottom", "top"].indexOf(basePlacement) !== -1;
    var side = isVertical ? "left" : "top";
    var measurement = isVertical ? "width" : "height";
    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };
    data.offsets.popper = _extends2({}, popper, shiftOffsets[shiftvariation]);
  }
  return data;
}
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, "hide", "preventOverflow")) {
    return data;
  }
  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function(modifier) {
    return modifier.name === "preventOverflow";
  }).boundaries;
  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    if (data.hide === true) {
      return data;
    }
    data.hide = true;
    data.attributes["x-out-of-boundaries"] = "";
  } else {
    if (data.hide === false) {
      return data;
    }
    data.hide = false;
    data.attributes["x-out-of-boundaries"] = false;
  }
  return data;
}
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split("-")[0];
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var isHoriz = ["left", "right"].indexOf(basePlacement) !== -1;
  var subtractLength = ["top", "left"].indexOf(basePlacement) === -1;
  popper[isHoriz ? "left" : "top"] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? "width" : "height"] : 0);
  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);
  return data;
}
var modifiers = {
  shift: {
    order: 100,
    enabled: true,
    fn: shift
  },
  offset: {
    order: 200,
    enabled: true,
    fn: offset,
    offset: 0
  },
  preventOverflow: {
    order: 300,
    enabled: true,
    fn: preventOverflow,
    priority: ["left", "right", "top", "bottom"],
    padding: 5,
    boundariesElement: "scrollParent"
  },
  keepTogether: {
    order: 400,
    enabled: true,
    fn: keepTogether
  },
  arrow: {
    order: 500,
    enabled: true,
    fn: arrow,
    element: "[x-arrow]"
  },
  flip: {
    order: 600,
    enabled: true,
    fn: flip,
    behavior: "flip",
    padding: 5,
    boundariesElement: "viewport",
    flipVariations: false,
    flipVariationsByContent: false
  },
  inner: {
    order: 700,
    enabled: false,
    fn: inner
  },
  hide: {
    order: 800,
    enabled: true,
    fn: hide
  },
  computeStyle: {
    order: 850,
    enabled: true,
    fn: computeStyle,
    gpuAcceleration: true,
    x: "bottom",
    y: "right"
  },
  applyStyle: {
    order: 900,
    enabled: true,
    fn: applyStyle,
    onLoad: applyStyleOnLoad,
    gpuAcceleration: void 0
  }
};
var Defaults = {
  placement: "bottom",
  positionFixed: false,
  eventsEnabled: true,
  removeOnDestroy: false,
  onCreate: function onCreate() {
  },
  onUpdate: function onUpdate() {
  },
  modifiers
};
var Popper = function() {
  function Popper4(reference, popper) {
    var _this = this;
    var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    classCallCheck(this, Popper4);
    this.scheduleUpdate = function() {
      return requestAnimationFrame(_this.update);
    };
    this.update = debounce2(this.update.bind(this));
    this.options = _extends2({}, Popper4.Defaults, options);
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;
    this.options.modifiers = {};
    Object.keys(_extends2({}, Popper4.Defaults.modifiers, options.modifiers)).forEach(function(name) {
      _this.options.modifiers[name] = _extends2({}, Popper4.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });
    this.modifiers = Object.keys(this.options.modifiers).map(function(name) {
      return _extends2({
        name
      }, _this.options.modifiers[name]);
    }).sort(function(a2, b2) {
      return a2.order - b2.order;
    });
    this.modifiers.forEach(function(modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });
    this.update();
    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      this.enableEventListeners();
    }
    this.state.eventsEnabled = eventsEnabled;
  }
  createClass(Popper4, [{
    key: "update",
    value: function update$$1() {
      return update2.call(this);
    }
  }, {
    key: "destroy",
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: "enableEventListeners",
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: "disableEventListeners",
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }
  }]);
  return Popper4;
}();
Popper.Utils = (typeof window !== "undefined" ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;
var popper_default = Popper;

// node_modules/@material-ui/core/esm/Popper/Popper.js
function flipPlacement(placement, theme) {
  var direction = theme && theme.direction || "ltr";
  if (direction === "ltr") {
    return placement;
  }
  switch (placement) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return placement;
  }
}
function getAnchorEl2(anchorEl) {
  return typeof anchorEl === "function" ? anchorEl() : anchorEl;
}
var useEnhancedEffect9 = typeof window !== "undefined" ? useLayoutEffect9 : useEffect22;
var defaultPopperOptions = {};
var Popper2 = /* @__PURE__ */ forwardRef169(function Popper3(props, ref2) {
  var anchorEl = props.anchorEl, children2 = props.children, container = props.container, _props$disablePortal = props.disablePortal, disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal, _props$keepMounted = props.keepMounted, keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted, modifiers2 = props.modifiers, open = props.open, _props$placement = props.placement, initialPlacement = _props$placement === void 0 ? "bottom" : _props$placement, _props$popperOptions = props.popperOptions, popperOptions = _props$popperOptions === void 0 ? defaultPopperOptions : _props$popperOptions, popperRefProp = props.popperRef, style3 = props.style, _props$transition = props.transition, transition3 = _props$transition === void 0 ? false : _props$transition, other = _objectWithoutProperties(props, ["anchorEl", "children", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition"]);
  var tooltipRef = useRef22(null);
  var ownRef = useForkRef(tooltipRef, ref2);
  var popperRef = useRef22(null);
  var handlePopperRef = useForkRef(popperRef, popperRefProp);
  var handlePopperRefRef = useRef22(handlePopperRef);
  useEnhancedEffect9(function() {
    handlePopperRefRef.current = handlePopperRef;
  }, [handlePopperRef]);
  useImperativeHandle5(popperRefProp, function() {
    return popperRef.current;
  }, []);
  var _React$useState = useState13(true), exited = _React$useState[0], setExited = _React$useState[1];
  var theme = useTheme();
  var rtlPlacement = flipPlacement(initialPlacement, theme);
  var _React$useState2 = useState13(rtlPlacement), placement = _React$useState2[0], setPlacement = _React$useState2[1];
  useEffect22(function() {
    if (popperRef.current) {
      popperRef.current.update();
    }
  });
  var handleOpen = useCallback16(function() {
    if (!tooltipRef.current || !anchorEl || !open) {
      return;
    }
    if (popperRef.current) {
      popperRef.current.destroy();
      handlePopperRefRef.current(null);
    }
    var handlePopperUpdate = function handlePopperUpdate2(data) {
      setPlacement(data.placement);
    };
    var resolvedAnchorEl = getAnchorEl2(anchorEl);
    if (true) {
      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
        var box = resolvedAnchorEl.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          console.warn(["Material-UI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      }
    }
    var popper = new popper_default(getAnchorEl2(anchorEl), tooltipRef.current, _extends({
      placement: rtlPlacement
    }, popperOptions, {
      modifiers: _extends({}, disablePortal ? {} : {
        preventOverflow: {
          boundariesElement: "window"
        }
      }, modifiers2, popperOptions.modifiers),
      onCreate: createChainedFunction(handlePopperUpdate, popperOptions.onCreate),
      onUpdate: createChainedFunction(handlePopperUpdate, popperOptions.onUpdate)
    }));
    handlePopperRefRef.current(popper);
  }, [anchorEl, disablePortal, modifiers2, open, rtlPlacement, popperOptions]);
  var handleRef = useCallback16(function(node4) {
    setRef(ownRef, node4);
    handleOpen();
  }, [ownRef, handleOpen]);
  var handleEnter = function handleEnter2() {
    setExited(false);
  };
  var handleClose = function handleClose2() {
    if (!popperRef.current) {
      return;
    }
    popperRef.current.destroy();
    handlePopperRefRef.current(null);
  };
  var handleExited = function handleExited2() {
    setExited(true);
    handleClose();
  };
  useEffect22(function() {
    return function() {
      handleClose();
    };
  }, []);
  useEffect22(function() {
    if (!open && !transition3) {
      handleClose();
    }
  }, [open, transition3]);
  if (!keepMounted && !open && (!transition3 || exited)) {
    return null;
  }
  var childProps = {
    placement
  };
  if (transition3) {
    childProps.TransitionProps = {
      in: open,
      onEnter: handleEnter,
      onExited: handleExited
    };
  }
  return /* @__PURE__ */ createElement75(Portal_default, {
    disablePortal,
    container
  }, /* @__PURE__ */ createElement75("div", _extends({
    ref: handleRef,
    role: "tooltip"
  }, other, {
    style: _extends({
      position: "fixed",
      top: 0,
      left: 0,
      display: !open && keepMounted && !transition3 ? "none" : null
    }, style3)
  }), typeof children2 === "function" ? children2(childProps) : children2));
});
true ? Popper2.propTypes = {
  anchorEl: chainPropTypes(import_prop_types87.default.oneOfType([HTMLElementType, import_prop_types87.default.object, import_prop_types87.default.func]), function(props) {
    if (props.open) {
      var resolvedAnchorEl = getAnchorEl2(props.anchorEl);
      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
        var box = resolvedAnchorEl.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          return new Error(["Material-UI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      } else if (!resolvedAnchorEl || typeof resolvedAnchorEl.clientWidth !== "number" || typeof resolvedAnchorEl.clientHeight !== "number" || typeof resolvedAnchorEl.getBoundingClientRect !== "function") {
        return new Error(["Material-UI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a referenceObject ", "(https://popper.js.org/docs/v1/#referenceObject)."].join("\n"));
      }
    }
    return null;
  }),
  children: import_prop_types87.default.oneOfType([import_prop_types87.default.node, import_prop_types87.default.func]).isRequired,
  container: import_prop_types87.default.oneOfType([HTMLElementType, import_prop_types87.default.instanceOf(Component4), import_prop_types87.default.func]),
  disablePortal: import_prop_types87.default.bool,
  keepMounted: import_prop_types87.default.bool,
  modifiers: import_prop_types87.default.object,
  open: import_prop_types87.default.bool.isRequired,
  placement: import_prop_types87.default.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  popperOptions: import_prop_types87.default.object,
  popperRef: refType_default,
  style: import_prop_types87.default.object,
  transition: import_prop_types87.default.bool
} : void 0;
var Popper_default = Popper2;

// node_modules/@material-ui/core/esm/Radio/Radio.js
var import_prop_types89 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement16,
  createElement as createElement79,
  forwardRef as forwardRef170
} from "react";

// node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js
var import_prop_types88 = __toModule(require_prop_types());
import {
  createElement as createElement78
} from "react";

// node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js
import {
  createElement as createElement76
} from "react";
var RadioButtonUnchecked_default = createSvgIcon(/* @__PURE__ */ createElement76("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked");

// node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js
import {
  createElement as createElement77
} from "react";
var RadioButtonChecked_default = createSvgIcon(/* @__PURE__ */ createElement77("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked");

// node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js
var styles100 = function styles101(theme) {
  return {
    root: {
      position: "relative",
      display: "flex",
      "&$checked $layer": {
        transform: "scale(1)",
        transition: theme.transitions.create("transform", {
          easing: theme.transitions.easing.easeOut,
          duration: theme.transitions.duration.shortest
        })
      }
    },
    layer: {
      left: 0,
      position: "absolute",
      transform: "scale(0)",
      transition: theme.transitions.create("transform", {
        easing: theme.transitions.easing.easeIn,
        duration: theme.transitions.duration.shortest
      })
    },
    checked: {}
  };
};
function RadioButtonIcon(props) {
  var checked = props.checked, classes = props.classes, fontSize3 = props.fontSize;
  return /* @__PURE__ */ createElement78("div", {
    className: clsx_m_default(classes.root, checked && classes.checked)
  }, /* @__PURE__ */ createElement78(RadioButtonUnchecked_default, {
    fontSize: fontSize3
  }), /* @__PURE__ */ createElement78(RadioButtonChecked_default, {
    fontSize: fontSize3,
    className: classes.layer
  }));
}
true ? RadioButtonIcon.propTypes = {
  checked: import_prop_types88.default.bool,
  classes: import_prop_types88.default.object.isRequired,
  fontSize: import_prop_types88.default.oneOf(["small", "medium"])
} : void 0;
var RadioButtonIcon_default = withStyles_default2(styles100, {
  name: "PrivateRadioButtonIcon"
})(RadioButtonIcon);

// node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js
import {
  useContext as useContext8
} from "react";

// node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js
import {
  createContext as createContext4
} from "react";
var RadioGroupContext = createContext4();
if (true) {
  RadioGroupContext.displayName = "RadioGroupContext";
}
var RadioGroupContext_default = RadioGroupContext;

// node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js
function useRadioGroup() {
  return useContext8(RadioGroupContext_default);
}

// node_modules/@material-ui/core/esm/Radio/Radio.js
var styles102 = function styles103(theme) {
  return {
    root: {
      color: theme.palette.text.secondary
    },
    checked: {},
    disabled: {},
    colorPrimary: {
      "&$checked": {
        color: theme.palette.primary.main,
        "&:hover": {
          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        }
      },
      "&$disabled": {
        color: theme.palette.action.disabled
      }
    },
    colorSecondary: {
      "&$checked": {
        color: theme.palette.secondary.main,
        "&:hover": {
          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        }
      },
      "&$disabled": {
        color: theme.palette.action.disabled
      }
    }
  };
};
var defaultCheckedIcon2 = /* @__PURE__ */ createElement79(RadioButtonIcon_default, {
  checked: true
});
var defaultIcon2 = /* @__PURE__ */ createElement79(RadioButtonIcon_default, null);
var Radio = /* @__PURE__ */ forwardRef170(function Radio2(props, ref2) {
  var checkedProp = props.checked, classes = props.classes, _props$color = props.color, color2 = _props$color === void 0 ? "secondary" : _props$color, nameProp = props.name, onChangeProp = props.onChange, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, other = _objectWithoutProperties(props, ["checked", "classes", "color", "name", "onChange", "size"]);
  var radioGroup = useRadioGroup();
  var checked = checkedProp;
  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);
  var name = nameProp;
  if (radioGroup) {
    if (typeof checked === "undefined") {
      checked = radioGroup.value === props.value;
    }
    if (typeof name === "undefined") {
      name = radioGroup.name;
    }
  }
  return /* @__PURE__ */ createElement79(SwitchBase_default, _extends({
    color: color2,
    type: "radio",
    icon: /* @__PURE__ */ cloneElement16(defaultIcon2, {
      fontSize: size === "small" ? "small" : "medium"
    }),
    checkedIcon: /* @__PURE__ */ cloneElement16(defaultCheckedIcon2, {
      fontSize: size === "small" ? "small" : "medium"
    }),
    classes: {
      root: clsx_m_default(classes.root, classes["color".concat(capitalize(color2))]),
      checked: classes.checked,
      disabled: classes.disabled
    },
    name,
    checked,
    onChange,
    ref: ref2
  }, other));
});
true ? Radio.propTypes = {
  checked: import_prop_types89.default.bool,
  checkedIcon: import_prop_types89.default.node,
  classes: import_prop_types89.default.object,
  color: import_prop_types89.default.oneOf(["default", "primary", "secondary"]),
  disabled: import_prop_types89.default.bool,
  disableRipple: import_prop_types89.default.bool,
  icon: import_prop_types89.default.node,
  id: import_prop_types89.default.string,
  inputProps: import_prop_types89.default.object,
  inputRef: refType_default,
  name: import_prop_types89.default.string,
  onChange: import_prop_types89.default.func,
  required: import_prop_types89.default.bool,
  size: import_prop_types89.default.oneOf(["medium", "small"]),
  value: import_prop_types89.default.any
} : void 0;
var Radio_default = withStyles_default2(styles102, {
  name: "MuiRadio"
})(Radio);

// node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js
var import_prop_types90 = __toModule(require_prop_types());
import {
  createElement as createElement80,
  forwardRef as forwardRef171,
  useImperativeHandle as useImperativeHandle6,
  useRef as useRef23
} from "react";
var RadioGroup = /* @__PURE__ */ forwardRef171(function RadioGroup2(props, ref2) {
  var actions = props.actions, children2 = props.children, nameProp = props.name, valueProp = props.value, onChange = props.onChange, other = _objectWithoutProperties(props, ["actions", "children", "name", "value", "onChange"]);
  var rootRef = useRef23(null);
  var _useControlled = useControlled({
    controlled: valueProp,
    default: props.defaultValue,
    name: "RadioGroup"
  }), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], setValue = _useControlled2[1];
  useImperativeHandle6(actions, function() {
    return {
      focus: function focus2() {
        var input = rootRef.current.querySelector("input:not(:disabled):checked");
        if (!input) {
          input = rootRef.current.querySelector("input:not(:disabled)");
        }
        if (input) {
          input.focus();
        }
      }
    };
  }, []);
  var handleRef = useForkRef(ref2, rootRef);
  var handleChange = function handleChange2(event) {
    setValue(event.target.value);
    if (onChange) {
      onChange(event, event.target.value);
    }
  };
  var name = useId(nameProp);
  return /* @__PURE__ */ createElement80(RadioGroupContext_default.Provider, {
    value: {
      name,
      onChange: handleChange,
      value
    }
  }, /* @__PURE__ */ createElement80(FormGroup_default, _extends({
    role: "radiogroup",
    ref: handleRef
  }, other), children2));
});
true ? RadioGroup.propTypes = {
  children: import_prop_types90.default.node,
  defaultValue: import_prop_types90.default.oneOfType([import_prop_types90.default.arrayOf(import_prop_types90.default.string), import_prop_types90.default.number, import_prop_types90.default.string]),
  name: import_prop_types90.default.string,
  onChange: import_prop_types90.default.func,
  value: import_prop_types90.default.any
} : void 0;
var RadioGroup_default = RadioGroup;

// node_modules/@babel/runtime/helpers/esm/inherits.js
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}

// node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
function _possibleConstructorReturn(self2, call2) {
  if (call2 && (_typeof(call2) === "object" || typeof call2 === "function")) {
    return call2;
  } else if (call2 !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self2);
}

// node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o2) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf(o2);
}

// node_modules/@material-ui/core/esm/Select/Select.js
var import_prop_types92 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement18,
  createElement as createElement82,
  forwardRef as forwardRef173
} from "react";

// node_modules/@material-ui/core/esm/Select/SelectInput.js
var import_react_is6 = __toModule(require_react_is2());
var import_prop_types91 = __toModule(require_prop_types());
import {
  Children as Children9,
  Fragment as Fragment5,
  cloneElement as cloneElement17,
  createElement as createElement81,
  forwardRef as forwardRef172,
  isValidElement as isValidElement10,
  useEffect as useEffect23,
  useImperativeHandle as useImperativeHandle7,
  useRef as useRef24,
  useState as useState14
} from "react";
function areEqualValues(a2, b2) {
  if (_typeof(b2) === "object" && b2 !== null) {
    return a2 === b2;
  }
  return String(a2) === String(b2);
}
function isEmpty(display) {
  return display == null || typeof display === "string" && !display.trim();
}
var SelectInput = /* @__PURE__ */ forwardRef172(function SelectInput2(props, ref2) {
  var ariaLabel = props["aria-label"], autoFocus = props.autoFocus, autoWidth = props.autoWidth, children2 = props.children, classes = props.classes, className = props.className, defaultValue = props.defaultValue, disabled3 = props.disabled, displayEmpty = props.displayEmpty, IconComponent = props.IconComponent, inputRefProp = props.inputRef, labelId = props.labelId, _props$MenuProps = props.MenuProps, MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps, multiple = props.multiple, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onClose = props.onClose, onFocus = props.onFocus, onOpen = props.onOpen, openProp = props.open, readOnly = props.readOnly, renderValue = props.renderValue, _props$SelectDisplayP = props.SelectDisplayProps, SelectDisplayProps = _props$SelectDisplayP === void 0 ? {} : _props$SelectDisplayP, tabIndexProp = props.tabIndex, type3 = props.type, valueProp = props.value, _props$variant = props.variant, variant = _props$variant === void 0 ? "standard" : _props$variant, other = _objectWithoutProperties(props, ["aria-label", "autoFocus", "autoWidth", "children", "classes", "className", "defaultValue", "disabled", "displayEmpty", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "SelectDisplayProps", "tabIndex", "type", "value", "variant"]);
  var _useControlled = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: "Select"
  }), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], setValue = _useControlled2[1];
  var inputRef = useRef24(null);
  var _React$useState = useState14(null), displayNode = _React$useState[0], setDisplayNode = _React$useState[1];
  var _React$useRef = useRef24(openProp != null), isOpenControlled = _React$useRef.current;
  var _React$useState2 = useState14(), menuMinWidthState = _React$useState2[0], setMenuMinWidthState = _React$useState2[1];
  var _React$useState3 = useState14(false), openState = _React$useState3[0], setOpenState = _React$useState3[1];
  var handleRef = useForkRef(ref2, inputRefProp);
  useImperativeHandle7(handleRef, function() {
    return {
      focus: function focus2() {
        displayNode.focus();
      },
      node: inputRef.current,
      value
    };
  }, [displayNode, value]);
  useEffect23(function() {
    if (autoFocus && displayNode) {
      displayNode.focus();
    }
  }, [autoFocus, displayNode]);
  useEffect23(function() {
    if (displayNode) {
      var label3 = ownerDocument(displayNode).getElementById(labelId);
      if (label3) {
        var handler = function handler2() {
          if (getSelection().isCollapsed) {
            displayNode.focus();
          }
        };
        label3.addEventListener("click", handler);
        return function() {
          label3.removeEventListener("click", handler);
        };
      }
    }
    return void 0;
  }, [labelId, displayNode]);
  var update4 = function update5(open2, event) {
    if (open2) {
      if (onOpen) {
        onOpen(event);
      }
    } else if (onClose) {
      onClose(event);
    }
    if (!isOpenControlled) {
      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);
      setOpenState(open2);
    }
  };
  var handleMouseDown = function handleMouseDown2(event) {
    if (event.button !== 0) {
      return;
    }
    event.preventDefault();
    displayNode.focus();
    update4(true, event);
  };
  var handleClose = function handleClose2(event) {
    update4(false, event);
  };
  var childrenArray = Children9.toArray(children2);
  var handleChange = function handleChange2(event) {
    var index4 = childrenArray.map(function(child2) {
      return child2.props.value;
    }).indexOf(event.target.value);
    if (index4 === -1) {
      return;
    }
    var child = childrenArray[index4];
    setValue(child.props.value);
    if (onChange) {
      onChange(event, child);
    }
  };
  var handleItemClick = function handleItemClick2(child) {
    return function(event) {
      if (!multiple) {
        update4(false, event);
      }
      var newValue;
      if (multiple) {
        newValue = Array.isArray(value) ? value.slice() : [];
        var itemIndex = value.indexOf(child.props.value);
        if (itemIndex === -1) {
          newValue.push(child.props.value);
        } else {
          newValue.splice(itemIndex, 1);
        }
      } else {
        newValue = child.props.value;
      }
      if (child.props.onClick) {
        child.props.onClick(event);
      }
      if (value === newValue) {
        return;
      }
      setValue(newValue);
      if (onChange) {
        event.persist();
        Object.defineProperty(event, "target", {
          writable: true,
          value: {
            value: newValue,
            name
          }
        });
        onChange(event, child);
      }
    };
  };
  var handleKeyDown2 = function handleKeyDown3(event) {
    if (!readOnly) {
      var validKeys = [
        " ",
        "ArrowUp",
        "ArrowDown",
        "Enter"
      ];
      if (validKeys.indexOf(event.key) !== -1) {
        event.preventDefault();
        update4(true, event);
      }
    }
  };
  var open = displayNode !== null && (isOpenControlled ? openProp : openState);
  var handleBlur = function handleBlur2(event) {
    if (!open && onBlur) {
      event.persist();
      Object.defineProperty(event, "target", {
        writable: true,
        value: {
          value,
          name
        }
      });
      onBlur(event);
    }
  };
  delete other["aria-invalid"];
  var display;
  var displaySingle;
  var displayMultiple = [];
  var computeDisplay = false;
  var foundMatch = false;
  if (isFilled({
    value
  }) || displayEmpty) {
    if (renderValue) {
      display = renderValue(value);
    } else {
      computeDisplay = true;
    }
  }
  var items = childrenArray.map(function(child) {
    if (!/* @__PURE__ */ isValidElement10(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is6.isFragment)(child)) {
        console.error(["Material-UI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    var selected;
    if (multiple) {
      if (!Array.isArray(value)) {
        throw new Error(true ? "Material-UI: The `value` prop must be an array when using the `Select` component with `multiple`." : formatMuiErrorMessage(2));
      }
      selected = value.some(function(v2) {
        return areEqualValues(v2, child.props.value);
      });
      if (selected && computeDisplay) {
        displayMultiple.push(child.props.children);
      }
    } else {
      selected = areEqualValues(value, child.props.value);
      if (selected && computeDisplay) {
        displaySingle = child.props.children;
      }
    }
    if (selected) {
      foundMatch = true;
    }
    return /* @__PURE__ */ cloneElement17(child, {
      "aria-selected": selected ? "true" : void 0,
      onClick: handleItemClick(child),
      onKeyUp: function onKeyUp(event) {
        if (event.key === " ") {
          event.preventDefault();
        }
        if (child.props.onKeyUp) {
          child.props.onKeyUp(event);
        }
      },
      role: "option",
      selected,
      value: void 0,
      "data-value": child.props.value
    });
  });
  if (true) {
    useEffect23(function() {
      if (!foundMatch && !multiple && value !== "") {
        var values6 = childrenArray.map(function(child) {
          return child.props.value;
        });
        console.warn(["Material-UI: You have provided an out-of-range value `".concat(value, "` for the select ").concat(name ? '(name="'.concat(name, '") ') : "", "component."), "Consider providing a value that matches one of the available options or ''.", "The available values are ".concat(values6.filter(function(x2) {
          return x2 != null;
        }).map(function(x2) {
          return "`".concat(x2, "`");
        }).join(", ") || '""', ".")].join("\n"));
      }
    }, [foundMatch, childrenArray, multiple, name, value]);
  }
  if (computeDisplay) {
    display = multiple ? displayMultiple.join(", ") : displaySingle;
  }
  var menuMinWidth = menuMinWidthState;
  if (!autoWidth && isOpenControlled && displayNode) {
    menuMinWidth = displayNode.clientWidth;
  }
  var tabIndex;
  if (typeof tabIndexProp !== "undefined") {
    tabIndex = tabIndexProp;
  } else {
    tabIndex = disabled3 ? null : 0;
  }
  var buttonId = SelectDisplayProps.id || (name ? "mui-component-select-".concat(name) : void 0);
  return /* @__PURE__ */ createElement81(Fragment5, null, /* @__PURE__ */ createElement81("div", _extends({
    className: clsx_m_default(classes.root, classes.select, classes.selectMenu, classes[variant], className, disabled3 && classes.disabled),
    ref: setDisplayNode,
    tabIndex,
    role: "button",
    "aria-disabled": disabled3 ? "true" : void 0,
    "aria-expanded": open ? "true" : void 0,
    "aria-haspopup": "listbox",
    "aria-label": ariaLabel,
    "aria-labelledby": [labelId, buttonId].filter(Boolean).join(" ") || void 0,
    onKeyDown: handleKeyDown2,
    onMouseDown: disabled3 || readOnly ? null : handleMouseDown,
    onBlur: handleBlur,
    onFocus
  }, SelectDisplayProps, {
    id: buttonId
  }), isEmpty(display) ? /* @__PURE__ */ createElement81("span", {
    dangerouslySetInnerHTML: {
      __html: "&#8203;"
    }
  }) : display), /* @__PURE__ */ createElement81("input", _extends({
    value: Array.isArray(value) ? value.join(",") : value,
    name,
    ref: inputRef,
    "aria-hidden": true,
    onChange: handleChange,
    tabIndex: -1,
    className: classes.nativeInput,
    autoFocus
  }, other)), /* @__PURE__ */ createElement81(IconComponent, {
    className: clsx_m_default(classes.icon, classes["icon".concat(capitalize(variant))], open && classes.iconOpen, disabled3 && classes.disabled)
  }), /* @__PURE__ */ createElement81(Menu_default, _extends({
    id: "menu-".concat(name || ""),
    anchorEl: displayNode,
    open,
    onClose: handleClose
  }, MenuProps, {
    MenuListProps: _extends({
      "aria-labelledby": labelId,
      role: "listbox",
      disableListWrap: true
    }, MenuProps.MenuListProps),
    PaperProps: _extends({}, MenuProps.PaperProps, {
      style: _extends({
        minWidth: menuMinWidth
      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
    })
  }), items));
});
true ? SelectInput.propTypes = {
  "aria-label": import_prop_types91.default.string,
  autoFocus: import_prop_types91.default.bool,
  autoWidth: import_prop_types91.default.bool,
  children: import_prop_types91.default.node,
  classes: import_prop_types91.default.object.isRequired,
  className: import_prop_types91.default.string,
  defaultValue: import_prop_types91.default.any,
  disabled: import_prop_types91.default.bool,
  displayEmpty: import_prop_types91.default.bool,
  IconComponent: import_prop_types91.default.elementType.isRequired,
  inputRef: refType_default,
  labelId: import_prop_types91.default.string,
  MenuProps: import_prop_types91.default.object,
  multiple: import_prop_types91.default.bool,
  name: import_prop_types91.default.string,
  onBlur: import_prop_types91.default.func,
  onChange: import_prop_types91.default.func,
  onClose: import_prop_types91.default.func,
  onFocus: import_prop_types91.default.func,
  onOpen: import_prop_types91.default.func,
  open: import_prop_types91.default.bool,
  readOnly: import_prop_types91.default.bool,
  renderValue: import_prop_types91.default.func,
  SelectDisplayProps: import_prop_types91.default.object,
  tabIndex: import_prop_types91.default.oneOfType([import_prop_types91.default.number, import_prop_types91.default.string]),
  type: import_prop_types91.default.any,
  value: import_prop_types91.default.any,
  variant: import_prop_types91.default.oneOf(["standard", "outlined", "filled"])
} : void 0;
var SelectInput_default = SelectInput;

// node_modules/@material-ui/core/esm/Select/Select.js
var styles104 = styles94;
var _ref = /* @__PURE__ */ createElement82(Input_default, null);
var _ref2 = /* @__PURE__ */ createElement82(FilledInput_default, null);
var Select = /* @__PURE__ */ forwardRef173(function Select2(props, ref2) {
  var _props$autoWidth = props.autoWidth, autoWidth = _props$autoWidth === void 0 ? false : _props$autoWidth, children2 = props.children, classes = props.classes, _props$displayEmpty = props.displayEmpty, displayEmpty = _props$displayEmpty === void 0 ? false : _props$displayEmpty, _props$IconComponent = props.IconComponent, IconComponent = _props$IconComponent === void 0 ? ArrowDropDown_default : _props$IconComponent, id3 = props.id, input = props.input, inputProps = props.inputProps, label3 = props.label, labelId = props.labelId, _props$labelWidth = props.labelWidth, labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth, MenuProps = props.MenuProps, _props$multiple = props.multiple, multiple = _props$multiple === void 0 ? false : _props$multiple, _props$native = props.native, native = _props$native === void 0 ? false : _props$native, onClose = props.onClose, onOpen = props.onOpen, open = props.open, renderValue = props.renderValue, SelectDisplayProps = props.SelectDisplayProps, _props$variant = props.variant, variantProps = _props$variant === void 0 ? "standard" : _props$variant, other = _objectWithoutProperties(props, ["autoWidth", "children", "classes", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "labelWidth", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"]);
  var inputComponent = native ? NativeSelectInput_default : SelectInput_default;
  var muiFormControl = useFormControl2();
  var fcs = formControlState({
    props,
    muiFormControl,
    states: ["variant"]
  });
  var variant = fcs.variant || variantProps;
  var InputComponent = input || {
    standard: _ref,
    outlined: /* @__PURE__ */ createElement82(OutlinedInput_default, {
      label: label3,
      labelWidth
    }),
    filled: _ref2
  }[variant];
  return /* @__PURE__ */ cloneElement18(InputComponent, _extends({
    inputComponent,
    inputProps: _extends({
      children: children2,
      IconComponent,
      variant,
      type: void 0,
      multiple
    }, native ? {
      id: id3
    } : {
      autoWidth,
      displayEmpty,
      labelId,
      MenuProps,
      onClose,
      onOpen,
      open,
      renderValue,
      SelectDisplayProps: _extends({
        id: id3
      }, SelectDisplayProps)
    }, inputProps, {
      classes: inputProps ? mergeClasses({
        baseClasses: classes,
        newClasses: inputProps.classes,
        Component: Select2
      }) : classes
    }, input ? input.props.inputProps : {}),
    ref: ref2
  }, other));
});
true ? Select.propTypes = {
  autoWidth: import_prop_types92.default.bool,
  children: import_prop_types92.default.node,
  classes: import_prop_types92.default.object,
  defaultValue: import_prop_types92.default.any,
  displayEmpty: import_prop_types92.default.bool,
  IconComponent: import_prop_types92.default.elementType,
  id: import_prop_types92.default.string,
  input: import_prop_types92.default.element,
  inputProps: import_prop_types92.default.object,
  label: import_prop_types92.default.node,
  labelId: import_prop_types92.default.string,
  labelWidth: import_prop_types92.default.number,
  MenuProps: import_prop_types92.default.object,
  multiple: import_prop_types92.default.bool,
  native: import_prop_types92.default.bool,
  onChange: import_prop_types92.default.func,
  onClose: import_prop_types92.default.func,
  onOpen: import_prop_types92.default.func,
  open: import_prop_types92.default.bool,
  renderValue: import_prop_types92.default.func,
  SelectDisplayProps: import_prop_types92.default.object,
  value: import_prop_types92.default.any,
  variant: import_prop_types92.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
Select.muiName = "Select";
var Select_default = withStyles_default2(styles104, {
  name: "MuiSelect"
})(Select);

// node_modules/@material-ui/core/esm/Slider/Slider.js
var import_prop_types93 = __toModule(require_prop_types());
import {
  Fragment as Fragment6,
  createElement as createElement84,
  forwardRef as forwardRef174,
  useEffect as useEffect24,
  useRef as useRef25,
  useState as useState15
} from "react";

// node_modules/@material-ui/core/esm/Slider/ValueLabel.js
import {
  cloneElement as cloneElement19,
  createElement as createElement83
} from "react";
var styles105 = function styles106(theme) {
  return {
    thumb: {
      "&$open": {
        "& $offset": {
          transform: "scale(1) translateY(-10px)"
        }
      }
    },
    open: {},
    offset: _extends({
      zIndex: 1
    }, theme.typography.body2, {
      fontSize: theme.typography.pxToRem(12),
      lineHeight: 1.2,
      transition: theme.transitions.create(["transform"], {
        duration: theme.transitions.duration.shortest
      }),
      top: -34,
      transformOrigin: "bottom center",
      transform: "scale(0)",
      position: "absolute"
    }),
    circle: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      width: 32,
      height: 32,
      borderRadius: "50% 50% 50% 0",
      backgroundColor: "currentColor",
      transform: "rotate(-45deg)"
    },
    label: {
      color: theme.palette.primary.contrastText,
      transform: "rotate(45deg)"
    }
  };
};
function ValueLabel(props) {
  var children2 = props.children, classes = props.classes, className = props.className, open = props.open, value = props.value, valueLabelDisplay = props.valueLabelDisplay;
  if (valueLabelDisplay === "off") {
    return children2;
  }
  return /* @__PURE__ */ cloneElement19(children2, {
    className: clsx_m_default(children2.props.className, (open || valueLabelDisplay === "on") && classes.open, classes.thumb)
  }, /* @__PURE__ */ createElement83("span", {
    className: clsx_m_default(classes.offset, className)
  }, /* @__PURE__ */ createElement83("span", {
    className: classes.circle
  }, /* @__PURE__ */ createElement83("span", {
    className: classes.label
  }, value))));
}
var ValueLabel_default = withStyles_default2(styles105, {
  name: "PrivateValueLabel"
})(ValueLabel);

// node_modules/@material-ui/core/esm/Slider/Slider.js
function asc(a2, b2) {
  return a2 - b2;
}
function clamp2(value, min2, max2) {
  return Math.min(Math.max(min2, value), max2);
}
function findClosest(values6, currentValue) {
  var _values$reduce = values6.reduce(function(acc, value, index4) {
    var distance3 = Math.abs(currentValue - value);
    if (acc === null || distance3 < acc.distance || distance3 === acc.distance) {
      return {
        distance: distance3,
        index: index4
      };
    }
    return acc;
  }, null), closestIndex = _values$reduce.index;
  return closestIndex;
}
function trackFinger(event, touchId) {
  if (touchId.current !== void 0 && event.changedTouches) {
    for (var i2 = 0; i2 < event.changedTouches.length; i2 += 1) {
      var touch = event.changedTouches[i2];
      if (touch.identifier === touchId.current) {
        return {
          x: touch.clientX,
          y: touch.clientY
        };
      }
    }
    return false;
  }
  return {
    x: event.clientX,
    y: event.clientY
  };
}
function valueToPercent(value, min2, max2) {
  return (value - min2) * 100 / (max2 - min2);
}
function percentToValue(percent2, min2, max2) {
  return (max2 - min2) * percent2 + min2;
}
function getDecimalPrecision(num) {
  if (Math.abs(num) < 1) {
    var parts = num.toExponential().split("e-");
    var matissaDecimalPart = parts[0].split(".")[1];
    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);
  }
  var decimalPart = num.toString().split(".")[1];
  return decimalPart ? decimalPart.length : 0;
}
function roundValueToStep(value, step, min2) {
  var nearest = Math.round((value - min2) / step) * step + min2;
  return Number(nearest.toFixed(getDecimalPrecision(step)));
}
function setValueIndex(_ref6) {
  var values6 = _ref6.values, source = _ref6.source, newValue = _ref6.newValue, index4 = _ref6.index;
  if (values6[index4] === newValue) {
    return source;
  }
  var output = values6.slice();
  output[index4] = newValue;
  return output;
}
function focusThumb(_ref23) {
  var sliderRef = _ref23.sliderRef, activeIndex = _ref23.activeIndex, setActive = _ref23.setActive;
  if (!sliderRef.current.contains(document.activeElement) || Number(document.activeElement.getAttribute("data-index")) !== activeIndex) {
    sliderRef.current.querySelector('[role="slider"][data-index="'.concat(activeIndex, '"]')).focus();
  }
  if (setActive) {
    setActive(activeIndex);
  }
}
var axisProps = {
  horizontal: {
    offset: function offset2(percent2) {
      return {
        left: "".concat(percent2, "%")
      };
    },
    leap: function leap(percent2) {
      return {
        width: "".concat(percent2, "%")
      };
    }
  },
  "horizontal-reverse": {
    offset: function offset3(percent2) {
      return {
        right: "".concat(percent2, "%")
      };
    },
    leap: function leap2(percent2) {
      return {
        width: "".concat(percent2, "%")
      };
    }
  },
  vertical: {
    offset: function offset4(percent2) {
      return {
        bottom: "".concat(percent2, "%")
      };
    },
    leap: function leap3(percent2) {
      return {
        height: "".concat(percent2, "%")
      };
    }
  }
};
var Identity = function Identity2(x2) {
  return x2;
};
var styles107 = function styles108(theme) {
  return {
    root: {
      height: 2,
      width: "100%",
      boxSizing: "content-box",
      padding: "13px 0",
      display: "inline-block",
      position: "relative",
      cursor: "pointer",
      touchAction: "none",
      color: theme.palette.primary.main,
      WebkitTapHighlightColor: "transparent",
      "&$disabled": {
        pointerEvents: "none",
        cursor: "default",
        color: theme.palette.grey[400]
      },
      "&$vertical": {
        width: 2,
        height: "100%",
        padding: "0 13px"
      },
      "@media (pointer: coarse)": {
        padding: "20px 0",
        "&$vertical": {
          padding: "0 20px"
        }
      },
      "@media print": {
        colorAdjust: "exact"
      }
    },
    colorPrimary: {},
    colorSecondary: {
      color: theme.palette.secondary.main
    },
    marked: {
      marginBottom: 20,
      "&$vertical": {
        marginBottom: "auto",
        marginRight: 20
      }
    },
    vertical: {},
    disabled: {},
    rail: {
      display: "block",
      position: "absolute",
      width: "100%",
      height: 2,
      borderRadius: 1,
      backgroundColor: "currentColor",
      opacity: 0.38,
      "$vertical &": {
        height: "100%",
        width: 2
      }
    },
    track: {
      display: "block",
      position: "absolute",
      height: 2,
      borderRadius: 1,
      backgroundColor: "currentColor",
      "$vertical &": {
        width: 2
      }
    },
    trackFalse: {
      "& $track": {
        display: "none"
      }
    },
    trackInverted: {
      "& $track": {
        backgroundColor: theme.palette.type === "light" ? lighten(theme.palette.primary.main, 0.62) : darken(theme.palette.primary.main, 0.5)
      },
      "& $rail": {
        opacity: 1
      }
    },
    thumb: {
      position: "absolute",
      width: 12,
      height: 12,
      marginLeft: -6,
      marginTop: -5,
      boxSizing: "border-box",
      borderRadius: "50%",
      outline: 0,
      backgroundColor: "currentColor",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      transition: theme.transitions.create(["box-shadow"], {
        duration: theme.transitions.duration.shortest
      }),
      "&::after": {
        position: "absolute",
        content: '""',
        borderRadius: "50%",
        left: -15,
        top: -15,
        right: -15,
        bottom: -15
      },
      "&$focusVisible,&:hover": {
        boxShadow: "0px 0px 0px 8px ".concat(alpha(theme.palette.primary.main, 0.16)),
        "@media (hover: none)": {
          boxShadow: "none"
        }
      },
      "&$active": {
        boxShadow: "0px 0px 0px 14px ".concat(alpha(theme.palette.primary.main, 0.16))
      },
      "&$disabled": {
        width: 8,
        height: 8,
        marginLeft: -4,
        marginTop: -3,
        "&:hover": {
          boxShadow: "none"
        }
      },
      "$vertical &": {
        marginLeft: -5,
        marginBottom: -6
      },
      "$vertical &$disabled": {
        marginLeft: -3,
        marginBottom: -4
      }
    },
    thumbColorPrimary: {},
    thumbColorSecondary: {
      "&$focusVisible,&:hover": {
        boxShadow: "0px 0px 0px 8px ".concat(alpha(theme.palette.secondary.main, 0.16))
      },
      "&$active": {
        boxShadow: "0px 0px 0px 14px ".concat(alpha(theme.palette.secondary.main, 0.16))
      }
    },
    active: {},
    focusVisible: {},
    valueLabel: {
      left: "calc(-50% - 4px)"
    },
    mark: {
      position: "absolute",
      width: 2,
      height: 2,
      borderRadius: 1,
      backgroundColor: "currentColor"
    },
    markActive: {
      backgroundColor: theme.palette.background.paper,
      opacity: 0.8
    },
    markLabel: _extends({}, theme.typography.body2, {
      color: theme.palette.text.secondary,
      position: "absolute",
      top: 26,
      transform: "translateX(-50%)",
      whiteSpace: "nowrap",
      "$vertical &": {
        top: "auto",
        left: 26,
        transform: "translateY(50%)"
      },
      "@media (pointer: coarse)": {
        top: 40,
        "$vertical &": {
          left: 31
        }
      }
    }),
    markLabelActive: {
      color: theme.palette.text.primary
    }
  };
};
var Slider = /* @__PURE__ */ forwardRef174(function Slider2(props, ref2) {
  var ariaLabel = props["aria-label"], ariaLabelledby = props["aria-labelledby"], ariaValuetext = props["aria-valuetext"], classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "primary" : _props$color, _props$component = props.component, Component7 = _props$component === void 0 ? "span" : _props$component, defaultValue = props.defaultValue, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, getAriaLabel = props.getAriaLabel, getAriaValueText = props.getAriaValueText, _props$marks = props.marks, marksProp = _props$marks === void 0 ? false : _props$marks, _props$max = props.max, max2 = _props$max === void 0 ? 100 : _props$max, _props$min = props.min, min2 = _props$min === void 0 ? 0 : _props$min, name = props.name, onChange = props.onChange, onChangeCommitted = props.onChangeCommitted, onMouseDown = props.onMouseDown, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, _props$scale = props.scale, scale = _props$scale === void 0 ? Identity : _props$scale, _props$step = props.step, step = _props$step === void 0 ? 1 : _props$step, _props$ThumbComponent = props.ThumbComponent, ThumbComponent = _props$ThumbComponent === void 0 ? "span" : _props$ThumbComponent, _props$track = props.track, track = _props$track === void 0 ? "normal" : _props$track, valueProp = props.value, _props$ValueLabelComp = props.ValueLabelComponent, ValueLabelComponent = _props$ValueLabelComp === void 0 ? ValueLabel_default : _props$ValueLabelComp, _props$valueLabelDisp = props.valueLabelDisplay, valueLabelDisplay = _props$valueLabelDisp === void 0 ? "off" : _props$valueLabelDisp, _props$valueLabelForm = props.valueLabelFormat, valueLabelFormat = _props$valueLabelForm === void 0 ? Identity : _props$valueLabelForm, other = _objectWithoutProperties(props, ["aria-label", "aria-labelledby", "aria-valuetext", "classes", "className", "color", "component", "defaultValue", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "onMouseDown", "orientation", "scale", "step", "ThumbComponent", "track", "value", "ValueLabelComponent", "valueLabelDisplay", "valueLabelFormat"]);
  var theme = useTheme2();
  var touchId = useRef25();
  var _React$useState = useState15(-1), active = _React$useState[0], setActive = _React$useState[1];
  var _React$useState2 = useState15(-1), open = _React$useState2[0], setOpen = _React$useState2[1];
  var _useControlled = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: "Slider"
  }), _useControlled2 = _slicedToArray(_useControlled, 2), valueDerived = _useControlled2[0], setValueState = _useControlled2[1];
  var range = Array.isArray(valueDerived);
  var values6 = range ? valueDerived.slice().sort(asc) : [valueDerived];
  values6 = values6.map(function(value) {
    return clamp2(value, min2, max2);
  });
  var marks = marksProp === true && step !== null ? _toConsumableArray(Array(Math.floor((max2 - min2) / step) + 1)).map(function(_18, index4) {
    return {
      value: min2 + step * index4
    };
  }) : marksProp || [];
  var _useIsFocusVisible = useIsFocusVisible(), isFocusVisible2 = _useIsFocusVisible.isFocusVisible, onBlurVisible = _useIsFocusVisible.onBlurVisible, focusVisibleRef = _useIsFocusVisible.ref;
  var _React$useState3 = useState15(-1), focusVisible2 = _React$useState3[0], setFocusVisible = _React$useState3[1];
  var sliderRef = useRef25();
  var handleFocusRef = useForkRef(focusVisibleRef, sliderRef);
  var handleRef = useForkRef(ref2, handleFocusRef);
  var handleFocus = useEventCallback(function(event) {
    var index4 = Number(event.currentTarget.getAttribute("data-index"));
    if (isFocusVisible2(event)) {
      setFocusVisible(index4);
    }
    setOpen(index4);
  });
  var handleBlur = useEventCallback(function() {
    if (focusVisible2 !== -1) {
      setFocusVisible(-1);
      onBlurVisible();
    }
    setOpen(-1);
  });
  var handleMouseOver = useEventCallback(function(event) {
    var index4 = Number(event.currentTarget.getAttribute("data-index"));
    setOpen(index4);
  });
  var handleMouseLeave = useEventCallback(function() {
    setOpen(-1);
  });
  var isRtl = theme.direction === "rtl";
  var handleKeyDown2 = useEventCallback(function(event) {
    var index4 = Number(event.currentTarget.getAttribute("data-index"));
    var value = values6[index4];
    var tenPercents = (max2 - min2) / 10;
    var marksValues = marks.map(function(mark) {
      return mark.value;
    });
    var marksIndex = marksValues.indexOf(value);
    var newValue;
    var increaseKey = isRtl ? "ArrowLeft" : "ArrowRight";
    var decreaseKey = isRtl ? "ArrowRight" : "ArrowLeft";
    switch (event.key) {
      case "Home":
        newValue = min2;
        break;
      case "End":
        newValue = max2;
        break;
      case "PageUp":
        if (step) {
          newValue = value + tenPercents;
        }
        break;
      case "PageDown":
        if (step) {
          newValue = value - tenPercents;
        }
        break;
      case increaseKey:
      case "ArrowUp":
        if (step) {
          newValue = value + step;
        } else {
          newValue = marksValues[marksIndex + 1] || marksValues[marksValues.length - 1];
        }
        break;
      case decreaseKey:
      case "ArrowDown":
        if (step) {
          newValue = value - step;
        } else {
          newValue = marksValues[marksIndex - 1] || marksValues[0];
        }
        break;
      default:
        return;
    }
    event.preventDefault();
    if (step) {
      newValue = roundValueToStep(newValue, step, min2);
    }
    newValue = clamp2(newValue, min2, max2);
    if (range) {
      var previousValue = newValue;
      newValue = setValueIndex({
        values: values6,
        source: valueDerived,
        newValue,
        index: index4
      }).sort(asc);
      focusThumb({
        sliderRef,
        activeIndex: newValue.indexOf(previousValue)
      });
    }
    setValueState(newValue);
    setFocusVisible(index4);
    if (onChange) {
      onChange(event, newValue);
    }
    if (onChangeCommitted) {
      onChangeCommitted(event, newValue);
    }
  });
  var previousIndex = useRef25();
  var axis = orientation;
  if (isRtl && orientation !== "vertical") {
    axis += "-reverse";
  }
  var getFingerNewValue = function getFingerNewValue2(_ref32) {
    var finger = _ref32.finger, _ref3$move = _ref32.move, move3 = _ref3$move === void 0 ? false : _ref3$move, values22 = _ref32.values, source = _ref32.source;
    var slider = sliderRef.current;
    var _slider$getBoundingCl = slider.getBoundingClientRect(), width2 = _slider$getBoundingCl.width, height2 = _slider$getBoundingCl.height, bottom2 = _slider$getBoundingCl.bottom, left2 = _slider$getBoundingCl.left;
    var percent2;
    if (axis.indexOf("vertical") === 0) {
      percent2 = (bottom2 - finger.y) / height2;
    } else {
      percent2 = (finger.x - left2) / width2;
    }
    if (axis.indexOf("-reverse") !== -1) {
      percent2 = 1 - percent2;
    }
    var newValue;
    newValue = percentToValue(percent2, min2, max2);
    if (step) {
      newValue = roundValueToStep(newValue, step, min2);
    } else {
      var marksValues = marks.map(function(mark) {
        return mark.value;
      });
      var closestIndex = findClosest(marksValues, newValue);
      newValue = marksValues[closestIndex];
    }
    newValue = clamp2(newValue, min2, max2);
    var activeIndex = 0;
    if (range) {
      if (!move3) {
        activeIndex = findClosest(values22, newValue);
      } else {
        activeIndex = previousIndex.current;
      }
      var previousValue = newValue;
      newValue = setValueIndex({
        values: values22,
        source,
        newValue,
        index: activeIndex
      }).sort(asc);
      activeIndex = newValue.indexOf(previousValue);
      previousIndex.current = activeIndex;
    }
    return {
      newValue,
      activeIndex
    };
  };
  var handleTouchMove = useEventCallback(function(event) {
    var finger = trackFinger(event, touchId);
    if (!finger) {
      return;
    }
    var _getFingerNewValue = getFingerNewValue({
      finger,
      move: true,
      values: values6,
      source: valueDerived
    }), newValue = _getFingerNewValue.newValue, activeIndex = _getFingerNewValue.activeIndex;
    focusThumb({
      sliderRef,
      activeIndex,
      setActive
    });
    setValueState(newValue);
    if (onChange) {
      onChange(event, newValue);
    }
  });
  var handleTouchEnd = useEventCallback(function(event) {
    var finger = trackFinger(event, touchId);
    if (!finger) {
      return;
    }
    var _getFingerNewValue2 = getFingerNewValue({
      finger,
      values: values6,
      source: valueDerived
    }), newValue = _getFingerNewValue2.newValue;
    setActive(-1);
    if (event.type === "touchend") {
      setOpen(-1);
    }
    if (onChangeCommitted) {
      onChangeCommitted(event, newValue);
    }
    touchId.current = void 0;
    var doc = ownerDocument(sliderRef.current);
    doc.removeEventListener("mousemove", handleTouchMove);
    doc.removeEventListener("mouseup", handleTouchEnd);
    doc.removeEventListener("touchmove", handleTouchMove);
    doc.removeEventListener("touchend", handleTouchEnd);
  });
  var handleTouchStart = useEventCallback(function(event) {
    event.preventDefault();
    var touch = event.changedTouches[0];
    if (touch != null) {
      touchId.current = touch.identifier;
    }
    var finger = trackFinger(event, touchId);
    var _getFingerNewValue3 = getFingerNewValue({
      finger,
      values: values6,
      source: valueDerived
    }), newValue = _getFingerNewValue3.newValue, activeIndex = _getFingerNewValue3.activeIndex;
    focusThumb({
      sliderRef,
      activeIndex,
      setActive
    });
    setValueState(newValue);
    if (onChange) {
      onChange(event, newValue);
    }
    var doc = ownerDocument(sliderRef.current);
    doc.addEventListener("touchmove", handleTouchMove);
    doc.addEventListener("touchend", handleTouchEnd);
  });
  useEffect24(function() {
    var slider = sliderRef.current;
    slider.addEventListener("touchstart", handleTouchStart);
    var doc = ownerDocument(slider);
    return function() {
      slider.removeEventListener("touchstart", handleTouchStart);
      doc.removeEventListener("mousemove", handleTouchMove);
      doc.removeEventListener("mouseup", handleTouchEnd);
      doc.removeEventListener("touchmove", handleTouchMove);
      doc.removeEventListener("touchend", handleTouchEnd);
    };
  }, [handleTouchEnd, handleTouchMove, handleTouchStart]);
  var handleMouseDown = useEventCallback(function(event) {
    if (onMouseDown) {
      onMouseDown(event);
    }
    event.preventDefault();
    var finger = trackFinger(event, touchId);
    var _getFingerNewValue4 = getFingerNewValue({
      finger,
      values: values6,
      source: valueDerived
    }), newValue = _getFingerNewValue4.newValue, activeIndex = _getFingerNewValue4.activeIndex;
    focusThumb({
      sliderRef,
      activeIndex,
      setActive
    });
    setValueState(newValue);
    if (onChange) {
      onChange(event, newValue);
    }
    var doc = ownerDocument(sliderRef.current);
    doc.addEventListener("mousemove", handleTouchMove);
    doc.addEventListener("mouseup", handleTouchEnd);
  });
  var trackOffset = valueToPercent(range ? values6[0] : min2, min2, max2);
  var trackLeap = valueToPercent(values6[values6.length - 1], min2, max2) - trackOffset;
  var trackStyle = _extends({}, axisProps[axis].offset(trackOffset), axisProps[axis].leap(trackLeap));
  return /* @__PURE__ */ createElement84(Component7, _extends({
    ref: handleRef,
    className: clsx_m_default(classes.root, classes["color".concat(capitalize(color2))], className, disabled3 && classes.disabled, marks.length > 0 && marks.some(function(mark) {
      return mark.label;
    }) && classes.marked, track === false && classes.trackFalse, orientation === "vertical" && classes.vertical, track === "inverted" && classes.trackInverted),
    onMouseDown: handleMouseDown
  }, other), /* @__PURE__ */ createElement84("span", {
    className: classes.rail
  }), /* @__PURE__ */ createElement84("span", {
    className: classes.track,
    style: trackStyle
  }), /* @__PURE__ */ createElement84("input", {
    value: values6.join(","),
    name,
    type: "hidden"
  }), marks.map(function(mark, index4) {
    var percent2 = valueToPercent(mark.value, min2, max2);
    var style3 = axisProps[axis].offset(percent2);
    var markActive;
    if (track === false) {
      markActive = values6.indexOf(mark.value) !== -1;
    } else {
      markActive = track === "normal" && (range ? mark.value >= values6[0] && mark.value <= values6[values6.length - 1] : mark.value <= values6[0]) || track === "inverted" && (range ? mark.value <= values6[0] || mark.value >= values6[values6.length - 1] : mark.value >= values6[0]);
    }
    return /* @__PURE__ */ createElement84(Fragment6, {
      key: mark.value
    }, /* @__PURE__ */ createElement84("span", {
      style: style3,
      "data-index": index4,
      className: clsx_m_default(classes.mark, markActive && classes.markActive)
    }), mark.label != null ? /* @__PURE__ */ createElement84("span", {
      "aria-hidden": true,
      "data-index": index4,
      style: style3,
      className: clsx_m_default(classes.markLabel, markActive && classes.markLabelActive)
    }, mark.label) : null);
  }), values6.map(function(value, index4) {
    var percent2 = valueToPercent(value, min2, max2);
    var style3 = axisProps[axis].offset(percent2);
    return /* @__PURE__ */ createElement84(ValueLabelComponent, {
      key: index4,
      valueLabelFormat,
      valueLabelDisplay,
      className: classes.valueLabel,
      value: typeof valueLabelFormat === "function" ? valueLabelFormat(scale(value), index4) : valueLabelFormat,
      index: index4,
      open: open === index4 || active === index4 || valueLabelDisplay === "on",
      disabled: disabled3
    }, /* @__PURE__ */ createElement84(ThumbComponent, {
      className: clsx_m_default(classes.thumb, classes["thumbColor".concat(capitalize(color2))], active === index4 && classes.active, disabled3 && classes.disabled, focusVisible2 === index4 && classes.focusVisible),
      tabIndex: disabled3 ? null : 0,
      role: "slider",
      style: style3,
      "data-index": index4,
      "aria-label": getAriaLabel ? getAriaLabel(index4) : ariaLabel,
      "aria-labelledby": ariaLabelledby,
      "aria-orientation": orientation,
      "aria-valuemax": scale(max2),
      "aria-valuemin": scale(min2),
      "aria-valuenow": scale(value),
      "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index4) : ariaValuetext,
      onKeyDown: handleKeyDown2,
      onFocus: handleFocus,
      onBlur: handleBlur,
      onMouseOver: handleMouseOver,
      onMouseLeave: handleMouseLeave
    }));
  }));
});
true ? Slider.propTypes = {
  "aria-label": chainPropTypes(import_prop_types93.default.string, function(props) {
    var range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-label"] != null) {
      return new Error("Material-UI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.");
    }
    return null;
  }),
  "aria-labelledby": import_prop_types93.default.string,
  "aria-valuetext": chainPropTypes(import_prop_types93.default.string, function(props) {
    var range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-valuetext"] != null) {
      return new Error("Material-UI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.");
    }
    return null;
  }),
  classes: import_prop_types93.default.object.isRequired,
  className: import_prop_types93.default.string,
  color: import_prop_types93.default.oneOf(["primary", "secondary"]),
  component: import_prop_types93.default.elementType,
  defaultValue: import_prop_types93.default.oneOfType([import_prop_types93.default.number, import_prop_types93.default.arrayOf(import_prop_types93.default.number)]),
  disabled: import_prop_types93.default.bool,
  getAriaLabel: import_prop_types93.default.func,
  getAriaValueText: import_prop_types93.default.func,
  marks: import_prop_types93.default.oneOfType([import_prop_types93.default.bool, import_prop_types93.default.array]),
  max: import_prop_types93.default.number,
  min: import_prop_types93.default.number,
  name: import_prop_types93.default.string,
  onChange: import_prop_types93.default.func,
  onChangeCommitted: import_prop_types93.default.func,
  onMouseDown: import_prop_types93.default.func,
  orientation: import_prop_types93.default.oneOf(["horizontal", "vertical"]),
  scale: import_prop_types93.default.func,
  step: import_prop_types93.default.number,
  ThumbComponent: import_prop_types93.default.elementType,
  track: import_prop_types93.default.oneOf(["normal", false, "inverted"]),
  value: import_prop_types93.default.oneOfType([import_prop_types93.default.number, import_prop_types93.default.arrayOf(import_prop_types93.default.number)]),
  ValueLabelComponent: import_prop_types93.default.elementType,
  valueLabelDisplay: import_prop_types93.default.oneOf(["on", "auto", "off"]),
  valueLabelFormat: import_prop_types93.default.oneOfType([import_prop_types93.default.string, import_prop_types93.default.func])
} : void 0;
var Slider_default = withStyles_default2(styles107, {
  name: "MuiSlider"
})(Slider);

// node_modules/@material-ui/core/esm/Snackbar/Snackbar.js
var import_prop_types95 = __toModule(require_prop_types());
import {
  createElement as createElement86,
  forwardRef as forwardRef176,
  useCallback as useCallback17,
  useEffect as useEffect25,
  useRef as useRef26,
  useState as useState16
} from "react";

// node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js
var import_prop_types94 = __toModule(require_prop_types());
import {
  createElement as createElement85,
  forwardRef as forwardRef175
} from "react";
var styles109 = function styles110(theme) {
  var emphasis = theme.palette.type === "light" ? 0.8 : 0.98;
  var backgroundColor3 = emphasize(theme.palette.background.default, emphasis);
  return {
    root: _extends({}, theme.typography.body2, _defineProperty({
      color: theme.palette.getContrastText(backgroundColor3),
      backgroundColor: backgroundColor3,
      display: "flex",
      alignItems: "center",
      flexWrap: "wrap",
      padding: "6px 16px",
      borderRadius: theme.shape.borderRadius,
      flexGrow: 1
    }, theme.breakpoints.up("sm"), {
      flexGrow: "initial",
      minWidth: 288
    })),
    message: {
      padding: "8px 0"
    },
    action: {
      display: "flex",
      alignItems: "center",
      marginLeft: "auto",
      paddingLeft: 16,
      marginRight: -8
    }
  };
};
var SnackbarContent = /* @__PURE__ */ forwardRef175(function SnackbarContent2(props, ref2) {
  var action3 = props.action, classes = props.classes, className = props.className, message = props.message, _props$role = props.role, role = _props$role === void 0 ? "alert" : _props$role, other = _objectWithoutProperties(props, ["action", "classes", "className", "message", "role"]);
  return /* @__PURE__ */ createElement85(Paper_default, _extends({
    role,
    square: true,
    elevation: 6,
    className: clsx_m_default(classes.root, className),
    ref: ref2
  }, other), /* @__PURE__ */ createElement85("div", {
    className: classes.message
  }, message), action3 ? /* @__PURE__ */ createElement85("div", {
    className: classes.action
  }, action3) : null);
});
true ? SnackbarContent.propTypes = {
  action: import_prop_types94.default.node,
  classes: import_prop_types94.default.object,
  className: import_prop_types94.default.string,
  message: import_prop_types94.default.node,
  role: import_prop_types94.default.string
} : void 0;
var SnackbarContent_default = withStyles_default2(styles109, {
  name: "MuiSnackbarContent"
})(SnackbarContent);

// node_modules/@material-ui/core/esm/Snackbar/Snackbar.js
var styles111 = function styles112(theme) {
  var top1 = {
    top: 8
  };
  var bottom1 = {
    bottom: 8
  };
  var right2 = {
    justifyContent: "flex-end"
  };
  var left2 = {
    justifyContent: "flex-start"
  };
  var top3 = {
    top: 24
  };
  var bottom3 = {
    bottom: 24
  };
  var right3 = {
    right: 24
  };
  var left3 = {
    left: 24
  };
  var center = {
    left: "50%",
    right: "auto",
    transform: "translateX(-50%)"
  };
  return {
    root: {
      zIndex: theme.zIndex.snackbar,
      position: "fixed",
      display: "flex",
      left: 8,
      right: 8,
      justifyContent: "center",
      alignItems: "center"
    },
    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up("sm"), _extends({}, top3, center))),
    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up("sm"), _extends({}, bottom3, center))),
    anchorOriginTopRight: _extends({}, top1, right2, _defineProperty({}, theme.breakpoints.up("sm"), _extends({
      left: "auto"
    }, top3, right3))),
    anchorOriginBottomRight: _extends({}, bottom1, right2, _defineProperty({}, theme.breakpoints.up("sm"), _extends({
      left: "auto"
    }, bottom3, right3))),
    anchorOriginTopLeft: _extends({}, top1, left2, _defineProperty({}, theme.breakpoints.up("sm"), _extends({
      right: "auto"
    }, top3, left3))),
    anchorOriginBottomLeft: _extends({}, bottom1, left2, _defineProperty({}, theme.breakpoints.up("sm"), _extends({
      right: "auto"
    }, bottom3, left3)))
  };
};
var Snackbar = /* @__PURE__ */ forwardRef176(function Snackbar2(props, ref2) {
  var action3 = props.action, _props$anchorOrigin = props.anchorOrigin;
  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {
    vertical: "bottom",
    horizontal: "center"
  } : _props$anchorOrigin;
  var vertical2 = _props$anchorOrigin.vertical, horizontal2 = _props$anchorOrigin.horizontal, _props$autoHideDurati = props.autoHideDuration, autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati, children2 = props.children, classes = props.classes, className = props.className, ClickAwayListenerProps = props.ClickAwayListenerProps, ContentProps = props.ContentProps, _props$disableWindowB = props.disableWindowBlurListener, disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB, message = props.message, onClose = props.onClose, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, open = props.open, resumeHideDuration = props.resumeHideDuration, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Grow_default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? {
    enter: duration.enteringScreen,
    exit: duration.leavingScreen
  } : _props$transitionDura, TransitionProps4 = props.TransitionProps, other = _objectWithoutProperties(props, ["action", "anchorOrigin", "autoHideDuration", "children", "classes", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onClose", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"]);
  var timerAutoHide = useRef26();
  var _React$useState = useState16(true), exited = _React$useState[0], setExited = _React$useState[1];
  var handleClose = useEventCallback(function() {
    if (onClose) {
      onClose.apply(void 0, arguments);
    }
  });
  var setAutoHideTimer = useEventCallback(function(autoHideDurationParam) {
    if (!onClose || autoHideDurationParam == null) {
      return;
    }
    clearTimeout(timerAutoHide.current);
    timerAutoHide.current = setTimeout(function() {
      handleClose(null, "timeout");
    }, autoHideDurationParam);
  });
  useEffect25(function() {
    if (open) {
      setAutoHideTimer(autoHideDuration);
    }
    return function() {
      clearTimeout(timerAutoHide.current);
    };
  }, [open, autoHideDuration, setAutoHideTimer]);
  var handlePause = function handlePause2() {
    clearTimeout(timerAutoHide.current);
  };
  var handleResume = useCallback17(function() {
    if (autoHideDuration != null) {
      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);
    }
  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);
  var handleMouseEnter = function handleMouseEnter2(event) {
    if (onMouseEnter) {
      onMouseEnter(event);
    }
    handlePause();
  };
  var handleMouseLeave = function handleMouseLeave2(event) {
    if (onMouseLeave) {
      onMouseLeave(event);
    }
    handleResume();
  };
  var handleClickAway = function handleClickAway2(event) {
    if (onClose) {
      onClose(event, "clickaway");
    }
  };
  var handleExited = function handleExited2() {
    setExited(true);
  };
  var handleEnter = function handleEnter2() {
    setExited(false);
  };
  useEffect25(function() {
    if (!disableWindowBlurListener && open) {
      window.addEventListener("focus", handleResume);
      window.addEventListener("blur", handlePause);
      return function() {
        window.removeEventListener("focus", handleResume);
        window.removeEventListener("blur", handlePause);
      };
    }
    return void 0;
  }, [disableWindowBlurListener, handleResume, open]);
  if (!open && exited) {
    return null;
  }
  return /* @__PURE__ */ createElement86(ClickAwayListener_default, _extends({
    onClickAway: handleClickAway
  }, ClickAwayListenerProps), /* @__PURE__ */ createElement86("div", _extends({
    className: clsx_m_default(classes.root, classes["anchorOrigin".concat(capitalize(vertical2)).concat(capitalize(horizontal2))], className),
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    ref: ref2
  }, other), /* @__PURE__ */ createElement86(TransitionComponent, _extends({
    appear: true,
    in: open,
    onEnter: createChainedFunction(handleEnter, onEnter),
    onEntered,
    onEntering,
    onExit,
    onExited: createChainedFunction(handleExited, onExited),
    onExiting,
    timeout: transitionDuration,
    direction: vertical2 === "top" ? "down" : "up"
  }, TransitionProps4), children2 || /* @__PURE__ */ createElement86(SnackbarContent_default, _extends({
    message,
    action: action3
  }, ContentProps)))));
});
true ? Snackbar.propTypes = {
  action: import_prop_types95.default.node,
  anchorOrigin: import_prop_types95.default.shape({
    horizontal: import_prop_types95.default.oneOf(["center", "left", "right"]).isRequired,
    vertical: import_prop_types95.default.oneOf(["bottom", "top"]).isRequired
  }),
  autoHideDuration: import_prop_types95.default.number,
  children: import_prop_types95.default.element,
  classes: import_prop_types95.default.object,
  className: import_prop_types95.default.string,
  ClickAwayListenerProps: import_prop_types95.default.object,
  ContentProps: import_prop_types95.default.object,
  disableWindowBlurListener: import_prop_types95.default.bool,
  key: import_prop_types95.default.any,
  message: import_prop_types95.default.node,
  onClose: import_prop_types95.default.func,
  onEnter: deprecatedPropType(import_prop_types95.default.func, "Use the `TransitionProps` prop instead."),
  onEntered: deprecatedPropType(import_prop_types95.default.func, "Use the `TransitionProps` prop instead."),
  onEntering: deprecatedPropType(import_prop_types95.default.func, "Use the `TransitionProps` prop instead."),
  onExit: deprecatedPropType(import_prop_types95.default.func, "Use the `TransitionProps` prop instead."),
  onExited: deprecatedPropType(import_prop_types95.default.func, "Use the `TransitionProps` prop instead."),
  onExiting: deprecatedPropType(import_prop_types95.default.func, "Use the `TransitionProps` prop instead."),
  onMouseEnter: import_prop_types95.default.func,
  onMouseLeave: import_prop_types95.default.func,
  open: import_prop_types95.default.bool,
  resumeHideDuration: import_prop_types95.default.number,
  TransitionComponent: import_prop_types95.default.elementType,
  transitionDuration: import_prop_types95.default.oneOfType([import_prop_types95.default.number, import_prop_types95.default.shape({
    appear: import_prop_types95.default.number,
    enter: import_prop_types95.default.number,
    exit: import_prop_types95.default.number
  })]),
  TransitionProps: import_prop_types95.default.object
} : void 0;
var Snackbar_default = withStyles_default2(styles111, {
  flip: false,
  name: "MuiSnackbar"
})(Snackbar);

// node_modules/@material-ui/core/esm/Step/Step.js
var import_react_is7 = __toModule(require_react_is2());
var import_prop_types96 = __toModule(require_prop_types());
import {
  Children as Children10,
  Fragment as Fragment7,
  cloneElement as cloneElement20,
  createElement as createElement87,
  forwardRef as forwardRef177,
  isValidElement as isValidElement11
} from "react";
var styles113 = {
  root: {},
  horizontal: {
    paddingLeft: 8,
    paddingRight: 8
  },
  vertical: {},
  alternativeLabel: {
    flex: 1,
    position: "relative"
  },
  completed: {}
};
var Step = /* @__PURE__ */ forwardRef177(function Step2(props, ref2) {
  var _props$active = props.active, active = _props$active === void 0 ? false : _props$active, alternativeLabel = props.alternativeLabel, children2 = props.children, classes = props.classes, className = props.className, _props$completed = props.completed, completed = _props$completed === void 0 ? false : _props$completed, connectorProp = props.connector, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$expanded = props.expanded, expanded = _props$expanded === void 0 ? false : _props$expanded, index4 = props.index, last2 = props.last, orientation = props.orientation, other = _objectWithoutProperties(props, ["active", "alternativeLabel", "children", "classes", "className", "completed", "connector", "disabled", "expanded", "index", "last", "orientation"]);
  var connector = connectorProp ? /* @__PURE__ */ cloneElement20(connectorProp, {
    orientation,
    alternativeLabel,
    index: index4,
    active,
    completed,
    disabled: disabled3
  }) : null;
  var newChildren = /* @__PURE__ */ createElement87("div", _extends({
    className: clsx_m_default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),
    ref: ref2
  }, other), connector && alternativeLabel && index4 !== 0 ? connector : null, Children10.map(children2, function(child) {
    if (!/* @__PURE__ */ isValidElement11(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is7.isFragment)(child)) {
        console.error(["Material-UI: The Step component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return /* @__PURE__ */ cloneElement20(child, _extends({
      active,
      alternativeLabel,
      completed,
      disabled: disabled3,
      expanded,
      last: last2,
      icon: index4 + 1,
      orientation
    }, child.props));
  }));
  if (connector && !alternativeLabel && index4 !== 0) {
    return /* @__PURE__ */ createElement87(Fragment7, null, connector, newChildren);
  }
  return newChildren;
});
true ? Step.propTypes = {
  active: import_prop_types96.default.bool,
  children: import_prop_types96.default.node,
  classes: import_prop_types96.default.object,
  className: import_prop_types96.default.string,
  completed: import_prop_types96.default.bool,
  disabled: import_prop_types96.default.bool,
  expanded: import_prop_types96.default.bool
} : void 0;
var Step_default = withStyles_default2(styles113, {
  name: "MuiStep"
})(Step);

// node_modules/@material-ui/core/esm/StepButton/StepButton.js
var import_prop_types99 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement21,
  createElement as createElement92,
  forwardRef as forwardRef180
} from "react";

// node_modules/@material-ui/core/esm/StepLabel/StepLabel.js
var import_prop_types98 = __toModule(require_prop_types());
import {
  createElement as createElement91,
  forwardRef as forwardRef179
} from "react";

// node_modules/@material-ui/core/esm/StepIcon/StepIcon.js
var import_prop_types97 = __toModule(require_prop_types());
import {
  createElement as createElement90,
  forwardRef as forwardRef178
} from "react";

// node_modules/@material-ui/core/esm/internal/svg-icons/CheckCircle.js
import {
  createElement as createElement88
} from "react";
var CheckCircle_default = createSvgIcon(/* @__PURE__ */ createElement88("path", {
  d: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z"
}), "CheckCircle");

// node_modules/@material-ui/core/esm/internal/svg-icons/Warning.js
import {
  createElement as createElement89
} from "react";
var Warning_default = createSvgIcon(/* @__PURE__ */ createElement89("path", {
  d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
}), "Warning");

// node_modules/@material-ui/core/esm/StepIcon/StepIcon.js
var styles114 = function styles115(theme) {
  return {
    root: {
      display: "block",
      color: theme.palette.text.disabled,
      "&$completed": {
        color: theme.palette.primary.main
      },
      "&$active": {
        color: theme.palette.primary.main
      },
      "&$error": {
        color: theme.palette.error.main
      }
    },
    text: {
      fill: theme.palette.primary.contrastText,
      fontSize: theme.typography.caption.fontSize,
      fontFamily: theme.typography.fontFamily
    },
    active: {},
    completed: {},
    error: {}
  };
};
var _ref3 = /* @__PURE__ */ createElement90("circle", {
  cx: "12",
  cy: "12",
  r: "12"
});
var StepIcon = /* @__PURE__ */ forwardRef178(function StepIcon2(props, ref2) {
  var _props$completed = props.completed, completed = _props$completed === void 0 ? false : _props$completed, icon = props.icon, _props$active = props.active, active = _props$active === void 0 ? false : _props$active, _props$error = props.error, error4 = _props$error === void 0 ? false : _props$error, classes = props.classes;
  if (typeof icon === "number" || typeof icon === "string") {
    var className = clsx_m_default(classes.root, active && classes.active, error4 && classes.error, completed && classes.completed);
    if (error4) {
      return /* @__PURE__ */ createElement90(Warning_default, {
        className,
        ref: ref2
      });
    }
    if (completed) {
      return /* @__PURE__ */ createElement90(CheckCircle_default, {
        className,
        ref: ref2
      });
    }
    return /* @__PURE__ */ createElement90(SvgIcon_default, {
      className,
      ref: ref2
    }, _ref3, /* @__PURE__ */ createElement90("text", {
      className: classes.text,
      x: "12",
      y: "16",
      textAnchor: "middle"
    }, icon));
  }
  return icon;
});
true ? StepIcon.propTypes = {
  active: import_prop_types97.default.bool,
  classes: import_prop_types97.default.object,
  completed: import_prop_types97.default.bool,
  error: import_prop_types97.default.bool,
  icon: import_prop_types97.default.node
} : void 0;
var StepIcon_default = withStyles_default2(styles114, {
  name: "MuiStepIcon"
})(StepIcon);

// node_modules/@material-ui/core/esm/StepLabel/StepLabel.js
var styles116 = function styles117(theme) {
  return {
    root: {
      display: "flex",
      alignItems: "center",
      "&$alternativeLabel": {
        flexDirection: "column"
      },
      "&$disabled": {
        cursor: "default"
      }
    },
    horizontal: {},
    vertical: {},
    label: {
      color: theme.palette.text.secondary,
      "&$active": {
        color: theme.palette.text.primary,
        fontWeight: 500
      },
      "&$completed": {
        color: theme.palette.text.primary,
        fontWeight: 500
      },
      "&$alternativeLabel": {
        textAlign: "center",
        marginTop: 16
      },
      "&$error": {
        color: theme.palette.error.main
      }
    },
    active: {},
    completed: {},
    error: {},
    disabled: {},
    iconContainer: {
      flexShrink: 0,
      display: "flex",
      paddingRight: 8,
      "&$alternativeLabel": {
        paddingRight: 0
      }
    },
    alternativeLabel: {},
    labelContainer: {
      width: "100%"
    }
  };
};
var StepLabel = /* @__PURE__ */ forwardRef179(function StepLabel2(props, ref2) {
  var _props$active = props.active, active = _props$active === void 0 ? false : _props$active, _props$alternativeLab = props.alternativeLabel, alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab, children2 = props.children, classes = props.classes, className = props.className, _props$completed = props.completed, completed = _props$completed === void 0 ? false : _props$completed, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$error = props.error, error4 = _props$error === void 0 ? false : _props$error, expanded = props.expanded, icon = props.icon, last2 = props.last, optional = props.optional, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, StepIconComponentProp = props.StepIconComponent, StepIconProps = props.StepIconProps, other = _objectWithoutProperties(props, ["active", "alternativeLabel", "children", "classes", "className", "completed", "disabled", "error", "expanded", "icon", "last", "optional", "orientation", "StepIconComponent", "StepIconProps"]);
  var StepIconComponent = StepIconComponentProp;
  if (icon && !StepIconComponent) {
    StepIconComponent = StepIcon_default;
  }
  return /* @__PURE__ */ createElement91("span", _extends({
    className: clsx_m_default(classes.root, classes[orientation], className, disabled3 && classes.disabled, alternativeLabel && classes.alternativeLabel, error4 && classes.error),
    ref: ref2
  }, other), icon || StepIconComponent ? /* @__PURE__ */ createElement91("span", {
    className: clsx_m_default(classes.iconContainer, alternativeLabel && classes.alternativeLabel)
  }, /* @__PURE__ */ createElement91(StepIconComponent, _extends({
    completed,
    active,
    error: error4,
    icon
  }, StepIconProps))) : null, /* @__PURE__ */ createElement91("span", {
    className: classes.labelContainer
  }, children2 ? /* @__PURE__ */ createElement91(Typography_default, {
    variant: "body2",
    component: "span",
    display: "block",
    className: clsx_m_default(classes.label, alternativeLabel && classes.alternativeLabel, completed && classes.completed, active && classes.active, error4 && classes.error)
  }, children2) : null, optional));
});
true ? StepLabel.propTypes = {
  children: import_prop_types98.default.node,
  classes: import_prop_types98.default.object,
  className: import_prop_types98.default.string,
  disabled: import_prop_types98.default.bool,
  error: import_prop_types98.default.bool,
  icon: import_prop_types98.default.node,
  optional: import_prop_types98.default.node,
  StepIconComponent: import_prop_types98.default.elementType,
  StepIconProps: import_prop_types98.default.object
} : void 0;
StepLabel.muiName = "StepLabel";
var StepLabel_default = withStyles_default2(styles116, {
  name: "MuiStepLabel"
})(StepLabel);

// node_modules/@material-ui/core/esm/StepButton/StepButton.js
var styles118 = {
  root: {
    width: "100%",
    padding: "24px 16px",
    margin: "-24px -16px",
    boxSizing: "content-box"
  },
  horizontal: {},
  vertical: {
    justifyContent: "flex-start",
    padding: "8px",
    margin: "-8px"
  },
  touchRipple: {
    color: "rgba(0, 0, 0, 0.3)"
  }
};
var StepButton = /* @__PURE__ */ forwardRef180(function StepButton2(props, ref2) {
  var active = props.active, alternativeLabel = props.alternativeLabel, children2 = props.children, classes = props.classes, className = props.className, completed = props.completed, disabled3 = props.disabled, expanded = props.expanded, icon = props.icon, last2 = props.last, optional = props.optional, orientation = props.orientation, other = _objectWithoutProperties(props, ["active", "alternativeLabel", "children", "classes", "className", "completed", "disabled", "expanded", "icon", "last", "optional", "orientation"]);
  var childProps = {
    active,
    alternativeLabel,
    completed,
    disabled: disabled3,
    icon,
    optional,
    orientation
  };
  var child = isMuiElement(children2, ["StepLabel"]) ? /* @__PURE__ */ cloneElement21(children2, childProps) : /* @__PURE__ */ createElement92(StepLabel_default, childProps, children2);
  return /* @__PURE__ */ createElement92(ButtonBase_default, _extends({
    focusRipple: true,
    disabled: disabled3,
    TouchRippleProps: {
      className: classes.touchRipple
    },
    className: clsx_m_default(classes.root, classes[orientation], className),
    ref: ref2
  }, other), child);
});
true ? StepButton.propTypes = {
  active: import_prop_types99.default.bool,
  alternativeLabel: import_prop_types99.default.bool,
  children: import_prop_types99.default.node,
  classes: import_prop_types99.default.object.isRequired,
  className: import_prop_types99.default.string,
  completed: import_prop_types99.default.bool,
  disabled: import_prop_types99.default.bool,
  expanded: import_prop_types99.default.bool,
  icon: import_prop_types99.default.node,
  last: import_prop_types99.default.bool,
  optional: import_prop_types99.default.node,
  orientation: import_prop_types99.default.oneOf(["horizontal", "vertical"])
} : void 0;
var StepButton_default = withStyles_default2(styles118, {
  name: "MuiStepButton"
})(StepButton);

// node_modules/@material-ui/core/esm/StepConnector/StepConnector.js
var import_prop_types100 = __toModule(require_prop_types());
import {
  createElement as createElement93,
  forwardRef as forwardRef181
} from "react";
var styles119 = function styles120(theme) {
  return {
    root: {
      flex: "1 1 auto"
    },
    horizontal: {},
    vertical: {
      marginLeft: 12,
      padding: "0 0 8px"
    },
    alternativeLabel: {
      position: "absolute",
      top: 8 + 4,
      left: "calc(-50% + 20px)",
      right: "calc(50% + 20px)"
    },
    active: {},
    completed: {},
    disabled: {},
    line: {
      display: "block",
      borderColor: theme.palette.type === "light" ? theme.palette.grey[400] : theme.palette.grey[600]
    },
    lineHorizontal: {
      borderTopStyle: "solid",
      borderTopWidth: 1
    },
    lineVertical: {
      borderLeftStyle: "solid",
      borderLeftWidth: 1,
      minHeight: 24
    }
  };
};
var StepConnector = /* @__PURE__ */ forwardRef181(function StepConnector2(props, ref2) {
  var active = props.active, _props$alternativeLab = props.alternativeLabel, alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab, classes = props.classes, className = props.className, completed = props.completed, disabled3 = props.disabled, index4 = props.index, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, other = _objectWithoutProperties(props, ["active", "alternativeLabel", "classes", "className", "completed", "disabled", "index", "orientation"]);
  return /* @__PURE__ */ createElement93("div", _extends({
    className: clsx_m_default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, active && classes.active, completed && classes.completed, disabled3 && classes.disabled),
    ref: ref2
  }, other), /* @__PURE__ */ createElement93("span", {
    className: clsx_m_default(classes.line, {
      "horizontal": classes.lineHorizontal,
      "vertical": classes.lineVertical
    }[orientation])
  }));
});
true ? StepConnector.propTypes = {
  classes: import_prop_types100.default.object,
  className: import_prop_types100.default.string
} : void 0;
var StepConnector_default = withStyles_default2(styles119, {
  name: "MuiStepConnector"
})(StepConnector);

// node_modules/@material-ui/core/esm/Stepper/Stepper.js
var import_prop_types101 = __toModule(require_prop_types());
import {
  Children as Children11,
  cloneElement as cloneElement22,
  createElement as createElement94,
  forwardRef as forwardRef182,
  isValidElement as isValidElement12
} from "react";
var styles121 = {
  root: {
    display: "flex",
    padding: 24
  },
  horizontal: {
    flexDirection: "row",
    alignItems: "center"
  },
  vertical: {
    flexDirection: "column"
  },
  alternativeLabel: {
    alignItems: "flex-start"
  }
};
var defaultConnector = /* @__PURE__ */ createElement94(StepConnector_default, null);
var Stepper = /* @__PURE__ */ forwardRef182(function Stepper2(props, ref2) {
  var _props$activeStep = props.activeStep, activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep, _props$alternativeLab = props.alternativeLabel, alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab, children2 = props.children, classes = props.classes, className = props.className, _props$connector = props.connector, connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector, _props$nonLinear = props.nonLinear, nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, other = _objectWithoutProperties(props, ["activeStep", "alternativeLabel", "children", "classes", "className", "connector", "nonLinear", "orientation"]);
  var connector = /* @__PURE__ */ isValidElement12(connectorProp) ? /* @__PURE__ */ cloneElement22(connectorProp, {
    orientation
  }) : null;
  var childrenArray = Children11.toArray(children2);
  var steps = childrenArray.map(function(step, index4) {
    var state = {
      index: index4,
      active: false,
      completed: false,
      disabled: false
    };
    if (activeStep === index4) {
      state.active = true;
    } else if (!nonLinear && activeStep > index4) {
      state.completed = true;
    } else if (!nonLinear && activeStep < index4) {
      state.disabled = true;
    }
    return /* @__PURE__ */ cloneElement22(step, _extends({
      alternativeLabel,
      connector,
      last: index4 + 1 === childrenArray.length,
      orientation
    }, state, step.props));
  });
  return /* @__PURE__ */ createElement94(Paper_default, _extends({
    square: true,
    elevation: 0,
    className: clsx_m_default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),
    ref: ref2
  }, other), steps);
});
true ? Stepper.propTypes = {
  activeStep: import_prop_types101.default.number,
  alternativeLabel: import_prop_types101.default.bool,
  children: import_prop_types101.default.node,
  classes: import_prop_types101.default.object,
  className: import_prop_types101.default.string,
  connector: import_prop_types101.default.element,
  nonLinear: import_prop_types101.default.bool,
  orientation: import_prop_types101.default.oneOf(["horizontal", "vertical"])
} : void 0;
var Stepper_default = withStyles_default2(styles121, {
  name: "MuiStepper"
})(Stepper);

// node_modules/@material-ui/core/esm/Switch/Switch.js
var import_prop_types102 = __toModule(require_prop_types());
import {
  createElement as createElement95,
  forwardRef as forwardRef183
} from "react";
var styles122 = function styles123(theme) {
  return {
    root: {
      display: "inline-flex",
      width: 34 + 12 * 2,
      height: 14 + 12 * 2,
      overflow: "hidden",
      padding: 12,
      boxSizing: "border-box",
      position: "relative",
      flexShrink: 0,
      zIndex: 0,
      verticalAlign: "middle",
      "@media print": {
        colorAdjust: "exact"
      }
    },
    edgeStart: {
      marginLeft: -8
    },
    edgeEnd: {
      marginRight: -8
    },
    switchBase: {
      position: "absolute",
      top: 0,
      left: 0,
      zIndex: 1,
      color: theme.palette.type === "light" ? theme.palette.grey[50] : theme.palette.grey[400],
      transition: theme.transitions.create(["left", "transform"], {
        duration: theme.transitions.duration.shortest
      }),
      "&$checked": {
        transform: "translateX(20px)"
      },
      "&$disabled": {
        color: theme.palette.type === "light" ? theme.palette.grey[400] : theme.palette.grey[800]
      },
      "&$checked + $track": {
        opacity: 0.5
      },
      "&$disabled + $track": {
        opacity: theme.palette.type === "light" ? 0.12 : 0.1
      }
    },
    colorPrimary: {
      "&$checked": {
        color: theme.palette.primary.main,
        "&:hover": {
          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        }
      },
      "&$disabled": {
        color: theme.palette.type === "light" ? theme.palette.grey[400] : theme.palette.grey[800]
      },
      "&$checked + $track": {
        backgroundColor: theme.palette.primary.main
      },
      "&$disabled + $track": {
        backgroundColor: theme.palette.type === "light" ? theme.palette.common.black : theme.palette.common.white
      }
    },
    colorSecondary: {
      "&$checked": {
        color: theme.palette.secondary.main,
        "&:hover": {
          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        }
      },
      "&$disabled": {
        color: theme.palette.type === "light" ? theme.palette.grey[400] : theme.palette.grey[800]
      },
      "&$checked + $track": {
        backgroundColor: theme.palette.secondary.main
      },
      "&$disabled + $track": {
        backgroundColor: theme.palette.type === "light" ? theme.palette.common.black : theme.palette.common.white
      }
    },
    sizeSmall: {
      width: 40,
      height: 24,
      padding: 7,
      "& $thumb": {
        width: 16,
        height: 16
      },
      "& $switchBase": {
        padding: 4,
        "&$checked": {
          transform: "translateX(16px)"
        }
      }
    },
    checked: {},
    disabled: {},
    input: {
      left: "-100%",
      width: "300%"
    },
    thumb: {
      boxShadow: theme.shadows[1],
      backgroundColor: "currentColor",
      width: 20,
      height: 20,
      borderRadius: "50%"
    },
    track: {
      height: "100%",
      width: "100%",
      borderRadius: 14 / 2,
      zIndex: -1,
      transition: theme.transitions.create(["opacity", "background-color"], {
        duration: theme.transitions.duration.shortest
      }),
      backgroundColor: theme.palette.type === "light" ? theme.palette.common.black : theme.palette.common.white,
      opacity: theme.palette.type === "light" ? 0.38 : 0.3
    }
  };
};
var Switch = /* @__PURE__ */ forwardRef183(function Switch2(props, ref2) {
  var classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "secondary" : _props$color, _props$edge = props.edge, edge = _props$edge === void 0 ? false : _props$edge, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, other = _objectWithoutProperties(props, ["classes", "className", "color", "edge", "size"]);
  var icon = /* @__PURE__ */ createElement95("span", {
    className: classes.thumb
  });
  return /* @__PURE__ */ createElement95("span", {
    className: clsx_m_default(classes.root, className, {
      "start": classes.edgeStart,
      "end": classes.edgeEnd
    }[edge], size === "small" && classes["size".concat(capitalize(size))])
  }, /* @__PURE__ */ createElement95(SwitchBase_default, _extends({
    type: "checkbox",
    icon,
    checkedIcon: icon,
    classes: {
      root: clsx_m_default(classes.switchBase, classes["color".concat(capitalize(color2))]),
      input: classes.input,
      checked: classes.checked,
      disabled: classes.disabled
    },
    ref: ref2
  }, other)), /* @__PURE__ */ createElement95("span", {
    className: classes.track
  }));
});
true ? Switch.propTypes = {
  checked: import_prop_types102.default.bool,
  checkedIcon: import_prop_types102.default.node,
  classes: import_prop_types102.default.object,
  className: import_prop_types102.default.string,
  color: import_prop_types102.default.oneOf(["default", "primary", "secondary"]),
  defaultChecked: import_prop_types102.default.bool,
  disabled: import_prop_types102.default.bool,
  disableRipple: import_prop_types102.default.bool,
  edge: import_prop_types102.default.oneOf(["end", "start", false]),
  icon: import_prop_types102.default.node,
  id: import_prop_types102.default.string,
  inputProps: import_prop_types102.default.object,
  inputRef: refType_default,
  onChange: import_prop_types102.default.func,
  required: import_prop_types102.default.bool,
  size: import_prop_types102.default.oneOf(["medium", "small"]),
  value: import_prop_types102.default.any
} : void 0;
var Switch_default = withStyles_default2(styles122, {
  name: "MuiSwitch"
})(Switch);

// node_modules/@material-ui/core/esm/Tab/Tab.js
var import_prop_types103 = __toModule(require_prop_types());
import {
  createElement as createElement96,
  forwardRef as forwardRef184
} from "react";
var styles124 = function styles125(theme) {
  var _extends22;
  return {
    root: _extends({}, theme.typography.button, (_extends22 = {
      maxWidth: 264,
      minWidth: 72,
      position: "relative",
      boxSizing: "border-box",
      minHeight: 48,
      flexShrink: 0,
      padding: "6px 12px"
    }, _defineProperty(_extends22, theme.breakpoints.up("sm"), {
      padding: "6px 24px"
    }), _defineProperty(_extends22, "overflow", "hidden"), _defineProperty(_extends22, "whiteSpace", "normal"), _defineProperty(_extends22, "textAlign", "center"), _defineProperty(_extends22, theme.breakpoints.up("sm"), {
      minWidth: 160
    }), _extends22)),
    labelIcon: {
      minHeight: 72,
      paddingTop: 9,
      "& $wrapper > *:first-child": {
        marginBottom: 6
      }
    },
    textColorInherit: {
      color: "inherit",
      opacity: 0.7,
      "&$selected": {
        opacity: 1
      },
      "&$disabled": {
        opacity: 0.5
      }
    },
    textColorPrimary: {
      color: theme.palette.text.secondary,
      "&$selected": {
        color: theme.palette.primary.main
      },
      "&$disabled": {
        color: theme.palette.text.disabled
      }
    },
    textColorSecondary: {
      color: theme.palette.text.secondary,
      "&$selected": {
        color: theme.palette.secondary.main
      },
      "&$disabled": {
        color: theme.palette.text.disabled
      }
    },
    selected: {},
    disabled: {},
    fullWidth: {
      flexShrink: 1,
      flexGrow: 1,
      flexBasis: 0,
      maxWidth: "none"
    },
    wrapped: {
      fontSize: theme.typography.pxToRem(12),
      lineHeight: 1.5
    },
    wrapper: {
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      width: "100%",
      flexDirection: "column"
    }
  };
};
var Tab = /* @__PURE__ */ forwardRef184(function Tab2(props, ref2) {
  var classes = props.classes, className = props.className, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, fullWidth = props.fullWidth, icon = props.icon, indicator = props.indicator, label3 = props.label, onChange = props.onChange, onClick = props.onClick, onFocus = props.onFocus, selected = props.selected, selectionFollowsFocus = props.selectionFollowsFocus, _props$textColor = props.textColor, textColor4 = _props$textColor === void 0 ? "inherit" : _props$textColor, value = props.value, _props$wrapped = props.wrapped, wrapped = _props$wrapped === void 0 ? false : _props$wrapped, other = _objectWithoutProperties(props, ["classes", "className", "disabled", "disableFocusRipple", "fullWidth", "icon", "indicator", "label", "onChange", "onClick", "onFocus", "selected", "selectionFollowsFocus", "textColor", "value", "wrapped"]);
  var handleClick = function handleClick2(event) {
    if (onChange) {
      onChange(event, value);
    }
    if (onClick) {
      onClick(event);
    }
  };
  var handleFocus = function handleFocus2(event) {
    if (selectionFollowsFocus && !selected && onChange) {
      onChange(event, value);
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  return /* @__PURE__ */ createElement96(ButtonBase_default, _extends({
    focusRipple: !disableFocusRipple,
    className: clsx_m_default(classes.root, classes["textColor".concat(capitalize(textColor4))], className, disabled3 && classes.disabled, selected && classes.selected, label3 && icon && classes.labelIcon, fullWidth && classes.fullWidth, wrapped && classes.wrapped),
    ref: ref2,
    role: "tab",
    "aria-selected": selected,
    disabled: disabled3,
    onClick: handleClick,
    onFocus: handleFocus,
    tabIndex: selected ? 0 : -1
  }, other), /* @__PURE__ */ createElement96("span", {
    className: classes.wrapper
  }, icon, label3), indicator);
});
true ? Tab.propTypes = {
  children: unsupportedProp,
  classes: import_prop_types103.default.object.isRequired,
  className: import_prop_types103.default.string,
  disabled: import_prop_types103.default.bool,
  disableFocusRipple: import_prop_types103.default.bool,
  disableRipple: import_prop_types103.default.bool,
  fullWidth: import_prop_types103.default.bool,
  icon: import_prop_types103.default.node,
  indicator: import_prop_types103.default.node,
  label: import_prop_types103.default.node,
  onChange: import_prop_types103.default.func,
  onClick: import_prop_types103.default.func,
  onFocus: import_prop_types103.default.func,
  selected: import_prop_types103.default.bool,
  selectionFollowsFocus: import_prop_types103.default.bool,
  textColor: import_prop_types103.default.oneOf(["secondary", "primary", "inherit"]),
  value: import_prop_types103.default.any,
  wrapped: import_prop_types103.default.bool
} : void 0;
var Tab_default = withStyles_default2(styles124, {
  name: "MuiTab"
})(Tab);

// node_modules/@material-ui/core/esm/Table/TableContext.js
import {
  createContext as createContext5
} from "react";
var TableContext = createContext5();
if (true) {
  TableContext.displayName = "TableContext";
}
var TableContext_default = TableContext;

// node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js
import {
  createContext as createContext6
} from "react";
var Tablelvl2Context = createContext6();
if (true) {
  Tablelvl2Context.displayName = "Tablelvl2Context";
}
var Tablelvl2Context_default = Tablelvl2Context;

// node_modules/@material-ui/core/esm/TableCell/TableCell.js
var import_prop_types104 = __toModule(require_prop_types());
import {
  createElement as createElement97,
  forwardRef as forwardRef185,
  useContext as useContext9
} from "react";
var styles126 = function styles127(theme) {
  return {
    root: _extends({}, theme.typography.body2, {
      display: "table-cell",
      verticalAlign: "inherit",
      borderBottom: "1px solid\n    ".concat(theme.palette.type === "light" ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)),
      textAlign: "left",
      padding: 16
    }),
    head: {
      color: theme.palette.text.primary,
      lineHeight: theme.typography.pxToRem(24),
      fontWeight: theme.typography.fontWeightMedium
    },
    body: {
      color: theme.palette.text.primary
    },
    footer: {
      color: theme.palette.text.secondary,
      lineHeight: theme.typography.pxToRem(21),
      fontSize: theme.typography.pxToRem(12)
    },
    sizeSmall: {
      padding: "6px 24px 6px 16px",
      "&:last-child": {
        paddingRight: 16
      },
      "&$paddingCheckbox": {
        width: 24,
        padding: "0 12px 0 16px",
        "&:last-child": {
          paddingLeft: 12,
          paddingRight: 16
        },
        "& > *": {
          padding: 0
        }
      }
    },
    paddingCheckbox: {
      width: 48,
      padding: "0 0 0 4px",
      "&:last-child": {
        paddingLeft: 0,
        paddingRight: 4
      }
    },
    paddingNone: {
      padding: 0,
      "&:last-child": {
        padding: 0
      }
    },
    alignLeft: {
      textAlign: "left"
    },
    alignCenter: {
      textAlign: "center"
    },
    alignRight: {
      textAlign: "right",
      flexDirection: "row-reverse"
    },
    alignJustify: {
      textAlign: "justify"
    },
    stickyHeader: {
      position: "sticky",
      top: 0,
      left: 0,
      zIndex: 2,
      backgroundColor: theme.palette.background.default
    }
  };
};
var TableCell = /* @__PURE__ */ forwardRef185(function TableCell2(props, ref2) {
  var _props$align = props.align, align = _props$align === void 0 ? "inherit" : _props$align, classes = props.classes, className = props.className, component = props.component, paddingProp = props.padding, scopeProp = props.scope, sizeProp = props.size, sortDirection = props.sortDirection, variantProp = props.variant, other = _objectWithoutProperties(props, ["align", "classes", "className", "component", "padding", "scope", "size", "sortDirection", "variant"]);
  var table = useContext9(TableContext_default);
  var tablelvl2 = useContext9(Tablelvl2Context_default);
  var isHeadCell = tablelvl2 && tablelvl2.variant === "head";
  var role;
  var Component7;
  if (component) {
    Component7 = component;
    role = isHeadCell ? "columnheader" : "cell";
  } else {
    Component7 = isHeadCell ? "th" : "td";
  }
  var scope = scopeProp;
  if (!scope && isHeadCell) {
    scope = "col";
  }
  var padding = paddingProp || (table && table.padding ? table.padding : "normal");
  var size = sizeProp || (table && table.size ? table.size : "medium");
  var variant = variantProp || tablelvl2 && tablelvl2.variant;
  var ariaSort = null;
  if (sortDirection) {
    ariaSort = sortDirection === "asc" ? "ascending" : "descending";
  }
  return /* @__PURE__ */ createElement97(Component7, _extends({
    ref: ref2,
    className: clsx_m_default(classes.root, classes[variant], className, align !== "inherit" && classes["align".concat(capitalize(align))], padding !== "normal" && classes["padding".concat(capitalize(padding))], size !== "medium" && classes["size".concat(capitalize(size))], variant === "head" && table && table.stickyHeader && classes.stickyHeader),
    "aria-sort": ariaSort,
    role,
    scope
  }, other));
});
true ? TableCell.propTypes = {
  align: import_prop_types104.default.oneOf(["center", "inherit", "justify", "left", "right"]),
  children: import_prop_types104.default.node,
  classes: import_prop_types104.default.object,
  className: import_prop_types104.default.string,
  component: import_prop_types104.default.elementType,
  padding: chainPropTypes(import_prop_types104.default.oneOf(["normal", "checkbox", "none", "default"]), function(props) {
    if (props.padding === "default") {
      return new Error('Material-UI: padding="default" was renamed to padding="normal" for consistency.');
    }
    return null;
  }),
  scope: import_prop_types104.default.string,
  size: import_prop_types104.default.oneOf(["medium", "small"]),
  sortDirection: import_prop_types104.default.oneOf(["asc", "desc", false]),
  variant: import_prop_types104.default.oneOf(["body", "footer", "head"])
} : void 0;
var TableCell_default = withStyles_default2(styles126, {
  name: "MuiTableCell"
})(TableCell);

// node_modules/@material-ui/core/esm/Toolbar/Toolbar.js
var import_prop_types105 = __toModule(require_prop_types());
import {
  createElement as createElement98,
  forwardRef as forwardRef186
} from "react";
var styles128 = function styles129(theme) {
  return {
    root: {
      position: "relative",
      display: "flex",
      alignItems: "center"
    },
    gutters: _defineProperty({
      paddingLeft: theme.spacing(2),
      paddingRight: theme.spacing(2)
    }, theme.breakpoints.up("sm"), {
      paddingLeft: theme.spacing(3),
      paddingRight: theme.spacing(3)
    }),
    regular: theme.mixins.toolbar,
    dense: {
      minHeight: 48
    }
  };
};
var Toolbar = /* @__PURE__ */ forwardRef186(function Toolbar2(props, ref2) {
  var classes = props.classes, className = props.className, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$variant = props.variant, variant = _props$variant === void 0 ? "regular" : _props$variant, other = _objectWithoutProperties(props, ["classes", "className", "component", "disableGutters", "variant"]);
  return /* @__PURE__ */ createElement98(Component7, _extends({
    className: clsx_m_default(classes.root, classes[variant], className, !disableGutters && classes.gutters),
    ref: ref2
  }, other));
});
true ? Toolbar.propTypes = {
  children: import_prop_types105.default.node,
  classes: import_prop_types105.default.object.isRequired,
  className: import_prop_types105.default.string,
  component: import_prop_types105.default.elementType,
  disableGutters: import_prop_types105.default.bool,
  variant: import_prop_types105.default.oneOf(["regular", "dense"])
} : void 0;
var Toolbar_default = withStyles_default2(styles128, {
  name: "MuiToolbar"
})(Toolbar);

// node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js
import {
  createElement as createElement99
} from "react";
var KeyboardArrowLeft_default = createSvgIcon(/* @__PURE__ */ createElement99("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft");

// node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js
import {
  createElement as createElement100
} from "react";
var KeyboardArrowRight_default = createSvgIcon(/* @__PURE__ */ createElement100("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight");

// node_modules/@material-ui/core/esm/Tabs/Tabs.js
var import_react_is8 = __toModule(require_react_is2());
var import_prop_types109 = __toModule(require_prop_types());
import {
  Children as Children12,
  cloneElement as cloneElement23,
  createElement as createElement104,
  forwardRef as forwardRef189,
  isValidElement as isValidElement13,
  useCallback as useCallback18,
  useEffect as useEffect27,
  useImperativeHandle as useImperativeHandle8,
  useRef as useRef28,
  useState as useState17
} from "react";

// node_modules/@material-ui/core/esm/utils/scrollLeft.js
var cachedType;
function detectScrollType() {
  if (cachedType) {
    return cachedType;
  }
  var dummy = document.createElement("div");
  var container = document.createElement("div");
  container.style.width = "10px";
  container.style.height = "1px";
  dummy.appendChild(container);
  dummy.dir = "rtl";
  dummy.style.fontSize = "14px";
  dummy.style.width = "4px";
  dummy.style.height = "1px";
  dummy.style.position = "absolute";
  dummy.style.top = "-1000px";
  dummy.style.overflow = "scroll";
  document.body.appendChild(dummy);
  cachedType = "reverse";
  if (dummy.scrollLeft > 0) {
    cachedType = "default";
  } else {
    dummy.scrollLeft = 1;
    if (dummy.scrollLeft === 0) {
      cachedType = "negative";
    }
  }
  document.body.removeChild(dummy);
  return cachedType;
}
function getNormalizedScrollLeft(element2, direction) {
  var scrollLeft = element2.scrollLeft;
  if (direction !== "rtl") {
    return scrollLeft;
  }
  var type3 = detectScrollType();
  switch (type3) {
    case "negative":
      return element2.scrollWidth - element2.clientWidth + scrollLeft;
    case "reverse":
      return element2.scrollWidth - element2.clientWidth - scrollLeft;
    default:
      return scrollLeft;
  }
}

// node_modules/@material-ui/core/esm/internal/animate.js
function easeInOutSin(time) {
  return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2;
}
function animate(property, element2, to) {
  var options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
  var cb = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : function() {
  };
  var _options$ease = options.ease, ease2 = _options$ease === void 0 ? easeInOutSin : _options$ease, _options$duration = options.duration, duration5 = _options$duration === void 0 ? 300 : _options$duration;
  var start3 = null;
  var from = element2[property];
  var cancelled = false;
  var cancel = function cancel2() {
    cancelled = true;
  };
  var step = function step2(timestamp) {
    if (cancelled) {
      cb(new Error("Animation cancelled"));
      return;
    }
    if (start3 === null) {
      start3 = timestamp;
    }
    var time = Math.min(1, (timestamp - start3) / duration5);
    element2[property] = ease2(time) * (to - from) + from;
    if (time >= 1) {
      requestAnimationFrame(function() {
        cb(null);
      });
      return;
    }
    requestAnimationFrame(step2);
  };
  if (from === to) {
    cb(new Error("Element already at target position"));
    return cancel;
  }
  requestAnimationFrame(step);
  return cancel;
}

// node_modules/@material-ui/core/esm/Tabs/ScrollbarSize.js
var import_prop_types106 = __toModule(require_prop_types());
import {
  createElement as createElement101,
  useEffect as useEffect26,
  useRef as useRef27
} from "react";
var styles130 = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function ScrollbarSize(props) {
  var onChange = props.onChange, other = _objectWithoutProperties(props, ["onChange"]);
  var scrollbarHeight = useRef27();
  var nodeRef = useRef27(null);
  var setMeasurements = function setMeasurements2() {
    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;
  };
  useEffect26(function() {
    var handleResize = debounce(function() {
      var prevHeight = scrollbarHeight.current;
      setMeasurements();
      if (prevHeight !== scrollbarHeight.current) {
        onChange(scrollbarHeight.current);
      }
    });
    window.addEventListener("resize", handleResize);
    return function() {
      handleResize.clear();
      window.removeEventListener("resize", handleResize);
    };
  }, [onChange]);
  useEffect26(function() {
    setMeasurements();
    onChange(scrollbarHeight.current);
  }, [onChange]);
  return /* @__PURE__ */ createElement101("div", _extends({
    style: styles130,
    ref: nodeRef
  }, other));
}
true ? ScrollbarSize.propTypes = {
  onChange: import_prop_types106.default.func.isRequired
} : void 0;

// node_modules/@material-ui/core/esm/Tabs/TabIndicator.js
var import_prop_types107 = __toModule(require_prop_types());
import {
  createElement as createElement102,
  forwardRef as forwardRef187
} from "react";
var styles131 = function styles132(theme) {
  return {
    root: {
      position: "absolute",
      height: 2,
      bottom: 0,
      width: "100%",
      transition: theme.transitions.create()
    },
    colorPrimary: {
      backgroundColor: theme.palette.primary.main
    },
    colorSecondary: {
      backgroundColor: theme.palette.secondary.main
    },
    vertical: {
      height: "100%",
      width: 2,
      right: 0
    }
  };
};
var TabIndicator = /* @__PURE__ */ forwardRef187(function TabIndicator2(props, ref2) {
  var classes = props.classes, className = props.className, color2 = props.color, orientation = props.orientation, other = _objectWithoutProperties(props, ["classes", "className", "color", "orientation"]);
  return /* @__PURE__ */ createElement102("span", _extends({
    className: clsx_m_default(classes.root, classes["color".concat(capitalize(color2))], className, orientation === "vertical" && classes.vertical),
    ref: ref2
  }, other));
});
true ? TabIndicator.propTypes = {
  classes: import_prop_types107.default.object.isRequired,
  className: import_prop_types107.default.string,
  color: import_prop_types107.default.oneOf(["primary", "secondary"]).isRequired,
  orientation: import_prop_types107.default.oneOf(["horizontal", "vertical"]).isRequired
} : void 0;
var TabIndicator_default = withStyles_default2(styles131, {
  name: "PrivateTabIndicator"
})(TabIndicator);

// node_modules/@material-ui/core/esm/TabScrollButton/TabScrollButton.js
var import_prop_types108 = __toModule(require_prop_types());
import {
  createElement as createElement103,
  forwardRef as forwardRef188
} from "react";
var styles133 = {
  root: {
    width: 40,
    flexShrink: 0,
    opacity: 0.8,
    "&$disabled": {
      opacity: 0
    }
  },
  vertical: {
    width: "100%",
    height: 40,
    "& svg": {
      transform: "rotate(90deg)"
    }
  },
  disabled: {}
};
var _ref4 = /* @__PURE__ */ createElement103(KeyboardArrowLeft_default, {
  fontSize: "small"
});
var _ref22 = /* @__PURE__ */ createElement103(KeyboardArrowRight_default, {
  fontSize: "small"
});
var TabScrollButton = /* @__PURE__ */ forwardRef188(function TabScrollButton2(props, ref2) {
  var classes = props.classes, classNameProp = props.className, direction = props.direction, orientation = props.orientation, disabled3 = props.disabled, other = _objectWithoutProperties(props, ["classes", "className", "direction", "orientation", "disabled"]);
  return /* @__PURE__ */ createElement103(ButtonBase_default, _extends({
    component: "div",
    className: clsx_m_default(classes.root, classNameProp, disabled3 && classes.disabled, orientation === "vertical" && classes.vertical),
    ref: ref2,
    role: null,
    tabIndex: null
  }, other), direction === "left" ? _ref4 : _ref22);
});
true ? TabScrollButton.propTypes = {
  children: import_prop_types108.default.node,
  classes: import_prop_types108.default.object,
  className: import_prop_types108.default.string,
  direction: import_prop_types108.default.oneOf(["left", "right"]).isRequired,
  disabled: import_prop_types108.default.bool,
  orientation: import_prop_types108.default.oneOf(["horizontal", "vertical"]).isRequired
} : void 0;
var TabScrollButton_default = withStyles_default2(styles133, {
  name: "MuiTabScrollButton"
})(TabScrollButton);

// node_modules/@material-ui/core/esm/Tabs/Tabs.js
var styles134 = function styles135(theme) {
  return {
    root: {
      overflow: "hidden",
      minHeight: 48,
      WebkitOverflowScrolling: "touch",
      display: "flex"
    },
    vertical: {
      flexDirection: "column"
    },
    flexContainer: {
      display: "flex"
    },
    flexContainerVertical: {
      flexDirection: "column"
    },
    centered: {
      justifyContent: "center"
    },
    scroller: {
      position: "relative",
      display: "inline-block",
      flex: "1 1 auto",
      whiteSpace: "nowrap"
    },
    fixed: {
      overflowX: "hidden",
      width: "100%"
    },
    scrollable: {
      overflowX: "scroll",
      scrollbarWidth: "none",
      "&::-webkit-scrollbar": {
        display: "none"
      }
    },
    scrollButtons: {},
    scrollButtonsDesktop: _defineProperty({}, theme.breakpoints.down("xs"), {
      display: "none"
    }),
    indicator: {}
  };
};
var Tabs = /* @__PURE__ */ forwardRef189(function Tabs2(props, ref2) {
  var ariaLabel = props["aria-label"], ariaLabelledBy = props["aria-labelledby"], action3 = props.action, _props$centered = props.centered, centered = _props$centered === void 0 ? false : _props$centered, childrenProp = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component7 = _props$component === void 0 ? "div" : _props$component, _props$indicatorColor = props.indicatorColor, indicatorColor = _props$indicatorColor === void 0 ? "secondary" : _props$indicatorColor, onChange = props.onChange, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, _props$ScrollButtonCo = props.ScrollButtonComponent, ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? TabScrollButton_default : _props$ScrollButtonCo, _props$scrollButtons = props.scrollButtons, scrollButtons = _props$scrollButtons === void 0 ? "auto" : _props$scrollButtons, selectionFollowsFocus = props.selectionFollowsFocus, _props$TabIndicatorPr = props.TabIndicatorProps, TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr, TabScrollButtonProps = props.TabScrollButtonProps, _props$textColor = props.textColor, textColor4 = _props$textColor === void 0 ? "inherit" : _props$textColor, value = props.value, _props$variant = props.variant, variant = _props$variant === void 0 ? "standard" : _props$variant, other = _objectWithoutProperties(props, ["aria-label", "aria-labelledby", "action", "centered", "children", "classes", "className", "component", "indicatorColor", "onChange", "orientation", "ScrollButtonComponent", "scrollButtons", "selectionFollowsFocus", "TabIndicatorProps", "TabScrollButtonProps", "textColor", "value", "variant"]);
  var theme = useTheme2();
  var scrollable = variant === "scrollable";
  var isRtl = theme.direction === "rtl";
  var vertical2 = orientation === "vertical";
  var scrollStart = vertical2 ? "scrollTop" : "scrollLeft";
  var start3 = vertical2 ? "top" : "left";
  var end2 = vertical2 ? "bottom" : "right";
  var clientSize = vertical2 ? "clientHeight" : "clientWidth";
  var size = vertical2 ? "height" : "width";
  if (true) {
    if (centered && scrollable) {
      console.error('Material-UI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
    }
  }
  var _React$useState = useState17(false), mounted = _React$useState[0], setMounted = _React$useState[1];
  var _React$useState2 = useState17({}), indicatorStyle = _React$useState2[0], setIndicatorStyle = _React$useState2[1];
  var _React$useState3 = useState17({
    start: false,
    end: false
  }), displayScroll = _React$useState3[0], setDisplayScroll = _React$useState3[1];
  var _React$useState4 = useState17({
    overflow: "hidden",
    marginBottom: null
  }), scrollerStyle2 = _React$useState4[0], setScrollerStyle = _React$useState4[1];
  var valueToIndex = new Map();
  var tabsRef = useRef28(null);
  var tabListRef = useRef28(null);
  var getTabsMeta = function getTabsMeta2() {
    var tabsNode = tabsRef.current;
    var tabsMeta;
    if (tabsNode) {
      var rect = tabsNode.getBoundingClientRect();
      tabsMeta = {
        clientWidth: tabsNode.clientWidth,
        scrollLeft: tabsNode.scrollLeft,
        scrollTop: tabsNode.scrollTop,
        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),
        scrollWidth: tabsNode.scrollWidth,
        top: rect.top,
        bottom: rect.bottom,
        left: rect.left,
        right: rect.right
      };
    }
    var tabMeta;
    if (tabsNode && value !== false) {
      var _children = tabListRef.current.children;
      if (_children.length > 0) {
        var tab4 = _children[valueToIndex.get(value)];
        if (true) {
          if (!tab4) {
            console.error(["Material-UI: The value provided to the Tabs component is invalid.", "None of the Tabs' children match with `".concat(value, "`."), valueToIndex.keys ? "You can provide one of the following values: ".concat(Array.from(valueToIndex.keys()).join(", "), ".") : null].join("\n"));
          }
        }
        tabMeta = tab4 ? tab4.getBoundingClientRect() : null;
      }
    }
    return {
      tabsMeta,
      tabMeta
    };
  };
  var updateIndicatorState = useEventCallback(function() {
    var _newIndicatorStyle;
    var _getTabsMeta = getTabsMeta(), tabsMeta = _getTabsMeta.tabsMeta, tabMeta = _getTabsMeta.tabMeta;
    var startValue = 0;
    if (tabMeta && tabsMeta) {
      if (vertical2) {
        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;
      } else {
        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;
        startValue = tabMeta.left - tabsMeta.left + correction;
      }
    }
    var newIndicatorStyle = (_newIndicatorStyle = {}, _defineProperty(_newIndicatorStyle, start3, startValue), _defineProperty(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0), _newIndicatorStyle);
    if (isNaN(indicatorStyle[start3]) || isNaN(indicatorStyle[size])) {
      setIndicatorStyle(newIndicatorStyle);
    } else {
      var dStart = Math.abs(indicatorStyle[start3] - newIndicatorStyle[start3]);
      var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);
      if (dStart >= 1 || dSize >= 1) {
        setIndicatorStyle(newIndicatorStyle);
      }
    }
  });
  var scroll3 = function scroll4(scrollValue) {
    animate(scrollStart, tabsRef.current, scrollValue);
  };
  var moveTabsScroll = function moveTabsScroll2(delta) {
    var scrollValue = tabsRef.current[scrollStart];
    if (vertical2) {
      scrollValue += delta;
    } else {
      scrollValue += delta * (isRtl ? -1 : 1);
      scrollValue *= isRtl && detectScrollType() === "reverse" ? -1 : 1;
    }
    scroll3(scrollValue);
  };
  var handleStartScrollClick = function handleStartScrollClick2() {
    moveTabsScroll(-tabsRef.current[clientSize]);
  };
  var handleEndScrollClick = function handleEndScrollClick2() {
    moveTabsScroll(tabsRef.current[clientSize]);
  };
  var handleScrollbarSizeChange = useCallback18(function(scrollbarHeight) {
    setScrollerStyle({
      overflow: null,
      marginBottom: -scrollbarHeight
    });
  }, []);
  var getConditionalElements = function getConditionalElements2() {
    var conditionalElements2 = {};
    conditionalElements2.scrollbarSizeListener = scrollable ? /* @__PURE__ */ createElement104(ScrollbarSize, {
      className: classes.scrollable,
      onChange: handleScrollbarSizeChange
    }) : null;
    var scrollButtonsActive = displayScroll.start || displayScroll.end;
    var showScrollButtons = scrollable && (scrollButtons === "auto" && scrollButtonsActive || scrollButtons === "desktop" || scrollButtons === "on");
    conditionalElements2.scrollButtonStart = showScrollButtons ? /* @__PURE__ */ createElement104(ScrollButtonComponent, _extends({
      orientation,
      direction: isRtl ? "right" : "left",
      onClick: handleStartScrollClick,
      disabled: !displayScroll.start,
      className: clsx_m_default(classes.scrollButtons, scrollButtons !== "on" && classes.scrollButtonsDesktop)
    }, TabScrollButtonProps)) : null;
    conditionalElements2.scrollButtonEnd = showScrollButtons ? /* @__PURE__ */ createElement104(ScrollButtonComponent, _extends({
      orientation,
      direction: isRtl ? "left" : "right",
      onClick: handleEndScrollClick,
      disabled: !displayScroll.end,
      className: clsx_m_default(classes.scrollButtons, scrollButtons !== "on" && classes.scrollButtonsDesktop)
    }, TabScrollButtonProps)) : null;
    return conditionalElements2;
  };
  var scrollSelectedIntoView = useEventCallback(function() {
    var _getTabsMeta2 = getTabsMeta(), tabsMeta = _getTabsMeta2.tabsMeta, tabMeta = _getTabsMeta2.tabMeta;
    if (!tabMeta || !tabsMeta) {
      return;
    }
    if (tabMeta[start3] < tabsMeta[start3]) {
      var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start3] - tabsMeta[start3]);
      scroll3(nextScrollStart);
    } else if (tabMeta[end2] > tabsMeta[end2]) {
      var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end2] - tabsMeta[end2]);
      scroll3(_nextScrollStart);
    }
  });
  var updateScrollButtonState = useEventCallback(function() {
    if (scrollable && scrollButtons !== "off") {
      var _tabsRef$current = tabsRef.current, scrollTop = _tabsRef$current.scrollTop, scrollHeight = _tabsRef$current.scrollHeight, clientHeight = _tabsRef$current.clientHeight, scrollWidth = _tabsRef$current.scrollWidth, clientWidth = _tabsRef$current.clientWidth;
      var showStartScroll;
      var showEndScroll;
      if (vertical2) {
        showStartScroll = scrollTop > 1;
        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;
      } else {
        var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction);
        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
      }
      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {
        setDisplayScroll({
          start: showStartScroll,
          end: showEndScroll
        });
      }
    }
  });
  useEffect27(function() {
    var handleResize = debounce(function() {
      updateIndicatorState();
      updateScrollButtonState();
    });
    var win = ownerWindow(tabsRef.current);
    win.addEventListener("resize", handleResize);
    return function() {
      handleResize.clear();
      win.removeEventListener("resize", handleResize);
    };
  }, [updateIndicatorState, updateScrollButtonState]);
  var handleTabsScroll = useCallback18(debounce(function() {
    updateScrollButtonState();
  }));
  useEffect27(function() {
    return function() {
      handleTabsScroll.clear();
    };
  }, [handleTabsScroll]);
  useEffect27(function() {
    setMounted(true);
  }, []);
  useEffect27(function() {
    updateIndicatorState();
    updateScrollButtonState();
  });
  useEffect27(function() {
    scrollSelectedIntoView();
  }, [scrollSelectedIntoView, indicatorStyle]);
  useImperativeHandle8(action3, function() {
    return {
      updateIndicator: updateIndicatorState,
      updateScrollButtons: updateScrollButtonState
    };
  }, [updateIndicatorState, updateScrollButtonState]);
  var indicator = /* @__PURE__ */ createElement104(TabIndicator_default, _extends({
    className: classes.indicator,
    orientation,
    color: indicatorColor
  }, TabIndicatorProps, {
    style: _extends({}, indicatorStyle, TabIndicatorProps.style)
  }));
  var childIndex = 0;
  var children2 = Children12.map(childrenProp, function(child) {
    if (!/* @__PURE__ */ isValidElement13(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is8.isFragment)(child)) {
        console.error(["Material-UI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    var childValue = child.props.value === void 0 ? childIndex : child.props.value;
    valueToIndex.set(childValue, childIndex);
    var selected = childValue === value;
    childIndex += 1;
    return /* @__PURE__ */ cloneElement23(child, {
      fullWidth: variant === "fullWidth",
      indicator: selected && !mounted && indicator,
      selected,
      selectionFollowsFocus,
      onChange,
      textColor: textColor4,
      value: childValue
    });
  });
  var handleKeyDown2 = function handleKeyDown3(event) {
    var target = event.target;
    var role = target.getAttribute("role");
    if (role !== "tab") {
      return;
    }
    var newFocusTarget = null;
    var previousItemKey = orientation !== "vertical" ? "ArrowLeft" : "ArrowUp";
    var nextItemKey = orientation !== "vertical" ? "ArrowRight" : "ArrowDown";
    if (orientation !== "vertical" && theme.direction === "rtl") {
      previousItemKey = "ArrowRight";
      nextItemKey = "ArrowLeft";
    }
    switch (event.key) {
      case previousItemKey:
        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;
        break;
      case nextItemKey:
        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;
        break;
      case "Home":
        newFocusTarget = tabListRef.current.firstChild;
        break;
      case "End":
        newFocusTarget = tabListRef.current.lastChild;
        break;
      default:
        break;
    }
    if (newFocusTarget !== null) {
      newFocusTarget.focus();
      event.preventDefault();
    }
  };
  var conditionalElements = getConditionalElements();
  return /* @__PURE__ */ createElement104(Component7, _extends({
    className: clsx_m_default(classes.root, className, vertical2 && classes.vertical),
    ref: ref2
  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /* @__PURE__ */ createElement104("div", {
    className: clsx_m_default(classes.scroller, scrollable ? classes.scrollable : classes.fixed),
    style: scrollerStyle2,
    ref: tabsRef,
    onScroll: handleTabsScroll
  }, /* @__PURE__ */ createElement104("div", {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    className: clsx_m_default(classes.flexContainer, vertical2 && classes.flexContainerVertical, centered && !scrollable && classes.centered),
    onKeyDown: handleKeyDown2,
    ref: tabListRef,
    role: "tablist"
  }, children2), mounted && indicator), conditionalElements.scrollButtonEnd);
});
true ? Tabs.propTypes = {
  action: refType_default,
  "aria-label": import_prop_types109.default.string,
  "aria-labelledby": import_prop_types109.default.string,
  centered: import_prop_types109.default.bool,
  children: import_prop_types109.default.node,
  classes: import_prop_types109.default.object,
  className: import_prop_types109.default.string,
  component: import_prop_types109.default.elementType,
  indicatorColor: import_prop_types109.default.oneOf(["primary", "secondary"]),
  onChange: import_prop_types109.default.func,
  orientation: import_prop_types109.default.oneOf(["horizontal", "vertical"]),
  ScrollButtonComponent: import_prop_types109.default.elementType,
  scrollButtons: import_prop_types109.default.oneOf(["auto", "desktop", "off", "on"]),
  selectionFollowsFocus: import_prop_types109.default.bool,
  TabIndicatorProps: import_prop_types109.default.object,
  TabScrollButtonProps: import_prop_types109.default.object,
  textColor: import_prop_types109.default.oneOf(["inherit", "primary", "secondary"]),
  value: import_prop_types109.default.any,
  variant: import_prop_types109.default.oneOf(["fullWidth", "scrollable", "standard"])
} : void 0;
var Tabs_default = withStyles_default2(styles134, {
  name: "MuiTabs"
})(Tabs);

// node_modules/@material-ui/core/esm/TextField/TextField.js
var import_prop_types110 = __toModule(require_prop_types());
import {
  Fragment as Fragment8,
  createElement as createElement105,
  forwardRef as forwardRef190
} from "react";
var variantComponent = {
  standard: Input_default,
  filled: FilledInput_default,
  outlined: OutlinedInput_default
};
var styles136 = {
  root: {}
};
var TextField = /* @__PURE__ */ forwardRef190(function TextField2(props, ref2) {
  var autoComplete = props.autoComplete, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, children2 = props.children, classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "primary" : _props$color, defaultValue = props.defaultValue, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$error = props.error, error4 = _props$error === void 0 ? false : _props$error, FormHelperTextProps = props.FormHelperTextProps, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, helperText = props.helperText, hiddenLabel = props.hiddenLabel, id3 = props.id, InputLabelProps = props.InputLabelProps, inputProps = props.inputProps, InputProps = props.InputProps, inputRef = props.inputRef, label3 = props.label, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, placeholder2 = props.placeholder, _props$required = props.required, required2 = _props$required === void 0 ? false : _props$required, rows = props.rows, rowsMax = props.rowsMax, maxRows = props.maxRows, minRows = props.minRows, _props$select = props.select, select = _props$select === void 0 ? false : _props$select, SelectProps = props.SelectProps, type3 = props.type, value = props.value, _props$variant = props.variant, variant = _props$variant === void 0 ? "standard" : _props$variant, other = _objectWithoutProperties(props, ["autoComplete", "autoFocus", "children", "classes", "className", "color", "defaultValue", "disabled", "error", "FormHelperTextProps", "fullWidth", "helperText", "hiddenLabel", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "rowsMax", "maxRows", "minRows", "select", "SelectProps", "type", "value", "variant"]);
  if (true) {
    if (select && !children2) {
      console.error("Material-UI: `children` must be passed when using the `TextField` component with `select`.");
    }
  }
  var InputMore = {};
  if (variant === "outlined") {
    if (InputLabelProps && typeof InputLabelProps.shrink !== "undefined") {
      InputMore.notched = InputLabelProps.shrink;
    }
    if (label3) {
      var _InputLabelProps$requ;
      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required2;
      InputMore.label = /* @__PURE__ */ createElement105(Fragment8, null, label3, displayRequired && "\xA0*");
    }
  }
  if (select) {
    if (!SelectProps || !SelectProps.native) {
      InputMore.id = void 0;
    }
    InputMore["aria-describedby"] = void 0;
  }
  var helperTextId = helperText && id3 ? "".concat(id3, "-helper-text") : void 0;
  var inputLabelId = label3 && id3 ? "".concat(id3, "-label") : void 0;
  var InputComponent = variantComponent[variant];
  var InputElement = /* @__PURE__ */ createElement105(InputComponent, _extends({
    "aria-describedby": helperTextId,
    autoComplete,
    autoFocus,
    defaultValue,
    fullWidth,
    multiline,
    name,
    rows,
    rowsMax,
    maxRows,
    minRows,
    type: type3,
    value,
    id: id3,
    inputRef,
    onBlur,
    onChange,
    onFocus,
    placeholder: placeholder2,
    inputProps
  }, InputMore, InputProps));
  return /* @__PURE__ */ createElement105(FormControl_default, _extends({
    className: clsx_m_default(classes.root, className),
    disabled: disabled3,
    error: error4,
    fullWidth,
    hiddenLabel,
    ref: ref2,
    required: required2,
    color: color2,
    variant
  }, other), label3 && /* @__PURE__ */ createElement105(InputLabel_default, _extends({
    htmlFor: id3,
    id: inputLabelId
  }, InputLabelProps), label3), select ? /* @__PURE__ */ createElement105(Select_default, _extends({
    "aria-describedby": helperTextId,
    id: id3,
    labelId: inputLabelId,
    value,
    input: InputElement
  }, SelectProps), children2) : InputElement, helperText && /* @__PURE__ */ createElement105(FormHelperText_default, _extends({
    id: helperTextId
  }, FormHelperTextProps), helperText));
});
true ? TextField.propTypes = {
  autoComplete: import_prop_types110.default.string,
  autoFocus: import_prop_types110.default.bool,
  children: import_prop_types110.default.node,
  classes: import_prop_types110.default.object,
  className: import_prop_types110.default.string,
  color: import_prop_types110.default.oneOf(["primary", "secondary"]),
  defaultValue: import_prop_types110.default.any,
  disabled: import_prop_types110.default.bool,
  error: import_prop_types110.default.bool,
  FormHelperTextProps: import_prop_types110.default.object,
  fullWidth: import_prop_types110.default.bool,
  helperText: import_prop_types110.default.node,
  hiddenLabel: import_prop_types110.default.bool,
  id: import_prop_types110.default.string,
  InputLabelProps: import_prop_types110.default.object,
  inputProps: import_prop_types110.default.object,
  InputProps: import_prop_types110.default.object,
  inputRef: refType_default,
  label: import_prop_types110.default.node,
  margin: import_prop_types110.default.oneOf(["dense", "none", "normal"]),
  maxRows: import_prop_types110.default.oneOfType([import_prop_types110.default.number, import_prop_types110.default.string]),
  minRows: import_prop_types110.default.oneOfType([import_prop_types110.default.number, import_prop_types110.default.string]),
  multiline: import_prop_types110.default.bool,
  name: import_prop_types110.default.string,
  onBlur: import_prop_types110.default.func,
  onChange: import_prop_types110.default.func,
  onFocus: import_prop_types110.default.func,
  placeholder: import_prop_types110.default.string,
  required: import_prop_types110.default.bool,
  rows: import_prop_types110.default.oneOfType([import_prop_types110.default.number, import_prop_types110.default.string]),
  rowsMax: import_prop_types110.default.oneOfType([import_prop_types110.default.number, import_prop_types110.default.string]),
  select: import_prop_types110.default.bool,
  SelectProps: import_prop_types110.default.object,
  size: import_prop_types110.default.oneOf(["medium", "small"]),
  type: import_prop_types110.default.string,
  value: import_prop_types110.default.any,
  variant: import_prop_types110.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
var TextField_default = withStyles_default2(styles136, {
  name: "MuiTextField"
})(TextField);

// node_modules/@material-ui/core/esm/Tooltip/Tooltip.js
var import_prop_types111 = __toModule(require_prop_types());
import {
  Fragment as Fragment9,
  cloneElement as cloneElement24,
  createElement as createElement106,
  forwardRef as forwardRef191,
  useCallback as useCallback19,
  useEffect as useEffect28,
  useMemo as useMemo4,
  useRef as useRef29,
  useState as useState18
} from "react";
import {
  findDOMNode as findDOMNode12
} from "react-dom";
function round2(value) {
  return Math.round(value * 1e5) / 1e5;
}
function arrowGenerator() {
  return {
    '&[x-placement*="bottom"] $arrow': {
      top: 0,
      left: 0,
      marginTop: "-0.71em",
      marginLeft: 4,
      marginRight: 4,
      "&::before": {
        transformOrigin: "0 100%"
      }
    },
    '&[x-placement*="top"] $arrow': {
      bottom: 0,
      left: 0,
      marginBottom: "-0.71em",
      marginLeft: 4,
      marginRight: 4,
      "&::before": {
        transformOrigin: "100% 0"
      }
    },
    '&[x-placement*="right"] $arrow': {
      left: 0,
      marginLeft: "-0.71em",
      height: "1em",
      width: "0.71em",
      marginTop: 4,
      marginBottom: 4,
      "&::before": {
        transformOrigin: "100% 100%"
      }
    },
    '&[x-placement*="left"] $arrow': {
      right: 0,
      marginRight: "-0.71em",
      height: "1em",
      width: "0.71em",
      marginTop: 4,
      marginBottom: 4,
      "&::before": {
        transformOrigin: "0 0"
      }
    }
  };
}
var styles137 = function styles138(theme) {
  return {
    popper: {
      zIndex: theme.zIndex.tooltip,
      pointerEvents: "none"
    },
    popperInteractive: {
      pointerEvents: "auto"
    },
    popperArrow: arrowGenerator(),
    tooltip: {
      backgroundColor: alpha(theme.palette.grey[700], 0.9),
      borderRadius: theme.shape.borderRadius,
      color: theme.palette.common.white,
      fontFamily: theme.typography.fontFamily,
      padding: "4px 8px",
      fontSize: theme.typography.pxToRem(10),
      lineHeight: "".concat(round2(14 / 10), "em"),
      maxWidth: 300,
      wordWrap: "break-word",
      fontWeight: theme.typography.fontWeightMedium
    },
    tooltipArrow: {
      position: "relative",
      margin: "0"
    },
    arrow: {
      overflow: "hidden",
      position: "absolute",
      width: "1em",
      height: "0.71em",
      boxSizing: "border-box",
      color: alpha(theme.palette.grey[700], 0.9),
      "&::before": {
        content: '""',
        margin: "auto",
        display: "block",
        width: "100%",
        height: "100%",
        backgroundColor: "currentColor",
        transform: "rotate(45deg)"
      }
    },
    touch: {
      padding: "8px 16px",
      fontSize: theme.typography.pxToRem(14),
      lineHeight: "".concat(round2(16 / 14), "em"),
      fontWeight: theme.typography.fontWeightRegular
    },
    tooltipPlacementLeft: _defineProperty({
      transformOrigin: "right center",
      margin: "0 24px "
    }, theme.breakpoints.up("sm"), {
      margin: "0 14px"
    }),
    tooltipPlacementRight: _defineProperty({
      transformOrigin: "left center",
      margin: "0 24px"
    }, theme.breakpoints.up("sm"), {
      margin: "0 14px"
    }),
    tooltipPlacementTop: _defineProperty({
      transformOrigin: "center bottom",
      margin: "24px 0"
    }, theme.breakpoints.up("sm"), {
      margin: "14px 0"
    }),
    tooltipPlacementBottom: _defineProperty({
      transformOrigin: "center top",
      margin: "24px 0"
    }, theme.breakpoints.up("sm"), {
      margin: "14px 0"
    })
  };
};
var hystersisOpen = false;
var hystersisTimer = null;
var Tooltip = /* @__PURE__ */ forwardRef191(function Tooltip2(props, ref2) {
  var _props$arrow = props.arrow, arrow2 = _props$arrow === void 0 ? false : _props$arrow, children2 = props.children, classes = props.classes, _props$disableFocusLi = props.disableFocusListener, disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi, _props$disableHoverLi = props.disableHoverListener, disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi, _props$disableTouchLi = props.disableTouchListener, disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi, _props$enterDelay = props.enterDelay, enterDelay = _props$enterDelay === void 0 ? 100 : _props$enterDelay, _props$enterNextDelay = props.enterNextDelay, enterNextDelay = _props$enterNextDelay === void 0 ? 0 : _props$enterNextDelay, _props$enterTouchDela = props.enterTouchDelay, enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela, idProp = props.id, _props$interactive = props.interactive, interactive3 = _props$interactive === void 0 ? false : _props$interactive, _props$leaveDelay = props.leaveDelay, leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay, _props$leaveTouchDela = props.leaveTouchDelay, leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela, onClose = props.onClose, onOpen = props.onOpen, openProp = props.open, _props$placement = props.placement, placement = _props$placement === void 0 ? "bottom" : _props$placement, _props$PopperComponen = props.PopperComponent, PopperComponent = _props$PopperComponen === void 0 ? Popper_default : _props$PopperComponen, PopperProps = props.PopperProps, title = props.title, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Grow_default : _props$TransitionComp, TransitionProps4 = props.TransitionProps, other = _objectWithoutProperties(props, ["arrow", "children", "classes", "disableFocusListener", "disableHoverListener", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "id", "interactive", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "title", "TransitionComponent", "TransitionProps"]);
  var theme = useTheme2();
  var _React$useState = useState18(), childNode = _React$useState[0], setChildNode = _React$useState[1];
  var _React$useState2 = useState18(null), arrowRef = _React$useState2[0], setArrowRef = _React$useState2[1];
  var ignoreNonTouchEvents = useRef29(false);
  var closeTimer = useRef29();
  var enterTimer = useRef29();
  var leaveTimer = useRef29();
  var touchTimer = useRef29();
  var _useControlled = useControlled({
    controlled: openProp,
    default: false,
    name: "Tooltip",
    state: "open"
  }), _useControlled2 = _slicedToArray(_useControlled, 2), openState = _useControlled2[0], setOpenState = _useControlled2[1];
  var open = openState;
  if (true) {
    var _React$useRef = useRef29(openProp !== void 0), isControlled = _React$useRef.current;
    useEffect28(function() {
      if (childNode && childNode.disabled && !isControlled && title !== "" && childNode.tagName.toLowerCase() === "button") {
        console.error(["Material-UI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join("\n"));
      }
    }, [title, childNode, isControlled]);
  }
  var id3 = useId(idProp);
  useEffect28(function() {
    return function() {
      clearTimeout(closeTimer.current);
      clearTimeout(enterTimer.current);
      clearTimeout(leaveTimer.current);
      clearTimeout(touchTimer.current);
    };
  }, []);
  var handleOpen = function handleOpen2(event) {
    clearTimeout(hystersisTimer);
    hystersisOpen = true;
    setOpenState(true);
    if (onOpen) {
      onOpen(event);
    }
  };
  var handleEnter = function handleEnter2() {
    var forward = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
    return function(event) {
      var childrenProps2 = children2.props;
      if (event.type === "mouseover" && childrenProps2.onMouseOver && forward) {
        childrenProps2.onMouseOver(event);
      }
      if (ignoreNonTouchEvents.current && event.type !== "touchstart") {
        return;
      }
      if (childNode) {
        childNode.removeAttribute("title");
      }
      clearTimeout(enterTimer.current);
      clearTimeout(leaveTimer.current);
      if (enterDelay || hystersisOpen && enterNextDelay) {
        event.persist();
        enterTimer.current = setTimeout(function() {
          handleOpen(event);
        }, hystersisOpen ? enterNextDelay : enterDelay);
      } else {
        handleOpen(event);
      }
    };
  };
  var _useIsFocusVisible = useIsFocusVisible(), isFocusVisible2 = _useIsFocusVisible.isFocusVisible, onBlurVisible = _useIsFocusVisible.onBlurVisible, focusVisibleRef = _useIsFocusVisible.ref;
  var _React$useState3 = useState18(false), childIsFocusVisible = _React$useState3[0], setChildIsFocusVisible = _React$useState3[1];
  var handleBlur = function handleBlur2() {
    if (childIsFocusVisible) {
      setChildIsFocusVisible(false);
      onBlurVisible();
    }
  };
  var handleFocus = function handleFocus2() {
    var forward = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
    return function(event) {
      if (!childNode) {
        setChildNode(event.currentTarget);
      }
      if (isFocusVisible2(event)) {
        setChildIsFocusVisible(true);
        handleEnter()(event);
      }
      var childrenProps2 = children2.props;
      if (childrenProps2.onFocus && forward) {
        childrenProps2.onFocus(event);
      }
    };
  };
  var handleClose = function handleClose2(event) {
    clearTimeout(hystersisTimer);
    hystersisTimer = setTimeout(function() {
      hystersisOpen = false;
    }, 800 + leaveDelay);
    setOpenState(false);
    if (onClose) {
      onClose(event);
    }
    clearTimeout(closeTimer.current);
    closeTimer.current = setTimeout(function() {
      ignoreNonTouchEvents.current = false;
    }, theme.transitions.duration.shortest);
  };
  var handleLeave = function handleLeave2() {
    var forward = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
    return function(event) {
      var childrenProps2 = children2.props;
      if (event.type === "blur") {
        if (childrenProps2.onBlur && forward) {
          childrenProps2.onBlur(event);
        }
        handleBlur();
      }
      if (event.type === "mouseleave" && childrenProps2.onMouseLeave && event.currentTarget === childNode) {
        childrenProps2.onMouseLeave(event);
      }
      clearTimeout(enterTimer.current);
      clearTimeout(leaveTimer.current);
      event.persist();
      leaveTimer.current = setTimeout(function() {
        handleClose(event);
      }, leaveDelay);
    };
  };
  var detectTouchStart = function detectTouchStart2(event) {
    ignoreNonTouchEvents.current = true;
    var childrenProps2 = children2.props;
    if (childrenProps2.onTouchStart) {
      childrenProps2.onTouchStart(event);
    }
  };
  var handleTouchStart = function handleTouchStart2(event) {
    detectTouchStart(event);
    clearTimeout(leaveTimer.current);
    clearTimeout(closeTimer.current);
    clearTimeout(touchTimer.current);
    event.persist();
    touchTimer.current = setTimeout(function() {
      handleEnter()(event);
    }, enterTouchDelay);
  };
  var handleTouchEnd = function handleTouchEnd2(event) {
    if (children2.props.onTouchEnd) {
      children2.props.onTouchEnd(event);
    }
    clearTimeout(touchTimer.current);
    clearTimeout(leaveTimer.current);
    event.persist();
    leaveTimer.current = setTimeout(function() {
      handleClose(event);
    }, leaveTouchDelay);
  };
  var handleUseRef = useForkRef(setChildNode, ref2);
  var handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);
  var handleOwnRef = useCallback19(function(instance) {
    setRef(handleFocusRef, findDOMNode12(instance));
  }, [handleFocusRef]);
  var handleRef = useForkRef(children2.ref, handleOwnRef);
  if (title === "") {
    open = false;
  }
  var shouldShowNativeTitle = !open && !disableHoverListener;
  var childrenProps = _extends({
    "aria-describedby": open ? id3 : null,
    title: shouldShowNativeTitle && typeof title === "string" ? title : null
  }, other, children2.props, {
    className: clsx_m_default(other.className, children2.props.className),
    onTouchStart: detectTouchStart,
    ref: handleRef
  });
  var interactiveWrapperListeners = {};
  if (!disableTouchListener) {
    childrenProps.onTouchStart = handleTouchStart;
    childrenProps.onTouchEnd = handleTouchEnd;
  }
  if (!disableHoverListener) {
    childrenProps.onMouseOver = handleEnter();
    childrenProps.onMouseLeave = handleLeave();
    if (interactive3) {
      interactiveWrapperListeners.onMouseOver = handleEnter(false);
      interactiveWrapperListeners.onMouseLeave = handleLeave(false);
    }
  }
  if (!disableFocusListener) {
    childrenProps.onFocus = handleFocus();
    childrenProps.onBlur = handleLeave();
    if (interactive3) {
      interactiveWrapperListeners.onFocus = handleFocus(false);
      interactiveWrapperListeners.onBlur = handleLeave(false);
    }
  }
  if (true) {
    if (children2.props.title) {
      console.error(["Material-UI: You have provided a `title` prop to the child of <Tooltip />.", "Remove this title prop `".concat(children2.props.title, "` or the Tooltip component.")].join("\n"));
    }
  }
  var mergedPopperProps = useMemo4(function() {
    return deepmerge({
      popperOptions: {
        modifiers: {
          arrow: {
            enabled: Boolean(arrowRef),
            element: arrowRef
          }
        }
      }
    }, PopperProps);
  }, [arrowRef, PopperProps]);
  return /* @__PURE__ */ createElement106(Fragment9, null, /* @__PURE__ */ cloneElement24(children2, childrenProps), /* @__PURE__ */ createElement106(PopperComponent, _extends({
    className: clsx_m_default(classes.popper, interactive3 && classes.popperInteractive, arrow2 && classes.popperArrow),
    placement,
    anchorEl: childNode,
    open: childNode ? open : false,
    id: childrenProps["aria-describedby"],
    transition: true
  }, interactiveWrapperListeners, mergedPopperProps), function(_ref6) {
    var placementInner = _ref6.placement, TransitionPropsInner = _ref6.TransitionProps;
    return /* @__PURE__ */ createElement106(TransitionComponent, _extends({
      timeout: theme.transitions.duration.shorter
    }, TransitionPropsInner, TransitionProps4), /* @__PURE__ */ createElement106("div", {
      className: clsx_m_default(classes.tooltip, classes["tooltipPlacement".concat(capitalize(placementInner.split("-")[0]))], ignoreNonTouchEvents.current && classes.touch, arrow2 && classes.tooltipArrow)
    }, title, arrow2 ? /* @__PURE__ */ createElement106("span", {
      className: classes.arrow,
      ref: setArrowRef
    }) : null));
  }));
});
true ? Tooltip.propTypes = {
  arrow: import_prop_types111.default.bool,
  children: elementAcceptingRef_default.isRequired,
  classes: import_prop_types111.default.object,
  className: import_prop_types111.default.string,
  disableFocusListener: import_prop_types111.default.bool,
  disableHoverListener: import_prop_types111.default.bool,
  disableTouchListener: import_prop_types111.default.bool,
  enterDelay: import_prop_types111.default.number,
  enterNextDelay: import_prop_types111.default.number,
  enterTouchDelay: import_prop_types111.default.number,
  id: import_prop_types111.default.string,
  interactive: import_prop_types111.default.bool,
  leaveDelay: import_prop_types111.default.number,
  leaveTouchDelay: import_prop_types111.default.number,
  onClose: import_prop_types111.default.func,
  onOpen: import_prop_types111.default.func,
  open: import_prop_types111.default.bool,
  placement: import_prop_types111.default.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  PopperComponent: import_prop_types111.default.elementType,
  PopperProps: import_prop_types111.default.object,
  title: import_prop_types111.default.node.isRequired,
  TransitionComponent: import_prop_types111.default.elementType,
  TransitionProps: import_prop_types111.default.object
} : void 0;
var Tooltip_default = withStyles_default2(styles137, {
  name: "MuiTooltip",
  flip: false
})(Tooltip);

// node_modules/@material-ui/core/esm/Zoom/Zoom.js
var import_prop_types112 = __toModule(require_prop_types());
import {
  cloneElement as cloneElement25,
  createElement as createElement107,
  forwardRef as forwardRef192,
  useRef as useRef30
} from "react";
var styles139 = {
  entering: {
    transform: "none"
  },
  entered: {
    transform: "none"
  }
};
var defaultTimeout3 = {
  enter: duration.enteringScreen,
  exit: duration.leavingScreen
};
var Zoom = /* @__PURE__ */ forwardRef192(function Zoom2(props, ref2) {
  var children2 = props.children, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style3 = props.style, _props$timeout = props.timeout, timeout2 = _props$timeout === void 0 ? defaultTimeout3 : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition_default : _props$TransitionComp, other = _objectWithoutProperties(props, ["children", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"]);
  var theme = useTheme2();
  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
  var nodeRef = useRef30(null);
  var foreignRef = useForkRef(children2.ref, ref2);
  var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : void 0, foreignRef);
  var normalizedTransitionCallback = function normalizedTransitionCallback2(callback) {
    return function(nodeOrAppearing, maybeAppearing) {
      if (callback) {
        var _ref6 = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing], _ref23 = _slicedToArray(_ref6, 2), node4 = _ref23[0], isAppearing = _ref23[1];
        if (isAppearing === void 0) {
          callback(node4);
        } else {
          callback(node4, isAppearing);
        }
      }
    };
  };
  var handleEntering = normalizedTransitionCallback(onEntering);
  var handleEnter = normalizedTransitionCallback(function(node4, isAppearing) {
    reflow(node4);
    var transitionProps = getTransitionProps({
      style: style3,
      timeout: timeout2
    }, {
      mode: "enter"
    });
    node4.style.webkitTransition = theme.transitions.create("transform", transitionProps);
    node4.style.transition = theme.transitions.create("transform", transitionProps);
    if (onEnter) {
      onEnter(node4, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(function(node4) {
    var transitionProps = getTransitionProps({
      style: style3,
      timeout: timeout2
    }, {
      mode: "exit"
    });
    node4.style.webkitTransition = theme.transitions.create("transform", transitionProps);
    node4.style.transition = theme.transitions.create("transform", transitionProps);
    if (onExit) {
      onExit(node4);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);
  return /* @__PURE__ */ createElement107(TransitionComponent, _extends({
    appear: true,
    in: inProp,
    nodeRef: enableStrictModeCompat ? nodeRef : void 0,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    timeout: timeout2
  }, other), function(state, childProps) {
    return /* @__PURE__ */ cloneElement25(children2, _extends({
      style: _extends({
        transform: "scale(0)",
        visibility: state === "exited" && !inProp ? "hidden" : void 0
      }, styles139[state], style3, children2.props.style),
      ref: handleRef
    }, childProps));
  });
});
true ? Zoom.propTypes = {
  children: import_prop_types112.default.element,
  disableStrictModeCompat: import_prop_types112.default.bool,
  in: import_prop_types112.default.bool,
  onEnter: import_prop_types112.default.func,
  onEntered: import_prop_types112.default.func,
  onEntering: import_prop_types112.default.func,
  onExit: import_prop_types112.default.func,
  onExited: import_prop_types112.default.func,
  onExiting: import_prop_types112.default.func,
  style: import_prop_types112.default.object,
  timeout: import_prop_types112.default.oneOfType([import_prop_types112.default.number, import_prop_types112.default.shape({
    appear: import_prop_types112.default.number,
    enter: import_prop_types112.default.number,
    exit: import_prop_types112.default.number
  })])
} : void 0;
var Zoom_default = Zoom;

// src/icon/DefaultFile.tsx
import React243, { forwardRef as forwardRef193, memo as memo106 } from "react";
var DefaultFile = memo106(forwardRef193((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React243.createElement(DefaultFileD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React243.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React243.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React243.createElement("path", {
    fill: "var(--color54, #4975ed)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React243.createElement("path", {
    fill: "var(--color38, #2f51b1)",
    d: "M22.105 8.889H9.893c-.989-.002-1.793.902-1.794 2.018 0 .091.005.182.016.272.025.222.206.379.402.35a.343.343 0 00.136-.052.933.933 0 01.522-.156h2.557c.462.001.872.333 1.021.825l.061.222c.247.825.932 1.382 1.705 1.384h8.304c.188 0 .373.056.537.162a.332.332 0 00.182.055c.198 0 .359-.181.359-.405v-2.648c0-1.119-.804-2.026-1.796-2.026z"
  }), /* @__PURE__ */ React243.createElement("path", {
    fill: "var(--color55, #4b77f1)",
    d: "M23.965 13.314a1.879 1.879 0 00-.928-.242h-8.563a1.113 1.113 0 01-1.053-.73l-.063-.196c-.255-.73-.962-1.223-1.758-1.225H8.963a1.818 1.818 0 00-.907.232 1.779 1.779 0 00-.945 1.561v8.605c0 .99.829 1.793 1.852 1.793h14.074c1.023 0 1.852-.803 1.852-1.793v-6.454a1.77 1.77 0 00-.924-1.55z"
  }));
}));
DefaultFile.displayName = "DefaultFile";
DefaultFile["iconName"] = "default-file";
var DefaultFile_default = DefaultFile;

// src/icon/DefaultGdriveD.tsx
import React244, { forwardRef as forwardRef194, memo as memo107 } from "react";
var DefaultGdriveD = memo107(forwardRef194((props, svgRef) => /* @__PURE__ */ React244.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React244.createElement("path", {
  fill: "var(--color21, #222b42)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React244.createElement("path", {
  fill: "var(--color22, #ffc107)",
  d: "M13.333 8.889h5.778l5.778 9.778h-5.778z"
}), /* @__PURE__ */ React244.createElement("path", {
  fill: "var(--color23, #1976d2)",
  d: "M9.778 24l3.038-5.333h12.073L21.877 24z"
}), /* @__PURE__ */ React244.createElement("path", {
  fill: "var(--color24, #4caf50)",
  d: "M7.111 19.015L10.021 24 16 13.926l-2.963-5.037z"
}))));
DefaultGdriveD.displayName = "DefaultGdriveD";
DefaultGdriveD["iconName"] = "default-gdrive-D";
var DefaultGdriveD_default = DefaultGdriveD;

// src/icon/DefaultGdrive.tsx
import React245, { forwardRef as forwardRef195, memo as memo108 } from "react";
var DefaultGdrive = memo108(forwardRef195((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React245.createElement(DefaultGdriveD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React245.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React245.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React245.createElement("path", {
    fill: "var(--color57, #a7aaae)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React245.createElement("path", {
    fill: "var(--color22, #ffc107)",
    d: "M13.333 8.889h5.778l5.778 9.778h-5.778z"
  }), /* @__PURE__ */ React245.createElement("path", {
    fill: "var(--color23, #1976d2)",
    d: "M9.778 24l3.039-5.333h12.072L21.878 24z"
  }), /* @__PURE__ */ React245.createElement("path", {
    fill: "var(--color24, #4caf50)",
    d: "M7.111 19.015L10.021 24 16 13.926l-2.963-5.037z"
  }));
}));
DefaultGdrive.displayName = "DefaultGdrive";
DefaultGdrive["iconName"] = "default-gdrive";
var DefaultGdrive_default = DefaultGdrive;

// src/icon/DefaultGroupAvatar.tsx
import React246, { forwardRef as forwardRef196, memo as memo109 } from "react";
var DefaultGroupAvatar = memo109(forwardRef196((props, svgRef) => /* @__PURE__ */ React246.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React246.createElement("path", {
  d: "M5.483 27.417c1.234-.457 2.559-.914 3.61-1.188.137 0 .137 0 .137-.731 0-.868-.137-1.279-.274-1.691-.137-.548-.411-1.416-.548-2.285-.274-.274-.731-1.005-1.005-2.285-.274-1.142-.137-1.554 0-2.011v-.137c0-.274-.137-1.554-.274-2.696-.137-.731 0-2.285 1.005-3.564.548-.868 1.828-1.828 3.975-2.011h1.279c2.102.183 3.381 1.188 3.975 2.056 1.005 1.279 1.142 2.833 1.005 3.564-.137 1.005-.137 2.422-.137 2.696v.137c.137.411.274.868 0 2.011-.274 1.279-.731 2.011-1.005 2.285 0 .868-.274 1.691-.548 2.285-.137.548-.411 1.142-.411 1.691 0 .731 0 .731.137.731 2.011.548 5.118 1.691 6.397 2.285.503.228.868.503 1.142.823a15.519 15.519 0 01-7.905 2.148 15.9 15.9 0 01-10.556-4.113zm18.918 1.599c-.228-.32-.457-.548-.685-.685-1.371-.594-4.524-1.965-6.626-2.559-.137 0-.32 0-.137-.777.046-.32.183-.548.32-.868.228-.64.548-1.325.548-2.239.32-.32.777-1.051 1.051-2.422.32-1.188.137-1.645 0-2.102v-.137c0-.32 0-1.828.137-2.879.137-.777 0-2.422-1.051-3.793-.503-.731-1.554-1.645-3.107-2.056.685-.64 1.828-1.188 3.381-1.325h1.279c2.148.137 3.427 1.142 3.975 2.011 1.005 1.279 1.142 2.833 1.005 3.564-.137 1.005-.137 2.422-.137 2.696v.137c.137.411.274.868 0 2.011-.274 1.279-.731 2.011-1.005 2.285 0 .868-.274 1.691-.548 2.285-.137.548-.411 1.142-.411 1.691 0 .731 0 .731.137.731 1.508.411 3.61 1.188 5.164 1.782-1.051 1.005-2.102 1.873-3.29 2.65z"
}))));
DefaultGroupAvatar.displayName = "DefaultGroupAvatar";
DefaultGroupAvatar["iconName"] = "default-group-avatar";
var DefaultGroupAvatar_default = DefaultGroupAvatar;

// src/icon/DefaultIntegrationBorder.tsx
import React247, { forwardRef as forwardRef197, memo as memo110 } from "react";
var DefaultIntegrationBorder = memo110(forwardRef197((props, svgRef) => /* @__PURE__ */ React247.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React247.createElement("path", {
  d: "M14 1a5 5 0 015 5h5a2 2 0 012 2v5a5 5 0 010 10v5a2 2 0 01-2 2h-7v-2a3 3 0 00-2.824-2.995L14 25a3 3 0 00-2.995 2.824L11 28v2H4a2 2 0 01-2-2v-7h2a3 3 0 002.995-2.824L7 18a3 3 0 00-2.824-2.995L4 15H2V8a2 2 0 012-2h5a5 5 0 015-5zm0 2a3 3 0 00-2.995 2.824L11 6v2H4v5l.058.001.234.008c2.564.149 4.593 2.219 4.702 4.825l.005.225-.008.234a5 5 0 01-4.772 4.703l-.22.005v5h5L9 27.943l.008-.234c.149-2.564 2.219-4.593 4.825-4.703l.225-.005.234.008a5 5 0 014.703 4.772l.005.22h5v-7h2a3 3 0 00.176-5.995L26 15.001h-2v-7h-7v-2a3 3 0 00-3-3z"
}))));
DefaultIntegrationBorder.displayName = "DefaultIntegrationBorder";
DefaultIntegrationBorder["iconName"] = "default-integration_border";
var DefaultIntegrationBorder_default = DefaultIntegrationBorder;

// src/icon/DefaultIntegration.tsx
import React248, { forwardRef as forwardRef198, memo as memo111 } from "react";
var DefaultIntegration = memo111(forwardRef198((props, svgRef) => /* @__PURE__ */ React248.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React248.createElement("path", {
  d: "M14 1a4 4 0 014 4v1h6a2 2 0 012 2v6h1a4 4 0 010 8h-1v6a2 2 0 01-2 2h-6v-1a4 4 0 00-3.8-3.995L14 25a4 4 0 00-3.995 3.8L10 29v1H4a2 2 0 01-2-2v-6h1a4 4 0 003.995-3.8L7 18a4 4 0 00-3.8-3.995L3 14H2V8a2 2 0 012-2h6V5a4 4 0 014-4z"
}))));
DefaultIntegration.displayName = "DefaultIntegration";
DefaultIntegration["iconName"] = "default-integration";
var DefaultIntegration_default = DefaultIntegration;

// src/icon/DefaultMusicD.tsx
import React249, { forwardRef as forwardRef199, memo as memo112 } from "react";
var DefaultMusicD = memo112(forwardRef199((props, svgRef) => /* @__PURE__ */ React249.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React249.createElement("path", {
  fill: "var(--color21, #222b42)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React249.createElement("path", {
  fill: "var(--color37, #356afd)",
  d: "M22.222 7.111a2.667 2.667 0 012.667 2.667v12.444a2.667 2.667 0 01-2.667 2.667H9.778a2.667 2.667 0 01-2.667-2.667V9.778a2.667 2.667 0 012.667-2.667h12.444z"
}), /* @__PURE__ */ React249.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M20.793 9.787l-8 1.778a.444.444 0 00-.348.434v7.032a2.567 2.567 0 00-1.333-.364c-1.225 0-2.222.797-2.222 1.778s.997 1.778 2.222 1.778 2.222-.797 2.222-1.778v-5.422l7.111-1.581v3.811a2.567 2.567 0 00-1.333-.364c-1.226 0-2.222.797-2.222 1.778s.996 1.778 2.222 1.778 2.222-.797 2.222-1.778v-8.445a.443.443 0 00-.54-.434z"
}))));
DefaultMusicD.displayName = "DefaultMusicD";
DefaultMusicD["iconName"] = "default-music-D";
var DefaultMusicD_default = DefaultMusicD;

// src/icon/DefaultMusic.tsx
import React250, { forwardRef as forwardRef200, memo as memo113 } from "react";
var DefaultMusic = memo113(forwardRef200((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React250.createElement(DefaultMusicD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React250.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React250.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React250.createElement("path", {
    fill: "var(--color54, #4975ed)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React250.createElement("path", {
    fill: "var(--color55, #4b77f1)",
    d: "M22.222 7.111a2.667 2.667 0 012.667 2.667v12.444a2.667 2.667 0 01-2.667 2.667H9.778a2.667 2.667 0 01-2.667-2.667V9.778a2.667 2.667 0 012.667-2.667h12.444zm-1.429 2.676l-8 1.778a.444.444 0 00-.348.434v7.032a2.567 2.567 0 00-1.333-.364c-1.225 0-2.222.797-2.222 1.778s.997 1.778 2.222 1.778 2.222-.797 2.222-1.778v-5.422l7.111-1.581v3.811a2.567 2.567 0 00-1.333-.364c-1.226 0-2.222.797-2.222 1.778s.996 1.778 2.222 1.778 2.222-.797 2.222-1.778v-8.445a.443.443 0 00-.54-.434z"
  }));
}));
DefaultMusic.displayName = "DefaultMusic";
DefaultMusic["iconName"] = "default-music";
var DefaultMusic_default = DefaultMusic;

// src/icon/DefaultTeamAvatar.tsx
import React251, { forwardRef as forwardRef201, memo as memo114 } from "react";
var DefaultTeamAvatar = memo114(forwardRef201((props, svgRef) => /* @__PURE__ */ React251.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React251.createElement("path", {
  d: "M30.002 10c0 1.083-.396 2.021-1.188 2.813s-1.73 1.188-2.813 1.188c-1.083 0-2.021-.396-2.813-1.188S22 11.083 22 10c0-1.083.396-2.021 1.188-2.813s1.73-1.188 2.813-1.188c1.083 0 2.021.396 2.813 1.188s1.188 1.73 1.188 2.813zm-20 0c0 1.083-.396 2.021-1.188 2.813s-1.73 1.188-2.813 1.188c-1.083 0-2.021-.396-2.813-1.188S2 11.083 2 10c0-1.083.396-2.021 1.188-2.813s1.73-1.188 2.813-1.188c1.083 0 2.021.396 2.813 1.188s1.188 1.73 1.188 2.813zm10 17.999c0 1.083-.396 2.021-1.188 2.813S17.084 32 16.001 32c-1.083 0-2.021-.396-2.813-1.188S12 29.082 12 27.999c0-1.083.396-2.021 1.188-2.813s1.73-1.188 2.813-1.188c1.083 0 2.021.396 2.813 1.188s1.188 1.73 1.188 2.813zm10-5.999c0 1.083-.396 2.021-1.188 2.813s-1.73 1.188-2.813 1.188c-1.083 0-2.021-.396-2.813-1.188S22 23.083 22 22c0-1.083.396-2.021 1.188-2.813s1.73-1.188 2.813-1.188c1.083 0 2.021.396 2.813 1.188s1.188 1.73 1.188 2.813zm-20 0c0 1.083-.396 2.021-1.188 2.813s-1.73 1.188-2.813 1.188c-1.083 0-2.021-.396-2.813-1.188S2 23.083 2 22c0-1.083.396-2.021 1.188-2.813s1.73-1.188 2.813-1.188c1.083 0 2.021.396 2.813 1.188s1.188 1.73 1.188 2.813zm10-17.999c0 1.083-.396 2.021-1.188 2.813s-1.73 1.188-2.813 1.188c-1.083 0-2.021-.396-2.813-1.188S12 5.084 12 4.001c0-1.083.396-2.021 1.188-2.813S14.918 0 16.001 0c1.083 0 2.021.396 2.813 1.188s1.188 1.73 1.188 2.813z"
}))));
DefaultTeamAvatar.displayName = "DefaultTeamAvatar";
DefaultTeamAvatar["iconName"] = "default-team-avatar";
var DefaultTeamAvatar_default = DefaultTeamAvatar;

// src/icon/DefaultVideoD.tsx
import React252, { forwardRef as forwardRef202, memo as memo115 } from "react";
var DefaultVideoD = memo115(forwardRef202((props, svgRef) => /* @__PURE__ */ React252.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React252.createElement("path", {
  fill: "var(--color21, #222b42)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React252.createElement("path", {
  fill: "var(--color37, #356afd)",
  d: "M16 7.111c-4.91 0-8.889 3.98-8.889 8.889S11.09 24.889 16 24.889a8.89 8.89 0 000-17.778z"
}), /* @__PURE__ */ React252.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M19.497 16.771l-4.918 3.394c-.614.424-1.119.155-1.119-.597v-7.136c0-.752.505-1.021 1.119-.597l4.916 3.394c.614.424.615 1.118.002 1.542z"
}))));
DefaultVideoD.displayName = "DefaultVideoD";
DefaultVideoD["iconName"] = "default-video-D";
var DefaultVideoD_default = DefaultVideoD;

// src/icon/DefaultVideo.tsx
import React253, { forwardRef as forwardRef203, memo as memo116 } from "react";
var DefaultVideo = memo116(forwardRef203((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React253.createElement(DefaultVideoD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React253.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React253.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React253.createElement("path", {
    fill: "var(--color54, #4975ed)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React253.createElement("path", {
    fill: "var(--color55, #4b77f1)",
    d: "M16 7.111c-4.91 0-8.889 3.98-8.889 8.889S11.09 24.889 16 24.889a8.89 8.89 0 000-17.778zm3.497 9.66l-4.918 3.394c-.614.424-1.119.155-1.119-.597v-7.136c0-.752.505-1.021 1.119-.597l4.916 3.394c.614.424.615 1.118.002 1.542z"
  }));
}));
DefaultVideo.displayName = "DefaultVideo";
DefaultVideo["iconName"] = "default-video";
var DefaultVideo_default = DefaultVideo;

// src/icon/DeleteCircle.tsx
import React254, { forwardRef as forwardRef204, memo as memo117 } from "react";
var DeleteCircle = memo117(forwardRef204((props, svgRef) => /* @__PURE__ */ React254.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React254.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
}))));
DeleteCircle.displayName = "DeleteCircle";
DeleteCircle["iconName"] = "delete_circle";
var DeleteCircle_default = DeleteCircle;

// src/icon/Delete.tsx
import React255, { forwardRef as forwardRef205, memo as memo118 } from "react";
var Delete = memo118(forwardRef205((props, svgRef) => /* @__PURE__ */ React255.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React255.createElement("path", {
  d: "M20 2a2 2 0 012 2v2h6a1 1 0 010 2h-1.083l-.837 20.083A2 2 0 0124.082 30H7.919a2 2 0 01-1.998-1.917L5.084 8H4.001a1 1 0 010-2h6V4a2 2 0 012-2h8zm4.914 6H7.085l.793 19.042a1 1 0 00.999.958h14.245a1 1 0 00.999-.958L24.913 8zM13 12a1 1 0 011 1v10a1 1 0 01-2 0V13a1 1 0 011-1zm6 0a1 1 0 011 1v10a1 1 0 01-2 0V13a1 1 0 011-1zm0-8h-6a1 1 0 00-1 1v1h8V5a1 1 0 00-1-1z"
}))));
Delete.displayName = "Delete";
Delete["iconName"] = "delete";
var Delete_default = Delete;

// src/icon/DeletedFile.tsx
import React257, { forwardRef as forwardRef207, memo as memo120 } from "react";

// src/icon/DeletedFileD.tsx
import React256, { forwardRef as forwardRef206, memo as memo119 } from "react";
var DeletedFileD = memo119(forwardRef206((props, svgRef) => /* @__PURE__ */ React256.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React256.createElement("path", {
  fill: "var(--color14, #30323a)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React256.createElement("path", {
  fill: "var(--color15, #8f9199)",
  d: "M17.778 8c.982 0 1.778.796 1.778 1.778v.889h3.556a.889.889 0 110 1.778h-.889v9.778c0 .982-.796 1.778-1.778 1.778h-8.889a1.778 1.778 0 01-1.778-1.778v-9.778h-.889a.889.889 0 110-1.778h3.556v-.889c0-.982.796-1.778 1.778-1.778h3.555zm0 6.222a.889.889 0 00-.883.785l-.006.104v5.333a.889.889 0 001.772.104l.006-.104v-5.333a.889.889 0 00-.889-.889zm-3.556 0a.889.889 0 00-.883.785l-.006.104v5.333a.889.889 0 001.772.104l.006-.104v-5.333a.889.889 0 00-.889-.889zm3.556-4.444h-3.556v.889h3.556v-.889z"
}))));
DeletedFileD.displayName = "DeletedFileD";
DeletedFileD["iconName"] = "deleted_file_D";
var DeletedFileD_default = DeletedFileD;

// src/icon/DeletedFile.tsx
var DeletedFile = memo120(forwardRef207((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React257.createElement(DeletedFileD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React257.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React257.createElement("path", {
    fill: "var(--color19, #e8e9ed)",
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React257.createElement("path", {
    fill: "var(--color20, #81899d)",
    d: "M17.778 8c.982 0 1.778.796 1.778 1.778v.889h3.556a.889.889 0 110 1.778h-.889v9.778c0 .982-.796 1.778-1.778 1.778h-8.889a1.778 1.778 0 01-1.778-1.778v-9.778h-.889a.889.889 0 110-1.778h3.556v-.889c0-.982.796-1.778 1.778-1.778h3.556zm0 6.222a.889.889 0 00-.883.785l-.006.104v5.333a.889.889 0 001.772.104l.006-.104v-5.333a.889.889 0 00-.889-.889zm-3.556 0a.889.889 0 00-.883.785l-.006.104v5.333a.889.889 0 001.772.104l.006-.104v-5.333a.889.889 0 00-.889-.889zm3.556-4.444h-3.556v.889h3.556v-.889z"
  }));
}));
DeletedFile.displayName = "DeletedFile";
DeletedFile["iconName"] = "deleted_file";
var DeletedFile_default = DeletedFile;

// src/icon/Deletenumber.tsx
import React258, { forwardRef as forwardRef208, memo as memo121 } from "react";
var Deletenumber = memo121(forwardRef208((props, svgRef) => /* @__PURE__ */ React258.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React258.createElement("path", {
  d: "M28 6a2 2 0 012 2v16a2 2 0 01-2 2H10.891a2.003 2.003 0 01-1.487-.662l-7.2-8a2 2 0 010-2.676l7.2-8c.379-.421.92-.662 1.487-.662H28zm-1 2H11.336a.996.996 0 00-.743.331l-6.3 7a1 1 0 000 1.338l6.3 7a1 1 0 00.743.331H27a1 1 0 001-1V9a1 1 0 00-1-1zm-10.536 3.05L20 14.584l3.536-3.534a.999.999 0 111.414 1.414l-3.536 3.534 3.536 3.537a.999.999 0 11-1.414 1.414L20 17.412l-3.536 3.537a.999.999 0 11-1.414-1.414l3.536-3.537-3.536-3.534a.999.999 0 111.414-1.414z"
}))));
Deletenumber.displayName = "Deletenumber";
Deletenumber["iconName"] = "deletenumber";
var Deletenumber_default = Deletenumber;

// src/icon/Dial.tsx
import React259, { forwardRef as forwardRef209, memo as memo122 } from "react";
var Dial = memo122(forwardRef209((props, svgRef) => /* @__PURE__ */ React259.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React259.createElement("path", {
  d: "M28 3a1 1 0 00-1 1v12a1 1 0 01-1 1l-19.586.001 6.536-6.536a.999.999 0 10-1.414-1.414l-8.243 8.243a.999.999 0 000 1.414l8.243 8.243a.999.999 0 101.414-1.414l-6.536-6.535L27 19.001a2 2 0 002-2v-13a1 1 0 00-1-1z"
}))));
Dial.displayName = "Dial";
Dial["iconName"] = "dial";
var Dial_default = Dial;

// src/icon/Dialer.tsx
import React260, { forwardRef as forwardRef210, memo as memo123 } from "react";
var Dialer = memo123(forwardRef210((props, svgRef) => /* @__PURE__ */ React260.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React260.createElement("path", {
  d: "M7 17a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6zm0 8a3 3 0 110 6 3 3 0 010-6zm9-8a3 3 0 110 6 3 3 0 010-6zM7 9a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6zM7 1a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6z"
}))));
Dialer.displayName = "Dialer";
Dialer["iconName"] = "dialer";
var Dialer_default = Dialer;

// src/icon/DocD.tsx
import React261, { forwardRef as forwardRef211, memo as memo124 } from "react";
var DocD = memo124(forwardRef211((props, svgRef) => /* @__PURE__ */ React261.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React261.createElement("path", {
  fill: "var(--color45, #222f42)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React261.createElement("path", {
  fill: "var(--color46, #4169a1)",
  d: "M11.919 8c-.601 0-1.108.208-1.522.624s-.62.927-.62 1.532v11.688c0 .605.207 1.116.62 1.532s.921.624 1.522.624h8.161c.601 0 1.108-.208 1.522-.624s.62-.927.62-1.532v-9.059L16.671 8h-4.752z"
}), /* @__PURE__ */ React261.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M17.009 20.53l-1.202-4.842h-.037l-1.24 4.842h-1.052l-1.954-6.129h1.09l1.39 5.032 1.24-5.032h1.089l1.278 5.032 1.39-5.032h1.014l-1.916 6.129z"
}))));
DocD.displayName = "DocD";
DocD["iconName"] = "doc-D";
var DocD_default = DocD;

// src/icon/Doc.tsx
import React262, { forwardRef as forwardRef212, memo as memo125 } from "react";
var Doc = memo125(forwardRef212((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React262.createElement(DocD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React262.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React262.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React262.createElement("path", {
    fill: "var(--color46, #4169a1)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React262.createElement("path", {
    fill: "var(--color46, #4169a1)",
    d: "M11.919 8c-.601 0-1.108.208-1.522.624s-.62.927-.62 1.532v11.688c0 .605.207 1.116.62 1.532s.921.624 1.522.624h8.161c.601 0 1.108-.208 1.522-.624s.62-.927.62-1.532v-9.059L16.671 8h-4.752zm5.09 12.53l-1.202-4.842h-.038l-1.24 4.842h-1.052l-1.954-6.128h1.09l1.39 5.031 1.24-5.031h1.09l1.277 5.031L19 14.402h1.014l-1.916 6.128h-1.09z"
  }));
}));
Doc.displayName = "Doc";
Doc["iconName"] = "doc";
var Doc_default = Doc;

// src/icon/DockBorder.tsx
import React263, { forwardRef as forwardRef213, memo as memo126 } from "react";
var DockBorder = memo126(forwardRef213((props, svgRef) => /* @__PURE__ */ React263.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React263.createElement("path", {
  d: "M8 10v2H4v16h16v-4h2v4a2 2 0 01-2 2H4a2 2 0 01-2-2V12a2 2 0 012-2h4zm20-8a2 2 0 012 2v16a2 2 0 01-2 2H12a2 2 0 01-2-2V4a2 2 0 012-2h16zm0 2H12v16h16V4zm-2.808 2.707a.999.999 0 010 1.414l-6.498 6.499 2.356 2.309h-6L15 11l2.266 2.221 6.513-6.514a.999.999 0 011.414 0z"
}))));
DockBorder.displayName = "DockBorder";
DockBorder["iconName"] = "dock_border";
var DockBorder_default = DockBorder;

// src/icon/DoubleChevronLeft.tsx
import React264, { forwardRef as forwardRef214, memo as memo127 } from "react";
var DoubleChevronLeft = memo127(forwardRef214((props, svgRef) => /* @__PURE__ */ React264.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React264.createElement("path", {
  d: "M5 4a1 1 0 011 1v22a1 1 0 01-2 0V5a1 1 0 011-1zm12.314 2.101a.999.999 0 010 1.414L9.827 15H27a1 1 0 010 2H9.829l7.485 7.485a.999.999 0 11-1.414 1.414l-9.192-9.192a.999.999 0 010-1.414L15.9 6.101a.999.999 0 011.414 0z"
}))));
DoubleChevronLeft.displayName = "DoubleChevronLeft";
DoubleChevronLeft["iconName"] = "double-chevron_left";
var DoubleChevronLeft_default = DoubleChevronLeft;

// src/icon/DoubleChevronRight.tsx
import React265, { forwardRef as forwardRef215, memo as memo128 } from "react";
var DoubleChevronRight = memo128(forwardRef215((props, svgRef) => /* @__PURE__ */ React265.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React265.createElement("path", {
  d: "M26.899 4a1 1 0 00-1 1v22a1 1 0 002 0V5a1 1 0 00-1-1zM14.586 6.101a.999.999 0 000 1.414L22.073 15H5a1 1 0 000 2h17.07l-7.485 7.485a.999.999 0 101.414 1.414l9.192-9.192a.999.999 0 000-1.414l-9.192-9.192a.999.999 0 00-1.414 0z"
}))));
DoubleChevronRight.displayName = "DoubleChevronRight";
DoubleChevronRight["iconName"] = "double-chevron_right";
var DoubleChevronRight_default = DoubleChevronRight;

// src/icon/Download.tsx
import React266, { forwardRef as forwardRef216, memo as memo129 } from "react";
var Download = memo129(forwardRef216((props, svgRef) => /* @__PURE__ */ React266.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React266.createElement("path", {
  d: "M27 26a1 1 0 010 2H5a1 1 0 010-2h22zM16 3a1 1 0 01.993.883L17 4v16.17l6.885-6.875a.998.998 0 011.493 1.316l-.083.094-8.588 8.588a.999.999 0 01-1.414 0l-8.588-8.588a.998.998 0 011.316-1.493l.094.083L15 20.17V4a1 1 0 011-1z"
}))));
Download.displayName = "Download";
Download["iconName"] = "download";
var Download_default = Download;

// src/icon/DownwardsArrowWithTipRightwards.tsx
import React267, { forwardRef as forwardRef217, memo as memo130 } from "react";
var DownwardsArrowWithTipRightwards = memo130(forwardRef217((props, svgRef) => /* @__PURE__ */ React267.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React267.createElement("path", {
  d: "M4 3a1 1 0 011 1v12a1 1 0 001 1l19.586.001-6.536-6.536a.999.999 0 111.414-1.414l8.243 8.243a.999.999 0 010 1.414l-8.243 8.243a.999.999 0 11-1.414-1.414l6.536-6.535L5 19.001a2 2 0 01-2-2v-13a1 1 0 011-1z"
}))));
DownwardsArrowWithTipRightwards.displayName = "DownwardsArrowWithTipRightwards";
DownwardsArrowWithTipRightwards["iconName"] = "downwards-arrow-with-tip-rightwards";
var DownwardsArrowWithTipRightwards_default = DownwardsArrowWithTipRightwards;

// src/icon/Draft.tsx
import React268, { forwardRef as forwardRef218, memo as memo131 } from "react";
var Draft = memo131(forwardRef218((props, svgRef) => /* @__PURE__ */ React268.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React268.createElement("path", {
  d: "M29 27a1 1 0 010 2H14a1 1 0 010-2h15zm-.99-23a4 4 0 010 5.657L10.761 26.906c-.279.279-.635.47-1.022.547l-5.006 1.001a1 1 0 01-1.177-1.176l1.001-5.006c.077-.387.268-.743.547-1.022L22.353 4.001a4 4 0 015.657 0zm-7.071 4.242L6.597 22.584l2.828 2.828L23.767 11.07l-2.828-2.828zm2.828-2.828l-1.413 1.413 2.828 2.828 1.413-1.414a2 2 0 10-2.828-2.828z"
}))));
Draft.displayName = "Draft";
Draft["iconName"] = "draft";
var Draft_default = Draft;

// src/icon/DragableArea.tsx
import React269, { forwardRef as forwardRef219, memo as memo132 } from "react";
var DragableArea = memo132(forwardRef219((props, svgRef) => /* @__PURE__ */ React269.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React269.createElement("path", {
  d: "M11 23a3 3 0 110 6 3 3 0 010-6zm10 0a3 3 0 110 6 3 3 0 010-6zM11 13a3 3 0 110 6 3 3 0 010-6zm10 0a3 3 0 110 6 3 3 0 010-6zM11 3a3 3 0 110 6 3 3 0 010-6zm10 0a3 3 0 110 6 3 3 0 010-6z"
}))));
DragableArea.displayName = "DragableArea";
DragableArea["iconName"] = "dragable_area";
var DragableArea_default = DragableArea;

// src/icon/Dropbox.tsx
import React270, { forwardRef as forwardRef220, memo as memo133 } from "react";
var Dropbox = memo133(forwardRef220((props, svgRef) => /* @__PURE__ */ React270.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React270.createElement("path", {
  d: "M10.519 22.653l-7.852-5.227 5.416-4.441 7.916 4.998-5.48 4.67zm5.48-4.671l7.918-4.997 5.416 4.44-7.837 5.228-5.497-4.671zm.033 1.017l5.496 4.653 2.357-1.572v1.769l-7.853 4.801v.016l-.016-.016-.017.016v-.016l-7.835-4.801V22.08l2.356 1.572L16 18.999v-.033l.017.016.016-.016v.033zM2.667 8.56l7.852-5.227 5.48 4.671-7.916 4.981L2.667 8.56zm18.829-5.227l7.837 5.227-5.416 4.425-7.918-4.981 5.497-4.671z"
}))));
Dropbox.displayName = "Dropbox";
Dropbox["iconName"] = "dropbox";
var Dropbox_default = Dropbox;

// src/icon/Edit.tsx
import React271, { forwardRef as forwardRef221, memo as memo134 } from "react";
var Edit = memo134(forwardRef221((props, svgRef) => /* @__PURE__ */ React271.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React271.createElement("path", {
  d: "M28.01 4a4 4 0 010 5.657L10.761 26.906c-.279.279-.635.47-1.022.547l-5.006 1.001a1 1 0 01-1.177-1.176l1.001-5.006c.077-.387.268-.743.547-1.022L22.353 4.001a4 4 0 015.657 0zm-4.242 7.07L20.94 8.242 6.598 22.584l2.828 2.828L23.768 11.07zm2.827-5.656a2 2 0 00-2.828 0l-1.413 1.413 2.828 2.828 1.413-1.414a2 2 0 000-2.828z"
}))));
Edit.displayName = "Edit";
Edit["iconName"] = "edit";
var Edit_default = Edit;

// src/icon/Email.tsx
import React272, { forwardRef as forwardRef222, memo as memo135 } from "react";
var Email = memo135(forwardRef222((props, svgRef) => /* @__PURE__ */ React272.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React272.createElement("path", {
  d: "M28 5a2 2 0 012 2v18a2 2 0 01-2 2H4a2 2 0 01-2-2V7a2 2 0 012-2h24zM4 9.032v13.744l7.698-7.146 1.529 1.31-8.601 7.988A.992.992 0 005 25h22c.132 0 .259-.026.374-.072l-8.602-7.988-.82.704-.149.12a3 3 0 01-3.599.005l-.157-.126L3.999 9.031zm24-.001l-7.699 6.599L28 22.779V24l-.007.122A.987.987 0 0028 24V9.031zM27 7H5a.98.98 0 00-.255.033l10.701 9.166a1 1 0 001.097.007l.107-.08 10.605-9.092a.982.982 0 00-.256-.033z"
}))));
Email.displayName = "Email";
Email["iconName"] = "email";
var Email_default = Email;

// src/icon/Emoji.tsx
import React273, { forwardRef as forwardRef223, memo as memo136 } from "react";
var Emoji = memo136(forwardRef223((props, svgRef) => /* @__PURE__ */ React273.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React273.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm4.328 14.505a1 1 0 111.73 1.004A6.997 6.997 0 0116 23a6.996 6.996 0 01-6.031-3.445 1 1 0 111.723-1.017A4.997 4.997 0 0016.001 21a4.995 4.995 0 004.328-2.495zM11 10a2 2 0 11.001 3.999A2 2 0 0111 10zm10 0a2 2 0 11.001 3.999A2 2 0 0121 10z"
}))));
Emoji.displayName = "Emoji";
Emoji["iconName"] = "emoji";
var Emoji_default = Emoji;

// src/icon/EndAnswer.tsx
import React274, { forwardRef as forwardRef224, memo as memo137 } from "react";
var EndAnswer = memo137(forwardRef224((props, svgRef) => /* @__PURE__ */ React274.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React274.createElement("path", {
  fill: "var(--color17, #f54c3d)",
  d: "M8 0c4.371 0 7.923 3.497 7.999 7.838a12.833 12.833 0 00-8.161 8.159l.162.002c-4.418 0-8-3.573-8-7.98v-.04C0 3.646 3.461.12 7.776.002L8-.001zm0 6.541c-1.621.015-2.615.344-3.437 1.021-.383.315-.53.678-.53 1.156l.003.07.01.06a.866.866 0 00.272.478c.192.158.419.227.751.18l1.121-.188c.382-.072.399-.404.391-.697l-.004-.22.001-.03c.011-.135.104-.213.347-.228.219-.015.89-.001 1.116 0 .183.001.759-.019.954 0 .254.024.348.109.352.261l-.003.218.002.048c.024.286.158.618.555.673l1.123.188.061.006a.964.964 0 00.67-.213.776.776 0 00.276-.443l.018-.113-.002-.077c-.017-.479-.154-.814-.608-1.188-.745-.614-1.815-.978-3.44-.964z"
}), /* @__PURE__ */ React274.createElement("path", {
  fill: "var(--color79, #299e0b)",
  d: "M20 8c6.627 0 12 5.373 12 12s-5.373 12-12 12S8 26.627 8 20 13.373 8 20 8zm-2.083 6.541a1.451 1.451 0 00-.853-.123c-.22.034-.486.13-.807.286a3.66 3.66 0 00-.731.444c-.373.314-.6.737-.681 1.26-.085.494-.046 1.052.112 1.669.156.607.425 1.256.807 1.948.38.696.869 1.402 1.466 2.116.453.532.912 1.007 1.379 1.426.459.425.923.789 1.39 1.087.47.301.932.533 1.386.695.465.166.913.25 1.342.25.265 0 .509-.035.731-.105.228-.072.431-.182.606-.327.168-.126.365-.325.582-.588.221-.267.37-.493.447-.685.114-.229.138-.497.064-.775a1.353 1.353 0 00-.463-.703c-.418-.345-.756-.63-1.014-.856s-.506-.453-.746-.679a1.203 1.203 0 00-.786-.362 1.437 1.437 0 00-.868.193 2.097 2.097 0 00-.247.191c-.063.058-.14.134-.23.229l-.03.037-.004.006-.032.031-.087.096a1.693 1.693 0 01-.125-.064 2.47 2.47 0 01-.427-.317 5.516 5.516 0 01-.531-.557 5.786 5.786 0 01-.436-.586 2.595 2.595 0 01-.241-.462 1.307 1.307 0 01-.073-.219.645.645 0 01.058-.027.767.767 0 00.089-.048l.068-.033a.428.428 0 00.087-.055 2.329 2.329 0 00.411-.283c.229-.231.354-.48.391-.76a1.162 1.162 0 00-.194-.807c-.264-.382-.489-.727-.678-1.04s-.356-.615-.503-.906a1.366 1.366 0 00-.631-.6z"
}))));
EndAnswer.displayName = "EndAnswer";
EndAnswer["iconName"] = "end--answer";
var EndAnswer_default = EndAnswer;

// src/icon/EventNewBorder.tsx
import React275, { forwardRef as forwardRef225, memo as memo138 } from "react";
var EventNewBorder = memo138(forwardRef225((props, svgRef) => /* @__PURE__ */ React275.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React275.createElement("path", {
  d: "M21 2a1 1 0 01.993.883L22 3v1h4a2 2 0 011.994 1.851L28 6v20a2 2 0 01-1.851 1.994L26 28H6a2.001 2.001 0 01-1.995-1.851L3.999 26V6c0-1.054.816-1.918 1.851-1.995l.149-.006h4v-1a1 1 0 011.993-.117l.007.117v1h8v-1a1 1 0 011-1zm5 8H6v15a1 1 0 00.883.993L7 26h18a1 1 0 00.993-.883L26 25V10zm-13 3h6a1 1 0 01.923 1.385l-.049.101-5 9a1 1 0 01-1.799-.866l.051-.105 4.175-7.514h-4.3a1 1 0 01-.117-1.993l.117-.007zm12-7H7a1 1 0 00-.993.883L6 7v1h20V7a1 1 0 00-.883-.993L25 6z"
}))));
EventNewBorder.displayName = "EventNewBorder";
EventNewBorder["iconName"] = "event-new_border";
var EventNewBorder_default = EventNewBorder;

// src/icon/EventNew.tsx
import React276, { forwardRef as forwardRef226, memo as memo139 } from "react";
var EventNew = memo139(forwardRef226((props, svgRef) => /* @__PURE__ */ React276.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React276.createElement("path", {
  d: "M28 10v16a2 2 0 01-1.851 1.994L26 28H6a2.001 2.001 0 01-1.995-1.851L3.999 26V10h24zm-9 3h-6l-.117.007a1 1 0 000 1.986L13 15h4.301l-4.175 7.514-.051.105a1 1 0 001.736.965l.063-.099 5-9 .049-.101a1 1 0 00-.805-1.378L19 12.999zM4 6c0-1.054.816-1.918 1.851-1.995L6 3.999h4v-1a1 1 0 011.993-.117l.007.117v1h8v-1a1 1 0 011.993-.117l.007.117v1h4a2 2 0 011.994 1.851l.006.149v2H4v-2z"
}))));
EventNew.displayName = "EventNew";
EventNew["iconName"] = "event-new";
var EventNew_default = EventNew;

// src/icon/Evernote.tsx
import React277, { forwardRef as forwardRef227, memo as memo140 } from "react";
var Evernote = memo140(forwardRef227((props, svgRef) => /* @__PURE__ */ React277.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React277.createElement("path", {
  d: "M21.631 15.271a5.645 5.645 0 00-1.063.063c.094-.744.407-1.657 1.515-1.619 1.226.042 1.397 1.18 1.401 1.95-.517-.227-1.157-.371-1.854-.395zm5.242-8.073c-.206-1.077-.857-1.609-1.446-1.817-.636-.226-1.927-.46-3.548-.648-1.305-.151-2.836-.138-3.763-.111-.112-.747-.645-1.431-1.242-1.667-1.592-.629-4.051-.477-4.683-.303-.502.138-1.057.419-1.366.854-.207.291-.342.663-.343 1.183 0 .295.008.988.016 1.604.007.618.016 1.17.016 1.174 0 .55-.454.997-1.017.998h-2.58c-.55 0-.971.091-1.292.234s-.55.338-.723.566c-.344.455-.405 1.015-.403 1.587 0 0 .005.468.12 1.373.096.7.869 5.593 1.603 7.081.285.578.474.82 1.034 1.075 1.246.524 4.094 1.108 5.428 1.275 1.332.167 2.168.52 2.667-.507.001-.003.099-.256.235-.626.433-1.287.493-2.43.493-3.256 0-.085.126-.088.126 0 0 .583-.114 2.648 1.474 3.203.627.218 1.928.413 3.249.565 1.196.135 2.063.597 2.063 3.608 0 1.832-.392 2.083-2.44 2.083-1.66 0-2.294.043-2.294-1.253 0-1.047 1.055-.937 1.836-.937.349 0 .096-.255.096-.901 0-.643.409-1.014.023-1.023-2.701-.073-4.292-.004-4.292 3.316 0 3.013 1.174 3.573 5.009 3.573 3.007 0 4.068-.097 5.309-3.88.246-.746.841-3.027 1.199-6.854.228-2.42-.214-9.724-.564-11.567zm-20.076.531h2.582a.265.265 0 00.267-.262c0-.001-.031-2.172-.031-2.777v-.006c0-.496.106-.929.29-1.291l.088-.163a.056.056 0 00-.03.016L4.95 8.128a.059.059 0 00-.019.029c.104-.05.246-.119.266-.127.436-.194.966-.3 1.599-.3z"
}))));
Evernote.displayName = "Evernote";
Evernote["iconName"] = "evernote";
var Evernote_default = Evernote;

// src/icon/ExcelD.tsx
import React278, { forwardRef as forwardRef228, memo as memo141 } from "react";
var ExcelD = memo141(forwardRef228((props, svgRef) => /* @__PURE__ */ React278.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React278.createElement("path", {
  fill: "var(--color39, #1e2f27)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React278.createElement("path", {
  fill: "var(--color40, #008f4d)",
  d: "M11.915 8l4.844.023 5.463 5.114v8.889c0 .605-.215.933-.627 1.349s-.918.624-1.518.624h-8.171c-.6 0-1.106-.208-1.518-.624s-.61-.743-.61-1.349v-11.87c0-.606.206-1.116.619-1.533s.918-.624 1.518-.624z"
}), /* @__PURE__ */ React278.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M14.258 14.051h-1.387l2.287 3.141-2.474 3.52h1.312l1.837-2.763 1.836 2.763h1.425l-2.587-3.595 2.287-3.066h-1.312l-1.649 2.347-1.575-2.347z"
}))));
ExcelD.displayName = "ExcelD";
ExcelD["iconName"] = "excel-D";
var ExcelD_default = ExcelD;

// src/icon/Excel.tsx
import React279, { forwardRef as forwardRef229, memo as memo142 } from "react";
var Excel = memo142(forwardRef229((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React279.createElement(ExcelD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React279.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React279.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React279.createElement("path", {
    fill: "var(--color59, #007640)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React279.createElement("path", {
    fill: "var(--color59, #007640)",
    d: "M11.915 8l4.844.023 5.463 5.114v8.889c0 .605-.215.933-.627 1.349s-.918.624-1.518.624h-8.171c-.6 0-1.106-.208-1.518-.624s-.61-.743-.61-1.349v-11.87c0-.606.206-1.116.619-1.533s.918-.624 1.518-.624zm2.343 6.051h-1.387l2.287 3.141-2.474 3.52h1.312l1.837-2.763 1.837 2.763h1.425l-2.587-3.595 2.287-3.066h-1.312l-1.649 2.346-1.575-2.346z"
  }));
}));
Excel.displayName = "Excel";
Excel["iconName"] = "excel";
var Excel_default = Excel;

// src/icon/Expand.tsx
import React280, { forwardRef as forwardRef230, memo as memo143 } from "react";
var Expand = memo143(forwardRef230((props, svgRef) => /* @__PURE__ */ React280.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React280.createElement("path", {
  d: "M5 18a1 1 0 011 1l.001 5.586 5.827-5.829a.999.999 0 111.414 1.414L7.415 26H13a1 1 0 010 2H5a1 1 0 01-1-1v-8a1 1 0 011-1zM27 4a1 1 0 011 1v8a1 1 0 01-2 0l-.001-5.586-5.827 5.829a.999.999 0 11-1.414-1.414L24.585 6H19a1 1 0 010-2h8z"
}))));
Expand.displayName = "Expand";
Expand["iconName"] = "expand";
var Expand_default = Expand;

// src/icon/ExternalLink.tsx
import React281, { forwardRef as forwardRef231, memo as memo144 } from "react";
var ExternalLink = memo144(forwardRef231((props, svgRef) => /* @__PURE__ */ React281.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React281.createElement("path", {
  d: "M25 29H5a2 2 0 01-2-2V7a2 2 0 012-2h8a1 1 0 010 2H6a1 1 0 00-1 1v18a1 1 0 001 1h18a1 1 0 001-1v-7a1 1 0 012 0v8a2 2 0 01-2 2zM20 4a1 1 0 001 1h4.59l-7.885 7.885a.998.998 0 001.41 1.41L27 6.41V11a1 1 0 002 0V4a1 1 0 00-1-1h-7a1 1 0 00-1 1z"
}))));
ExternalLink.displayName = "ExternalLink";
ExternalLink["iconName"] = "external_link";
var ExternalLink_default = ExternalLink;

// src/icon/FailedFaxBorder.tsx
import React282, { forwardRef as forwardRef232, memo as memo145 } from "react";
var FailedFaxBorder = memo145(forwardRef232((props, svgRef) => /* @__PURE__ */ React282.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React282.createElement("path", {
  d: "M23 4a1 1 0 010 2h-2v13.757c0 .796-.316 1.559-.879 2.121l-5.536 5.536a2 2 0 01-1.238.578l-.176.008H4.999a2 2 0 01-2-2V6h-2a1 1 0 010-2h22zm5 18a2 2 0 11.001 3.999A2 2 0 0128 22zM19 6H5v19a1 1 0 001 1h6v-5a2 2 0 012-2h5V6zm-.83 15H15a1 1 0 00-1 1v3.17L18.17 21zM28 6c.552 0 1 .348 1 .778v12.444c0 .43-.448.778-1 .778s-1-.348-1-.778V6.778c0-.43.448-.778 1-.778zm-12.833 8c.46 0 .833.448.833 1s-.373 1-.833 1H8.834c-.46 0-.833-.448-.833-1s.373-1 .833-1h6.333zm0-5c.46 0 .833.448.833 1s-.373 1-.833 1H8.834c-.46 0-.833-.448-.833-1s.373-1 .833-1h6.333z"
}))));
FailedFaxBorder.displayName = "FailedFaxBorder";
FailedFaxBorder["iconName"] = "failed-fax_border";
var FailedFaxBorder_default = FailedFaxBorder;

// src/icon/FailedFax.tsx
import React283, { forwardRef as forwardRef233, memo as memo146 } from "react";
var FailedFax = memo146(forwardRef233((props, svgRef) => /* @__PURE__ */ React283.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React283.createElement("path", {
  d: "M23 4a1 1 0 010 2h-2v13h-7a2.001 2.001 0 00-1.995 1.851L12 21v7H5a2 2 0 01-2-2V6H1a1 1 0 010-2h22zm-2.272 17l-.025.058a3.003 3.003 0 01-.582.82l-5.536 5.536a2.022 2.022 0 01-.415.319l-.17.086V22a1 1 0 01.883-.993L15 21h5.728zM28 22a2 2 0 11.001 3.999A2 2 0 0128 22zm0-16c.552 0 1 .348 1 .778v12.444c0 .43-.448.778-1 .778s-1-.348-1-.778V6.778c0-.43.448-.778 1-.778zm-12.833 8H8.834c-.46 0-.833.448-.833 1 0 .513.322.935.736.993l.097.007h6.333c.46 0 .833-.448.833-1s-.373-1-.833-1zm0-5H8.834c-.46 0-.833.448-.833 1 0 .513.322.935.736.993l.097.007h6.333c.46 0 .833-.448.833-1s-.373-1-.833-1z"
}))));
FailedFax.displayName = "FailedFax";
FailedFax["iconName"] = "failed-fax";
var FailedFax_default = FailedFax;

// src/icon/FaxBorder.tsx
import React284, { forwardRef as forwardRef234, memo as memo147 } from "react";
var FaxBorder = memo147(forwardRef234((props, svgRef) => /* @__PURE__ */ React284.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React284.createElement("path", {
  d: "M29 3a1 1 0 010 2h-2v15.757c0 .796-.316 1.559-.879 2.121l-5.536 5.536a2 2 0 01-1.238.578l-.176.008H6.999a2 2 0 01-2-2V5h-2a1 1 0 010-2h26zm-4 2H7v21a1 1 0 001 1h10v-5a2 2 0 012-2h5V5zm-.83 17H21a1 1 0 00-1 1v3.17L24.17 22zM21 14a1 1 0 010 2H11a1 1 0 010-2h10zm0-6a1 1 0 010 2H11a1 1 0 010-2h10z"
}))));
FaxBorder.displayName = "FaxBorder";
FaxBorder["iconName"] = "fax_border";
var FaxBorder_default = FaxBorder;

// src/icon/Fax.tsx
import React285, { forwardRef as forwardRef235, memo as memo148 } from "react";
var Fax = memo148(forwardRef235((props, svgRef) => /* @__PURE__ */ React285.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React285.createElement("path", {
  d: "M29 3a1 1 0 010 2h-2v15h-7a2 2 0 00-1.994 1.851L18 22v7H7a2 2 0 01-2-2V5H3a1 1 0 010-2h26zm-2.272 19l-.025.058a3.003 3.003 0 01-.582.82l-5.536 5.536a2.022 2.022 0 01-.415.319l-.17.086V23a1 1 0 01.883-.993L21 22h5.728zM21 14H11a1 1 0 00-.117 1.993L11 16h10a1 1 0 000-2zm0-6H11a1 1 0 00-.117 1.993L11 10h10a1 1 0 000-2z"
}))));
Fax.displayName = "Fax";
Fax["iconName"] = "fax";
var Fax_default = Fax;

// src/icon/Feedback.tsx
import React286, { forwardRef as forwardRef236, memo as memo149 } from "react";
var Feedback = memo149(forwardRef236((props, svgRef) => /* @__PURE__ */ React286.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React286.createElement("path", {
  d: "M26.667 2.667a2.667 2.667 0 012.667 2.667v16a2.667 2.667 0 01-2.667 2.667h-12L9.113 29a.666.666 0 01-1.112-.496v-4.503H5.334a2.667 2.667 0 01-2.667-2.667v-16a2.667 2.667 0 012.667-2.667h21.333zM15.994 17.333a1.334 1.334 0 10-.002 2.666 1.334 1.334 0 10.002-2.666zM16 6.667l-.142.005a1.853 1.853 0 00-1.705 1.989l.411 5.343a1.44 1.44 0 002.872 0l.415-5.414.001-.071A1.852 1.852 0 0016 6.667z"
}))));
Feedback.displayName = "Feedback";
Feedback["iconName"] = "feedback";
var Feedback_default = Feedback;

// src/icon/FileBorder.tsx
import React287, { forwardRef as forwardRef237, memo as memo150 } from "react";
var FileBorder = memo150(forwardRef237((props, svgRef) => /* @__PURE__ */ React287.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React287.createElement("path", {
  d: "M30 26a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2h7.821a2 2 0 011.459.632l1.923 2.052a.996.996 0 00.612.309l.118.007H28a2 2 0 012 2v17zm-2-12H4v11a1 1 0 001 1h22a1 1 0 001-1V14zM10.955 6H5a1 1 0 00-1 1v5h24v-2a1 1 0 00-1-1l-11.419-.021a2.998 2.998 0 01-1.836-.928l-1.33-1.419A2 2 0 0010.956 6z"
}))));
FileBorder.displayName = "FileBorder";
FileBorder["iconName"] = "file_border";
var FileBorder_default = FileBorder;

// src/icon/File.tsx
import React288, { forwardRef as forwardRef238, memo as memo151 } from "react";
var File = memo151(forwardRef238((props, svgRef) => /* @__PURE__ */ React288.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React288.createElement("path", {
  d: "M30 14v12a2 2 0 01-2 2H4a2 2 0 01-2-2V14h28zM2 6a2 2 0 012-2h7.821a2 2 0 011.459.632l1.923 2.052a.996.996 0 00.612.309l.118.007H28a2 2 0 012 2v3H2V6z"
}))));
File.displayName = "File";
File["iconName"] = "file";
var File_default = File;

// src/icon/Filter.tsx
import React289, { forwardRef as forwardRef239, memo as memo152 } from "react";
var Filter = memo152(forwardRef239((props, svgRef) => /* @__PURE__ */ React289.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React289.createElement("path", {
  d: "M18 29h-4a2 2 0 01-2-2v-8.176a.997.997 0 00-.293-.707L4.59 11A1.996 1.996 0 014 9.59V5a2 2 0 012-2h20a2 2 0 012 2v4.59a1.996 1.996 0 01-.59 1.41l-7.117 7.117a1 1 0 00-.293.707V27a2 2 0 01-2 2zM6 6v3.176c0 .265.105.52.293.707l7.121 7.121A2 2 0 0114 18.418V26a1 1 0 001 1h2a1 1 0 001-1v-7.582a2 2 0 01.586-1.414l7.121-7.121A1 1 0 0026 9.176V6a1 1 0 00-1-1H7a1 1 0 00-1 1z"
}))));
Filter.displayName = "Filter";
Filter["iconName"] = "filter";
var Filter_default = Filter;

// src/icon/Foldercreated.tsx
import React290, { forwardRef as forwardRef240, memo as memo153 } from "react";
var Foldercreated = memo153(forwardRef240((props, svgRef) => /* @__PURE__ */ React290.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React290.createElement("path", {
  d: "M27.2 7.95H16l-1.98-1.944a2.826 2.826 0 00-1.98-.806H4.799c-1.54 0-2.8 1.237-2.8 2.75v16.5c0 1.512 1.26 2.75 2.8 2.75h22.4c1.54 0 2.8-1.238 2.8-2.75V10.7c0-1.512-1.26-2.75-2.8-2.75z"
}))));
Foldercreated.displayName = "Foldercreated";
Foldercreated["iconName"] = "foldercreated";
var Foldercreated_default = Foldercreated;

// src/icon/FontColor.tsx
import React291, { forwardRef as forwardRef241, memo as memo154 } from "react";
var FontColor = memo154(forwardRef241((props, svgRef) => /* @__PURE__ */ React291.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React291.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M16.873 3.511l.054.113 7.5 18.5a1 1 0 01-1.803.857l-.05-.106-1.976-4.876h-9.195l-1.975 4.876a1.001 1.001 0 01-1.192.589l-.111-.038a1.001 1.001 0 01-.589-1.192l.038-.111 7.5-18.5c.304-.751 1.294-.824 1.732-.22l.068.107zM16 6.66L12.213 16h7.573L16 6.66z"
}), /* @__PURE__ */ React291.createElement("path", {
  fill: "var(--color53, #212121)",
  d: "M27 25v3H5v-3z"
}))));
FontColor.displayName = "FontColor";
FontColor["iconName"] = "font-color";
var FontColor_default = FontColor;

// src/icon/Forward.tsx
import React292, { forwardRef as forwardRef242, memo as memo155 } from "react";
var Forward = memo155(forwardRef242((props, svgRef) => /* @__PURE__ */ React292.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React292.createElement("path", {
  d: "M17.101 6.101a.999.999 0 000 1.414L24.586 15H5a1 1 0 000 2h19.588L17.1 24.486a.999.999 0 101.414 1.414l9.192-9.192a.999.999 0 000-1.414l-9.192-9.192a.999.999 0 00-1.414 0z"
}))));
Forward.displayName = "Forward";
Forward["iconName"] = "forward";
var Forward_default = Forward;

// src/icon/Forwardcall.tsx
import React293, { forwardRef as forwardRef243, memo as memo156 } from "react";
var Forwardcall = memo156(forwardRef243((props, svgRef) => /* @__PURE__ */ React293.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React293.createElement("path", {
  d: "M9.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.272-.265.049-.045c.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804 1.129.938c.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.01 6.01 0 01-1.829.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zm15.916-.06l4.243 4.243a.999.999 0 010 1.414l-4.243 4.243a.999.999 0 11-1.414-1.414l3.536-3.536-3.536-3.536a.999.999 0 111.414-1.414zm-5 0l4.243 4.243a.999.999 0 010 1.414l-4.243 4.243a.999.999 0 11-1.414-1.414l3.536-3.536-3.536-3.536a.999.999 0 111.414-1.414z"
}))));
Forwardcall.displayName = "Forwardcall";
Forwardcall["iconName"] = "forwardcall";
var Forwardcall_default = Forwardcall;

// src/icon/ForwardingBorder.tsx
import React294, { forwardRef as forwardRef244, memo as memo157 } from "react";
var ForwardingBorder = memo157(forwardRef244((props, svgRef) => /* @__PURE__ */ React294.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React294.createElement("path", {
  d: "M19.287 27.703l.127-.117 10.172-10.172a2 2 0 00.117-2.701l-.117-.127L19.414 4.414a2 2 0 00-3.408 1.265L16 5.828 15.999 11 15 10.999c-7.18 0-13 5.82-13 13v3c0 1.192 1.711 1.384 1.975.221a8 8 0 017.538-6.217l.263-.004h4.222l.001 5.171a2 2 0 003.287 1.531zM14 13h2.999a1 1 0 00.993-.883l.007-.117L18 6.311c0-.11.09-.2.2-.2.053 0 .104.021.141.059l9.689 9.689a.2.2 0 010 .283l-9.689 9.689a.2.2 0 01-.342-.141l-.001-5.688a1 1 0 00-1-1l-5.531.005a9.996 9.996 0 00-7.179 3.365l-.202.235.04-.284c.759-4.955 4.824-8.822 9.873-9.277l-.001-.045z"
}))));
ForwardingBorder.displayName = "ForwardingBorder";
ForwardingBorder["iconName"] = "forwarding_border";
var ForwardingBorder_default = ForwardingBorder;

// src/icon/Forwarding.tsx
import React295, { forwardRef as forwardRef245, memo as memo158 } from "react";
var Forwarding = memo158(forwardRef245((props, svgRef) => /* @__PURE__ */ React295.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React295.createElement("path", {
  d: "M19.287 27.703l.127-.117 10.172-10.172a2 2 0 00.117-2.701l-.117-.127L19.414 4.414a2 2 0 00-3.408 1.265L16 5.828 15.999 11 15 10.999c-7.18 0-13 5.82-13 13v3c0 1.192 1.711 1.384 1.975.221a8 8 0 017.538-6.217l.263-.004h4.222l.001 5.171a2 2 0 003.287 1.531z"
}))));
Forwarding.displayName = "Forwarding";
Forwarding["iconName"] = "forwarding";
var Forwarding_default = Forwarding;

// src/icon/GdriveLogo.tsx
import React296, { forwardRef as forwardRef246, memo as memo159 } from "react";
var GdriveLogo = memo159(forwardRef246((props, svgRef) => /* @__PURE__ */ React296.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React296.createElement("path", {
  fill: "var(--color9, #0066da)",
  d: "M4.117 24.441l1.235 2.133c.257.449.625.802 1.058 1.058l4.41-7.633H2c0 .497.128.994.385 1.443l1.732 2.999z"
}), /* @__PURE__ */ React296.createElement("path", {
  fill: "var(--color10, #00ac47)",
  d: "M16 11.018l-4.41-7.633a2.909 2.909 0 00-1.058 1.058L2.385 18.555A2.9 2.9 0 002 19.998h8.82L16 11.017z"
}), /* @__PURE__ */ React296.createElement("path", {
  fill: "var(--color7, #ea4335)",
  d: "M25.59 27.632a2.909 2.909 0 001.058-1.058l.513-.882 2.454-4.25A2.9 2.9 0 0030 19.999h-8.821l1.877 3.688 2.534 3.945z"
}), /* @__PURE__ */ React296.createElement("path", {
  fill: "var(--color11, #00832d)",
  d: "M16 11.018l4.41-7.633A2.815 2.815 0 0018.967 3h-5.934a2.98 2.98 0 00-1.443.385L16 11.018z"
}), /* @__PURE__ */ React296.createElement("path", {
  fill: "var(--color12, #2684fc)",
  d: "M21.18 19.999H10.82l-4.41 7.633c.433.257.93.385 1.443.385h16.293a2.98 2.98 0 001.443-.385l-4.41-7.633z"
}), /* @__PURE__ */ React296.createElement("path", {
  fill: "var(--color13, #ffba00)",
  d: "M25.542 11.499l-4.073-7.056a2.909 2.909 0 00-1.058-1.058l-4.41 7.633 5.18 8.981h8.804a2.9 2.9 0 00-.385-1.443L25.543 11.5z"
}))));
GdriveLogo.displayName = "GdriveLogo";
GdriveLogo["iconName"] = "gdrive-logo";
var GdriveLogo_default = GdriveLogo;

// src/icon/GifFileD.tsx
import React297, { forwardRef as forwardRef247, memo as memo160 } from "react";
var GifFileD = memo160(forwardRef247((props, svgRef) => /* @__PURE__ */ React297.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React297.createElement("path", {
  fill: "var(--color21, #222b42)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React297.createElement("path", {
  fill: "var(--color37, #356afd)",
  d: "M9.778 7.111h12.444a2.667 2.667 0 012.667 2.667v12.444a2.667 2.667 0 01-2.667 2.667H9.778a2.667 2.667 0 01-2.667-2.667V9.778a2.667 2.667 0 012.667-2.667z"
}), /* @__PURE__ */ React297.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M12.396 19.627c.264 0 .51-.014.738-.042s.442-.07.642-.127c.2-.056.388-.128.564-.216s.346-.19.509-.309v-2.6h-2.138v.676c0 .062.022.115.067.158s.105.064.182.064h.804V18.4c-.181.086-.371.153-.571.202s-.435.073-.704.073c-.305 0-.587-.053-.844-.158s-.48-.257-.667-.456c-.187-.198-.332-.442-.436-.731s-.156-.619-.156-.989c0-.344.049-.655.147-.933s.237-.517.418-.716c.181-.199.399-.351.656-.458s.543-.16.86-.16a2.765 2.765 0 01.922.142c.12.041.23.09.329.147l.291.169a.407.407 0 00.218.071c.113 0 .203-.055.271-.164l.347-.542c-.267-.249-.592-.451-.976-.607s-.838-.233-1.362-.233c-.513 0-.975.08-1.387.24s-.762.385-1.051.676c-.289.29-.512.637-.669 1.04s-.236.846-.236 1.329c0 .477.081.917.242 1.32s.386.75.673 1.04c.287.29.628.517 1.022.68s.825.244 1.293.244zm4.915-.071v-6.427h-1.2v6.427h1.2zm2.649 0v-2.618h2.404v-.956H19.96V14.08h2.849v-.951h-4.053v6.427h1.204z"
}))));
GifFileD.displayName = "GifFileD";
GifFileD["iconName"] = "gif-file-D";
var GifFileD_default = GifFileD;

// src/icon/GifFile.tsx
import React298, { forwardRef as forwardRef248, memo as memo161 } from "react";
var GifFile = memo161(forwardRef248((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React298.createElement(GifFileD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React298.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React298.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React298.createElement("path", {
    fill: "var(--color54, #4975ed)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React298.createElement("path", {
    fill: "var(--color55, #4b77f1)",
    d: "M9.778 7.111h12.444a2.667 2.667 0 012.667 2.667v12.444a2.667 2.667 0 01-2.667 2.667H9.778a2.667 2.667 0 01-2.667-2.667V9.778a2.667 2.667 0 012.667-2.667z"
  }), /* @__PURE__ */ React298.createElement("path", {
    fill: "var(--color3, #fff)",
    d: "M12.396 19.627c.264 0 .51-.014.738-.042s.442-.07.642-.127c.2-.056.388-.128.564-.216s.346-.19.509-.309v-2.6h-2.138v.676c0 .062.022.115.067.158s.105.064.182.064h.804V18.4c-.181.086-.371.153-.571.202s-.435.073-.704.073c-.305 0-.587-.053-.844-.158s-.48-.257-.667-.456c-.187-.198-.332-.442-.436-.731s-.156-.619-.156-.989c0-.344.049-.655.147-.933s.237-.517.418-.716c.181-.199.399-.351.656-.458s.543-.16.86-.16a2.765 2.765 0 01.922.142c.12.041.23.09.329.147l.291.169a.407.407 0 00.218.071c.113 0 .203-.055.271-.164l.347-.542c-.267-.249-.592-.451-.976-.607s-.838-.233-1.362-.233c-.513 0-.975.08-1.387.24s-.762.385-1.051.676c-.289.29-.512.637-.669 1.04s-.236.846-.236 1.329c0 .477.081.917.242 1.32s.386.75.673 1.04c.287.29.628.517 1.022.68s.825.244 1.293.244zm4.915-.071v-6.427h-1.2v6.427h1.2zm2.649 0v-2.618h2.404v-.956H19.96V14.08h2.849v-.951h-4.053v6.427h1.204z"
  }));
}));
GifFile.displayName = "GifFile";
GifFile["iconName"] = "gif-file";
var GifFile_default = GifFile;

// src/icon/Gif.tsx
import React299, { forwardRef as forwardRef249, memo as memo162 } from "react";
var Gif = memo162(forwardRef249((props, svgRef) => /* @__PURE__ */ React299.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React299.createElement("path", {
  d: "M9.36 18.008c.464 0 .897.034 1.298.103s.775.168 1.121.298c.346.13.666.288.96.474.293.185.566.393.82.625l.123.112-.529.846c-.126.2-.305.309-.521.309a.766.766 0 01-.382-.116l-.293-.174-.284-.177a4.048 4.048 0 00-.45-.217 4.647 4.647 0 00-.805-.241 5.347 5.347 0 00-1.106-.1c-.621 0-1.179.101-1.677.302-.496.2-.917.485-1.265.855s-.617.822-.805 1.354a5.407 5.407 0 00-.285 1.809c0 .703.099 1.327.296 1.872.196.543.471 1 .825 1.375s.772.659 1.258.856a4.265 4.265 0 001.621.297c.302 0 .579-.014.829-.043.25-.028.485-.071.705-.127s.428-.124.622-.203c.161-.066.322-.139.484-.221V25.67h-1.576c-.151 0-.282-.047-.382-.143s-.154-.221-.154-.361v-.58a.5.5 0 01.5-.5h2.42a1 1 0 011 1v3.6l-.083.162a6.276 6.276 0 01-1.961.962 7.46 7.46 0 01-1.171.239c-.414.052-.862.078-1.345.078-.857 0-1.646-.148-2.364-.443s-1.339-.711-1.859-1.245c-.52-.534-.926-1.174-1.215-1.919s-.434-1.56-.434-2.448c0-.898.142-1.72.425-2.463.284-.746.691-1.387 1.221-1.921s1.169-.949 1.917-1.242c.747-.292 1.581-.438 2.501-.438zm7.616.128c.539 0 .976.437.976.976v9.912a.976.976 0 01-1.952 0v-9.912c0-.539.437-.976.976-.976zm10.28 0a.832.832 0 010 1.664h-4.672v3.608h3.872a.832.832 0 010 1.664h-3.872v3.948a.98.98 0 01-1.96 0v-9.884a1 1 0 011-1h5.632zM19.249 2c.484 0 .952.176 1.317.495l6.751 5.908A2 2 0 0128 9.908V15a1 1 0 01-2 0v-4.639c0-.288-.124-.563-.341-.753l-6.127-5.361A.996.996 0 0018.873 4H7a1 1 0 00-1 1v10a1 1 0 01-2 0V4a2 2 0 012-2h13.249z"
}))));
Gif.displayName = "Gif";
Gif["iconName"] = "gif";
var Gif_default = Gif;

// src/icon/Gmail.tsx
import React300, { forwardRef as forwardRef250, memo as memo163 } from "react";
var Gmail = memo163(forwardRef250((props, svgRef) => /* @__PURE__ */ React300.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React300.createElement("path", {
  fill: "var(--color4, #4285f4)",
  d: "M3.909 27h4.455V15.67L2 10.671v14.33C2 26.107 2.856 27 3.909 27z"
}), /* @__PURE__ */ React300.createElement("path", {
  fill: "var(--color5, #34a853)",
  d: "M23.636 27h4.455C29.147 27 30 26.104 30 25.001v-14.33l-6.364 4.999z"
}), /* @__PURE__ */ React300.createElement("path", {
  fill: "var(--color6, #fbbc04)",
  d: "M23.636 7.005v8.664L30 10.67V8.004c0-2.473-2.695-3.882-4.582-2.399z"
}), /* @__PURE__ */ React300.createElement("path", {
  fill: "var(--color7, #ea4335)",
  d: "M8.364 15.67V7.006L16 13.004l7.636-5.998v8.664L16 21.668z"
}), /* @__PURE__ */ React300.createElement("path", {
  fill: "var(--color8, #c5221f)",
  d: "M2 8.005v2.666l6.364 4.999V7.006l-1.782-1.4C4.692 4.123 2 5.533 2 8.005z"
}))));
Gmail.displayName = "Gmail";
Gmail["iconName"] = "gmail";
var Gmail_default = Gmail;

// src/icon/GoodConnection.tsx
import React301, { forwardRef as forwardRef251, memo as memo164 } from "react";
var GoodConnection = memo164(forwardRef251((props, svgRef) => /* @__PURE__ */ React301.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React301.createElement("path", {
  d: "M27 4a2 2 0 012 2v20a2 2 0 01-2 2h-2a2 2 0 01-2-2V6a2 2 0 012-2h2zM17 14a2 2 0 012 2v10a2 2 0 01-2 2h-2a2 2 0 01-2-2V16a2 2 0 012-2h2zM7 20a2 2 0 012 2v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4a2 2 0 012-2h2z"
}))));
GoodConnection.displayName = "GoodConnection";
GoodConnection["iconName"] = "good-connection";
var GoodConnection_default = GoodConnection;

// src/icon/GoogleCalendar2019.tsx
import React302, { forwardRef as forwardRef252, memo as memo165 } from "react";
var GoogleCalendar2019 = memo165(forwardRef252((props, svgRef) => /* @__PURE__ */ React302.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React302.createElement("path", {
  fill: "var(--color61, #c7c7c7)",
  d: "M26 2.357H6c-.789 0-1.429.639-1.429 1.429v2.143h22.857V3.786c0-.789-.639-1.429-1.429-1.429zM8.857 4.5a.714.714 0 110-1.429.714.714 0 010 1.429zm14.286 0a.714.714 0 110-1.429.714.714 0 010 1.429z"
}), /* @__PURE__ */ React302.createElement("path", {
  fill: "var(--color23, #1976d2)",
  d: "M30.286 6.643c.074-.416-1.006-1.429-1.429-1.429H3.143c-.714 0-1.502 1.013-1.429 1.429.588 3.331 2.143 10.714 2.143 10.714h24.286s1.555-7.383 2.143-10.714z"
}), /* @__PURE__ */ React302.createElement("path", {
  fill: "var(--color62, #1e88e5)",
  d: "M28.143 17.357H3.857S2.302 24.74 1.714 28.071c0 .819.566 1.429 1.429 1.429h25.714c.422 0 1.429-.357 1.429-1.429-.588-3.331-2.143-10.714-2.143-10.714z"
}), /* @__PURE__ */ React302.createElement("path", {
  fill: "var(--color63, #fafafa)",
  d: "M13.524 17.357c.703.232 1.205.607 1.504 1.112.309.523.464 1.107.464 1.755 0 1.13-.371 2.019-1.111 2.666s-1.688.971-2.841.971c-1.13 0-2.066-.305-2.807-.916s-1.097-1.439-1.069-2.483l.026-.051h1.601c0 .653.2 1.173.601 1.559s.95.579 1.649.579c.71 0 1.266-.193 1.669-.579s.605-.957.605-1.712c0-.766-.179-1.331-.536-1.695s-.923-.545-1.695-.545h-1.465v-.661h3.406zm7.931 0h1.678v6.326h-1.678v-6.326z"
}), /* @__PURE__ */ React302.createElement("path", {
  fill: "var(--color64, #e0e0e0)",
  d: "M9.376 14.526h-1.61l-.017-.051c-.029-.937.311-1.734 1.018-2.389s1.631-.984 2.773-.984c1.147 0 2.061.305 2.743.916s1.022 1.481 1.022 2.611c0 .511-.155 1.021-.464 1.529s-.774.896-1.393 1.163l.076.037h-3.407v-.651h1.465c.744 0 1.271-.186 1.58-.558s.464-.89.464-1.554c0-.71-.176-1.249-.528-1.619s-.871-.554-1.559-.554c-.653 0-1.177.191-1.571.575-.381.37-.579.859-.592 1.529zm13.757 2.831h-1.678v-4.441l-2.539.034v-1.21l4.216-.46v6.077z"
}), /* @__PURE__ */ React302.createElement("path", {
  fill: "var(--color23, #1976d2)",
  d: "M3.143 5.214c-1.027 0-1.502 1.013-1.429 1.429.588 3.331 2.143 10.714 2.143 10.714L3.143 5.214zm25 12.143s1.555-7.383 2.143-10.714c0-1.161-1.006-1.429-1.429-1.429l-.714 12.143z"
}))));
GoogleCalendar2019.displayName = "GoogleCalendar2019";
GoogleCalendar2019["iconName"] = "google-calendar-2019";
var GoogleCalendar2019_default = GoogleCalendar2019;

// src/icon/GoogleDocD.tsx
import React303, { forwardRef as forwardRef253, memo as memo166 } from "react";
var GoogleDocD = memo166(forwardRef253((props, svgRef) => /* @__PURE__ */ React303.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React303.createElement("path", {
  fill: "var(--color32, #223442)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React303.createElement("path", {
  fill: "var(--color33, #2196f3)",
  d: "M16.759 8.023l5.463 5.114v8.889c0 .605-.215.933-.627 1.349s-.918.624-1.518.624h-8.171c-.6 0-1.106-.208-1.518-.624s-.61-.743-.61-1.349v-11.87c0-.606.206-1.116.619-1.533s.918-.624 1.518-.624l4.844.023z"
}), /* @__PURE__ */ React303.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M16.494 20.148v.988h-4.938v-.988h4.938zm3.95-1.975v.988h-8.889v-.988h8.889zm0-1.975v.988h-8.889v-.988h8.889zm0-1.976v.988h-8.889v-.988h8.889z"
}))));
GoogleDocD.displayName = "GoogleDocD";
GoogleDocD["iconName"] = "google-doc-D";
var GoogleDocD_default = GoogleDocD;

// src/icon/GoogleDoc.tsx
import React304, { forwardRef as forwardRef254, memo as memo167 } from "react";
var GoogleDoc = memo167(forwardRef254((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React304.createElement(GoogleDocD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React304.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React304.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React304.createElement("path", {
    fill: "var(--color33, #2196f3)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React304.createElement("path", {
    fill: "var(--color33, #2196f3)",
    d: "M11.915 8l4.844.023 5.463 5.114v8.889c0 .605-.215.933-.627 1.349s-.918.624-1.518.624h-8.171c-.6 0-1.106-.208-1.518-.624s-.61-.743-.61-1.349v-11.87c0-.606.206-1.116.619-1.533s.918-.624 1.518-.624zm4.579 12.148h-4.938v.988h4.938v-.988zm3.95-1.975h-8.889v.988h8.889v-.988zm0-1.975h-8.889v.988h8.889v-.988zm0-1.976h-8.889v.988h8.889v-.988z"
  }));
}));
GoogleDoc.displayName = "GoogleDoc";
GoogleDoc["iconName"] = "google-doc";
var GoogleDoc_default = GoogleDoc;

// src/icon/GoogleLogoDisabled.tsx
import React305, { forwardRef as forwardRef255, memo as memo168 } from "react";
var GoogleLogoDisabled = memo168(forwardRef255((props, svgRef) => /* @__PURE__ */ React305.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React305.createElement("path", {
  d: "M27.767 13.65H26.8v-.05H16v4.8h6.782A7.197 7.197 0 018.8 16 7.2 7.2 0 0116 8.8c1.835 0 3.505.692 4.777 1.823l3.394-3.394A11.946 11.946 0 0016 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12c0-.805-.083-1.59-.233-2.35z"
}))));
GoogleLogoDisabled.displayName = "GoogleLogoDisabled";
GoogleLogoDisabled["iconName"] = "google-logo-disabled";
var GoogleLogoDisabled_default = GoogleLogoDisabled;

// src/icon/GoogleLogo.tsx
import React306, { forwardRef as forwardRef256, memo as memo169 } from "react";
var GoogleLogo = memo169(forwardRef256((props, svgRef) => /* @__PURE__ */ React306.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React306.createElement("path", {
  fill: "var(--color22, #ffc107)",
  d: "M27.767 13.65H26.8v-.05H16v4.8h6.782A7.197 7.197 0 018.8 16 7.2 7.2 0 0116 8.8c1.835 0 3.505.692 4.777 1.823l3.394-3.394A11.946 11.946 0 0016 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12c0-.805-.083-1.59-.233-2.35z"
}), /* @__PURE__ */ React306.createElement("path", {
  fill: "var(--color48, #ff3d00)",
  d: "M5.384 10.415l3.943 2.891A7.197 7.197 0 0116.001 8.8c1.835 0 3.505.692 4.777 1.823l3.394-3.394A11.946 11.946 0 0016.001 4c-4.609 0-8.606 2.602-10.616 6.415z"
}), /* @__PURE__ */ React306.createElement("path", {
  fill: "var(--color24, #4caf50)",
  d: "M16 28c3.1 0 5.916-1.186 8.045-3.115l-3.714-3.143A7.143 7.143 0 0116 23.2c-3.121 0-5.771-1.99-6.77-4.768l-3.913 3.015C7.303 25.333 11.336 28 16 28z"
}), /* @__PURE__ */ React306.createElement("path", {
  fill: "var(--color23, #1976d2)",
  d: "M27.767 13.65H26.8v-.05H16v4.8h6.782a7.229 7.229 0 01-2.452 3.343l.002-.001 3.714 3.143c-.263.239 3.955-2.884 3.955-8.884 0-.805-.083-1.59-.233-2.35z"
}))));
GoogleLogo.displayName = "GoogleLogo";
GoogleLogo["iconName"] = "google-logo";
var GoogleLogo_default = GoogleLogo;

// src/icon/GoogleSheetD.tsx
import React307, { forwardRef as forwardRef257, memo as memo170 } from "react";
var GoogleSheetD = memo170(forwardRef257((props, svgRef) => /* @__PURE__ */ React307.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React307.createElement("path", {
  fill: "var(--color35, #1e2f1f)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React307.createElement("path", {
  fill: "var(--color36, #43a047)",
  d: "M11.915 8l4.844.023 5.463 5.114v8.889c0 .605-.215.933-.627 1.349s-.918.624-1.518.624h-8.171c-.6 0-1.106-.208-1.518-.624s-.61-.743-.61-1.349v-11.87c0-.606.206-1.116.619-1.533s.918-.624 1.518-.624z"
}), /* @__PURE__ */ React307.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M20.444 14.222v6.914h-8.889v-6.914h8.889zm-5.926 4.938h-1.975v.988h1.975v-.988zm4.939 0h-3.951v.988h3.951v-.988zm-4.939-1.975h-1.975v.988h1.975v-.988zm4.939 0h-3.951v.988h3.951v-.988zm-4.939-1.975h-1.975v.988h1.975v-.988zm4.939 0h-3.951v.988h3.951v-.988z"
}))));
GoogleSheetD.displayName = "GoogleSheetD";
GoogleSheetD["iconName"] = "google-sheet-D";
var GoogleSheetD_default = GoogleSheetD;

// src/icon/GoogleSheet.tsx
import React308, { forwardRef as forwardRef258, memo as memo171 } from "react";
var GoogleSheet = memo171(forwardRef258((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React308.createElement(GoogleSheetD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React308.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React308.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React308.createElement("path", {
    fill: "var(--color36, #43a047)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React308.createElement("path", {
    fill: "var(--color36, #43a047)",
    d: "M11.915 8l4.844.023 5.463 5.114v8.889c0 .605-.215.933-.627 1.349s-.918.624-1.518.624h-8.171c-.6 0-1.106-.208-1.518-.624s-.61-.743-.61-1.349v-11.87c0-.606.206-1.116.619-1.533s.918-.624 1.518-.624zm7.542 6.222h-7.901v6.914h8.889v-6.914h-.988zm-6.914.988h1.975v.988h-1.975v-.988zm0 1.975h1.975v.988h-1.975v-.988zm0 1.975h1.975v.988h-1.975v-.988zm6.914.988h-3.951v-.988h3.951v.988zm0-1.975h-3.951v-.988h3.951v.988zm0-1.975h-3.951v-.988h3.951v.988z"
  }));
}));
GoogleSheet.displayName = "GoogleSheet";
GoogleSheet["iconName"] = "google-sheet";
var GoogleSheet_default = GoogleSheet;

// src/icon/GoogleSlideD.tsx
import React309, { forwardRef as forwardRef259, memo as memo172 } from "react";
var GoogleSlideD = memo172(forwardRef259((props, svgRef) => /* @__PURE__ */ React309.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React309.createElement("path", {
  fill: "var(--color30, #2f291e)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React309.createElement("path", {
  fill: "var(--color34, #f6ad16)",
  d: "M16.756 8l5.466 4.962-.024 8.878c0 .607-.204 1.118-.612 1.535s-.909.625-1.503.625h-8.154c-.594 0-1.095-.209-1.503-.625s-.612-.929-.612-1.535l-.035-11.661c0-.607.204-1.118.612-1.535s.909-.625 1.503-.625l4.862-.018z"
}), /* @__PURE__ */ React309.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M18.667 15.111h-5.333a.889.889 0 00-.889.889v4.444c0 .491.398.889.889.889h5.333a.889.889 0 00.889-.889V16a.889.889 0 00-.889-.889z"
}))));
GoogleSlideD.displayName = "GoogleSlideD";
GoogleSlideD["iconName"] = "google-slide-D";
var GoogleSlideD_default = GoogleSlideD;

// src/icon/GoogleSlide.tsx
import React310, { forwardRef as forwardRef260, memo as memo173 } from "react";
var GoogleSlide = memo173(forwardRef260((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React310.createElement(GoogleSlideD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React310.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React310.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React310.createElement("path", {
    fill: "var(--color34, #f6ad16)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React310.createElement("path", {
    fill: "var(--color34, #f6ad16)",
    d: "M16.756 8l5.466 4.962-.024 8.878c0 .607-.204 1.118-.612 1.535s-.909.625-1.503.625h-8.154c-.594 0-1.095-.209-1.503-.625s-.612-.929-.612-1.535l-.035-11.661c0-.607.204-1.118.612-1.535s.909-.625 1.503-.625l4.862-.018zm1.911 7.111h-5.333a.889.889 0 00-.889.889v4.444c0 .491.398.889.889.889h5.333a.889.889 0 00.889-.889V16a.889.889 0 00-.889-.889z"
  }));
}));
GoogleSlide.displayName = "GoogleSlide";
GoogleSlide["iconName"] = "google-slide";
var GoogleSlide_default = GoogleSlide;

// src/icon/Google.tsx
import React311, { forwardRef as forwardRef261, memo as memo174 } from "react";
var Google = memo174(forwardRef261((props, svgRef) => /* @__PURE__ */ React311.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React311.createElement("path", {
  d: "M2.667 20.421L6.864 28l8.148-14.527-4.321-7.579-8.025 14.527zm10.494 0L8.964 28h16.173l4.197-7.579H13.161zM20.197 4h-8.395l8.518 15.158h8.395L20.197 4z"
}))));
Google.displayName = "Google";
Google["iconName"] = "google";
var Google_default = Google;

// src/icon/GroupDefault.tsx
import React312, { forwardRef as forwardRef262, memo as memo175 } from "react";
var GroupDefault = memo175(forwardRef262((props, svgRef) => /* @__PURE__ */ React312.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React312.createElement("path", {
  d: "M13.389 8.019c2.102.183 3.381 1.188 3.975 2.056 1.005 1.279 1.142 2.833 1.005 3.564-.119.87-.135 2.048-.137 2.527v.306l.047.146c.116.38.195.855-.047 1.864-.274 1.279-.731 2.011-1.005 2.285 0 .868-.274 1.691-.548 2.285-.137.548-.411 1.142-.411 1.691l.001.292c.003.439.021.439.137.439 2.011.548 5.118 1.691 6.397 2.285.413.188 1.041.688 1.404 1.038a15.134 15.134 0 01-8.205 2.402 15.154 15.154 0 01-10.749-4.453l.232-.13.324-.119c1.138-.416 2.327-.819 3.286-1.069l.037-.001c.1-.007.1-.072.1-.73 0-.868-.137-1.279-.274-1.691l-.037-.144c-.145-.549-.386-1.345-.511-2.141l-.04-.042c-.277-.303-.704-1.024-.965-2.242-.274-1.142-.137-1.554 0-2.011v-.137c0-.274-.137-1.554-.274-2.696-.137-.731 0-2.285 1.005-3.564.548-.868 1.828-1.828 3.975-2.011h1.279zm6.123-1.645c2.148.137 3.427 1.142 3.976 2.011 1.005 1.279 1.142 2.833 1.005 3.564-.125.92-.136 2.184-.137 2.602v.231l.047.146c.116.38.195.855-.047 1.864-.274 1.279-.731 2.011-1.005 2.285 0 .868-.274 1.691-.548 2.285-.137.548-.411 1.142-.411 1.691l.001.292c.003.439.021.439.136.439 1.418.387 3.633 1.303 5.184 1.905a15.26 15.26 0 01-2.902 2.699 8.23 8.23 0 00-1.094-.857l-.972-.42c-1.576-.675-3.957-1.66-5.653-2.139l-.038-.001c-.129-.006-.265-.07-.099-.776.046-.32.183-.548.32-.868l.054-.149c.222-.598.494-1.247.494-2.091l.044-.046c.317-.341.745-1.067 1.007-2.376.32-1.188.137-1.645 0-2.102l.002-.563c.006-.607.032-1.66.135-2.453.137-.777 0-2.422-1.051-3.793-.503-.731-1.554-1.645-3.107-2.056.685-.64 1.828-1.188 3.381-1.325h1.279z"
}))));
GroupDefault.displayName = "GroupDefault";
GroupDefault["iconName"] = "group-default";
var GroupDefault_default = GroupDefault;

// src/icon/HandUp.tsx
import React313, { forwardRef as forwardRef263, memo as memo176 } from "react";
var HandUp = memo176(forwardRef263((props, svgRef) => /* @__PURE__ */ React313.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React313.createElement("path", {
  d: "M28.52 20.419a3.22 3.22 0 01-2.233.709l-.204-.021-4.453-.628c-1.326-.181-2.174-.863-2.253-1.818l-.006-.162.01-.728c-.01-.507-.324-.789-1.172-.871a25.213 25.213 0 00-2.087-.104 37.206 37.206 0 00-2.448.085c-.811.052-1.122.309-1.158.761l-.003.1.012.734c.027.979-.735 1.68-2.01 1.919l-.217.035-4.068.592c-1.108.157-1.863-.074-2.503-.602-.446-.367-.781-.99-.905-1.595l-.033-.2-.009-.233c-.003-1.594.49-2.804 1.766-3.855 2.739-2.257 6.051-3.353 11.456-3.402 5.419-.049 8.985 1.166 11.468 3.212 1.515 1.248 1.97 2.363 2.027 3.961l.006.256-.061.377c-.122.585-.453 1.091-.92 1.476z"
}))));
HandUp.displayName = "HandUp";
HandUp["iconName"] = "hand-up";
var HandUp_default = HandUp;

// src/icon/Hash.tsx
import React314, { forwardRef as forwardRef264, memo as memo177 } from "react";
var Hash = memo177(forwardRef264((props, svgRef) => /* @__PURE__ */ React314.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React314.createElement("path", {
  d: "M16.523 11l-.559 2.65h1.645l.559-2.65h.526c.111 0 .203.031.276.094s.11.144.11.245a.367.367 0 01-.007.082l-.486 2.23h1.412l-.087.471c-.022.121-.074.21-.157.267s-.208.085-.376.085h-.919l-.433 2.047h1.192c.107 0 .189.024.246.072s.087.133.087.254l-.008.101-.066.395H17.9L17.341 20h-.54c-.102 0-.189-.036-.26-.107s-.107-.163-.107-.276l.001-.024.007-.047.479-2.202h-1.645l-.473 2.23c-.036.155-.103.265-.203.33s-.214.097-.343.097h-.526l.566-2.657h-.972c-.102 0-.182-.024-.24-.072s-.087-.131-.087-.248l.001-.033.007-.074.059-.396h1.359l.433-2.047h-1.545l.087-.465c.022-.121.073-.211.153-.27s.206-.088.38-.088h1.052l.48-2.248c.027-.126.088-.224.183-.295s.21-.107.343-.107h.533zm.959 3.473h-1.645l-.433 2.047h1.645l.433-2.047z"
}))));
Hash.displayName = "Hash";
Hash["iconName"] = "hash";
var Hash_default = Hash;

// src/icon/Hd.tsx
import React315, { forwardRef as forwardRef265, memo as memo178 } from "react";
var Hd = memo178(forwardRef265((props, svgRef) => /* @__PURE__ */ React315.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React315.createElement("path", {
  d: "M3.5 7A1.5 1.5 0 015 8.5L4.999 14H10V8.5A1.5 1.5 0 0111.5 7h1A1.5 1.5 0 0114 8.5v16a1.5 1.5 0 01-1.5 1.5h-1a1.5 1.5 0 01-1.5-1.5V18H4.999L5 24.5A1.5 1.5 0 013.5 26h-1A1.5 1.5 0 011 24.5v-16A1.5 1.5 0 012.5 7h1zm18.217 0c2.374 0 4.487.607 6.291 1.87 1.828 1.239 2.991 4.57 2.991 7.509 0 2.987-1.163 6.319-2.968 7.654C26.227 25.32 24.066 26 21.716 26h-3.229c-1.424 0-2.489-.79-2.489-2.248V9.366c0-1.457 1.064-2.367 2.489-2.367h3.229zm-.55 4H20v10.984l1.167.016c4.473 0 5.909-2.456 5.909-6 0-3.148-1.437-5-5.909-5z"
}))));
Hd.displayName = "Hd";
Hd["iconName"] = "hd";
var Hd_default = Hd;

// src/icon/HelpBorder.tsx
import React316, { forwardRef as forwardRef266, memo as memo179 } from "react";
var HelpBorder = memo179(forwardRef266((props, svgRef) => /* @__PURE__ */ React316.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React316.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm-.42 16.75c.207 0 .403.04.59.12s.347.187.48.32.24.293.32.48.12.383.12.59c0 .213-.04.412-.12.595s-.187.342-.32.475a1.532 1.532 0 01-1.07.43 1.56 1.56 0 01-1.085-.43c-.137-.133-.243-.292-.32-.475s-.115-.382-.115-.595c0-.207.038-.403.115-.59s.183-.347.32-.48.298-.24.485-.32.387-.12.6-.12zM16 9c.58 0 1.108.08 1.585.24s.885.388 1.225.685c.34.297.603.655.79 1.075s.28.89.28 1.41c0 .507-.073.945-.22 1.315s-.332.692-.555.965c-.223.273-.465.51-.725.71l-.74.565c-.233.177-.435.35-.605.52a1.064 1.064 0 00-.277.45l-.028.125-.23 1.46h-1.69l-.17-1.63-.008-.046-.002-.124c0-.293.073-.548.22-.765s.33-.42.55-.61c.22-.19.457-.375.71-.555s.49-.375.71-.585c.22-.21.403-.448.55-.715s.22-.58.22-.94c0-.24-.045-.455-.135-.645s-.215-.353-.375-.49-.352-.242-.575-.315-.465-.11-.725-.11c-.38 0-.702.042-.965.125s-.487.177-.67.28c-.183.103-.338.197-.465.28s-.24.125-.34.125c-.206 0-.362-.073-.47-.22l-.7-1.11c.227-.2.475-.39.745-.57a5.336 5.336 0 011.895-.785A5.79 5.79 0 0116 9z"
}))));
HelpBorder.displayName = "HelpBorder";
HelpBorder["iconName"] = "help_border";
var HelpBorder_default = HelpBorder;

// src/icon/Help.tsx
import React317, { forwardRef as forwardRef267, memo as memo180 } from "react";
var Help = memo180(forwardRef267((props, svgRef) => /* @__PURE__ */ React317.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React317.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-.42 18.75c-.213 0-.413.04-.6.12s-.348.187-.485.32-.243.293-.32.48-.115.383-.115.59c0 .213.038.412.115.595s.183.342.32.475a1.56 1.56 0 001.085.43 1.532 1.532 0 001.07-.43c.133-.133.24-.292.32-.475s.12-.382.12-.595c0-.207-.04-.403-.12-.59s-.187-.347-.32-.48-.293-.24-.48-.32-.383-.12-.59-.12zM16 9c-.427 0-.823.038-1.19.115s-.707.182-1.02.315c-.313.133-.605.29-.875.47s-.518.37-.745.57l.7 1.11c.108.147.264.22.47.22.1 0 .213-.042.34-.125s.282-.177.465-.28c.183-.103.407-.197.67-.28s.585-.125.965-.125c.26 0 .502.037.725.11s.415.178.575.315c.16.137.285.3.375.49s.135.405.135.645c0 .36-.073.673-.22.94s-.33.505-.55.715c-.22.21-.457.405-.71.585s-.49.365-.71.555c-.22.19-.403.393-.55.61s-.22.472-.22.765l.002.124.008.046.17 1.63h1.69l.23-1.46.028-.125c.049-.164.141-.314.277-.45.17-.17.372-.343.605-.52l.74-.565c.26-.2.502-.437.725-.71s.408-.595.555-.965.22-.808.22-1.315c0-.52-.093-.99-.28-1.41s-.45-.778-.79-1.075c-.34-.297-.748-.525-1.225-.685S16.58 9 16 9z"
}))));
Help.displayName = "Help";
Help["iconName"] = "help";
var Help_default = Help;

// src/icon/HideBorder.tsx
import React318, { forwardRef as forwardRef268, memo as memo181 } from "react";
var HideBorder = memo181(forwardRef268((props, svgRef) => /* @__PURE__ */ React318.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React318.createElement("path", {
  d: "M28.749 3.293a.999.999 0 010 1.414l-3.546 3.546C28.731 10.822 31 14.256 31 16c0 3-6.716 11-15 11-2.706 0-5.245-.854-7.437-2.108l-3.856 3.856a.999.999 0 11-1.414-1.414L27.335 3.292a.999.999 0 011.414 0zm-4.978 6.392l-2.862 2.863a6 6 0 01-8.36 8.36l-2.514 2.514C11.952 24.433 13.987 25 16 25c3.233 0 6.526-1.462 9.29-3.88 1.169-1.022 2.162-2.156 2.853-3.223.569-.878.857-1.609.857-1.897s-.289-1.019-.857-1.897c-.691-1.066-1.684-2.2-2.853-3.223a18.306 18.306 0 00-1.519-1.195zM16 5c2.201 0 4.292.565 6.176 1.451l-1.515 1.516c-1.523-.625-3.099-.966-4.661-.966-3.233 0-6.526 1.462-9.29 3.88-1.169 1.022-2.162 2.156-2.853 3.223-.568.878-.857 1.609-.857 1.897s.289 1.019.857 1.897c.691 1.066 1.684 2.2 2.853 3.223.142.125.286.247.432.366l-1.421 1.42C2.815 20.471 1 17.561 1 16.001c0-3 6.716-11 15-11zm3.462 8.995l-5.467 5.467a4 4 0 005.467-5.467zM16 10c.78 0 1.525.149 2.208.419l-1.624 1.623a4 4 0 00-4.542 4.542l-1.623 1.624A6 6 0 0116 10z"
}))));
HideBorder.displayName = "HideBorder";
HideBorder["iconName"] = "hide_border";
var HideBorder_default = HideBorder;

// src/icon/HoldAnswer.tsx
import React319, { forwardRef as forwardRef269, memo as memo182 } from "react";
var HoldAnswer = memo182(forwardRef269((props, svgRef) => /* @__PURE__ */ React319.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React319.createElement("path", {
  fill: "var(--color58, #4475fd)",
  d: "M8 0c4.371 0 7.923 3.497 7.999 7.838a12.833 12.833 0 00-8.161 8.159l.162.002c-4.418 0-8-3.573-8-7.98v-.04C0 3.646 3.461.12 7.776.002L8-.001zM6.2 4.8l-.045.002A.6.6 0 005.6 5.4v5.2a.6.6 0 00.6.6l.045-.002A.6.6 0 006.8 10.6V5.4a.6.6 0 00-.6-.6zm3.6 0l-.045.002A.6.6 0 009.2 5.4v5.2a.6.6 0 00.6.6l.045-.002a.6.6 0 00.555-.598V5.4a.6.6 0 00-.6-.6z"
}), /* @__PURE__ */ React319.createElement("path", {
  fill: "var(--color79, #299e0b)",
  d: "M20 8c6.627 0 12 5.373 12 12s-5.373 12-12 12S8 26.627 8 20 13.373 8 20 8zm-2.083 6.541a1.451 1.451 0 00-.853-.123c-.22.034-.486.13-.807.286a3.66 3.66 0 00-.731.444c-.373.314-.6.737-.681 1.26-.085.494-.046 1.052.112 1.669.156.607.425 1.256.807 1.948.38.696.869 1.402 1.466 2.116.453.532.912 1.007 1.379 1.426.459.425.923.789 1.39 1.087.47.301.932.533 1.386.695.465.166.913.25 1.342.25.265 0 .509-.035.731-.105.228-.072.431-.182.606-.327.168-.126.365-.325.582-.588.221-.267.37-.493.447-.685.114-.229.138-.497.064-.775a1.353 1.353 0 00-.463-.703c-.418-.345-.756-.63-1.014-.856s-.506-.453-.746-.679a1.203 1.203 0 00-.786-.362 1.437 1.437 0 00-.868.193 2.097 2.097 0 00-.247.191c-.063.058-.14.134-.23.229l-.03.037-.004.006-.032.031-.087.096a1.693 1.693 0 01-.125-.064 2.47 2.47 0 01-.427-.317 5.516 5.516 0 01-.531-.557 5.786 5.786 0 01-.436-.586 2.595 2.595 0 01-.241-.462 1.307 1.307 0 01-.073-.219.645.645 0 01.058-.027.767.767 0 00.089-.048l.068-.033a.428.428 0 00.087-.055 2.329 2.329 0 00.411-.283c.229-.231.354-.48.391-.76a1.162 1.162 0 00-.194-.807c-.264-.382-.489-.727-.678-1.04s-.356-.615-.503-.906a1.366 1.366 0 00-.631-.6z"
}))));
HoldAnswer.displayName = "HoldAnswer";
HoldAnswer["iconName"] = "hold-answer";
var HoldAnswer_default = HoldAnswer;

// src/icon/Hold.tsx
import React320, { forwardRef as forwardRef270, memo as memo183 } from "react";
var Hold = memo183(forwardRef270((props, svgRef) => /* @__PURE__ */ React320.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React320.createElement("path", {
  d: "M10 4a2 2 0 012 2v20a2 2 0 01-1.851 1.994L10 28a2 2 0 01-2-2V6c0-1.054.816-1.918 1.851-1.995L10 3.999zm12 0a2 2 0 012 2v20a2 2 0 01-1.851 1.994L22 28a2 2 0 01-2-2V6c0-1.054.816-1.918 1.851-1.995L22 3.999z"
}))));
Hold.displayName = "Hold";
Hold["iconName"] = "hold";
var Hold_default = Hold;

// src/icon/HoldcallBorder.tsx
import React321, { forwardRef as forwardRef271, memo as memo184 } from "react";
var HoldcallBorder = memo184(forwardRef271((props, svgRef) => /* @__PURE__ */ React321.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React321.createElement("path", {
  d: "M9.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.272-.265.049-.045c.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804 1.129.938c.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.01 6.01 0 01-1.829.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zM7.966 4.022c-.314.049-.8.222-1.451.538-.661.321-1.134.608-1.416.843-.548.46-.881 1.078-1.018 1.956-.16.934-.085 2.047.247 3.337.345 1.34.953 2.809 1.836 4.41.884 1.619 2.031 3.276 3.432 4.954a34.87 34.87 0 003.283 3.393 22.997 22.997 0 003.194 2.502c1.055.675 2.074 1.187 3.059 1.538.959.342 1.853.509 2.684.509.466 0 .872-.058 1.223-.17.274-.087.514-.206.768-.392l.155-.12c.275-.206.66-.595 1.112-1.142.391-.473.643-.844.765-1.097l.106-.236c.064-.128.078-.299.017-.53-.072-.27-.226-.504-.496-.726l-1.295-1.078-.817-.695-.471-.41a71.406 71.406 0 01-1.293-1.163l-.624-.582-.088-.088c-.138-.148-.36-.25-.681-.279a1.596 1.596 0 00-.827.134l-.119.063-.049.035a3.377 3.377 0 00-.189.145l-.079.069-.16.152-.227.231-.036.047-.09.104-.159.162-.157.172a1.998 1.998 0 01-2.3.472 6.246 6.246 0 01-.459-.233c-.46-.256-.934-.607-1.428-1.047a16.01 16.01 0 01-1.531-1.601 16.348 16.348 0 01-1.243-1.674 8.88 8.88 0 01-.691-1.286l-.073-.183a5.005 5.005 0 01-.292-.913 2 2 0 011.025-2.162l.25-.12.178-.098.111-.054.05-.036.143-.086c.134-.073.249-.143.346-.21l.175-.127.102-.083.049-.052c.16-.183.247-.349.289-.528l.02-.109a.87.87 0 00-.147-.621 52.75 52.75 0 01-1.763-2.705 34.089 34.089 0 01-1.299-2.338 1.447 1.447 0 00-.553-.588l-.12-.063a1.627 1.627 0 00-.976-.142zM27 3a1 1 0 011 1v10a1 1 0 01-2 0V4a1 1 0 011-1zm-6 0a1 1 0 011 1v10a1 1 0 01-2 0V4a1 1 0 011-1z"
}))));
HoldcallBorder.displayName = "HoldcallBorder";
HoldcallBorder["iconName"] = "holdcall_border";
var HoldcallBorder_default = HoldcallBorder;

// src/icon/HorizontalLine.tsx
import React322, { forwardRef as forwardRef272, memo as memo185 } from "react";
var HorizontalLine = memo185(forwardRef272((props, svgRef) => /* @__PURE__ */ React322.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React322.createElement("path", {
  d: "M5 15h22a1 1 0 010 2H5a1 1 0 010-2z"
}))));
HorizontalLine.displayName = "HorizontalLine";
HorizontalLine["iconName"] = "horizontal-line";
var HorizontalLine_default = HorizontalLine;

// src/icon/Ignore.tsx
import React323, { forwardRef as forwardRef273, memo as memo186 } from "react";
var Ignore = memo186(forwardRef273((props, svgRef) => /* @__PURE__ */ React323.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React323.createElement("path", {
  d: "M26.286 14c.947 0 1.714.895 1.714 2s-.767 2-1.714 2H5.715c-.947 0-1.714-.895-1.714-2s.768-2 1.714-2h20.571z"
}))));
Ignore.displayName = "Ignore";
Ignore["iconName"] = "ignore";
var Ignore_default = Ignore;

// src/icon/ImageBrokenD.tsx
import React324, { forwardRef as forwardRef274, memo as memo187 } from "react";
var ImageBrokenD = memo187(forwardRef274((props, svgRef) => /* @__PURE__ */ React324.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React324.createElement("path", {
  fill: "var(--color14, #30323a)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React324.createElement("path", {
  fill: "var(--color15, #8f9199)",
  d: "M11.893 8.018L16.755 8l5.466 4.962-.024 8.878c0 .607-.204 1.118-.612 1.535s-.909.625-1.503.625h-8.154c-.594 0-1.095-.209-1.503-.625s-.612-.929-.612-1.535l-.035-11.661c0-.607.204-1.118.612-1.535s.909-.625 1.503-.625z"
}), /* @__PURE__ */ React324.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M18.329 14.738c.585 0 .944.535 1.542 1.822l.627 1.388.141.297.06.121.119.223.118.2c.037.059.072.109.104.151l.057.069.027-.021a.753.753 0 00.086-.097l.106-.152.126-.206.144-.259.161-.311.176-.362.19-.413.1-.225-.006 1.994c-.41.651-.782.962-1.157.962l-.121-.005c-.327-.029-.53-.198-.853-.803l-.146-.287-.165-.346-.091-.197-.608-1.346-.151-.314-.151-.295-.135-.246-.115-.195-.091-.142-.063-.087c-.016-.019-.026-.029-.03-.029-.008 0-.02.008-.036.023l-.059.07-.082.118-.105.167-.2.344-.161.293-.184.346-.579 1.133-.215.403c-.548.998-.913 1.395-1.442 1.395-.525 0-.919-.43-1.473-1.396l-.231-.415-.675-1.274-.258-.469-.302-.522-.102-.163-.034-.048c-.003-.004-.006-.006-.007-.006l-.008-.002-.016-.026c-.003-.004-.008-.005-.016.003l-.042.052-.086.131-2.212 3.692-.005-1.744.868-1.464.08-.13.211-.331.219-.321c.381-.531.659-.75 1.008-.75l.113.004c.3.021.49.147.814.666l.16.269.184.331.103.191.784 1.487.209.374c.165.285.307.506.438.676.046.059.088.109.124.149l.124.124.028.022c.017 0 .044-.019.081-.057l.085-.1.108-.149.129-.197.148-.245.166-.291.089-.163.36-.7.404-.792.193-.364.172-.306c.408-.699.658-.904 1.048-.927l.08-.002z"
}))));
ImageBrokenD.displayName = "ImageBrokenD";
ImageBrokenD["iconName"] = "image-broken-D";
var ImageBrokenD_default = ImageBrokenD;

// src/icon/ImageBroken.tsx
import React325, { forwardRef as forwardRef275, memo as memo188 } from "react";
var ImageBroken = memo188(forwardRef275((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React325.createElement(ImageBrokenD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React325.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React325.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React325.createElement("path", {
    fill: "var(--color57, #a7aaae)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React325.createElement("path", {
    fill: "var(--color57, #a7aaae)",
    d: "M11.893 8.018L16.755 8l5.466 4.962-.024 8.878c0 .607-.204 1.118-.612 1.535s-.909.625-1.503.625h-8.154c-.594 0-1.095-.209-1.503-.625s-.612-.929-.612-1.535l-.035-11.661c0-.607.204-1.118.612-1.535s.909-.625 1.503-.625z"
  }), /* @__PURE__ */ React325.createElement("path", {
    fill: "var(--color82, #f1f1f2)",
    d: "M18.329 14.738c.585 0 .944.535 1.542 1.822l.627 1.388c.134.291.216.453.32.64.083.15.157.267.221.351l.057.069.027-.021c.255-.235.893-1.441 1.677-3.452l.195-.509.832.313-.323.84c-1.01 2.563-1.726 3.74-2.456 3.74l-.121-.005c-.444-.039-.66-.336-1.255-1.633l-.608-1.346-.151-.314c-.316-.637-.559-.994-.585-.994-.06 0-.34.43-.826 1.361l-.464.91c-.747 1.461-1.143 2.021-1.771 2.021-.595 0-1.021-.552-1.704-1.811l-.675-1.274c-.445-.822-.688-1.208-.702-1.208l-.008-.002c-.028-.016.01-.11-.16.161l-2.439 4.071-.763-.456 1.744-2.952c.081-.134.145-.241.188-.309l.211-.331c.502-.764.815-1.071 1.227-1.071l.113.004c.415.029.619.259 1.261 1.456l.784 1.487.209.374c.165.285.307.506.438.676.16.207.275.296.276.296.079 0 .382-.414.805-1.202l.36-.7.298-.587c.764-1.487 1.025-1.803 1.599-1.803z"
  }));
}));
ImageBroken.displayName = "ImageBroken";
ImageBroken["iconName"] = "image-broken";
var ImageBroken_default = ImageBroken;

// src/icon/ImagePreviewD.tsx
import React326, { forwardRef as forwardRef276, memo as memo189 } from "react";
var ImagePreviewD = memo189(forwardRef276((props, svgRef) => /* @__PURE__ */ React326.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React326.createElement("path", {
  fill: "var(--color14, #30323a)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React326.createElement("path", {
  fill: "var(--color15, #8f9199)",
  d: "M16.756 8l5.466 4.962-.024 8.878c0 .607-.204 1.118-.612 1.535s-.909.625-1.503.625h-8.154c-.594 0-1.095-.209-1.503-.625s-.612-.929-.612-1.535l-.035-11.661c0-.607.204-1.118.612-1.535s.909-.625 1.503-.625l4.862-.018z"
}), /* @__PURE__ */ React326.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M17.393 14.633l2.987 5.82-3.789-.001.012.015h-5.134l2.209-3.896 1.562 2.081 2.153-4.02zm-3.615-2.189a1.333 1.333 0 110 2.667 1.333 1.333 0 010-2.667z"
}))));
ImagePreviewD.displayName = "ImagePreviewD";
ImagePreviewD["iconName"] = "image-preview-D";
var ImagePreviewD_default = ImagePreviewD;

// src/icon/ImagePreview.tsx
import React327, { forwardRef as forwardRef277, memo as memo190 } from "react";
var ImagePreview = memo190(forwardRef277((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React327.createElement(ImagePreviewD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React327.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React327.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React327.createElement("path", {
    fill: "var(--color57, #a7aaae)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React327.createElement("path", {
    fill: "var(--color57, #a7aaae)",
    d: "M16.756 8l5.466 4.962-.024 8.878c0 .607-.204 1.118-.612 1.535s-.909.625-1.503.625h-8.154c-.594 0-1.095-.209-1.503-.625s-.612-.929-.612-1.535l-.035-11.661c0-.607.204-1.118.612-1.535s.909-.625 1.503-.625l4.862-.018zm.637 6.633l-2.153 4.02-1.562-2.081-2.209 3.896h5.134l-.012-.015 3.789.001-2.987-5.82zm-3.615-2.189a1.333 1.333 0 100 2.667 1.333 1.333 0 000-2.667z"
  }));
}));
ImagePreview.displayName = "ImagePreview";
ImagePreview["iconName"] = "image-preview";
var ImagePreview_default = ImagePreview;

// src/icon/InProgress.tsx
import React328, { forwardRef as forwardRef278, memo as memo191 } from "react";
var InProgress = memo191(forwardRef278((props, svgRef) => /* @__PURE__ */ React328.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React328.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-.117 7.073a.744.744 0 000 1.053l5.575 5.574H8.744a.745.745 0 100 1.49h12.712l-5.574 5.574a.744.744 0 101.053 1.053l6.846-6.846a.744.744 0 000-1.053l-6.846-6.846a.744.744 0 00-1.053 0z"
}))));
InProgress.displayName = "InProgress";
InProgress["iconName"] = "in-progress";
var InProgress_default = InProgress;

// src/icon/InboundCallOnBehalf.tsx
import React329, { forwardRef as forwardRef279, memo as memo192 } from "react";
var InboundCallOnBehalf = memo192(forwardRef279((props, svgRef) => /* @__PURE__ */ React329.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React329.createElement("path", {
  d: "M12 17c1.439 0 2.822.226 4.092.64a3.383 3.383 0 00-.114.775l-.001.175-.105.058c-.338.195-.64.447-.893.744A11.371 11.371 0 0012 19c-4.878 0-8.85 3.019-8.996 6.786L3 26l13.564.001a3.444 3.444 0 001.308 1.35l.106.058.001.175c.004.14.017.278.038.416H3.001a2 2 0 01-2-2c0-5.096 5.019-9 11-9zm18.701-1.701a1.02 1.02 0 010 1.443l-7.217 7.216 5.701.001a1.02 1.02 0 110 2.042H21.02a1.02 1.02 0 01-1.021-1.021v-8.165a1.02 1.02 0 112.042 0l-.001 5.7 7.217-7.216a1.02 1.02 0 011.443 0zM12 3a6 6 0 110 12 6 6 0 010-12zm0 2a4 4 0 100 8 4 4 0 000-8z"
}))));
InboundCallOnBehalf.displayName = "InboundCallOnBehalf";
InboundCallOnBehalf["iconName"] = "inbound_call_on_behalf";
var InboundCallOnBehalf_default = InboundCallOnBehalf;

// src/icon/InboundFaxBorder.tsx
import React330, { forwardRef as forwardRef280, memo as memo193 } from "react";
var InboundFaxBorder = memo193(forwardRef280((props, svgRef) => /* @__PURE__ */ React330.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React330.createElement("path", {
  d: "M23 4a1 1 0 010 2h-2v13.757c0 .796-.316 1.559-.879 2.121l-5.536 5.536a2 2 0 01-1.238.578l-.176.008H4.999a2 2 0 01-2-2V6h-2a1 1 0 010-2h22zm-4 2H5v19a1 1 0 001 1h6v-5a2 2 0 012-2h5V6zm-.83 15H15a1 1 0 00-1 1v3.17L18.17 21zm10.209-10.293a1 1 0 011.497 1.32l-.083.094L26.086 16l3.707 3.879a1 1 0 01-1.32 1.497l-.094-.083-4.586-4.586a1 1 0 01-.083-1.32l.083-.094 4.586-4.586zM15.167 14c.46 0 .833.448.833 1s-.373 1-.833 1H8.834c-.46 0-.833-.448-.833-1s.373-1 .833-1h6.333zm0-5c.46 0 .833.448.833 1s-.373 1-.833 1H8.834c-.46 0-.833-.448-.833-1s.373-1 .833-1h6.333z"
}))));
InboundFaxBorder.displayName = "InboundFaxBorder";
InboundFaxBorder["iconName"] = "inbound-fax_border";
var InboundFaxBorder_default = InboundFaxBorder;

// src/icon/InboundFax.tsx
import React331, { forwardRef as forwardRef281, memo as memo194 } from "react";
var InboundFax = memo194(forwardRef281((props, svgRef) => /* @__PURE__ */ React331.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React331.createElement("path", {
  d: "M23 4a1 1 0 010 2h-2v13h-7a2.001 2.001 0 00-1.995 1.851L12 21v7H5a2 2 0 01-2-2V6H1a1 1 0 010-2h22zm-2.272 17l-.025.058a3.003 3.003 0 01-.582.82l-5.536 5.536a2.022 2.022 0 01-.415.319l-.17.086V22a1 1 0 01.883-.993L15 21h5.728zm7.651-10.293a1 1 0 011.497 1.32l-.083.094L26.086 16l3.707 3.879a1 1 0 01-1.32 1.497l-.094-.083-4.586-4.586a1 1 0 01-.083-1.32l.083-.094 4.586-4.586zM15.167 14H8.834c-.46 0-.833.448-.833 1 0 .513.322.935.736.993l.097.007h6.333c.46 0 .833-.448.833-1s-.373-1-.833-1zm0-5H8.834c-.46 0-.833.448-.833 1 0 .513.322.935.736.993l.097.007h6.333c.46 0 .833-.448.833-1s-.373-1-.833-1z"
}))));
InboundFax.displayName = "InboundFax";
InboundFax["iconName"] = "inbound-fax";
var InboundFax_default = InboundFax;

// src/icon/Inbox.tsx
import React332, { forwardRef as forwardRef282, memo as memo195 } from "react";
var Inbox = memo195(forwardRef282((props, svgRef) => /* @__PURE__ */ React332.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React332.createElement("path", {
  d: "M30 25a2 2 0 01-2 2H4a2 2 0 01-2-2V14.333c0-.865.281-1.708.8-2.4L7.4 5.8A2 2 0 019 5h14c.63 0 1.222.296 1.6.8l4.6 6.133c.519.692.8 1.535.8 2.4V25zM11.1 15H4v9a1 1 0 001 1h22a1 1 0 001-1v-9h-7.1a5.002 5.002 0 01-9.752.212L11.1 15zm11.4-8h-13a1 1 0 00-.8.4l-3.96 5.28a.2.2 0 00.16.32H12a1 1 0 011 1 3 3 0 005.995.176l.012-.293A1 1 0 0120 13h7.1a.2.2 0 00.16-.32L23.3 7.4a1 1 0 00-.8-.4z"
}))));
Inbox.displayName = "Inbox";
Inbox["iconName"] = "inbox";
var Inbox_default = Inbox;

// src/icon/IncallBorder.tsx
import React333, { forwardRef as forwardRef283, memo as memo196 } from "react";
var IncallBorder = memo196(forwardRef283((props, svgRef) => /* @__PURE__ */ React333.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React333.createElement("path", {
  d: "M9.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.222-.218a5.112 5.112 0 01.716-.569 3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804c.346.29.722.603 1.129.938.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.008 6.008 0 01-1.828.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zM7.966 4.022c-.314.049-.8.222-1.451.538-.661.321-1.134.608-1.416.843-.548.46-.881 1.078-1.018 1.956-.16.934-.085 2.047.247 3.337.345 1.34.953 2.809 1.836 4.41.884 1.619 2.031 3.276 3.432 4.954a34.87 34.87 0 003.283 3.393 22.997 22.997 0 003.194 2.502c1.055.675 2.074 1.187 3.059 1.538.959.342 1.853.509 2.684.509.466 0 .872-.058 1.223-.17.274-.087.514-.206.768-.392l.155-.12c.275-.206.66-.595 1.112-1.142.391-.473.643-.844.765-1.097l.106-.236c.064-.128.078-.299.017-.53-.072-.27-.226-.504-.496-.726l-1.295-1.078-.817-.695a71.406 71.406 0 01-1.764-1.573l-.624-.582-.088-.088c-.138-.148-.36-.25-.681-.279a1.596 1.596 0 00-.827.134l-.119.063-.049.035a3.377 3.377 0 00-.189.145l-.079.069-.16.152-.227.231-.036.047-.09.104-.159.162-.157.172a1.998 1.998 0 01-2.3.472 6.246 6.246 0 01-.459-.233c-.46-.256-.934-.607-1.428-1.047a16.01 16.01 0 01-1.531-1.601 16.348 16.348 0 01-1.243-1.674 8.88 8.88 0 01-.691-1.286l-.073-.183a5.005 5.005 0 01-.292-.913 2 2 0 011.025-2.162l.25-.12.178-.098.111-.054.05-.036.143-.086c.134-.073.249-.143.346-.21l.175-.127.102-.083.049-.052c.16-.183.247-.349.289-.528l.02-.109a.87.87 0 00-.147-.621 52.75 52.75 0 01-1.763-2.705 34.089 34.089 0 01-1.299-2.338 1.447 1.447 0 00-.553-.588l-.12-.063a1.627 1.627 0 00-.976-.142zm21.741-1.729a.999.999 0 010 1.414l-7.072 7.07 5.586.001a1 1 0 010 2h-8a1 1 0 01-1-1v-8a1 1 0 012 0l-.001 5.585 7.072-7.07a.999.999 0 011.414 0z"
}))));
IncallBorder.displayName = "IncallBorder";
IncallBorder["iconName"] = "incall_border";
var IncallBorder_default = IncallBorder;

// src/icon/Incall.tsx
import React334, { forwardRef as forwardRef284, memo as memo197 } from "react";
var Incall = memo197(forwardRef284((props, svgRef) => /* @__PURE__ */ React334.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React334.createElement("path", {
  d: "M9.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.222-.218a5.112 5.112 0 01.716-.569 3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804c.346.29.722.603 1.129.938.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.008 6.008 0 01-1.828.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zm19.916-.06a.999.999 0 010 1.414l-7.072 7.07 5.586.001a1 1 0 010 2h-8a1 1 0 01-1-1v-8a1 1 0 012 0l-.001 5.585 7.072-7.07a.999.999 0 011.414 0z"
}))));
Incall.displayName = "Incall";
Incall["iconName"] = "incall";
var Incall_default = Incall;

// src/icon/Indent.tsx
import React335, { forwardRef as forwardRef285, memo as memo198 } from "react";
var Indent = memo198(forwardRef285((props, svgRef) => /* @__PURE__ */ React335.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React335.createElement("path", {
  d: "M27 24a1 1 0 010 2H5a1 1 0 010-2h22zM5.598 12.201l.174.114 3.737 2.73c.591.444.658 1.332.152 1.85l-.152.131-3.737 2.684c-.772.548-1.656.304-1.761-.611l-.01-.206v-5.748c-.01-1.043.784-1.413 1.598-.943zM27 15a1 1 0 010 2H13a1 1 0 010-2h14zm0-9a1 1 0 010 2H5a1 1 0 010-2h22z"
}))));
Indent.displayName = "Indent";
Indent["iconName"] = "indent";
var Indent_default = Indent;

// src/icon/Indeterminate.tsx
import React336, { forwardRef as forwardRef286, memo as memo199 } from "react";
var Indeterminate = memo199(forwardRef286((props, svgRef) => /* @__PURE__ */ React336.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React336.createElement("path", {
  d: "M27 2a3 3 0 013 3v22a3 3 0 01-3 3H5a3 3 0 01-3-3V5a3 3 0 013-3h22zm-3.333 12.667H8.334a1.333 1.333 0 00-.128 2.66l.128.006h15.333a1.333 1.333 0 00.128-2.66l-.128-.006z"
}))));
Indeterminate.displayName = "Indeterminate";
Indeterminate["iconName"] = "indeterminate";
var Indeterminate_default = Indeterminate;

// src/icon/InfoBorder.tsx
import React337, { forwardRef as forwardRef287, memo as memo200 } from "react";
var InfoBorder = memo200(forwardRef287((props, svgRef) => /* @__PURE__ */ React337.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React337.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm0 9a1 1 0 011 1v10a1 1 0 01-2 0V14a1 1 0 011-1zm0-6a2 2 0 11.001 3.999A2 2 0 0116 7z"
}))));
InfoBorder.displayName = "InfoBorder";
InfoBorder["iconName"] = "info_border";
var InfoBorder_default = InfoBorder;

// src/icon/Info.tsx
import React338, { forwardRef as forwardRef288, memo as memo201 } from "react";
var Info = memo201(forwardRef288((props, svgRef) => /* @__PURE__ */ React338.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React338.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 11a1 1 0 00-1 1v10a1 1 0 002 0V14a1 1 0 00-1-1zm0-6a2 2 0 10-.001 3.999A2 2 0 0016 7z"
}))));
Info.displayName = "Info";
Info["iconName"] = "info";
var Info_default = Info;

// src/icon/InsertCode.tsx
import React339, { forwardRef as forwardRef289, memo as memo202 } from "react";
var InsertCode = memo202(forwardRef289((props, svgRef) => /* @__PURE__ */ React339.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React339.createElement("path", {
  d: "M18.722 4.025a1 1 0 01.773 1.082l-.019.115-5 22a1 1 0 01-1.97-.329l.019-.115 5-22a.999.999 0 011.197-.753zm5.983 5.68l4.881 4.881a2 2 0 010 2.828l-4.881 4.881a.998.998 0 01-1.411-1.411l4.17-4.178a1 1 0 000-1.413l-4.17-4.178a.998.998 0 011.411-1.411zm-16 0a.999.999 0 01.001 1.411l-4.17 4.178a1 1 0 000 1.413l4.17 4.178a.998.998 0 01-1.411 1.411l-4.881-4.881a2 2 0 010-2.828l4.881-4.881a.998.998 0 011.41 0z"
}))));
InsertCode.displayName = "InsertCode";
InsertCode["iconName"] = "insert-code";
var InsertCode_default = InsertCode;

// src/icon/InsertImage.tsx
import React340, { forwardRef as forwardRef290, memo as memo203 } from "react";
var InsertImage = memo203(forwardRef290((props, svgRef) => /* @__PURE__ */ React340.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React340.createElement("path", {
  d: "M4 28a2 2 0 01-2-2V6a2 2 0 012-2h24a2 2 0 012 2v20a2 2 0 01-1.851 1.994L28 28H4zM27 6H5a1 1 0 00-1 1v18a1 1 0 001 1h1.585L17.42 15.166a3.999 3.999 0 015.111-.456l.173.127L28 18.955V7a1 1 0 00-1-1zm-8.035 10.461l-.13.119L9.415 26h17.586a1 1 0 001-.983v-3.528l-6.523-5.074a2 2 0 00-2.512.045zM10 9a3 3 0 110 6 3 3 0 010-6z"
}))));
InsertImage.displayName = "InsertImage";
InsertImage["iconName"] = "insert-image";
var InsertImage_default = InsertImage;

// src/icon/InsertLink.tsx
import React341, { forwardRef as forwardRef291, memo as memo204 } from "react";
var InsertLink = memo204(forwardRef291((props, svgRef) => /* @__PURE__ */ React341.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React341.createElement("path", {
  d: "M16.607 5.494a7 7 0 019.899 9.899l-2.364 2.367a9.05 9.05 0 00-.122-2.708l1.071-1.073a5 5 0 000-7.071 5 5 0 00-7.071 0l-4.243 4.243a5 5 0 002.828 8.485l-1.645 1.645a6.999 6.999 0 01-2.597-11.544l4.243-4.243zM6 16.101l2.364-2.367a9.05 9.05 0 00.122 2.708l-1.071 1.073a5 5 0 000 7.071 5 5 0 007.071 0l4.243-4.243a5 5 0 00-2.828-8.485l1.645-1.645a6.999 6.999 0 012.597 11.544L15.9 26a7 7 0 01-9.899-9.899z"
}))));
InsertLink.displayName = "InsertLink";
InsertLink["iconName"] = "insert-link";
var InsertLink_default = InsertLink;

// src/icon/InsertTable.tsx
import React342, { forwardRef as forwardRef292, memo as memo205 } from "react";
var InsertTable = memo205(forwardRef292((props, svgRef) => /* @__PURE__ */ React342.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React342.createElement("path", {
  d: "M28 4a2 2 0 012 2v20a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2h24zM11 15H4v10a1 1 0 001 1h6V15zm17 0H13v11h14a1 1 0 001-1V15zM5 6a1 1 0 00-1 1v6h7V6H5zm8 7h15V7a1 1 0 00-1-1H13v7z"
}))));
InsertTable.displayName = "InsertTable";
InsertTable["iconName"] = "insert-table";
var InsertTable_default = InsertTable;

// src/icon/InsertVideo.tsx
import React343, { forwardRef as forwardRef293, memo as memo206 } from "react";
var InsertVideo = memo206(forwardRef293((props, svgRef) => /* @__PURE__ */ React343.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React343.createElement("path", {
  d: "M28 4a2 2 0 012 2v20a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2h24zm-1 2H5a1 1 0 00-1 1v18a1 1 0 001 1h22a1 1 0 001-1V7a1 1 0 00-1-1zm-12.337 6.241l.109.074 3.737 2.73c.606.455.661 1.38.11 1.891l-.11.091-3.737 2.684c-.791.562-1.7.291-1.768-.681L13 18.893v-5.748c-.01-1.024.756-1.4 1.554-.967l.109.064z"
}))));
InsertVideo.displayName = "InsertVideo";
InsertVideo["iconName"] = "insert-video";
var InsertVideo_default = InsertVideo;

// src/icon/Italic.tsx
import React344, { forwardRef as forwardRef294, memo as memo207 } from "react";
var Italic = memo207(forwardRef294((props, svgRef) => /* @__PURE__ */ React344.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React344.createElement("path", {
  d: "M26 4a1 1 0 010 2h-6.237l-5.455 20H20a1 1 0 010 2H6a1 1 0 010-2h6.236L17.69 6H12a1 1 0 010-2h14z"
}))));
Italic.displayName = "Italic";
Italic["iconName"] = "italic";
var Italic_default = Italic;

// src/icon/ItemListSelected.tsx
import React345, { forwardRef as forwardRef295, memo as memo208 } from "react";
var ItemListSelected = memo208(forwardRef295((props, svgRef) => /* @__PURE__ */ React345.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React345.createElement("path", {
  fill: "var(--color58, #4475fd)",
  d: "M16 2.667C8.64 2.667 2.667 8.64 2.667 16S8.64 29.333 16 29.333 29.333 23.36 29.333 16 23.36 2.667 16 2.667zm-2.286 19.908L8 16.861l1.611-1.611 4.103 4.091 8.674-8.674 1.611 1.623-10.286 10.286z"
}))));
ItemListSelected.displayName = "ItemListSelected";
ItemListSelected["iconName"] = "item-list-selected";
var ItemListSelected_default = ItemListSelected;

// src/icon/JoinAudioPoc.tsx
import React346, { forwardRef as forwardRef296, memo as memo209 } from "react";
var JoinAudioPoc = memo209(forwardRef296((props, svgRef) => /* @__PURE__ */ React346.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React346.createElement("path", {
  d: "M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 00-1.993-.117L15 9l.001 5.999L9 15a1 1 0 00-.117 1.993L9 17l6.001-.001L15 23a1 1 0 001.993.117L17 23l.001-6.001L23 17a1 1 0 00.117-1.993L23 15l-5.999-.001z"
}))));
JoinAudioPoc.displayName = "JoinAudioPoc";
JoinAudioPoc["iconName"] = "join-audio-poc";
var JoinAudioPoc_default = JoinAudioPoc;

// src/icon/JoinMeeting.tsx
import React347, { forwardRef as forwardRef297, memo as memo210 } from "react";
var JoinMeeting = memo210(forwardRef297((props, svgRef) => /* @__PURE__ */ React347.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React347.createElement("path", {
  d: "M27.556 5.333A2.667 2.667 0 0130.223 8v16a2.667 2.667 0 01-2.667 2.667H8A2.667 2.667 0 015.333 24v-4.444h1.778V24c0 .456.343.832.785.883l.104.006h19.556a.889.889 0 00.883-.785l.006-.104V8a.889.889 0 00-.785-.883l-.104-.006H8a.889.889 0 00-.883.785L7.111 8v4.444H5.333V8A2.667 2.667 0 018 5.333h19.556zM12.597 11.34l3.619 3.619a.91.91 0 01.172.241.89.89 0 010 1.602.863.863 0 01-.171.241l-3.619 3.619a.889.889 0 01-1.257-1.257l2.513-2.515H2.667a.889.889 0 110-1.778h11.187l-2.513-2.514a.889.889 0 011.257-1.257z"
}))));
JoinMeeting.displayName = "JoinMeeting";
JoinMeeting["iconName"] = "join_meeting";
var JoinMeeting_default = JoinMeeting;

// src/icon/Join.tsx
import React348, { forwardRef as forwardRef298, memo as memo211 } from "react";
var Join = memo211(forwardRef298((props, svgRef) => /* @__PURE__ */ React348.createElement("svg", {
  viewBox: "0 0 27 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React348.createElement("path", {
  d: "M2.667 5.49h21.02a2.667 2.667 0 012.667 2.667v21.02a2.667 2.667 0 01-2.667 2.667H2.667A2.667 2.667 0 010 29.177V8.157A2.667 2.667 0 012.667 5.49zm.666 3.334V28.51h19.686V8.824H3.333zM13.176 0a5.49 5.49 0 015.49 5.49h-3.294a2.196 2.196 0 10-4.392 0H7.686A5.49 5.49 0 0113.176 0z"
}), /* @__PURE__ */ React348.createElement("path", {
  d: "M14.274 19.765a5.49 5.49 0 015.49 5.49h-2.196a3.294 3.294 0 00-3.294-3.294h-2.196a3.294 3.294 0 00-3.294 3.294H6.588l.007-.274a5.49 5.49 0 015.483-5.216zm-1.098-8.785a3.294 3.294 0 110 6.589 3.294 3.294 0 010-6.589zm0 2.196a1.099 1.099 0 10.001 2.197 1.099 1.099 0 00-.001-2.197z"
}))));
Join.displayName = "Join";
Join["iconName"] = "join";
var Join_default = Join;

// src/icon/JumpToLatest.tsx
import React349, { forwardRef as forwardRef299, memo as memo212 } from "react";
var JumpToLatest = memo212(forwardRef299((props, svgRef) => /* @__PURE__ */ React349.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React349.createElement("path", {
  d: "M6.101 17.101a.999.999 0 011.414 0L15 24.586V5a1 1 0 012 0v19.588l7.486-7.488a.999.999 0 111.414 1.414l-9.192 9.192a.999.999 0 01-1.414 0l-9.192-9.192a.999.999 0 010-1.414z"
}))));
JumpToLatest.displayName = "JumpToLatest";
JumpToLatest["iconName"] = "jump-to-latest";
var JumpToLatest_default = JumpToLatest;

// src/icon/JumpToUnread.tsx
import React350, { forwardRef as forwardRef300, memo as memo213 } from "react";
var JumpToUnread = memo213(forwardRef300((props, svgRef) => /* @__PURE__ */ React350.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React350.createElement("path", {
  d: "M6.101 14.899a.999.999 0 001.414 0L15 7.413v19.586a1 1 0 002 0V7.411l7.486 7.488a.999.999 0 101.414-1.414l-9.192-9.192a.999.999 0 00-1.414 0l-9.192 9.192a.999.999 0 000 1.414z"
}))));
JumpToUnread.displayName = "JumpToUnread";
JumpToUnread["iconName"] = "jump-to-unread";
var JumpToUnread_default = JumpToUnread;

// src/icon/Keypad.tsx
import React351, { forwardRef as forwardRef301, memo as memo214 } from "react";
var Keypad = memo214(forwardRef301((props, svgRef) => /* @__PURE__ */ React351.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React351.createElement("path", {
  d: "M7 22a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6zM7 13a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6zM7 4a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6zm9 0a3 3 0 110 6 3 3 0 010-6z"
}))));
Keypad.displayName = "Keypad";
Keypad["iconName"] = "keypad";
var Keypad_default = Keypad;

// src/icon/LeaveMeeting.tsx
import React352, { forwardRef as forwardRef302, memo as memo215 } from "react";
var LeaveMeeting = memo215(forwardRef302((props, svgRef) => /* @__PURE__ */ React352.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React352.createElement("path", {
  d: "M30.825 21.116a3.86 3.86 0 01-2.674.85l-.245-.026-5.332-.752c-1.588-.217-2.603-1.034-2.697-2.177l-.007-.193.012-.872c-.012-.608-.388-.945-1.403-1.042a30.137 30.137 0 00-2.5-.125 43.57 43.57 0 00-2.932.102c-.971.063-1.344.371-1.386.911l-.004.119.014.879c.032 1.172-.88 2.012-2.406 2.298l-.26.042-4.872.709c-1.326.187-2.23-.088-2.998-.72-.534-.44-.936-1.186-1.084-1.909l-.04-.24L0 18.691c-.003-1.909.587-3.357 2.115-4.616 3.28-2.703 7.246-4.015 13.718-4.074 6.49-.058 10.759 1.396 13.733 3.847 1.814 1.495 2.359 2.83 2.428 4.743l.007.307-.073.451c-.146.7-.543 1.306-1.102 1.767z"
}))));
LeaveMeeting.displayName = "LeaveMeeting";
LeaveMeeting["iconName"] = "leave-meeting";
var LeaveMeeting_default = LeaveMeeting;

// src/icon/Leave.tsx
import React353, { forwardRef as forwardRef303, memo as memo216 } from "react";
var Leave = memo216(forwardRef303((props, svgRef) => /* @__PURE__ */ React353.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React353.createElement("path", {
  d: "M11.272 2.688a4.5 4.5 0 015.231 6.274c.309.075.607.2.88.371l4.986-1.336a1.998 1.998 0 011.932.518l2.726 2.797a3 3 0 11-4.243 4.243l-1.094-1.164-1.011.271 2.849 4.747 3.028-.222.234-.009c.242-.005.566-.003.702.009 1.377.118 2.362.715 2.739 2.121a3 3 0 01-2.121 3.674l-6.258.784a1.001 1.001 0 01-.711-.182l-3.374-2.443-1.227.731.963 3.591a3 3 0 01-5.795 1.553L9.93 22.855a3 3 0 011.038-3.131c.137-.116.287-.223.449-.316l1.616-.88-.834-.986-.581.301c-.928.473-1.652.799-2.172.979-.936.323-2.188.514-3.099-.059a2.998 2.998 0 01-.806-.576l-2.958-3.356a3 3 0 114.243-4.243l1.867 1.689 2.037-1.078a4.5 4.5 0 01.543-8.51zm-7.276 9.314a1 1 0 00-.078 1.327l3.036 3.443c.054.054.112.1.173.139l.284.158a1 1 0 00.809.116l-.299.111.525-.207c.793-.31 1.999-.904 3.62-1.781a1 1 0 011.302.267l.064.099 1.825 2.704a1 1 0 01-.269 1.302l-.112.072-2.458 1.387a1.386 1.386 0 00-.208.153 1 1 0 00-.37.927l.024.117 1.778 6.161a1 1 0 001.956-.403l-.024-.114-1.159-4.322a1 1 0 01.477-1.131l2.565-1.338a.998.998 0 011.06.085l3.151 2.35c.213.159.48.226.743.188l5.182-.762a1 1 0 00.707-1.225c-.133-.495-.605-.776-1.111-.731l-1.902.146-2.031.149c-.472.061-.92-.082-1.14-.49l-5.46-9.523a1 1 0 00-1.262-.418l-.104.053-6.927 3.766-2.952-2.774a.999.999 0 00-1.414 0zm14.746-.964l.969 1.811 2.577-.689 1.911 1.98a.999.999 0 001.492-1.327l-.078-.087-2.726-2.797-4.145 1.109zM11.79 4.619a2.5 2.5 0 101.294 4.83 2.5 2.5 0 00-1.294-4.83z"
}))));
Leave.displayName = "Leave";
Leave["iconName"] = "leave";
var Leave_default = Leave;

// src/icon/ListBullet.tsx
import React354, { forwardRef as forwardRef304, memo as memo217 } from "react";
var ListBullet = memo217(forwardRef304((props, svgRef) => /* @__PURE__ */ React354.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React354.createElement("path", {
  d: "M6 23a2 2 0 11.001 3.999A2 2 0 016 23zm21 1a1 1 0 010 2H11a1 1 0 010-2h16zM6 14a2 2 0 11.001 3.999A2 2 0 016 14zm21 1a1 1 0 010 2H11a1 1 0 010-2h16zM6 5a2 2 0 11.001 3.999A2 2 0 016 5zm21 1a1 1 0 010 2H11a1 1 0 010-2h16z"
}))));
ListBullet.displayName = "ListBullet";
ListBullet["iconName"] = "list-bullet";
var ListBullet_default = ListBullet;

// src/icon/ListOrdered.tsx
import React355, { forwardRef as forwardRef305, memo as memo218 } from "react";
var ListOrdered = memo218(forwardRef305((props, svgRef) => /* @__PURE__ */ React355.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React355.createElement("path", {
  d: "M5.172 21.127c1.285 0 2.215.561 2.215 1.531 0 .715-.429 1.155-1.075 1.322l-.142.032v.041c.957.082 1.436.615 1.436 1.34 0 1.094-.916 1.791-2.434 1.791-1.053 0-2.256-.492-2.256-1.395 0-.369.26-.602.656-.602.219 0 .369.109.52.273.246.301.602.547 1.08.547.492 0 .875-.287.875-.711 0-.416-.303-.647-.866-.679l-.146-.004h-.219c-.342 0-.561-.205-.561-.52 0-.32.177-.507.462-.541l.099-.006h.205c.574 0 .93-.232.93-.629 0-.438-.328-.67-.793-.67-.328 0-.581.097-.834.368l-.095.11c-.178.219-.301.314-.574.314-.355 0-.602-.232-.602-.574 0-.848 1.094-1.34 2.119-1.34zm-.027-8.285c1.367 0 2.242.711 2.242 1.736 0 .702-.274 1.118-1.077 1.826l-.18.156-1.176.998v.041h2.064c.328 0 .561.219.561.588a.544.544 0 01-.468.554l-.092.007H3.601c-.397 0-.656-.26-.656-.629a.81.81 0 01.237-.6l.091-.084 1.764-1.518c.697-.588.875-.861.875-1.23 0-.396-.314-.684-.738-.684-.377 0-.645.151-.825.434l-.063.112c-.15.301-.342.396-.629.396-.383 0-.643-.205-.643-.602 0-.82.889-1.504 2.133-1.504zM27 24a1 1 0 010 2H11a1 1 0 010-2h16zm0-9a1 1 0 010 2H11a1 1 0 010-2h16zM5.596 4.543c.48 0 .819.28.869.731l.006.116v4.43c0 .533-.314.793-.779.793-.442 0-.732-.221-.774-.675l-.005-.118V6.074h-.027l-.684.492c-.219.15-.301.178-.465.178a.532.532 0 01-.547-.547c0-.223.1-.365.301-.522l.109-.08.984-.684c.301-.219.561-.369 1.012-.369zM27 6a1 1 0 010 2H11a1 1 0 010-2h16z"
}))));
ListOrdered.displayName = "ListOrdered";
ListOrdered["iconName"] = "list-ordered";
var ListOrdered_default = ListOrdered;

// src/icon/ListView.tsx
import React356, { forwardRef as forwardRef306, memo as memo219 } from "react";
var ListView = memo219(forwardRef306((props, svgRef) => /* @__PURE__ */ React356.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React356.createElement("path", {
  d: "M26.667 22.667a1.333 1.333 0 010 2.666H5.334a1.333 1.333 0 010-2.666h21.333zm0-8a1.333 1.333 0 010 2.666H5.334a1.333 1.333 0 010-2.666h21.333zm0-8a1.333 1.333 0 010 2.666H5.334a1.333 1.333 0 010-2.666h21.333z"
}))));
ListView.displayName = "ListView";
ListView["iconName"] = "list-view";
var ListView_default = ListView;

// src/icon/LocationBorder.tsx
import React357, { forwardRef as forwardRef307, memo as memo220 } from "react";
var LocationBorder = memo220(forwardRef307((props, svgRef) => /* @__PURE__ */ React357.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React357.createElement("path", {
  d: "M16 2c6.627 0 12 5.373 12 12 0 4.418-4 10.418-12 18C8 24.418 4 18.418 4 14 4 7.373 9.373 2 16 2zm0 2C10.477 4 6 8.477 6 14c0 3.433 3.233 8.527 9.801 15.024l.199.196.199-.196c6.442-6.372 9.675-11.395 9.797-14.824L26 14c0-5.523-4.477-10-10-10zm0 4a5 5 0 11-.001 10.001A5 5 0 0116 8zm0 2a3 3 0 100 6 3 3 0 000-6z"
}))));
LocationBorder.displayName = "LocationBorder";
LocationBorder["iconName"] = "location_border";
var LocationBorder_default = LocationBorder;

// src/icon/Location.tsx
import React358, { forwardRef as forwardRef308, memo as memo221 } from "react";
var Location = memo221(forwardRef308((props, svgRef) => /* @__PURE__ */ React358.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React358.createElement("path", {
  d: "M16 2c6.627 0 12 5.373 12 12 0 4.418-4 10.418-12 18C8 24.418 4 18.418 4 14 4 7.373 9.373 2 16 2zm0 7a4 4 0 100 8 4 4 0 000-8z"
}))));
Location.displayName = "Location";
Location["iconName"] = "location";
var Location_default = Location;

// src/icon/LockBorder.tsx
import React359, { forwardRef as forwardRef309, memo as memo222 } from "react";
var LockBorder = memo222(forwardRef309((props, svgRef) => /* @__PURE__ */ React359.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React359.createElement("path", {
  d: "M16 2a6 6 0 016 6l-.001 6H24a2 2 0 011.994 1.851L26 16v12a2 2 0 01-1.851 1.994L24 30H8a2.001 2.001 0 01-1.995-1.851L6 28V16c0-1.054.816-1.918 1.851-1.995L8 14h1.999L10 8a6 6 0 016-6zm7 14H9a1 1 0 00-.993.883L8 17v10a1 1 0 00.883.993L9 28h14a1 1 0 00.993-.883L24 27V17a1 1 0 00-.883-.993L23 16zm-7 3a1 1 0 011 1v4a1 1 0 01-2 0v-4a1 1 0 011-1zm0-15a4 4 0 00-3.995 3.8L12 8l-.001 6h8L20 8a4 4 0 00-3.8-3.995L16 4z"
}))));
LockBorder.displayName = "LockBorder";
LockBorder["iconName"] = "lock_border";
var LockBorder_default = LockBorder;

// src/icon/Lock.tsx
import React360, { forwardRef as forwardRef310, memo as memo223 } from "react";
var Lock = memo223(forwardRef310((props, svgRef) => /* @__PURE__ */ React360.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React360.createElement("path", {
  d: "M16 2a6 6 0 016 6l-.001 6H24a2 2 0 011.994 1.851L26 16v12a2 2 0 01-1.851 1.994L24 30H8a2.001 2.001 0 01-1.995-1.851L6 28V16c0-1.054.816-1.918 1.851-1.995L8 14h1.999L10 8a6 6 0 016-6zm0 17a1 1 0 00-.993.883L15 20v4a1 1 0 001.993.117L17 24v-4a1 1 0 00-1-1zm0-15a4 4 0 00-3.995 3.8L12 8l-.001 6h8L20 8a4 4 0 00-3.8-3.995L16 4z"
}))));
Lock.displayName = "Lock";
Lock["iconName"] = "lock";
var Lock_default = Lock;

// src/icon/Login.tsx
import React361, { forwardRef as forwardRef311, memo as memo224 } from "react";
var Login = memo224(forwardRef311((props, svgRef) => /* @__PURE__ */ React361.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React361.createElement("path", {
  d: "M27 29H12a2.002 2.002 0 01-2-2v-2a1 1 0 012 0v1a1 1 0 001 1h13a1 1 0 001-1V6a1 1 0 00-1-1H13a1 1 0 00-1 1v1a1 1 0 01-2 0V5a2.002 2.002 0 012-2h15a2.002 2.002 0 012 2v22a2.002 2.002 0 01-2 2zm-12.707-9.121L17.172 17H4a1 1 0 010-2h13.172l-2.879-2.879a1 1 0 011.414-1.414l4.586 4.586a.999.999 0 010 1.414l-4.586 4.586a1 1 0 01-1.414-1.414z"
}))));
Login.displayName = "Login";
Login["iconName"] = "login";
var Login_default = Login;

// src/icon/MacKeynoteD.tsx
import React362, { forwardRef as forwardRef312, memo as memo225 } from "react";
var MacKeynoteD = memo225(forwardRef312((props, svgRef) => /* @__PURE__ */ React362.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React362.createElement("path", {
  fill: "var(--color28, #223642)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React362.createElement("path", {
  fill: "var(--color29, #039dfa)",
  d: "M24.889 16a8.894 8.894 0 01-5.787 8.333 8.864 8.864 0 01-3.102.556 8.876 8.876 0 01-3.163-.579A8.89 8.89 0 1124.889 16z"
}), /* @__PURE__ */ React362.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M16.406 18.258v5.307c0 .4.319.724.713.724h1.911c.059 0 .116.015.165.041a8.67 8.67 0 01-3.07.558 8.68 8.68 0 01-3.13-.581.357.357 0 01.113-.019h1.911a.72.72 0 00.714-.724v-5.307h.673zm6.73-1.138a.678.678 0 01-.673.683H9.788a.678.678 0 01-.673-.683zm-7.533-8.724a.62.62 0 01.615.624v.133a.62.62 0 01-.615.624h-1.387a.616.616 0 01-.591-.452H11.89a.556.556 0 00-.551.559v.788h10.283c.367 0 .671.291.691.663l.298 5.33H9.525l.298-5.33a.697.697 0 01.691-.663h.412v-.788a.97.97 0 01.962-.976h1.722a.618.618 0 01.605-.512z"
}))));
MacKeynoteD.displayName = "MacKeynoteD";
MacKeynoteD["iconName"] = "mac-keynote-D";
var MacKeynoteD_default = MacKeynoteD;

// src/icon/MacKeynote.tsx
import React363, { forwardRef as forwardRef313, memo as memo226 } from "react";
var MacKeynote = memo226(forwardRef313((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React363.createElement(MacKeynoteD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React363.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React363.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React363.createElement("path", {
    fill: "var(--color29, #039dfa)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React363.createElement("path", {
    fill: "var(--color29, #039dfa)",
    d: "M24.889 16a8.894 8.894 0 01-5.787 8.333 8.864 8.864 0 01-3.102.556 8.876 8.876 0 01-3.163-.579A8.89 8.89 0 1124.889 16z"
  }), /* @__PURE__ */ React363.createElement("path", {
    fill: "var(--color56, #f2f2f2)",
    d: "M9.114 17.12c0 .377.301.683.673.683h12.675a.678.678 0 00.673-.683H9.114zM19.195 24.33a8.67 8.67 0 01-3.07.558 8.68 8.68 0 01-3.13-.581.357.357 0 01.113-.019h1.911a.72.72 0 00.714-.724v-5.307h.673v5.307c0 .4.319.724.713.724h1.911c.059 0 .116.015.165.041zM22.314 11.334a.697.697 0 00-.691-.663H11.34v-.788c0-.308.247-.559.551-.559h1.735c.074.261.31.452.591.452h1.387a.62.62 0 00.615-.624v-.133a.62.62 0 00-.615-.624h-1.387a.618.618 0 00-.605.512H11.89a.97.97 0 00-.962.976v.788h-.412a.696.696 0 00-.691.663l-.298 5.33h13.086l-.298-5.33z"
  }));
}));
MacKeynote.displayName = "MacKeynote";
MacKeynote["iconName"] = "mac-keynote";
var MacKeynote_default = MacKeynote;

// src/icon/MacNumbersD.tsx
import React364, { forwardRef as forwardRef314, memo as memo227 } from "react";
var MacNumbersD = memo227(forwardRef314((props, svgRef) => /* @__PURE__ */ React364.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React364.createElement("path", {
  fill: "var(--color25, #2a3d27)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React364.createElement("path", {
  fill: "var(--color26, #54cb43)",
  d: "M22.667 7.111c1.227 0 2.222.995 2.222 2.222v13.333a2.222 2.222 0 01-2.222 2.222H9.334a2.222 2.222 0 01-2.222-2.222V9.333c0-1.227.995-2.222 2.222-2.222h13.333z"
}), /* @__PURE__ */ React364.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M22.389 21v.556H9.611V21h12.778zm-3.333-10.556v10h-2.778v-10h2.778zm-6.667 8.334v1.667H9.611v-1.667h2.778zM15.722 16v4.444h-2.778V16h2.778zm6.667-2.778v7.222h-2.778v-7.222h2.778z"
}))));
MacNumbersD.displayName = "MacNumbersD";
MacNumbersD["iconName"] = "mac-numbers-D";
var MacNumbersD_default = MacNumbersD;

// src/icon/MacNumbers.tsx
import React365, { forwardRef as forwardRef315, memo as memo228 } from "react";
var MacNumbers = memo228(forwardRef315((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React365.createElement(MacNumbersD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React365.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React365.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React365.createElement("path", {
    fill: "var(--color26, #54cb43)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React365.createElement("path", {
    fill: "var(--color26, #54cb43)",
    d: "M22.667 7.111c1.227 0 2.222.995 2.222 2.222v13.333a2.222 2.222 0 01-2.222 2.222H9.334a2.222 2.222 0 01-2.222-2.222V9.333c0-1.227.995-2.222 2.222-2.222h13.333zM22.389 21H9.611v.556h12.778V21zm-10-2.222H9.611v1.667h2.778v-1.667zM15.722 16h-2.778v4.444h2.778V16zm3.334-5.556h-2.778v10h2.778v-10zm3.333 2.778h-2.778v7.222h2.778v-7.222z"
  }));
}));
MacNumbers.displayName = "MacNumbers";
MacNumbers["iconName"] = "mac-numbers";
var MacNumbers_default = MacNumbers;

// src/icon/MacPagesD.tsx
import React366, { forwardRef as forwardRef316, memo as memo229 } from "react";
var MacPagesD = memo229(forwardRef316((props, svgRef) => /* @__PURE__ */ React366.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React366.createElement("path", {
  fill: "var(--color30, #2f291e)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React366.createElement("path", {
  fill: "var(--color31, #ffbc31)",
  d: "M22.667 7.111c1.227 0 2.222.995 2.222 2.222v11.689H11.163a.191.191 0 00-.039.378l.038.004h13.726v1.263a2.222 2.222 0 01-2.222 2.222H9.333a2.222 2.222 0 01-2.222-2.222V9.334c0-1.227.995-2.222 2.222-2.222h13.333z"
}), /* @__PURE__ */ React366.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M24.889 21.022v.382L11.125 21.4a.19.19 0 01.039-.378H24.89zM11.537 19.85l.401.395-.496.289-.038.016a.154.154 0 01-.19-.184l.02-.049.303-.466zm7.809-8.311l.872.864-7.088 7.147c-.085.078-.176.15-.272.215l-.147.092-.627.325-.469-.466.344-.63.087-.127c.06-.083.124-.163.192-.239l.105-.111 7.002-7.07zm2.001-1.11a.61.61 0 01.076.781l-.07.086-.982.99-.873-.864.982-.99.054-.048a.612.612 0 01.814.045z"
}))));
MacPagesD.displayName = "MacPagesD";
MacPagesD["iconName"] = "mac-pages-D";
var MacPagesD_default = MacPagesD;

// src/icon/MacPages.tsx
import React367, { forwardRef as forwardRef317, memo as memo230 } from "react";
var MacPages = memo230(forwardRef317((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React367.createElement(MacPagesD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React367.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React367.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React367.createElement("path", {
    fill: "var(--color31, #ffbc31)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React367.createElement("path", {
    fill: "var(--color31, #ffbc31)",
    d: "M22.667 7.111c1.227 0 2.222.995 2.222 2.222v11.689H11.163a.191.191 0 00-.039.378l.038.004h13.726v1.263a2.222 2.222 0 01-2.222 2.222H9.333a2.222 2.222 0 01-2.222-2.222V9.334c0-1.227.995-2.222 2.222-2.222h13.333zM11.537 19.85l-.303.466a.157.157 0 00.022.194.154.154 0 00.148.04l.038-.016.496-.289-.401-.395zm7.809-8.311l-7.002 7.07a2.863 2.863 0 00-.298.351l-.087.127-.344.63.469.466.627-.325c.15-.087.291-.19.419-.308l.094-.091 6.994-7.057-.872-.864zm2.001-1.11a.612.612 0 00-.814-.045l-.054.048-.982.99.873.864.982-.99a.613.613 0 00-.005-.867z"
  }));
}));
MacPages.displayName = "MacPages";
MacPages["iconName"] = "mac-pages";
var MacPages_default = MacPages;

// src/icon/MarkerM.tsx
import React368, { forwardRef as forwardRef318, memo as memo231 } from "react";
var MarkerM = memo231(forwardRef318((props, svgRef) => /* @__PURE__ */ React368.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React368.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M15.76 28.205l.662-.632.675-.651c5.969-5.818 8.982-10.512 8.982-14.218 0-5.776-4.617-10.464-10.32-10.464S5.439 6.928 5.439 12.704c0 3.843 3.24 8.75 9.658 14.869l.662.632zm-8.4-15.501c0-4.722 3.764-8.544 8.4-8.544s8.4 3.822 8.4 8.544c0 2.982-2.679 7.203-8.091 12.538l-.309.303c-5.619-5.478-8.4-9.802-8.4-12.841z"
}), /* @__PURE__ */ React368.createElement("path", {
  fill: "var(--color80, #ffd800)",
  d: "M7.36 12.704c0-4.722 3.764-8.544 8.4-8.544s8.4 3.822 8.4 8.544c0 2.982-2.679 7.203-8.091 12.538l-.309.303c-5.619-5.478-8.4-9.802-8.4-12.841z"
}))));
MarkerM.displayName = "MarkerM";
MarkerM["iconName"] = "marker_m";
var MarkerM_default = MarkerM;

// src/icon/MarkerS.tsx
import React369, { forwardRef as forwardRef319, memo as memo232 } from "react";
var MarkerS = memo232(forwardRef319((props, svgRef) => /* @__PURE__ */ React369.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React369.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M14.671 28.015l1.079 1.032.69-.658C23.125 22.015 26.5 16.904 26.5 12.9 26.5 6.884 21.691 2 15.75 2S5 6.883 5 12.9c0 3.925 3.244 8.914 9.671 15.115zM7 12.9C7 7.981 10.921 4 15.75 4s8.75 3.981 8.75 8.9c0 3.098-2.775 7.479-8.38 13.013l-.37.363C9.897 20.57 7 16.065 7 12.9z"
}), /* @__PURE__ */ React369.createElement("path", {
  fill: "var(--color58, #4475fd)",
  d: "M7 12.9C7 7.981 10.921 4 15.75 4s8.75 3.981 8.75 8.9c0 3.098-2.775 7.479-8.38 13.013l-.37.363C9.897 20.57 7 16.065 7 12.9z"
}))));
MarkerS.displayName = "MarkerS";
MarkerS["iconName"] = "marker_s";
var MarkerS_default = MarkerS;

// src/icon/MemberBorder.tsx
import React370, { forwardRef as forwardRef320, memo as memo233 } from "react";
var MemberBorder = memo233(forwardRef320((props, svgRef) => /* @__PURE__ */ React370.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React370.createElement("path", {
  d: "M16 18c7.067 0 13 4.315 13 10a2 2 0 01-2 2H5a2 2 0 01-2-2c0-5.685 5.933-10 13-10zm0 2c-5.736 0-10.447 3.193-10.955 7.269-.063.503.17.731.567.731H26.53c.239 0 .48-.158.444-.551C26.585 23.288 21.82 20 16 20zm0-18a7 7 0 110 14 7 7 0 010-14zm0 2a5 5 0 10.001 10.001A5 5 0 0016 4z"
}))));
MemberBorder.displayName = "MemberBorder";
MemberBorder["iconName"] = "member_border";
var MemberBorder_default = MemberBorder;

// src/icon/MentionBorder.tsx
import React371, { forwardRef as forwardRef321, memo as memo234 } from "react";
var MentionBorder = memo234(forwardRef321((props, svgRef) => /* @__PURE__ */ React371.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React371.createElement("path", {
  d: "M2 16c0 8.366 6.205 14 14 14 2.107 0 4.113-.292 5.357-.698.876-.279 1.155-.736 1.155-1.206s-.368-.825-.838-.825c-.122 0-.276.016-.457.055l-.14.034c-1.549.381-2.882.635-4.672.635-6.944 0-12.223-4.745-12.223-11.918 0-6.868 5.063-12.083 11.791-12.083 5.954 0 12.007 4.007 12.007 10.596 0 3.847-2.371 6.599-4.466 6.599-1.396 0-2.184-.813-2.184-2.196v-8.607c0-.686-.381-1.104-1.028-1.104-.635 0-1.028.419-1.028 1.104v1.447h-.114c-.647-1.562-2.234-2.552-4.126-2.552-3.288 0-5.599 2.806-5.599 6.83 0 4.063 2.298 6.894 5.649 6.894 1.968 0 3.491-1.066 4.228-2.869h.114c.241 1.79 1.752 2.882 3.758 2.882 3.542 0 6.814-3.641 6.814-8.516 0-7.376-6.497-12.5-14-12.5-7.884 0-14 5.824-14 14zm13.313 5.25c-2.272 0-3.72-1.892-3.72-4.9 0-2.958 1.46-4.85 3.732-4.85 2.336 0 3.809 1.854 3.809 4.799 0 3.009-1.511 4.951-3.821 4.951z"
}))));
MentionBorder.displayName = "MentionBorder";
MentionBorder["iconName"] = "mention_border";
var MentionBorder_default = MentionBorder;

// src/icon/Mention.tsx
import React372, { forwardRef as forwardRef322, memo as memo235 } from "react";
var Mention = memo235(forwardRef322((props, svgRef) => /* @__PURE__ */ React372.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React372.createElement("path", {
  d: "M16 2c7.755 0 14 5.37 14 12.554 0 4.812-3.235 8.711-7.071 8.711-1.666 0-3.019-.715-3.692-1.915l-.1-.194-.03.046c-.807 1.176-2.027 1.895-3.489 2.027l-.261.017-.239.005c-3.525 0-5.948-2.964-5.948-7.147 0-4.133 2.424-7.086 5.899-7.086 1.279 0 2.439.429 3.296 1.179l.179.165.117.12.003-.051c.054-.746.51-1.276 1.199-1.39l.141-.017.147-.006c.856 0 1.426.564 1.486 1.412l.005.153v8.3c0 1.067.544 1.618 1.606 1.618 1.877 0 3.806-2.639 3.806-5.863 0-5.623-5.063-9.717-11.078-9.717-6.2 0-10.87 4.793-10.87 11.151 0 6.5 4.719 10.992 11.286 10.992 1.371 0 2.455-.143 3.965-.497l.569-.137a2.62 2.62 0 01.546-.065 1.29 1.29 0 011.308 1.296c0 .753-.5 1.333-1.459 1.638-1.31.428-3.32.698-5.321.698-7.986 0-14-5.844-14-14 0-8.064 6.024-14 14-14zm-.556 10.346c-1.884 0-3.098 1.567-3.098 4.149 0 2.628 1.201 4.197 3.086 4.197 1.924 0 3.184-1.62 3.184-4.246 0-2.568-1.223-4.1-3.171-4.1z"
}))));
Mention.displayName = "Mention";
Mention["iconName"] = "mention";
var Mention_default = Mention;

// src/icon/Merge.tsx
import React373, { forwardRef as forwardRef323, memo as memo236 } from "react";
var Merge = memo236(forwardRef323((props, svgRef) => /* @__PURE__ */ React373.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React373.createElement("path", {
  d: "M23.221 12.175c.312.457.108.828-.439.828h-5.074l.002.813c.008.593.036-.467-.015.708-.059 1.373.436 2.492 1.285 3.516.701.846 1.523 1.523 2.451 2.104.874.548 1.748 1.121 2.522 1.799 1.454 1.272 2.151 2.994 2.553 4.846.416 1.919.461 3.954.461 3.954a.482.482 0 01-.489.505h-2.432a.53.53 0 01-.514-.406l-.011-.087s-.03-1.06-.081-1.829c-.097-1.479-.27-1.465-.818-2.86a4.394 4.394 0 00-1.857-2.207c-.736-.449-1.474-.896-2.19-1.378-1.032-.696-1.871-1.595-2.576-2.659l-.092.094a.253.253 0 00-.033.042c-.848 1.289-1.978 2.272-3.285 3.062l-.824.505-.417.243c-1.212.676-1.901 1.739-2.264 3.051l-.238.867c-.268 1.005-.352 1.512-.38 2.753l-.006.326a.488.488 0 01-.496.474H5.495a.468.468 0 01-.471-.403l-.004-.089s.065-3.058.867-5.46c.64-1.919 1.848-3.386 3.534-4.467.436-.279.873-.557 1.323-.813 1.104-.63 1.956-1.527 2.687-2.55.53-.741.807-1.564.793-2.495l-.002-1.933H9.786c-.354 0-.463-.32-.357-.586l.022-.05 6.041-10.536c.254-.443.659-.472.938-.091l.738 1.209c2.41 3.898 6.051 9.198 6.051 9.198z"
}))));
Merge.displayName = "Merge";
Merge["iconName"] = "merge";
var Merge_default = Merge;

// src/icon/MicBorder.tsx
import React374, { forwardRef as forwardRef324, memo as memo237 } from "react";
var MicBorder = memo237(forwardRef324((props, svgRef) => /* @__PURE__ */ React374.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React374.createElement("path", {
  d: "M24 12a1 1 0 011 1v3c0 4.632-3.5 8.447-7.999 8.945L17 29a1 1 0 01-2 0v-4.055A9 9 0 017 16v-3a1 1 0 012 0v3a7 7 0 1014 0v-3a1 1 0 011-1zM16 2a5 5 0 015 5v9a5 5 0 01-10 0V7a5 5 0 015-5zm0 2a3 3 0 00-3 3v9a3 3 0 106 0V7a3 3 0 00-3-3z"
}))));
MicBorder.displayName = "MicBorder";
MicBorder["iconName"] = "mic_border";
var MicBorder_default = MicBorder;

// src/icon/MicOffBorder.tsx
import React375, { forwardRef as forwardRef325, memo as memo238 } from "react";
var MicOffBorder = memo238(forwardRef325((props, svgRef) => /* @__PURE__ */ React375.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React375.createElement("path", {
  d: "M24 12a1 1 0 011 1v3c0 4.632-3.5 8.447-7.999 8.945L17 29a1 1 0 01-2 0v-4.055a8.952 8.952 0 01-3.791-1.325l1.461-1.461A7 7 0 0023 16v-3a1 1 0 011-1zm5.435-8.021a.999.999 0 010 1.414L5.393 29.435a.999.999 0 11-1.414-1.414L28.021 3.979a.999.999 0 011.414 0zM21 13.828V16a5 5 0 01-6.827 4.656l1.661-1.66.165.004a3 3 0 003-3v-.172l2-2zM8 12a1 1 0 011 1v3c0 1.206.305 2.341.842 3.332l-1.462 1.46A8.961 8.961 0 017 16v-3a1 1 0 011-1zm8-10a5 5 0 015 5v1.172l-2 2V7a3 3 0 10-6 0v9l.005.167-1.66 1.662A4.978 4.978 0 0111 16V7a5 5 0 015-5z"
}))));
MicOffBorder.displayName = "MicOffBorder";
MicOffBorder["iconName"] = "mic-off_border";
var MicOffBorder_default = MicOffBorder;

// src/icon/MicOff.tsx
import React376, { forwardRef as forwardRef326, memo as memo239 } from "react";
var MicOff = memo239(forwardRef326((props, svgRef) => /* @__PURE__ */ React376.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React376.createElement("path", {
  d: "M24 12a1 1 0 011 1v3c0 4.632-3.5 8.447-7.999 8.945L17 29a1 1 0 01-2 0v-4.055a8.952 8.952 0 01-3.791-1.325l1.461-1.461A7 7 0 0023 16v-3a1 1 0 011-1zm5.435-8.021a.999.999 0 010 1.414L5.393 29.435a.999.999 0 11-1.414-1.414L28.021 3.979a.999.999 0 011.414 0zM21 13.828V16a5 5 0 01-6.827 4.656L21 13.828zM8 12a1 1 0 011 1v3c0 1.206.305 2.341.842 3.332l-1.462 1.46A8.961 8.961 0 017 16v-3a1 1 0 011-1zm8-10a5 5 0 015 5v1.172l-9.655 9.656A4.978 4.978 0 0111 15.999v-9a5 5 0 015-5z"
}))));
MicOff.displayName = "MicOff";
MicOff["iconName"] = "mic-off";
var MicOff_default = MicOff;

// src/icon/Mic.tsx
import React377, { forwardRef as forwardRef327, memo as memo240 } from "react";
var Mic = memo240(forwardRef327((props, svgRef) => /* @__PURE__ */ React377.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React377.createElement("path", {
  d: "M24 12a1 1 0 011 1v3c0 4.632-3.5 8.447-7.999 8.945L17 29a1 1 0 01-2 0v-4.055A9 9 0 017 16v-3a1 1 0 012 0v3a7 7 0 1014 0v-3a1 1 0 011-1zM16 2a5 5 0 015 5v9a5 5 0 01-10 0V7a5 5 0 015-5z"
}))));
Mic.displayName = "Mic";
Mic["iconName"] = "mic";
var Mic_default = Mic;

// src/icon/MicrosoftLogoDisabled.tsx
import React378, { forwardRef as forwardRef328, memo as memo241 } from "react";
var MicrosoftLogoDisabled = memo241(forwardRef328((props, svgRef) => /* @__PURE__ */ React378.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React378.createElement("path", {
  d: "M15.403 15.403H4V4h11.403zM27.997 15.403H16.592V4h11.403v11.403zM15.403 28H4V16.597h11.403zM27.997 28H16.592V16.597h11.403V28z"
}))));
MicrosoftLogoDisabled.displayName = "MicrosoftLogoDisabled";
MicrosoftLogoDisabled["iconName"] = "microsoft-logo-disabled";
var MicrosoftLogoDisabled_default = MicrosoftLogoDisabled;

// src/icon/MicrosoftLogo.tsx
import React379, { forwardRef as forwardRef329, memo as memo242 } from "react";
var MicrosoftLogo = memo242(forwardRef329((props, svgRef) => /* @__PURE__ */ React379.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React379.createElement("path", {
  fill: "var(--color49, #f1511b)",
  d: "M15.403 15.403H4V4h11.403z"
}), /* @__PURE__ */ React379.createElement("path", {
  fill: "var(--color50, #80cc28)",
  d: "M27.997 15.403H16.592V4h11.403v11.403z"
}), /* @__PURE__ */ React379.createElement("path", {
  fill: "var(--color51, #00adef)",
  d: "M15.403 28H4V16.597h11.403z"
}), /* @__PURE__ */ React379.createElement("path", {
  fill: "var(--color52, #fbbc09)",
  d: "M27.997 28H16.592V16.597h11.403V28z"
}))));
MicrosoftLogo.displayName = "MicrosoftLogo";
MicrosoftLogo["iconName"] = "microsoft-logo";
var MicrosoftLogo_default = MicrosoftLogo;

// src/icon/MicrosoftOutlook2019.tsx
import React380, { forwardRef as forwardRef330, memo as memo243 } from "react";
var MicrosoftOutlook2019 = memo243(forwardRef330((props, svgRef) => /* @__PURE__ */ React380.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color65, #1a237e)",
  d: "M30.005 15.68l-5.116-2.98v8.281h5.396v-4.813a.567.567 0 00-.281-.489z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color66, #0c4999)",
  d: "M23.085 5.029h6.461v-.791c0-.684-.554-1.237-1.236-1.237H11.476c-.683 0-1.237.554-1.237 1.237v.791h12.846z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color67, #0f73d9)",
  d: "M23.085 22.659h5.224c.683 0 1.237-.554 1.237-1.237v-4.876h-6.461v6.114z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color68, #0f439d)",
  d: "M10.24 16.546v4.876c0 .683.554 1.237 1.237 1.237h5.195v-6.113l-6.432-.001z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color69, #2ecdfd)",
  d: "M23.085 5.029h6.461v5.734h-6.461z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color70, #1c5fb0)",
  d: "M10.24 5.029h6.432v5.734H10.24z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color71, #1467c7)",
  d: "M16.671 16.546h6.414v6.113h-6.414z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color72, #1690d5)",
  d: "M16.671 5.029h6.414v5.734h-6.414z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color73, #1bb4ff)",
  d: "M23.085 10.762h6.461v5.783h-6.461z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color74, #074daf)",
  d: "M10.24 10.762h6.432v5.783H10.24z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color75, #2076d4)",
  d: "M16.671 10.762h6.414v5.783h-6.414z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color76, #2ed0ff)",
  d: "M9.886 28.714h19.193c.666 0 1.206-.54 1.206-1.206V16.17s-.021.47-1.251 1.155c-.929.517-19.646 11.079-19.646 11.079s.167.31.498.31z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color77, #139fe2)",
  d: "M29.056 28.712l-18.993.002c-.666 0-1.206-.54-1.206-1.206V16.619l20.974 11.83c-.175.14-.397.263-.774.263z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color78, #00488d)",
  d: "M14.799 23H2.915a1.201 1.201 0 01-1.201-1.201V9.915c0-.663.538-1.201 1.201-1.201h11.884c.663 0 1.201.538 1.201 1.201v11.884c0 .663-.538 1.201-1.201 1.201z"
}), /* @__PURE__ */ React380.createElement("path", {
  fill: "var(--color3, #fff)",
  d: "M8.796 12.096c-2.236 0-3.584 1.709-3.584 3.816s1.342 3.816 3.584 3.816 3.584-1.709 3.584-3.816-1.347-3.816-3.584-3.816zm0 6.344c-1.269 0-2.027-1.131-2.027-2.528s.762-2.528 2.027-2.528c1.265 0 2.028 1.132 2.028 2.528s-.76 2.528-2.028 2.528z"
}))));
MicrosoftOutlook2019.displayName = "MicrosoftOutlook2019";
MicrosoftOutlook2019["iconName"] = "microsoft-outlook-2019";
var MicrosoftOutlook2019_default = MicrosoftOutlook2019;

// src/icon/Minimize.tsx
import React381, { forwardRef as forwardRef331, memo as memo244 } from "react";
var Minimize = memo244(forwardRef331((props, svgRef) => /* @__PURE__ */ React381.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React381.createElement("path", {
  d: "M5.333 18v-4h21.333v4z"
}))));
Minimize.displayName = "Minimize";
Minimize["iconName"] = "minimize";
var Minimize_default = Minimize;

// src/icon/MissedcallBorder.tsx
import React382, { forwardRef as forwardRef332, memo as memo245 } from "react";
var MissedcallBorder = memo245(forwardRef332((props, svgRef) => /* @__PURE__ */ React382.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React382.createElement("path", {
  d: "M9.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.272-.265.049-.045c.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804 1.129.938c.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.01 6.01 0 01-1.829.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zM7.966 4.022c-.314.049-.8.222-1.451.538-.661.321-1.134.608-1.416.843-.548.46-.881 1.078-1.018 1.956-.16.934-.085 2.047.247 3.337.345 1.34.953 2.809 1.836 4.41.884 1.619 2.031 3.276 3.432 4.954a34.87 34.87 0 003.283 3.393 22.997 22.997 0 003.194 2.502c1.055.675 2.074 1.187 3.059 1.538.959.342 1.853.509 2.684.509.466 0 .872-.058 1.223-.17.274-.087.514-.206.768-.392l.155-.12c.275-.206.66-.595 1.112-1.142.391-.473.643-.844.765-1.097l.106-.236c.064-.128.078-.299.017-.53-.072-.27-.226-.504-.496-.726l-1.295-1.078-.817-.695-.471-.41a71.406 71.406 0 01-1.293-1.163l-.624-.582-.088-.088c-.138-.148-.36-.25-.681-.279a1.596 1.596 0 00-.827.134l-.119.063-.049.035a3.377 3.377 0 00-.189.145l-.079.069-.16.152-.227.231-.036.047-.09.104-.159.162-.157.172a1.998 1.998 0 01-2.3.472 6.246 6.246 0 01-.459-.233c-.46-.256-.934-.607-1.428-1.047a16.01 16.01 0 01-1.531-1.601 16.348 16.348 0 01-1.243-1.674 8.88 8.88 0 01-.691-1.286l-.073-.183a5.005 5.005 0 01-.292-.913 2 2 0 011.025-2.162l.25-.12.178-.098.111-.054.05-.036.143-.086c.134-.073.249-.143.346-.21l.175-.127.102-.083.049-.052c.16-.183.247-.349.289-.528l.02-.109a.87.87 0 00-.147-.621 52.75 52.75 0 01-1.763-2.705 34.089 34.089 0 01-1.299-2.338 1.447 1.447 0 00-.553-.588l-.12-.063a1.627 1.627 0 00-.976-.142zm13.241-1.729l3.536 3.535 3.535-3.535a.999.999 0 111.414 1.414l-3.535 3.535 3.535 3.536a.999.999 0 11-1.414 1.414l-3.535-3.536-3.536 3.536a.999.999 0 11-1.414-1.414l3.536-3.536-3.536-3.535a.999.999 0 111.414-1.414z"
}))));
MissedcallBorder.displayName = "MissedcallBorder";
MissedcallBorder["iconName"] = "missedcall_border";
var MissedcallBorder_default = MissedcallBorder;

// src/icon/Missedcall.tsx
import React383, { forwardRef as forwardRef333, memo as memo246 } from "react";
var Missedcall = memo246(forwardRef333((props, svgRef) => /* @__PURE__ */ React383.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React383.createElement("path", {
  d: "M9.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.272-.265.049-.045c.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804 1.129.938c.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.01 6.01 0 01-1.829.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zm11.416-.06l3.536 3.535 3.535-3.535a.999.999 0 111.414 1.414l-3.535 3.535 3.535 3.536a.999.999 0 11-1.414 1.414l-3.535-3.536-3.536 3.536a.999.999 0 11-1.414-1.414l3.536-3.536-3.536-3.535a.999.999 0 111.414-1.414z"
}))));
Missedcall.displayName = "Missedcall";
Missedcall["iconName"] = "missedcall";
var Missedcall_default = Missedcall;

// src/icon/Mobile.tsx
import React384, { forwardRef as forwardRef334, memo as memo247 } from "react";
var Mobile = memo247(forwardRef334((props, svgRef) => /* @__PURE__ */ React384.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React384.createElement("path", {
  d: "M9.571 2l12.857.013c1.358 0 2.478 1.044 2.566 2.366l.006.167v22.909c0 1.344-1.066 2.453-2.403 2.54l-.168.005H9.572c-1.358 0-2.478-1.056-2.566-2.379l-.005-.167V4.545c0-1.344 1.066-2.453 2.403-2.54L9.572 2zM22 4H10a1 1 0 00-.993.883L9 5v22a1 1 0 00.883.993L10 28h12a1 1 0 00.993-.883L23 27V5a1 1 0 00-.883-.993L22 4zm-4 20a1 1 0 010 2h-4a1 1 0 010-2h4z"
}))));
Mobile.displayName = "Mobile";
Mobile["iconName"] = "mobile";
var Mobile_default = Mobile;

// src/icon/MonitorCall.tsx
import React385, { forwardRef as forwardRef335, memo as memo248 } from "react";
var MonitorCall = memo248(forwardRef335((props, svgRef) => /* @__PURE__ */ React385.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React385.createElement("path", {
  d: "M17 24a3 3 0 110 6h-2a3 3 0 110-6h2zm1-22a8 8 0 018 8v1h1a3 3 0 012.995 2.824L30 14v4a3 3 0 01-3 3h-1v3a4 4 0 01-4 4h-2v-2.001L22 26a2 2 0 001.994-1.851L24 24V10a6 6 0 00-5.775-5.996L18 4h-4a6 6 0 00-5.996 5.775L8 10v11H5a3 3 0 01-3-3v-4a3 3 0 013-3h1v-1a8 8 0 018-8h4zm-1 24h-2a1 1 0 00-.117 1.993L15 28h2a1 1 0 00.117-1.993L17 26zM6 13H5a1 1 0 00-.993.883L4 14v4a1 1 0 00.883.993L5 19h1v-6zm21 0h-1v6h1l.117-.007A1 1 0 0028 18v-4l-.007-.117A1 1 0 0027 13z"
}))));
MonitorCall.displayName = "MonitorCall";
MonitorCall["iconName"] = "monitor_call";
var MonitorCall_default = MonitorCall;

// src/icon/MoreHoriz.tsx
import React386, { forwardRef as forwardRef336, memo as memo249 } from "react";
var MoreHoriz = memo249(forwardRef336((props, svgRef) => /* @__PURE__ */ React386.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React386.createElement("path", {
  d: "M9 16a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm9.5 0a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm9.5 0a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
}))));
MoreHoriz.displayName = "MoreHoriz";
MoreHoriz["iconName"] = "more_horiz";
var MoreHoriz_default = MoreHoriz;

// src/icon/MoreVert.tsx
import React387, { forwardRef as forwardRef337, memo as memo250 } from "react";
var MoreVert = memo250(forwardRef337((props, svgRef) => /* @__PURE__ */ React387.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React387.createElement("path", {
  d: "M16 23a2.5 2.5 0 110 5 2.5 2.5 0 010-5zm0-9.5a2.5 2.5 0 110 5 2.5 2.5 0 010-5zM16 4a2.5 2.5 0 110 5 2.5 2.5 0 010-5z"
}))));
MoreVert.displayName = "MoreVert";
MoreVert["iconName"] = "more_vert";
var MoreVert_default = MoreVert;

// src/icon/MuteNotificationBorder.tsx
import React388, { forwardRef as forwardRef338, memo as memo251 } from "react";
var MuteNotificationBorder = memo251(forwardRef338((props, svgRef) => /* @__PURE__ */ React388.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React388.createElement("path", {
  d: "M24.574 10.255c.277.865.426 1.787.426 2.745v3.264c0 1.34.449 2.642 1.275 3.698l2.195 2.805A2 2 0 0126.895 26l-5.995.001a5.002 5.002 0 01-9.8 0H8.827L10.828 24h16.066l-2.195-2.805a8.001 8.001 0 01-1.7-4.93v-3.264c0-.369-.029-.732-.084-1.086l1.658-1.659zm4.861-6.276a.999.999 0 010 1.414L5.393 29.435a.999.999 0 11-1.414-1.414L28.021 3.979a.999.999 0 011.414 0zM18.829 26.001h-5.658a3 3 0 005.658 0zM16 2a1 1 0 011 1l.001 1.055a8.975 8.975 0 015.449 2.668l-1.414 1.415A7 7 0 009 13v3.264a7.995 7.995 0 01-1.7 4.93l-2.195 2.805h.067l-1.447 1.448a2.003 2.003 0 01-.195-2.681l2.195-2.805A6 6 0 007 16.263v-3.264a9 9 0 018-8.945V2.999a1 1 0 011-1z"
}))));
MuteNotificationBorder.displayName = "MuteNotificationBorder";
MuteNotificationBorder["iconName"] = "mute-notification_border";
var MuteNotificationBorder_default = MuteNotificationBorder;

// src/icon/MuteNotification.tsx
import React389, { forwardRef as forwardRef339, memo as memo252 } from "react";
var MuteNotification = memo252(forwardRef339((props, svgRef) => /* @__PURE__ */ React389.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React389.createElement("path", {
  d: "M25 13v3.264c0 1.34.449 2.642 1.275 3.698l2.195 2.805A2 2 0 0126.895 26l-5.995.001a5.002 5.002 0 01-9.8 0H8.827l15.746-15.746c.277.865.426 1.787.426 2.745zm4.435-9.021a.999.999 0 010 1.414L5.393 29.435a.999.999 0 11-1.414-1.414L28.021 3.979a.999.999 0 011.414 0zM18.829 26.001h-5.658a3 3 0 005.658 0zM16 2a1 1 0 011 1l.001 1.055a8.975 8.975 0 015.449 2.668L3.725 25.448a2.003 2.003 0 01-.195-2.681l2.195-2.805A6 6 0 007 16.264V13a9 9 0 018-8.945V3a1 1 0 011-1z"
}))));
MuteNotification.displayName = "MuteNotification";
MuteNotification["iconName"] = "mute-notification";
var MuteNotification_default = MuteNotification;

// src/icon/NewAction.tsx
import React390, { forwardRef as forwardRef340, memo as memo253 } from "react";
var NewAction = memo253(forwardRef340((props, svgRef) => /* @__PURE__ */ React390.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React390.createElement("path", {
  d: "M16 3a1.5 1.5 0 011.5 1.5v10h10a1.5 1.5 0 010 3H17.499l.001 10a1.5 1.5 0 01-3 0l-.001-10H4.5a1.5 1.5 0 010-3h10v-10A1.5 1.5 0 0116 3z"
}))));
NewAction.displayName = "NewAction";
NewAction["iconName"] = "new-action";
var NewAction_default = NewAction;

// src/icon/NewFax.tsx
import React391, { forwardRef as forwardRef341, memo as memo254 } from "react";
var NewFax = memo254(forwardRef341((props, svgRef) => /* @__PURE__ */ React391.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React391.createElement("path", {
  d: "M22.999 18a1 1 0 011 1v4h4a1 1 0 010 2h-4.001l.001 4a1 1 0 01-2 0l-.001-4h-3.999a1 1 0 010-2h4v-4a1 1 0 011-1zM29 3a1 1 0 010 2h-2v12a1 1 0 01-2 0V5H7v21a1 1 0 001 1h8a1 1 0 010 2H7a2 2 0 01-2-2V5H3a1 1 0 010-2h26zm-8 11a1 1 0 010 2H11a1 1 0 010-2h10zm0-6a1 1 0 010 2H11a1 1 0 010-2h10z"
}))));
NewFax.displayName = "NewFax";
NewFax["iconName"] = "new-fax";
var NewFax_default = NewFax;

// src/icon/NewFile.tsx
import React392, { forwardRef as forwardRef342, memo as memo255 } from "react";
var NewFile = memo255(forwardRef342((props, svgRef) => /* @__PURE__ */ React392.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React392.createElement("path", {
  d: "M24 17a1 1 0 011 1v4h4a1 1 0 010 2h-4.001L25 28a1 1 0 01-2 0l-.001-4H19a1 1 0 010-2h4v-4a1 1 0 011-1zM11.821 3a2 2 0 011.459.632l1.923 2.052a.996.996 0 00.612.309l.118.007H28a2 2 0 012 2l.001 9.71a8.05 8.05 0 00-2-1.639L28 13H4v11a1 1 0 001 1h11.252c.183.71.46 1.382.819 2.001L4 27a2 2 0 01-2-2V5a2 2 0 012-2h7.821zm-.866 2H5a1 1 0 00-1 1v5h24V9a1 1 0 00-1-1l-11.419-.021a2.998 2.998 0 01-1.836-.928l-1.33-1.419A2 2 0 0010.956 5z"
}))));
NewFile.displayName = "NewFile";
NewFile["iconName"] = "new-file";
var NewFile_default = NewFile;

// src/icon/NewNote.tsx
import React393, { forwardRef as forwardRef343, memo as memo256 } from "react";
var NewNote = memo256(forwardRef343((props, svgRef) => /* @__PURE__ */ React393.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React393.createElement("path", {
  d: "M15.999 2c6.525 0 11.834 5.209 11.996 11.695l.004.305v3a1 1 0 01-1.993.117L25.999 17v-3c0-5.429-4.327-9.848-9.72-9.996L15.999 4H7a1 1 0 00-1 1v22a1 1 0 001 1h8.999a1 1 0 01.117 1.993l-.117.007H6a2 2 0 01-2-2V4a2 2 0 012-2h9.999zm7 16a1 1 0 011 1v4h4a1 1 0 010 2h-4.001l.001 4a1 1 0 01-2 0l-.001-4h-3.999a1 1 0 010-2h4v-4a1 1 0 011-1zm-7-1l.117.007a1 1 0 010 1.986l-.117.007h-4.997l-.117-.007a1 1 0 010-1.986l.117-.007h4.997zm5-6l.117.007a1 1 0 010 1.986l-.117.007-10.113-.007a1 1 0 010-1.986l.117-.007H21z"
}))));
NewNote.displayName = "NewNote";
NewNote["iconName"] = "new-note";
var NewNote_default = NewNote;

// src/icon/Nickname.tsx
import React394, { forwardRef as forwardRef344, memo as memo257 } from "react";
var Nickname = memo257(forwardRef344((props, svgRef) => /* @__PURE__ */ React394.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React394.createElement("path", {
  d: "M13 17c1.722 0 3.365.324 4.831.907a8.026 8.026 0 00-1.09 1.726A11.152 11.152 0 0013 19.001c-4.709 0-8.573 2.812-8.967 6.395-.05.451.335.605.519.605l12.029.001a8.01 8.01 0 001.173 2l-13.755-.001a2 2 0 01-2-2c0-5.096 5.019-9 11-9zm16 9a1 1 0 010 2h-8a1 1 0 010-2h8zm-4-4a1 1 0 010 2h-4a1 1 0 010-2h4zm4-4a1 1 0 010 2h-8a1 1 0 010-2h8zM13 3a6 6 0 110 12 6 6 0 010-12zm0 2a4 4 0 100 8 4 4 0 000-8z"
}))));
Nickname.displayName = "Nickname";
Nickname["iconName"] = "nickname";
var Nickname_default = Nickname;

// src/icon/NoAudio.tsx
import React395, { forwardRef as forwardRef345, memo as memo258 } from "react";
var NoAudio = memo258(forwardRef345((props, svgRef) => /* @__PURE__ */ React395.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React395.createElement("path", {
  d: "M18.479 4.534c.333.342.521.805.521 1.288v20.356C19 27.184 18.204 28 17.222 28c-.471 0-.924-.192-1.257-.534l-6.854-6H3.778C2.796 21.466 2 20.65 2 19.644v-7.288c0-1.006.796-1.822 1.778-1.822h5.333l6.854-6a1.746 1.746 0 012.514 0zm4.693 7.223l2.83 2.828 2.827-2.828a.999.999 0 111.414 1.414l-2.827 2.828 2.827 2.828a.999.999 0 11-1.414 1.414l-2.827-2.828-2.83 2.828a.999.999 0 11-1.414-1.414l2.83-2.828-2.83-2.828a.999.999 0 111.414-1.414z"
}))));
NoAudio.displayName = "NoAudio";
NoAudio["iconName"] = "no-audio";
var NoAudio_default = NoAudio;

// src/icon/NoConnection.tsx
import React396, { forwardRef as forwardRef346, memo as memo259 } from "react";
var NoConnection = memo259(forwardRef346((props, svgRef) => /* @__PURE__ */ React396.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React396.createElement("path", {
  fill: "var(--color18, #000)",
  opacity: 0.32,
  d: "M27 4a2 2 0 012 2v20a2 2 0 01-2 2h-2a2 2 0 01-2-2V6a2 2 0 012-2h2zM17 14a2 2 0 012 2v10a2 2 0 01-2 2h-2a2 2 0 01-2-2v-8.634l2.191 2.165a1.593 1.593 0 002.257 0l1.069-1.058.092-.103.098-.136c.456-.695.372-1.634-.218-2.218l-2.039-2.017h.551zM7 20a2 2 0 012 2v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4a2 2 0 012-2h2zm8.026-6l2.759 2.727a.769.769 0 01.053 1.005l-.025.031-1.068 1.058a.593.593 0 01-.851 0l-2.893-2.86.005-.109a2.001 2.001 0 011.838-1.845l.183-.006z"
}), /* @__PURE__ */ React396.createElement("path", {
  fill: "var(--color17, #f54c3d)",
  d: "M11 10.018l4.893-4.838a.59.59 0 01.774-.065l.076.065 1.041 1.029a.774.774 0 01.061.995l-.061.069L13.003 12l4.781 4.728a.769.769 0 01.053 1.005l-.025.031-1.068 1.058a.593.593 0 01-.851 0L11 13.983l-4.894 4.839a.59.59 0 01-.774.065l-.076-.065-1.041-1.029a.774.774 0 01-.061-.995l.061-.069 4.78-4.728-4.78-4.727a.769.769 0 01-.053-1.005l.053-.059 1.041-1.029a.593.593 0 01.851 0L11 10.019z"
}))));
NoConnection.displayName = "NoConnection";
NoConnection["iconName"] = "no-connection";
var NoConnection_default = NoConnection;

// src/icon/NonEdit.tsx
import React397, { forwardRef as forwardRef347, memo as memo260 } from "react";
var NonEdit = memo260(forwardRef347((props, svgRef) => /* @__PURE__ */ React397.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React397.createElement("path", {
  d: "M2.565 3.979a1 1 0 011.32-.083l.094.083 24.042 24.042a.999.999 0 01-1.32 1.497l-.094-.083L2.565 5.393a.999.999 0 010-1.414zm9.197 10.611l1.414 1.414-6.579 6.58 2.828 2.828 6.579-6.579 1.414 1.414-6.659 6.659c-.279.279-.635.47-1.022.547l-5.006 1.001a1 1 0 01-1.177-1.176l1.001-5.006c.077-.387.268-.743.547-1.022l6.658-6.659zM28.01 4a4 4 0 010 5.657l-7.763 7.762-1.414-1.414 4.935-4.934-2.828-2.828-4.935 4.934-1.414-1.414 7.762-7.762a4 4 0 015.657 0zm-4.243 1.414l-1.413 1.413 2.828 2.828 1.413-1.414a2 2 0 10-2.828-2.828z"
}))));
NonEdit.displayName = "NonEdit";
NonEdit["iconName"] = "non-edit";
var NonEdit_default = NonEdit;

// src/icon/NoteBorder.tsx
import React398, { forwardRef as forwardRef348, memo as memo261 } from "react";
var NoteBorder = memo261(forwardRef348((props, svgRef) => /* @__PURE__ */ React398.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React398.createElement("path", {
  d: "M16 2c6.627 0 12 5.373 12 12v14a2 2 0 01-2 2H6a2 2 0 01-2-2V4a2 2 0 012-2h10zm0 2H7a1 1 0 00-1 1v22a1 1 0 001 1h18a1 1 0 001-1V14c0-5.523-4.477-10-10-10zm2 14a1 1 0 010 2h-7a1 1 0 010-2h7zm3-6a1 1 0 010 2H11a1 1 0 010-2h10z"
}))));
NoteBorder.displayName = "NoteBorder";
NoteBorder["iconName"] = "note_border";
var NoteBorder_default = NoteBorder;

// src/icon/Note.tsx
import React399, { forwardRef as forwardRef349, memo as memo262 } from "react";
var Note = memo262(forwardRef349((props, svgRef) => /* @__PURE__ */ React399.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React399.createElement("path", {
  d: "M16 2c6.627 0 12 5.373 12 12v14a2 2 0 01-2 2H6a2 2 0 01-2-2V4a2 2 0 012-2h10zm2 16h-7a1 1 0 00-.117 1.993L11 20h7a1 1 0 00.117-1.993L18 18zm3-6H11a1 1 0 00-.117 1.993L11 14h10a1 1 0 00.117-1.993L21 12z"
}))));
Note.displayName = "Note";
Note["iconName"] = "note";
var Note_default = Note;

// src/icon/NotificationBorder.tsx
import React400, { forwardRef as forwardRef350, memo as memo263 } from "react";
var NotificationBorder = memo263(forwardRef350((props, svgRef) => /* @__PURE__ */ React400.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React400.createElement("path", {
  d: "M16 2a1 1 0 011 1l.001 1.055A9.001 9.001 0 0125 13v3.264c0 1.34.449 2.642 1.275 3.698l2.195 2.805A2 2 0 0126.895 26l-5.995.001a5.002 5.002 0 01-9.8 0L5.105 26a2 2 0 01-1.575-3.233l2.195-2.805A6 6 0 007 16.264V13a9 9 0 018-8.945V3a1 1 0 011-1zm2.829 24.001h-5.658a3 3 0 005.658 0zM16 6a7 7 0 00-7 7v3.264a7.995 7.995 0 01-1.7 4.93l-2.195 2.805h21.79L24.7 21.194a8.001 8.001 0 01-1.7-4.93V13a7 7 0 00-7-7z"
}))));
NotificationBorder.displayName = "NotificationBorder";
NotificationBorder["iconName"] = "notification_border";
var NotificationBorder_default = NotificationBorder;

// src/icon/Notification.tsx
import React401, { forwardRef as forwardRef351, memo as memo264 } from "react";
var Notification = memo264(forwardRef351((props, svgRef) => /* @__PURE__ */ React401.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React401.createElement("path", {
  d: "M16 2a1 1 0 011 1l.001 1.055A9.001 9.001 0 0125 13v3.264c0 1.34.449 2.642 1.275 3.698l2.195 2.805A2 2 0 0126.895 26l-5.995.001a5.002 5.002 0 01-9.8 0L5.105 26a2 2 0 01-1.575-3.233l2.195-2.805A6 6 0 007 16.264V13a9 9 0 018-8.945V3a1 1 0 011-1zm2.829 24.001h-5.658a3 3 0 005.658 0z"
}))));
Notification.displayName = "Notification";
Notification["iconName"] = "notification";
var Notification_default = Notification;

// src/icon/Onedrive.tsx
import React402, { forwardRef as forwardRef352, memo as memo265 } from "react";
var Onedrive = memo265(forwardRef352((props, svgRef) => /* @__PURE__ */ React402.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React402.createElement("path", {
  d: "M27.933 18.397c1.492.535 2.193 1.659 2.065 3.311-.083 1.081-.586 1.944-1.386 2.372l-.375.201-8.349.016c-6.415.013-8.454-.01-8.806-.098-1.695-.424-2.64-1.774-2.643-3.777-.001-.64.045-.947.205-1.359.391-1.009 1.427-1.771 2.789-2.051.678-.14.887-.289.887-.636 0-.109.081-.433.179-.72.448-1.304 1.278-2.392 2.164-2.837.928-.465 1.396-.57 2.519-.565 1.594.008 2.389.355 3.501 1.525l.611.644.548-.19c2.652-.92 5.296.645 5.509 3.261l.058.715.522.188zM7.729 22.665c.099.194.154.379.123.411-.081.081-2.67.053-3.028-.032-.99-.236-2.038-1.111-2.53-2.113C2.015 20.363 2 20.28 2 19.275c0-.956.024-1.11.246-1.584.468-1 1.365-1.723 2.491-2.007.237-.06.46-.156.496-.213s.074-.367.087-.689c.079-2.001 1.39-3.765 3.22-4.332.989-.305 2.232-.23 3.307.2.341.137.303.167 1.024-.781.427-.56 1.289-1.258 1.995-1.613.761-.383 1.553-.559 2.5-.557 2.648.007 4.929 1.665 5.772 4.197.27.808.256 1.035-.062 1.042-.139.003-.536.08-.883.17l-.631.165-.576-.577c-1.624-1.626-4.274-1.978-6.527-.866a5.417 5.417 0 00-2.169 1.914c-.39.592-.886 1.699-.886 1.973 0 .194-.157.292-.83.513-2.082.683-3.297 2.262-3.296 4.283 0 .736.19 1.636.452 2.151z"
}))));
Onedrive.displayName = "Onedrive";
Onedrive["iconName"] = "onedrive";
var Onedrive_default = Onedrive;

// src/icon/OpenFolder.tsx
import React403, { forwardRef as forwardRef353, memo as memo266 } from "react";
var OpenFolder = memo266(forwardRef353((props, svgRef) => /* @__PURE__ */ React403.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React403.createElement("path", {
  d: "M29.004 19.489c.489 0 .896.352.98.817l.016.179v5.976a.996.996 0 01-1.976.179l-.016-.179-.002-3.239-5.381 5.382a.996.996 0 01-1.524-1.271l.115-.138 5.715-5.717-3.904.002a.996.996 0 01-.98-.817l-.016-.179c0-.489.352-.896.817-.98l.179-.016h5.976zM11.783 2.999a1.99 1.99 0 011.453.63l1.915 2.044a1 1 0 00.61.308l.117.007h12.019c1.1 0 1.992.892 1.992 1.992l.001 9.671a8.002 8.002 0 00-1.992-1.632l-.001-3.059H3.992v10.957c0 .55.446.996.996.996h11.208c.182.707.459 1.376.816 1.993l-13.019-.001c-1.1 0-1.992-.892-1.992-1.992V4.992c0-1.1.892-1.992 1.992-1.992h7.79zm-.864 1.992H4.988a.996.996 0 00-.996.996v4.98h23.905V8.975a.996.996 0 00-.996-.996l-11.374-.021a2.989 2.989 0 01-1.829-.924L12.373 5.62a1.992 1.992 0 00-1.453-.63z"
}))));
OpenFolder.displayName = "OpenFolder";
OpenFolder["iconName"] = "open-folder";
var OpenFolder_default = OpenFolder;

// src/icon/OuboundCallOnBehalf.tsx
import React404, { forwardRef as forwardRef354, memo as memo267 } from "react";
var OuboundCallOnBehalf = memo267(forwardRef354((props, svgRef) => /* @__PURE__ */ React404.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React404.createElement("path", {
  d: "M12 17c1.439 0 2.822.226 4.092.64a3.383 3.383 0 00-.114.775l-.001.175-.105.058c-.338.195-.64.447-.893.744A11.371 11.371 0 0012 19c-4.878 0-8.85 3.019-8.996 6.786L3 26l13.564.001a3.444 3.444 0 001.308 1.35l.106.058.001.175c.004.14.017.278.038.416H3.001a2 2 0 01-2-2c0-5.096 5.019-9 11-9zm17.979-2A1.02 1.02 0 0131 16.021v8.165a1.02 1.02 0 11-2.042 0l.001-5.7-7.217 7.216a1.02 1.02 0 11-1.443-1.443l7.217-7.216-5.701-.001a1.02 1.02 0 110-2.042h8.165zM12 3a6 6 0 110 12 6 6 0 010-12zm0 2a4 4 0 100 8 4 4 0 000-8z"
}))));
OuboundCallOnBehalf.displayName = "OuboundCallOnBehalf";
OuboundCallOnBehalf["iconName"] = "oubound_call_on_behalf";
var OuboundCallOnBehalf_default = OuboundCallOnBehalf;

// src/icon/OutboundFaxBorder.tsx
import React405, { forwardRef as forwardRef355, memo as memo268 } from "react";
var OutboundFaxBorder = memo268(forwardRef355((props, svgRef) => /* @__PURE__ */ React405.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React405.createElement("path", {
  d: "M23 4a1 1 0 010 2h-2v13.757c0 .796-.316 1.559-.879 2.121l-5.536 5.536a2 2 0 01-1.238.578l-.176.008H4.999a2 2 0 01-2-2V6h-2a1 1 0 010-2h22zm-4 2H5v19a1 1 0 001 1h6v-5a2 2 0 012-2h5V6zm-.83 15H15a1 1 0 00-1 1v3.17L18.17 21zm7.037-10.293l4.586 4.586a1 1 0 010 1.414l-4.586 4.586a1 1 0 01-1.414-1.414L27.5 16l-3.707-3.879a1 1 0 011.414-1.414zM15.167 14c.46 0 .833.448.833 1s-.373 1-.833 1H8.834c-.46 0-.833-.448-.833-1s.373-1 .833-1h6.333zm0-5c.46 0 .833.448.833 1s-.373 1-.833 1H8.834c-.46 0-.833-.448-.833-1s.373-1 .833-1h6.333z"
}))));
OutboundFaxBorder.displayName = "OutboundFaxBorder";
OutboundFaxBorder["iconName"] = "outbound-fax_border";
var OutboundFaxBorder_default = OutboundFaxBorder;

// src/icon/OutboundFax.tsx
import React406, { forwardRef as forwardRef356, memo as memo269 } from "react";
var OutboundFax = memo269(forwardRef356((props, svgRef) => /* @__PURE__ */ React406.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React406.createElement("path", {
  d: "M23 4a1 1 0 010 2h-2v13h-7a2.001 2.001 0 00-1.995 1.851L12 21v7H5a2 2 0 01-2-2V6H1a1 1 0 010-2h22zm-2.272 17l-.025.058a3.003 3.003 0 01-.582.82l-5.536 5.536a2.022 2.022 0 01-.415.319l-.17.086V22a1 1 0 01.883-.993L15 21h5.728zm4.479-10.293l4.586 4.586a1 1 0 010 1.414l-4.586 4.586a1 1 0 01-1.414-1.414L27.5 16l-3.707-3.879a1 1 0 011.414-1.414zM15.167 14H8.834c-.46 0-.833.448-.833 1 0 .513.322.935.736.993l.097.007h6.333c.46 0 .833-.448.833-1s-.373-1-.833-1zm0-5H8.834c-.46 0-.833.448-.833 1 0 .513.322.935.736.993l.097.007h6.333c.46 0 .833-.448.833-1s-.373-1-.833-1z"
}))));
OutboundFax.displayName = "OutboundFax";
OutboundFax["iconName"] = "outbound-fax";
var OutboundFax_default = OutboundFax;

// src/icon/OutcallBorder.tsx
import React407, { forwardRef as forwardRef357, memo as memo270 } from "react";
var OutcallBorder = memo270(forwardRef357((props, svgRef) => /* @__PURE__ */ React407.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React407.createElement("path", {
  d: "M9.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.272-.265.049-.045c.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804 1.129.938c.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.01 6.01 0 01-1.829.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zM7.966 4.022c-.314.049-.8.222-1.451.538-.661.321-1.134.608-1.416.843-.548.46-.881 1.078-1.018 1.956-.16.934-.085 2.047.247 3.337.345 1.34.953 2.809 1.836 4.41.884 1.619 2.031 3.276 3.432 4.954a34.87 34.87 0 003.283 3.393 22.997 22.997 0 003.194 2.502c1.055.675 2.074 1.187 3.059 1.538.959.342 1.853.509 2.684.509.466 0 .872-.058 1.223-.17.274-.087.514-.206.768-.392l.155-.12c.275-.206.66-.595 1.112-1.142.391-.473.643-.844.765-1.097l.106-.236c.064-.128.078-.299.017-.53-.072-.27-.226-.504-.496-.726l-1.295-1.078-.817-.695-.471-.41a71.406 71.406 0 01-1.293-1.163l-.624-.582-.088-.088c-.138-.148-.36-.25-.681-.279a1.596 1.596 0 00-.827.134l-.119.063-.049.035a3.377 3.377 0 00-.189.145l-.079.069-.16.152-.227.231-.036.047-.09.104-.159.162-.157.172a1.998 1.998 0 01-2.3.472 6.246 6.246 0 01-.459-.233c-.46-.256-.934-.607-1.428-1.047a16.01 16.01 0 01-1.531-1.601 16.348 16.348 0 01-1.243-1.674 8.88 8.88 0 01-.691-1.286l-.073-.183a5.005 5.005 0 01-.292-.913 2 2 0 011.025-2.162l.25-.12.178-.098.111-.054.05-.036.143-.086c.134-.073.249-.143.346-.21l.175-.127.102-.083.049-.052c.16-.183.247-.349.289-.528l.02-.109a.87.87 0 00-.147-.621 52.75 52.75 0 01-1.763-2.705 34.089 34.089 0 01-1.299-2.338 1.447 1.447 0 00-.553-.588l-.12-.063a1.627 1.627 0 00-.976-.142zM29 2a1 1 0 011 1v8a1 1 0 01-2 0l.001-5.585-7.072 7.07a.999.999 0 11-1.414-1.414l7.072-7.07L21.001 4a1 1 0 010-2h8z"
}))));
OutcallBorder.displayName = "OutcallBorder";
OutcallBorder["iconName"] = "outcall_border";
var OutcallBorder_default = OutcallBorder;

// src/icon/Outcall.tsx
import React408, { forwardRef as forwardRef358, memo as memo271 } from "react";
var Outcall = memo271(forwardRef358((props, svgRef) => /* @__PURE__ */ React408.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React408.createElement("path", {
  d: "M9.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.272-.265.049-.045c.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804 1.129.938c.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.01 6.01 0 01-1.829.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zM29 2a1 1 0 011 1v8a1 1 0 01-2 0l.001-5.585-7.072 7.07a.999.999 0 11-1.414-1.414l7.072-7.07L21.001 4a1 1 0 010-2h8z"
}))));
Outcall.displayName = "Outcall";
Outcall["iconName"] = "outcall";
var Outcall_default = Outcall;

// src/icon/Outdent.tsx
import React409, { forwardRef as forwardRef359, memo as memo272 } from "react";
var Outdent = memo272(forwardRef359((props, svgRef) => /* @__PURE__ */ React409.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React409.createElement("path", {
  d: "M27 24a1 1 0 010 2H5a1 1 0 010-2h22zM8.402 12.201c.776-.449 1.535-.132 1.594.805l.004.138v5.748l-.01.206c-.101.872-.907 1.135-1.65.684l-.111-.073-3.737-2.684-.152-.131c-.474-.485-.445-1.297.048-1.762l.105-.088 3.737-2.73.174-.114zM27 15a1 1 0 010 2H13a1 1 0 010-2h14zm0-9a1 1 0 010 2H5a1 1 0 010-2h22z"
}))));
Outdent.displayName = "Outdent";
Outdent["iconName"] = "outdent";
var Outdent_default = Outdent;

// src/icon/ParkCallMessage.tsx
import React410, { forwardRef as forwardRef360, memo as memo273 } from "react";
var ParkCallMessage = memo273(forwardRef360((props, svgRef) => /* @__PURE__ */ React410.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React410.createElement("path", {
  d: "M22 8a2 2 0 012 2v14a2 2 0 01-2 2h-4.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141A1 1 0 008.587 26H4.001a2 2 0 01-2-2V10a2 2 0 012-2h18zm-1 2H5a1 1 0 00-1 1v12a1 1 0 001 1h4a2 2 0 011.414.586L13 27.172l2.586-2.586A2 2 0 0117 24h4a1 1 0 001-1V11a1 1 0 00-1-1zm-6.656 2.382c1.74 0 2.98 1.306 2.98 3.117 0 1.75-1.162 3.034-2.806 3.123l-.185.005-2.632-.001.001 1.965c0 .505-.295.898-.746 1l-.116.019-.122.007c-.54 0-.925-.376-.977-.902l-.006-.124v-7.184c0-.547.346-.963.861-1.019l.122-.007h3.625zM28 2a2 2 0 012 2v12a2 2 0 01-2 2h-3v-2h2a1 1 0 001-1V5a1 1 0 00-1-1H11a1 1 0 00-1 1v1H8V4a2 2 0 012-2h18zM14.091 14.287l-2.39-.001v2.437h2.39c.826 0 1.239-.411 1.239-1.224 0-.757-.359-1.16-1.088-1.208l-.151-.005z"
}))));
ParkCallMessage.displayName = "ParkCallMessage";
ParkCallMessage["iconName"] = "park-call-message";
var ParkCallMessage_default = ParkCallMessage;

// src/icon/ParkCallText.tsx
import React411, { forwardRef as forwardRef361, memo as memo274 } from "react";
var ParkCallText = memo274(forwardRef361((props, svgRef) => /* @__PURE__ */ React411.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React411.createElement("path", {
  d: "M16 3c1.944 0 3.762.304 5.454.912 1.711.627 3.199 1.48 4.463 2.559s2.256 2.353 2.975 3.824C29.631 11.766 30 13.354 30 15.06s-.369 3.304-1.108 4.794c-.739 1.49-1.74 2.794-3.004 3.912s-2.751 2-4.462 2.647c-1.692.627-3.5.941-5.425.941-.369 0-.739-.01-1.108-.029s-.739-.059-1.108-.118l-.467-.088-.058.059c-.719.627-1.556 1.137-2.508 1.529s-2.012.608-3.179.647H5.59c-.35 0-.617-.162-.802-.485s-.18-.642.015-.956l.817-1.324c.292-.51.525-.946.7-1.309s.311-.681.408-.956l.029-.029-.292-.235c-.681-.569-1.293-1.186-1.837-1.853s-1.006-1.368-1.385-2.103c-.379-.735-.676-1.505-.89-2.309s-.331-1.608-.35-2.412v-.324c0-1.706.369-3.294 1.108-4.765.719-1.451 1.711-2.721 2.975-3.809s2.751-1.936 4.463-2.544C12.241 3.314 14.059 3 16.003 3zm0 1.882c-1.692 0-3.276.265-4.754.794s-2.761 1.25-3.85 2.162a10.343 10.343 0 00-2.596 3.25 8.707 8.707 0 00-.933 3.971c0 .765.097 1.52.292 2.265.214.765.51 1.495.89 2.191s.851 1.348 1.415 1.956a13.026 13.026 0 001.896 1.676c.136.098.243.23.321.397s.097.338.058.515c-.058.373-.185.789-.379 1.25S7.893 26.333 7.543 27l-.263.471h.292c.953-.039 1.818-.226 2.596-.559s1.458-.765 2.042-1.294l.175-.176c.117-.098.248-.172.394-.221s.287-.054.423-.015c.506.098.987.167 1.444.206s.909.059 1.356.059c1.672 0 3.247-.274 4.725-.824s2.766-1.294 3.865-2.235a10.26 10.26 0 002.581-3.324c.642-1.255.962-2.598.962-4.029s-.311-2.765-.933-4c-.622-1.235-1.483-2.309-2.581-3.221s-2.387-1.632-3.865-2.162c-1.478-.529-3.063-.794-4.754-.794zm.989 5.618c2.052 0 3.511 1.537 3.511 3.678 0 2.076-1.377 3.591-3.328 3.687l-.197.005h-3.303v2.493c0 .57-.332 1.007-.84 1.113l-.12.019-.126.006c-.602 0-1.027-.418-1.081-1.009l-.006-.129V11.64c0-.614.385-1.073.96-1.132l.126-.006h4.402zm-.307 2.098h-3.009v3.173h3.009c1.062 0 1.612-.547 1.612-1.593 0-.982-.486-1.518-1.439-1.575l-.173-.005z"
}))));
ParkCallText.displayName = "ParkCallText";
ParkCallText["iconName"] = "park-call-text";
var ParkCallText_default = ParkCallText;

// src/icon/ParkCall.tsx
import React412, { forwardRef as forwardRef362, memo as memo275 } from "react";
var ParkCall = memo275(forwardRef362((props, svgRef) => /* @__PURE__ */ React412.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React412.createElement("path", {
  d: "M19.837 3.75c4.69 0 7.803 2.902 7.803 7.298 0 4.216-2.865 7.052-7.271 7.269l-.303.011-.245.003h-8.829l.001 8.259c0 .476-.232.864-.621 1.049l-.135.054-.133.035-.13.018-.111.005c-.566 0-.986-.356-1.09-.906l-.019-.141-.005-.114V4.911c0-.582.334-1.024.866-1.135l.137-.021.111-.005h9.974zm-.208 2.132h-8.637v10.315l8.64.001c3.585 0 5.75-1.949 5.75-5.15 0-3.061-1.944-4.971-5.228-5.152l-.293-.011-.233-.003z"
}))));
ParkCall.displayName = "ParkCall";
ParkCall["iconName"] = "park-call";
var ParkCall_default = ParkCall;

// src/icon/PartnerCloudContact.tsx
import React413, { forwardRef as forwardRef363, memo as memo276 } from "react";
var PartnerCloudContact = memo276(forwardRef363((props, svgRef) => /* @__PURE__ */ React413.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React413.createElement("path", {
  d: "M28 3a2 2 0 012 2v22a2 2 0 01-2 2H7.986V3H28zM5.971 3v26H4a2 2 0 01-2-2V5a2 2 0 012-2h1.971zm18.024 14.014H13.982a2 2 0 00-2 2v5.047h14.013v-5.047a2 2 0 00-2-2zM19 7a4 4 0 100 8 4 4 0 000-8z"
}))));
PartnerCloudContact.displayName = "PartnerCloudContact";
PartnerCloudContact["iconName"] = "partner_cloud_contact";
var PartnerCloudContact_default = PartnerCloudContact;

// src/icon/PauseBorder.tsx
import React414, { forwardRef as forwardRef364, memo as memo277 } from "react";
var PauseBorder = memo277(forwardRef364((props, svgRef) => /* @__PURE__ */ React414.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React414.createElement("path", {
  d: "M11 25H9a1 1 0 01-1-1V8a1 1 0 011-1h2a1 1 0 011 1v16a1 1 0 01-1 1zm1-20H8a2 2 0 00-2 2v18a2 2 0 002 2h4a2 2 0 002-2V7a2 2 0 00-2-2zm11 20h-2a1 1 0 01-1-1V8a1 1 0 011-1h2a1 1 0 011 1v16a1 1 0 01-1 1zm1-20h-4a2 2 0 00-2 2v18a2 2 0 002 2h4a2 2 0 002-2V7a2 2 0 00-2-2z"
}))));
PauseBorder.displayName = "PauseBorder";
PauseBorder["iconName"] = "pause_border";
var PauseBorder_default = PauseBorder;

// src/icon/PauseCircle.tsx
import React415, { forwardRef as forwardRef365, memo as memo278 } from "react";
var PauseCircle = memo278(forwardRef365((props, svgRef) => /* @__PURE__ */ React415.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React415.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-3 8a1 1 0 00-.993.883L12 11v10a1 1 0 001.993.117L14 21V11a1 1 0 00-1-1zm6 0a1 1 0 00-.993.883L18 11v10a1 1 0 001.993.117L20 21V11a1 1 0 00-1-1z"
}))));
PauseCircle.displayName = "PauseCircle";
PauseCircle["iconName"] = "pause_circle";
var PauseCircle_default = PauseCircle;

// src/icon/PauseCircleBorder.tsx
import React416, { forwardRef as forwardRef366, memo as memo279 } from "react";
var PauseCircleBorder = memo279(forwardRef366((props, svgRef) => /* @__PURE__ */ React416.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React416.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm-3 6a1 1 0 011 1v10a1 1 0 01-2 0V11a1 1 0 011-1zm6 0a1 1 0 011 1v10a1 1 0 01-2 0V11a1 1 0 011-1z"
}))));
PauseCircleBorder.displayName = "PauseCircleBorder";
PauseCircleBorder["iconName"] = "pause_circle_border";
var PauseCircleBorder_default = PauseCircleBorder;

// src/icon/Pause.tsx
import React417, { forwardRef as forwardRef367, memo as memo280 } from "react";
var Pause = memo280(forwardRef367((props, svgRef) => /* @__PURE__ */ React417.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React417.createElement("path", {
  d: "M12 5c1.054 0 1.918.816 1.995 1.851L14 7v18a2 2 0 01-1.851 1.994L12 27H8a2.001 2.001 0 01-1.995-1.851L6 25V7c0-1.054.816-1.918 1.851-1.995L8 5h4zm12 0a2 2 0 011.994 1.851L26 7v18a2 2 0 01-1.851 1.994L24 27h-4a2 2 0 01-1.994-1.851L18 25V7c0-1.054.816-1.918 1.851-1.995L20 5h4z"
}))));
Pause.displayName = "Pause";
Pause["iconName"] = "pause";
var Pause_default = Pause;

// src/icon/PdfD.tsx
import React418, { forwardRef as forwardRef368, memo as memo281 } from "react";
var PdfD = memo281(forwardRef368((props, svgRef) => /* @__PURE__ */ React418.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React418.createElement("path", {
  fill: "var(--color41, #43201f)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React418.createElement("path", {
  fill: "var(--color42, #de4944)",
  d: "M11.919 8h4.752l5.551 4.785v9.059c0 .605-.207 1.116-.62 1.532S20.681 24 20.08 24h-8.161c-.601 0-1.108-.208-1.522-.624s-.62-.927-.62-1.532V10.156c0-.605.207-1.116.62-1.532S11.317 8 11.919 8z"
}), /* @__PURE__ */ React418.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M15.208 10.748a.834.834 0 01.9.225l.049.057.048.066c.262.387.35 1.05.28 2.02-.03.42-.166.975-.403 1.654l.041.05.959 1.201.267.328.236.281.26.297.17-.004.169-.001c1.613 0 2.705.34 3.075.981a.871.871 0 01.009.89c-.197.341-.602.552-1.096.579l-.102.003-.13-.004a2.44 2.44 0 01-.264-.033c-.653-.12-1.357-.6-2.209-1.497-.206.012-.417.028-.631.049-.768.074-1.605.222-2.4.469l-.183.323-.091.157c-.637 1.091-1.256 1.946-1.753 2.271a1.59 1.59 0 01-.722.268l-.097.004-.081-.003-.078-.009a.836.836 0 01-.667-.514c-.216-.53.084-1.232.802-1.933.546-.533 1.302-.972 2.25-1.306a24.63 24.63 0 001.257-2.712l-.08-.134-.076-.137c-.537-1.015-.695-2.253-.432-3.062.15-.459.408-.72.719-.825zm-2.156 8.19l-.164.096-.155.1c-.201.135-.38.279-.536.43-.421.411-.605.761-.604.91l.002.009.044-.004.05-.011a.854.854 0 00.233-.111c.235-.154.614-.622 1.048-1.291l.082-.128zm5.707-1.103l.104.086.111.088c.33.252.617.398.866.444l.079.012.074.007.078.003.067-.002a.612.612 0 00.328-.1l.02-.02-.024-.036-.03-.034c-.192-.193-.724-.372-1.534-.438l-.138-.01zm-3.049-2.097l-.128.3c-.175.404-.37.823-.577 1.239a13.522 13.522 0 011.719-.279l-.151-.182-.34-.42-.523-.658zm-.237-4.127l-.021.021-.022.029a.793.793 0 00-.088.19c-.147.451-.098 1.159.136 1.825.062-.246.1-.457.112-.626.058-.796-.002-1.231-.1-1.41l-.018-.029z"
}))));
PdfD.displayName = "PdfD";
PdfD["iconName"] = "pdf-D";
var PdfD_default = PdfD;

// src/icon/Pdf.tsx
import React419, { forwardRef as forwardRef369, memo as memo282 } from "react";
var Pdf = memo282(forwardRef369((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React419.createElement(PdfD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React419.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React419.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React419.createElement("path", {
    fill: "var(--color60, #e6413c)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React419.createElement("path", {
    fill: "var(--color60, #e6413c)",
    d: "M11.919 8h4.752l5.551 4.785v9.059c0 .605-.207 1.116-.62 1.532S20.681 24 20.08 24h-8.161c-.601 0-1.108-.208-1.522-.624s-.62-.927-.62-1.532V10.156c0-.605.207-1.116.62-1.532S11.317 8 11.919 8zm4.239 3.029l-.049-.057a.839.839 0 00-.9-.225c-.311.104-.569.365-.719.825-.264.808-.106 2.047.432 3.062l.076.137.08.134a24.63 24.63 0 01-1.257 2.712c-.948.334-1.704.773-2.25 1.306-.718.701-1.018 1.403-.802 1.933.115.282.36.467.667.514l.078.009.081.003.097-.004a1.59 1.59 0 00.722-.268c.497-.325 1.116-1.18 1.753-2.271l.091-.157.183-.324a12.122 12.122 0 012.4-.469c.213-.021.425-.037.631-.049.852.897 1.556 1.376 2.209 1.497.088.016.177.027.264.033l.13.004.102-.003c.494-.026.899-.237 1.096-.579a.871.871 0 00-.009-.89c-.37-.641-1.462-.981-3.075-.981l-.169.001-.17.004-.26-.297-.236-.281-.267-.328-.959-1.201-.041-.05c.237-.679.373-1.234.403-1.654.07-.97-.018-1.633-.28-2.02l-.048-.066zm-3.106 7.909l-.164.096-.155.1c-.201.135-.38.279-.536.43-.421.411-.605.761-.604.91l.001.009.044-.004.05-.011a.854.854 0 00.233-.111c.235-.154.614-.622 1.048-1.291l.082-.128zm5.707-1.103l.104.087.111.088c.33.251.617.398.866.444l.079.012.074.007.078.003.067-.002a.612.612 0 00.328-.1l.02-.02-.024-.036-.03-.034c-.192-.193-.724-.372-1.534-.438l-.138-.01zm-3.049-2.097l-.127.3c-.175.404-.37.823-.577 1.239a13.522 13.522 0 011.719-.279l-.151-.182-.34-.42-.523-.658zm-.237-4.127l-.021.021-.022.029a.793.793 0 00-.088.19c-.147.451-.098 1.159.136 1.825.062-.246.1-.457.112-.626.058-.796-.002-1.231-.1-1.41l-.018-.029z"
  }));
}));
Pdf.displayName = "Pdf";
Pdf["iconName"] = "pdf";
var Pdf_default = Pdf;

// src/icon/People.tsx
import React420, { forwardRef as forwardRef370, memo as memo283 } from "react";
var People = memo283(forwardRef370((props, svgRef) => /* @__PURE__ */ React420.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React420.createElement("path", {
  d: "M16 18c7.067 0 13 4.315 13 10a2 2 0 01-2 2H5a2 2 0 01-2-2c0-5.685 5.933-10 13-10zm0-16a7 7 0 110 14 7 7 0 010-14z"
}))));
People.displayName = "People";
People["iconName"] = "people";
var People_default = People;

// src/icon/PhoneBorder.tsx
import React421, { forwardRef as forwardRef371, memo as memo284 } from "react";
var PhoneBorder = memo284(forwardRef371((props, svgRef) => /* @__PURE__ */ React421.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React421.createElement("path", {
  d: "M10.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.137.078a7.09 7.09 0 01-.229.109c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263c.119-.12.226-.223.321-.31.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399c.57.491 1.262 1.072 2.075 1.742.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.008 6.008 0 01-1.828.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zm-.849 1.811a1.627 1.627 0 00-.976-.142c-.314.049-.8.222-1.451.538-.661.321-1.134.608-1.416.843-.548.46-.881 1.078-1.018 1.956-.16.934-.085 2.047.247 3.337.345 1.34.953 2.809 1.836 4.41.884 1.619 2.031 3.276 3.432 4.954a34.87 34.87 0 003.283 3.393 22.997 22.997 0 003.194 2.502c1.055.675 2.074 1.187 3.059 1.538.959.342 1.853.509 2.684.509.466 0 .872-.058 1.223-.17.274-.087.514-.206.768-.392l.155-.12c.275-.206.66-.595 1.112-1.142.391-.473.643-.844.765-1.097l.106-.236c.064-.128.078-.299.017-.53-.072-.27-.226-.504-.496-.726l-1.295-1.078a76.207 76.207 0 01-2.581-2.268l-.624-.582-.088-.088c-.138-.148-.36-.25-.681-.279a1.596 1.596 0 00-.827.134l-.119.063-.049.035a3.377 3.377 0 00-.189.145l-.079.069-.16.152-.227.231-.036.047a2.91 2.91 0 01-.09.104l-.159.162-.157.172a1.998 1.998 0 01-2.3.472 6.246 6.246 0 01-.459-.233c-.46-.256-.934-.607-1.428-1.047a16.01 16.01 0 01-1.531-1.601 16.348 16.348 0 01-1.243-1.674 8.88 8.88 0 01-.691-1.286l-.073-.183a5.005 5.005 0 01-.292-.913 2 2 0 011.025-2.162l.25-.12.178-.098.111-.054.05-.036.143-.086c.134-.073.249-.143.346-.21l.175-.127.102-.083.049-.052c.16-.183.247-.349.289-.528l.02-.109a.87.87 0 00-.147-.621 52.75 52.75 0 01-1.763-2.705 34.089 34.089 0 01-1.299-2.338 1.447 1.447 0 00-.553-.588l-.12-.063z"
}))));
PhoneBorder.displayName = "PhoneBorder";
PhoneBorder["iconName"] = "phone_border";
var PhoneBorder_default = PhoneBorder;

// src/icon/PhoneOffBorder.tsx
import React422, { forwardRef as forwardRef372, memo as memo285 } from "react";
var PhoneOffBorder = memo285(forwardRef372((props, svgRef) => /* @__PURE__ */ React422.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React422.createElement("path", {
  d: "M21.373 17.3c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399.947.804c.346.29.722.603 1.129.938.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.008 6.008 0 01-1.828.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a34.21 34.21 0 01-1.339-1.27l1.414-1.415c.282.283.566.557.852.823l.431.394a22.997 22.997 0 003.194 2.502c1.055.675 2.074 1.187 3.059 1.538.959.342 1.853.509 2.684.509.466 0 .872-.058 1.223-.17.274-.087.514-.206.768-.392l.155-.12c.275-.206.66-.595 1.112-1.142.391-.473.643-.844.765-1.097l.106-.236c.064-.128.078-.299.017-.53-.072-.27-.226-.504-.496-.726l-1.295-1.078-.817-.695a71.406 71.406 0 01-1.764-1.573l-.624-.582-.088-.088c-.138-.148-.36-.25-.681-.279a1.596 1.596 0 00-.827.134l-.119.063-.049.035a3.377 3.377 0 00-.189.145l-.079.069-.16.152-.227.231-.036.047a2.91 2.91 0 01-.09.104l-.159.162-.157.172a1.998 1.998 0 01-2.3.472 6.246 6.246 0 01-.459-.233 7.973 7.973 0 01-1.367-.993l1.416-1.419.048.041c.319.269.611.477.874.623.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263.222-.218a5.112 5.112 0 01.716-.569 3.574 3.574 0 012.169-.483zm8.062-13.321a.999.999 0 010 1.414L5.393 29.435a.999.999 0 11-1.414-1.414L28.021 3.979a.999.999 0 011.414 0zM10.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.178.098-.045.022a1.99 1.99 0 00-.144.067c.016.079.043.175.083.29l.098.258c.117.314.304.677.56 1.086l-1.444 1.446c-.07-.103-.137-.205-.201-.306a8.88 8.88 0 01-.691-1.286l-.073-.183a5.005 5.005 0 01-.292-.913 2 2 0 011.025-2.162l.25-.12.178-.098.111-.054.05-.036.143-.086c.134-.073.249-.143.346-.21l.175-.127.102-.083.049-.052c.16-.183.247-.349.289-.528l.02-.109a.87.87 0 00-.147-.621 52.75 52.75 0 01-1.763-2.705 34.089 34.089 0 01-1.299-2.338 1.447 1.447 0 00-.553-.588l-.12-.063a1.627 1.627 0 00-.976-.142c-.314.049-.8.222-1.451.538-.661.321-1.134.608-1.416.843-.548.46-.881 1.078-1.018 1.956-.16.934-.085 2.047.247 3.337.345 1.34.953 2.809 1.836 4.41.74 1.355 1.664 2.737 2.767 4.135L8.508 20.66c-1.239-1.551-2.272-3.085-3.099-4.599-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308z"
}))));
PhoneOffBorder.displayName = "PhoneOffBorder";
PhoneOffBorder["iconName"] = "phone-off_border";
var PhoneOffBorder_default = PhoneOffBorder;

// src/icon/PhoneOff.tsx
import React423, { forwardRef as forwardRef373, memo as memo286 } from "react";
var PhoneOff = memo286(forwardRef373((props, svgRef) => /* @__PURE__ */ React423.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React423.createElement("path", {
  d: "M21.373 17.3c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399c.57.491 1.262 1.072 2.075 1.742.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.008 6.008 0 01-1.828.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a34.21 34.21 0 01-1.339-1.27l5.212-5.216.048.041c.319.269.611.477.874.623.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263c.119-.12.226-.223.321-.31.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483zm8.062-13.321a.999.999 0 010 1.414L5.393 29.435a.999.999 0 11-1.414-1.414L28.021 3.979a.999.999 0 011.414 0zM10.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.137.078a7.09 7.09 0 01-.229.109c.016.079.043.175.083.29l.098.258c.117.314.304.677.56 1.086l-5.28 5.281c-1.239-1.551-2.272-3.085-3.099-4.599-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308z"
}))));
PhoneOff.displayName = "PhoneOff";
PhoneOff["iconName"] = "phone-off";
var PhoneOff_default = PhoneOff;

// src/icon/Phone.tsx
import React424, { forwardRef as forwardRef374, memo as memo287 } from "react";
var Phone = memo287(forwardRef374((props, svgRef) => /* @__PURE__ */ React424.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React424.createElement("path", {
  d: "M13.228 14.296c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.078c-.004.003.001-.001.009-.015l.076-.093c.226-.238.417-.428.575-.573.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905.599.566 1.221 1.131 1.865 1.697s1.489 1.28 2.534 2.141c.586.482.976 1.073 1.157 1.757.184.694.125 1.365-.161 1.937-.193.479-.565 1.044-1.117 1.713-.544.659-1.035 1.155-1.456 1.47-.44.363-.947.637-1.516.818a6.01 6.01 0 01-1.829.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.989 24.989 0 01-3.475-2.719 36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87-.397-1.544-.493-2.938-.281-4.173.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716.735-.115 1.455-.01 2.133.308s1.204.818 1.577 1.5a33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083a2.256 2.256 0 01-.223.12 1.99 1.99 0 00-.144.067c.027.132.084.31.182.548z"
}))));
Phone.displayName = "Phone";
Phone["iconName"] = "phone";
var Phone_default = Phone;

// src/icon/PickUpCall.tsx
import React425, { forwardRef as forwardRef375, memo as memo288 } from "react";
var PickUpCall = memo288(forwardRef375((props, svgRef) => /* @__PURE__ */ React425.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React425.createElement("path", {
  d: "M8.064 16.054a2.241 2.241 0 012.146 2.168c.054.846.025 1.695.036 2.543l-.018.279c3.111.906 8.414.901 11.523-.014l-.011-2.01a3.597 3.597 0 01.223-1.575 2.116 2.116 0 011.919-1.353 90.817 90.817 0 014.868.009 2.262 2.262 0 012.167 2.102c.022.275.039.613.052.984l.02.775.01.804v1.137l-.008.63c-.032.772-.313 2.513-.8 3.109a1.638 1.638 0 00-.08.149l-.649.673-.71.518c-.119.085-.239.169-.362.249a16.805 16.805 0 01-4.005 1.772l-.529.146c-2.453.707-6.002 1.02-8.552.927-3.121-.131-7.154-.682-10.021-1.992a10.117 10.117 0 01-2.869-1.852c-.858-.747-1.362-3.825-1.389-4.969l-.02-1.148a20.044 20.044 0 01.031-1.717c.109-1.461.956-2.316 2.407-2.368a65.916 65.916 0 014.621.025zm-4.549 1.974l-.165.01c-.211.022-.271.084-.302.317l-.017.182-.021.393-.009.427.004.73.02 1.128c.02.888.461 3.296.742 3.541a8.167 8.167 0 002.018 1.358l.329.148c2.432 1.111 6.133 1.681 9.263 1.812 2.158.079 5.316-.16 7.447-.719l.532-.146a14.715 14.715 0 003.938-1.654l.221-.15.629-.459.346-.359.068-.109.085-.104c.213-.261.337-1.587.35-1.879l.007-.581.002-.92-.01-.916-.013-.574-.018-.52-.023-.445a7.104 7.104 0 00-.014-.188c-.011-.142-.118-.247-.229-.25a90.072 90.072 0 00-4.764-.009.111.111 0 00-.097.064 1.586 1.586 0 00-.104.558l.012.296.02 3.515-1.444.425c-3.324.978-8.847 1.025-12.191.142l-.455-.126-1.517-.442.093-1.834-.002-1.41-.005-.36-.01-.314-.016-.309a.25.25 0 00-.167-.233l-.057-.01a64.05 64.05 0 00-4.473-.025zM16 2c.32 0 .604.15.787.383a.994.994 0 01.091.081l5.657 5.657a.999.999 0 11-1.414 1.414l-4.122-4.122v12.586a1 1 0 01-2 0V5.412l-4.121 4.123a.999.999 0 11-1.414-1.414l5.657-5.657.094-.083A.998.998 0 0115.999 2z"
}))));
PickUpCall.displayName = "PickUpCall";
PickUpCall["iconName"] = "pick_up_call";
var PickUpCall_default = PickUpCall;

// src/icon/Pin.tsx
import React426, { forwardRef as forwardRef376, memo as memo289 } from "react";
var Pin = memo289(forwardRef376((props, svgRef) => /* @__PURE__ */ React426.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React426.createElement("path", {
  d: "M4.302 14.798a1.141 1.141 0 010-1.613 10.248 10.248 0 018.724-2.901l5.045-8.715a1.14 1.14 0 011.793-.234l10.802 10.801a1.141 1.141 0 01-.235 1.794l-8.715 5.046a10.246 10.246 0 01-2.901 8.723 1.141 1.141 0 01-1.613 0l-5.644-5.644-7.256 7.256c-.445.445-2.78 2.058-3.225 1.613s1.167-2.78 1.613-3.225l7.256-7.256-5.644-5.644z"
}))));
Pin.displayName = "Pin";
Pin["iconName"] = "pin";
var Pin_default = Pin;

// src/icon/PlayBorder.tsx
import React427, { forwardRef as forwardRef377, memo as memo290 } from "react";
var PlayBorder = memo290(forwardRef377((props, svgRef) => /* @__PURE__ */ React427.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React427.createElement("path", {
  d: "M10.614 5.267l.193.101 16.217 9.164c1.294.837 1.303 2.087.017 2.934l-.214.13-16.185 9.128c-1.409.694-2.538.035-2.633-1.519l-.007-.217-.003-17.973.005-.201c.087-1.567 1.206-2.229 2.609-1.547zm-.615 1.941l.003 17.587 15.576-8.789L9.999 7.208z"
}))));
PlayBorder.displayName = "PlayBorder";
PlayBorder["iconName"] = "play_border";
var PlayBorder_default = PlayBorder;

// src/icon/PlayCircle.tsx
import React428, { forwardRef as forwardRef378, memo as memo291 } from "react";
var PlayCircle = memo291(forwardRef378((props, svgRef) => /* @__PURE__ */ React428.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React428.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-2.693 8.146c-.662-.351-1.198-.049-1.292.706l-.012.138-.003.11.002 9.803.003.119c.045.801.551 1.166 1.201.885l.116-.056.089-.051 8.11-4.998c.605-.435.637-1.064.099-1.518l-.108-.083-.093-.061-8.112-4.993z"
}))));
PlayCircle.displayName = "PlayCircle";
PlayCircle["iconName"] = "play_circle";
var PlayCircle_default = PlayCircle;

// src/icon/PlayCircleBorder.tsx
import React429, { forwardRef as forwardRef379, memo as memo292 } from "react";
var PlayCircleBorder = memo292(forwardRef379((props, svgRef) => /* @__PURE__ */ React429.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React429.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm-3.432 5.17l.116.065 9.73 5.832c.776.533.782 1.328.01 1.867l-.128.083-9.711 5.808c-.845.442-1.523.022-1.58-.967l-.004-.138-.002-11.437.003-.128c.052-.997.724-1.418 1.565-.984zm.431 2.584l.002 8.494 7.093-4.245-7.095-4.249z"
}))));
PlayCircleBorder.displayName = "PlayCircleBorder";
PlayCircleBorder["iconName"] = "play_circle_border";
var PlayCircleBorder_default = PlayCircleBorder;

// src/icon/Play.tsx
import React430, { forwardRef as forwardRef380, memo as memo293 } from "react";
var Play = memo293(forwardRef380((props, svgRef) => /* @__PURE__ */ React430.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React430.createElement("path", {
  d: "M10.614 5.267l.193.101 16.217 9.164c1.294.837 1.303 2.087.017 2.934l-.214.13-16.185 9.128c-1.409.694-2.538.035-2.633-1.519l-.007-.217-.003-17.973.005-.201c.087-1.567 1.206-2.229 2.609-1.547z"
}))));
Play.displayName = "Play";
Play["iconName"] = "play";
var Play_default = Play;

// src/icon/PollBorder.tsx
import React431, { forwardRef as forwardRef381, memo as memo294 } from "react";
var PollBorder = memo294(forwardRef381((props, svgRef) => /* @__PURE__ */ React431.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React431.createElement("path", {
  d: "M25 5a2 2 0 012 2v18a2 2 0 01-2 2H7a2 2 0 01-2-2V7a2 2 0 012-2h18zm-1 2H8a1 1 0 00-.993.883L7 8v16a1 1 0 00.883.993L8 25h16a1 1 0 00.993-.883L25 24V8a1 1 0 00-1-1zm-13 6a1 1 0 011 1v7a1 1 0 01-2 0v-7a1 1 0 011-1zm5-3a1 1 0 011 1v10a1 1 0 01-2 0V11a1 1 0 011-1zm5 5a1 1 0 011 1v5a1 1 0 01-2 0v-5a1 1 0 011-1z"
}))));
PollBorder.displayName = "PollBorder";
PollBorder["iconName"] = "poll_border";
var PollBorder_default = PollBorder;

// src/icon/Poll.tsx
import React432, { forwardRef as forwardRef382, memo as memo295 } from "react";
var Poll = memo295(forwardRef382((props, svgRef) => /* @__PURE__ */ React432.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React432.createElement("path", {
  d: "M25 5a2 2 0 012 2v18a2 2 0 01-2 2H7a2 2 0 01-2-2V7a2 2 0 012-2h18zm-14 8a1 1 0 00-1 1v7a1 1 0 002 0v-7a1 1 0 00-1-1zm5-3a1 1 0 00-1 1v10a1 1 0 002 0V11a1 1 0 00-1-1zm5 5a1 1 0 00-1 1v5a1 1 0 002 0v-5a1 1 0 00-1-1z"
}))));
Poll.displayName = "Poll";
Poll["iconName"] = "poll";
var Poll_default = Poll;

// src/icon/PoorConnection.tsx
import React433, { forwardRef as forwardRef383, memo as memo296 } from "react";
var PoorConnection = memo296(forwardRef383((props, svgRef) => /* @__PURE__ */ React433.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React433.createElement("path", {
  fill: "var(--color18, #000)",
  opacity: 0.32,
  d: "M27 4a2 2 0 012 2v20a2 2 0 01-2 2h-2a2 2 0 01-2-2V6a2 2 0 012-2h2zM17 14a2 2 0 012 2v10a2 2 0 01-2 2h-2a2 2 0 01-2-2V16a2 2 0 012-2h2z"
}), /* @__PURE__ */ React433.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M5 20h2a2 2 0 012 2v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4a2 2 0 012-2z"
}))));
PoorConnection.displayName = "PoorConnection";
PoorConnection["iconName"] = "poor-connection";
var PoorConnection_default = PoorConnection;

// src/icon/PptD.tsx
import React434, { forwardRef as forwardRef384, memo as memo297 } from "react";
var PptD = memo297(forwardRef384((props, svgRef) => /* @__PURE__ */ React434.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React434.createElement("path", {
  fill: "var(--color43, #43261f)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React434.createElement("path", {
  fill: "var(--color44, #d5583c)",
  d: "M11.919 8c-.601 0-1.108.208-1.522.624s-.62.927-.62 1.532v11.688c0 .605.207 1.116.62 1.532s.921.624 1.522.624h8.161c.601 0 1.108-.208 1.522-.624s.62-.927.62-1.532v-9.059L16.671 8h-4.752z"
}), /* @__PURE__ */ React434.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M16.756 12.936c.426 0 .795.057 1.108.17s.582.271.808.473c.225.227.388.492.488.794s.15.656.15 1.059c0 .378-.05.725-.15 1.04s-.263.586-.488.813c-.225.202-.495.359-.808.473s-.683.17-1.108.17h-2.592v3.442h-.939v-8.436h3.532zm-.375.946h-2.217v3.102h2.217c.301 0 .57-.032.808-.095s.432-.158.582-.284c.15-.151.257-.322.319-.511s.094-.41.094-.662c0-.252-.031-.473-.094-.662s-.169-.359-.319-.511c-.15-.126-.344-.221-.582-.284s-.507-.095-.808-.095z"
}))));
PptD.displayName = "PptD";
PptD["iconName"] = "ppt-D";
var PptD_default = PptD;

// src/icon/Ppt.tsx
import React435, { forwardRef as forwardRef385, memo as memo298 } from "react";
var Ppt = memo298(forwardRef385((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React435.createElement(PptD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React435.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React435.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React435.createElement("path", {
    fill: "var(--color44, #d5583c)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React435.createElement("path", {
    fill: "var(--color44, #d5583c)",
    d: "M11.919 8c-.601 0-1.108.208-1.522.624s-.62.927-.62 1.532v11.688c0 .605.207 1.116.62 1.532s.921.624 1.522.624h8.161c.601 0 1.108-.208 1.522-.624s.62-.927.62-1.532v-9.059L16.671 8h-4.752zm2.245 8.984v-3.102h2.217c.301 0 .57.032.808.095s.432.158.582.284c.15.151.257.322.319.511s.094.41.094.662c0 .252-.031.473-.094.662s-.169.359-.319.511c-.15.126-.344.221-.582.284s-.507.095-.808.095h-2.217zm-.939-4.048h3.532c.426 0 .795.057 1.108.17s.582.271.808.473c.225.227.388.492.488.794s.15.656.15 1.059c0 .378-.05.725-.15 1.04s-.263.586-.488.813c-.225.202-.495.359-.808.473s-.683.17-1.108.17h-2.592v3.442h-.939v-8.436z"
  }));
}));
Ppt.displayName = "Ppt";
Ppt["iconName"] = "ppt";
var Ppt_default = Ppt;

// src/icon/Previous.tsx
import React436, { forwardRef as forwardRef386, memo as memo299 } from "react";
var Previous = memo299(forwardRef386((props, svgRef) => /* @__PURE__ */ React436.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React436.createElement("path", {
  d: "M14.899 6.101a.999.999 0 010 1.414L7.413 15h19.586a1 1 0 010 2H7.411l7.488 7.486a.999.999 0 11-1.414 1.414l-9.192-9.192a.999.999 0 010-1.414l9.192-9.192a.999.999 0 011.414 0z"
}))));
Previous.displayName = "Previous";
Previous["iconName"] = "previous";
var Previous_default = Previous;

// src/icon/Quote.tsx
import React437, { forwardRef as forwardRef387, memo as memo300 } from "react";
var Quote = memo300(forwardRef387((props, svgRef) => /* @__PURE__ */ React437.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React437.createElement("path", {
  d: "M28 4a2 2 0 012 2v16a2 2 0 01-2 2h-7.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141a1 1 0 00-.707-.293H4.001a2 2 0 01-2-2V6a2 2 0 012-2h24zm-1 2H5a1 1 0 00-1 1v14a1 1 0 001 1h7a2 2 0 011.414.586L16 25.172l2.586-2.586A2 2 0 0120 22h7a1 1 0 001-1V7a1 1 0 00-1-1zm-15 4a3 3 0 012.98 2.65l.015.185.005.164-.004.147a2.529 2.529 0 01-.01.152l.001-.031a6.958 6.958 0 01-3.056 5.525.5.5 0 01-.579-.818 6.018 6.018 0 002.026-2.31 3 3 0 11-1.376-5.666zm8 0a3 3 0 012.98 2.65l.015.185.005.164-.004.147a2.529 2.529 0 01-.01.152v-.031a6.958 6.958 0 01-3.056 5.525.5.5 0 01-.579-.818 6.018 6.018 0 002.026-2.31 3 3 0 11-1.376-5.666z"
}))));
Quote.displayName = "Quote";
Quote["iconName"] = "quote";
var Quote_default = Quote;

// src/icon/RadioUnselect.tsx
import React438, { forwardRef as forwardRef388, memo as memo301 } from "react";
var RadioUnselect = memo301(forwardRef388((props, svgRef) => /* @__PURE__ */ React438.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React438.createElement("path", {
  d: "M16 0c8.837 0 16 7.163 16 16s-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0zm0 2.5C8.544 2.5 2.5 8.544 2.5 16S8.544 29.5 16 29.5 29.5 23.456 29.5 16 23.456 2.5 16 2.5z"
}))));
RadioUnselect.displayName = "RadioUnselect";
RadioUnselect["iconName"] = "radio_unselect";
var RadioUnselect_default = RadioUnselect;

// src/icon/Radio.tsx
import React439, { forwardRef as forwardRef389, memo as memo302 } from "react";
var Radio3 = memo302(forwardRef389((props, svgRef) => /* @__PURE__ */ React439.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React439.createElement("path", {
  d: "M16 0c8.837 0 16 7.163 16 16s-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0zm0 2.5C8.544 2.5 2.5 8.544 2.5 16S8.544 29.5 16 29.5 29.5 23.456 29.5 16 23.456 2.5 16 2.5zM16 7c4.971 0 9 4.029 9 9s-4.029 9-9 9-9-4.029-9-9 4.029-9 9-9z"
}))));
Radio3.displayName = "Radio";
Radio3["iconName"] = "radio";
var Radio_default2 = Radio3;

// src/icon/RcBlog.tsx
import React440, { forwardRef as forwardRef390, memo as memo303 } from "react";
var RcBlog = memo303(forwardRef390((props, svgRef) => /* @__PURE__ */ React440.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React440.createElement("path", {
  d: "M27 1a4 4 0 014 4v22a4 4 0 01-4 4H5a4 4 0 01-4-4V5a4 4 0 014-4h22zm-8 22H8a1 1 0 000 2h11a1 1 0 000-2zm5-6H8a1 1 0 000 2h16a1 1 0 000-2zM23 7H9a2 2 0 00-2 2v2a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2zm0 2v2H9V9h14z"
}))));
RcBlog.displayName = "RcBlog";
RcBlog["iconName"] = "rc_blog";
var RcBlog_default = RcBlog;

// src/icon/RcCloudContact.tsx
import React441, { forwardRef as forwardRef391, memo as memo304 } from "react";
var RcCloudContact = memo304(forwardRef391((props, svgRef) => /* @__PURE__ */ React441.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React441.createElement("path", {
  d: "M7.906 4h16.188A3.912 3.912 0 0128 7.913v7.285c0 2.86-2.71 4.652-4.673 5.232.882 1.667 2.262 4.193 4.142 7.57h-6.365l-4.2-7.285h-.275c-.477 0-1.603-.243-1.603-.721v-4.988h7.981V8.919H8.957v10.42c0 1.855 1.789 5.395 4.591 8.661H7.183C4.844 26.285 4 22.778 4 20.715V7.913A3.912 3.912 0 017.906 4z"
}))));
RcCloudContact.displayName = "RcCloudContact";
RcCloudContact["iconName"] = "rc_cloud_contact";
var RcCloudContact_default = RcCloudContact;

// src/icon/RcContact.tsx
import React442, { forwardRef as forwardRef392, memo as memo305 } from "react";
var RcContact = memo305(forwardRef392((props, svgRef) => /* @__PURE__ */ React442.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React442.createElement("path", {
  fill: "var(--color47, #f80)",
  d: "M28 4a2 2 0 012 2v16a2 2 0 01-2 2h-7.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141a1 1 0 00-.707-.293H4.001a2 2 0 01-2-2V6a2 2 0 012-2h24z"
}))));
RcContact.displayName = "RcContact";
RcContact["iconName"] = "rc_contact";
var RcContact_default = RcContact;

// src/icon/RcHelp.tsx
import React443, { forwardRef as forwardRef393, memo as memo306 } from "react";
var RcHelp = memo306(forwardRef393((props, svgRef) => /* @__PURE__ */ React443.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React443.createElement("path", {
  d: "M16 0c8.837 0 16 7.163 16 16s-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0zm1.205 20.001h-2.204V22h2.204v-1.999zM15.913 9c-.893 0-1.645.198-2.258.595-.97.621-1.593 1.933-1.655 3.42h2.25c0-.433.232-1.109.484-1.511s.679-.602 1.281-.602c.612 0 1.034.163 1.265.489s.346.687.346 1.084c0 .344-.104.66-.311.947a2.004 2.004 0 01-.451.462l-.568.446c-.56.438-.908.825-1.043 1.162s-.117 1.657-.148 2.539h2.102c.005-.417-.062-.437 0-.635.099-.313.298-1.587.599-1.822l.553-.43c.561-.438.939-.798 1.137-1.08.337-.464.506-1.035.506-1.714 0-1.106-.388-1.94-1.164-2.504s-1.75-.845-2.923-.845z"
}))));
RcHelp.displayName = "RcHelp";
RcHelp["iconName"] = "rc_help";
var RcHelp_default = RcHelp;

// src/icon/RcvMicOff.tsx
import React444, { forwardRef as forwardRef394, memo as memo307 } from "react";
var RcvMicOff = memo307(forwardRef394((props, svgRef) => /* @__PURE__ */ React444.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React444.createElement("path", {
  fill: "var(--color16, #6a7186)",
  d: "M23.5 12a1 1 0 011 1v3c0 4.632-3.5 8.447-7.999 8.945L16.5 29a1 1 0 01-2 0v-4.055a8.952 8.952 0 01-3.791-1.325l1.461-1.461A7 7 0 0022.5 16v-3a1 1 0 011-1zm-3 1.828V16a5 5 0 01-6.827 4.656l6.827-6.828zM7.5 12a1 1 0 011 1v3c0 1.206.305 2.341.842 3.332l-1.462 1.46A8.961 8.961 0 016.5 16v-3a1 1 0 011-1zm8-10a5 5 0 015 5v1.172l-9.655 9.656a4.978 4.978 0 01-.345-1.829v-9a5 5 0 015-5z"
}), /* @__PURE__ */ React444.createElement("path", {
  fill: "var(--color17, #f54c3d)",
  d: "M28.935 3.979a.999.999 0 010 1.414L4.893 29.435a.999.999 0 11-1.414-1.414L27.521 3.979a.999.999 0 011.414 0z"
}))));
RcvMicOff.displayName = "RcvMicOff";
RcvMicOff["iconName"] = "rcv_mic-off";
var RcvMicOff_default = RcvMicOff;

// src/icon/RcvVideocamOff.tsx
import React445, { forwardRef as forwardRef395, memo as memo308 } from "react";
var RcvVideocamOff = memo308(forwardRef395((props, svgRef) => /* @__PURE__ */ React445.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React445.createElement("path", {
  fill: "var(--color16, #6a7186)",
  d: "M21 5.5c.597 0 1.132.261 1.499.675L3.172 25.5H3a2 2 0 01-2-2v-16a2 2 0 012-2h18zm2 5.828V23.5a2 2 0 01-2 2H8.827L23 11.328zm7-2.21a1 1 0 01.993.883l.007.117v10.764a1 1 0 01-1.34.94l-.107-.046-5-2.5a1 1 0 01-.545-.77L24 18.381v-5.764a1 1 0 01.445-.832l.108-.063 5-2.5c.139-.069.292-.106.447-.106z"
}), /* @__PURE__ */ React445.createElement("path", {
  fill: "var(--color17, #f54c3d)",
  d: "M29.435 3.479a.999.999 0 010 1.414L5.393 28.935a.999.999 0 11-1.414-1.414L28.021 3.479a.999.999 0 011.414 0z"
}))));
RcvVideocamOff.displayName = "RcvVideocamOff";
RcvVideocamOff["iconName"] = "rcv_videocam-off";
var RcvVideocamOff_default = RcvVideocamOff;

// src/icon/Read.tsx
import React446, { forwardRef as forwardRef396, memo as memo309 } from "react";
var Read = memo309(forwardRef396((props, svgRef) => /* @__PURE__ */ React446.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React446.createElement("path", {
  d: "M25.615 2a2 2 0 011.752 2.965L24 11.08l3.331 5.943a2 2 0 01-1.745 2.978H6v9a1 1 0 01-2 0v-26a1 1 0 011-1h20.615zm-.001 2H6v14h19.586l-3.331-5.943a2 2 0 01-.084-1.789l.076-.154 3.366-6.115z"
}))));
Read.displayName = "Read";
Read["iconName"] = "read";
var Read_default = Read;

// src/icon/Record.tsx
import React447, { forwardRef as forwardRef397, memo as memo310 } from "react";
var Record = memo310(forwardRef397((props, svgRef) => /* @__PURE__ */ React447.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React447.createElement("path", {
  d: "M16 4c6.627 0 12 5.373 12 12s-5.373 12-12 12S4 22.627 4 16 9.373 4 16 4zm0 4a8 8 0 100 16 8 8 0 000-16z"
}))));
Record.displayName = "Record";
Record["iconName"] = "record";
var Record_default = Record;

// src/icon/Refresh.tsx
import React448, { forwardRef as forwardRef398, memo as memo311 } from "react";
var Refresh = memo311(forwardRef398((props, svgRef) => /* @__PURE__ */ React448.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React448.createElement("path", {
  d: "M27 3a1 1 0 011 1v6a1 1 0 01-.883.993L27 11h-6a1 1 0 010-2l3.486-.001A10.981 10.981 0 0016 5C9.925 5 5 9.925 5 16s4.925 11 11 11 11-4.925 11-11a1 1 0 012 0c0 7.18-5.82 13-13 13S3 23.18 3 16 8.82 3 16 3a12.98 12.98 0 0110.001 4.693L26 4a1 1 0 011-1z"
}))));
Refresh.displayName = "Refresh";
Refresh["iconName"] = "refresh";
var Refresh_default = Refresh;

// src/icon/RemoveBorder.tsx
import React449, { forwardRef as forwardRef399, memo as memo312 } from "react";
var RemoveBorder = memo312(forwardRef399((props, svgRef) => /* @__PURE__ */ React449.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React449.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm7 11a1 1 0 010 2H9a1 1 0 010-2h14z"
}))));
RemoveBorder.displayName = "RemoveBorder";
RemoveBorder["iconName"] = "remove_border";
var RemoveBorder_default = RemoveBorder;

// src/icon/RemoveField.tsx
import React450, { forwardRef as forwardRef400, memo as memo313 } from "react";
var RemoveField = memo313(forwardRef400((props, svgRef) => /* @__PURE__ */ React450.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React450.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm3.712 7.813l-3.713 3.713-3.712-3.712a1.75 1.75 0 00-2.475 2.475l3.712 3.712-3.713 3.713a1.75 1.75 0 002.475 2.475l3.712-3.713 3.713 3.713a1.75 1.75 0 002.475-2.475l-3.713-3.713 3.713-3.712a1.75 1.75 0 00-2.475-2.475z"
}))));
RemoveField.displayName = "RemoveField";
RemoveField["iconName"] = "remove_field";
var RemoveField_default = RemoveField;

// src/icon/Remove.tsx
import React451, { forwardRef as forwardRef401, memo as memo314 } from "react";
var Remove = memo314(forwardRef401((props, svgRef) => /* @__PURE__ */ React451.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React451.createElement("path", {
  d: "M25.899 6.101C20.432.634 11.567.634 6.1 6.101S.633 20.433 6.1 25.9c5.467 5.467 14.332 5.467 19.799 0s5.467-14.332 0-19.799zM9 15h14a1 1 0 010 2H9a1 1 0 010-2z"
}))));
Remove.displayName = "Remove";
Remove["iconName"] = "remove";
var Remove_default = Remove;

// src/icon/Repeat.tsx
import React452, { forwardRef as forwardRef402, memo as memo315 } from "react";
var Repeat = memo315(forwardRef402((props, svgRef) => /* @__PURE__ */ React452.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React452.createElement("path", {
  d: "M27 15a1 1 0 00-1 1v6a1 1 0 01-1 1l-17.829.001 2.536-2.536a.999.999 0 10-1.414-1.414L4.05 23.294a.999.999 0 000 1.414l4.243 4.243a.999.999 0 101.414-1.414l-2.536-2.535L26 25.001a2 2 0 002-2v-7a1 1 0 00-1-1zM22.293 3.05a.999.999 0 000 1.414l2.536 2.535L6 7a2 2 0 00-2 2v7a1 1 0 002 0v-6a1 1 0 011-1l17.829-.001-2.536 2.536a.999.999 0 101.414 1.414l4.243-4.243a.999.999 0 000-1.414l-4.243-4.243a.999.999 0 00-1.414 0z"
}))));
Repeat.displayName = "Repeat";
Repeat["iconName"] = "repeat";
var Repeat_default = Repeat;

// src/icon/Reply.tsx
import React453, { forwardRef as forwardRef403, memo as memo316 } from "react";
var Reply = memo316(forwardRef403((props, svgRef) => /* @__PURE__ */ React453.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React453.createElement("path", {
  d: "M19.287 4.297l.127.117 10.172 10.172a2 2 0 01.117 2.701l-.117.127-10.172 10.172a2 2 0 01-3.408-1.265L16 26.172 15.999 21l-.999.001c-7.18 0-13-5.82-13-13v-3c0-1.192 1.711-1.384 1.975-.221a8 8 0 007.538 6.217l.263.004h4.222l.001-5.171a2 2 0 013.287-1.531zM14 19h2.999a1 1 0 01.993.883l.007.117.001 5.689c0 .11.09.2.2.2a.197.197 0 00.141-.059l9.689-9.689a.2.2 0 000-.283l-9.689-9.689a.2.2 0 00-.342.141l-.001 5.688a1 1 0 01-1 1l-5.531-.005a9.996 9.996 0 01-7.179-3.365l-.202-.235.04.284c.759 4.955 4.824 8.822 9.873 9.277l-.001.045z"
}))));
Reply.displayName = "Reply";
Reply["iconName"] = "reply";
var Reply_default = Reply;

// src/icon/ResendFax.tsx
import React454, { forwardRef as forwardRef404, memo as memo317 } from "react";
var ResendFax = memo317(forwardRef404((props, svgRef) => /* @__PURE__ */ React454.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React454.createElement("path", {
  d: "M6.258 4.144c.223-.069.448.1.445.335l-.084 5.619a.345.345 0 01-.548.276l-1.785-1.3c-1.844 3.856-2.155 8.04-.407 11.695 1.895 3.962 5.623 6.577 10.568 6.718.666.019 1.156.596 1.114 1.31-.044.786-.706 1.434-1.441 1.412-5.832-.166-10.264-3.245-12.55-8.034-2.167-4.528-2.223-9.621.667-14.592L.642 6.424a.345.345 0 01.103-.61zM17.193 0c4.967 0 9.624 2.747 12.252 6.831 2.772 4.306 2.97 9.477.592 14.67a1.373 1.373 0 01-.134.226l1.913 1.021a.348.348 0 01-.02.624l-5.231 2.411a.348.348 0 01-.489-.273l-.69-5.575a.347.347 0 01.507-.348l1.835.98c.012-.032.019-.063.031-.091 2.017-4.404 1.879-8.736-.414-12.3-2.183-3.399-6.249-5.549-10.22-5.688a1.244 1.244 0 01-1.206-1.162 1.26 1.26 0 011.272-1.328z"
}))));
ResendFax.displayName = "ResendFax";
ResendFax["iconName"] = "resend-fax";
var ResendFax_default = ResendFax;

// src/icon/ResetZoom.tsx
import React455, { forwardRef as forwardRef405, memo as memo318 } from "react";
var ResetZoom = memo318(forwardRef405((props, svgRef) => /* @__PURE__ */ React455.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React455.createElement("path", {
  d: "M27 3a2 2 0 012 2v22a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h22zm-1 2H6a1 1 0 00-1 1v20a1 1 0 001 1h20a1 1 0 001-1V6a1 1 0 00-1-1zm-2 12a1 1 0 011 1v6a1 1 0 01-1 1h-6a1 1 0 010-2h5v-5a1 1 0 011-1zM14 7a1 1 0 010 2H9v5a1 1 0 01-2 0V8a1 1 0 011-1h6z"
}))));
ResetZoom.displayName = "ResetZoom";
ResetZoom["iconName"] = "reset-zoom";
var ResetZoom_default = ResetZoom;

// src/icon/RichTextEditor.tsx
import React456, { forwardRef as forwardRef406, memo as memo319 } from "react";
var RichTextEditor = memo319(forwardRef406((props, svgRef) => /* @__PURE__ */ React456.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React456.createElement("path", {
  d: "M22.118 24.538l.796 1.96a1.176 1.176 0 01-2.121 1.008l-.059-.124-.406-1.053 1.791-1.791zM13.947 4.475l.08.126.063.133 4.188 10.33-1.772 1.772L13 8.306l-4.508 10.71 5.835-.001-1.982 1.982-4.894.001-2.184 6.385a1.176 1.176 0 01-1.402.692l-.13-.044a1.176 1.176 0 01-.692-1.402l.044-.13L11.91 4.735c.358-.884 1.522-.97 2.038-.259zm11.825 6.893l.112.066.099.076.062.055 2.257 2.062c.381.289.536.765.412 1.204l-.041.118-.053.109-.089.155-11.533 11.692a1.56 1.56 0 01-.487.329l-.162.064-.149.041-2.956.661h-.108l-.124-.003a1.106 1.106 0 01-.948-.702l-.034-.108-.025-.144-.015-.169.524-2.908c.034-.181.102-.355.221-.539l.099-.141.098-.11 11.512-11.673a1.219 1.219 0 011.325-.134zm-3.673 5.145l-7.745 7.856-.285 1.582 1.629-.363 7.685-7.789-1.285-1.285zm3.141-3.185l-1.737 1.76 1.286 1.286 1.796-1.82-1.345-1.227z"
}))));
RichTextEditor.displayName = "RichTextEditor";
RichTextEditor["iconName"] = "rich_text_editor";
var RichTextEditor_default = RichTextEditor;

// src/icon/RollAp.tsx
import React457, { forwardRef as forwardRef407, memo as memo320 } from "react";
var RollAp = memo320(forwardRef407((props, svgRef) => /* @__PURE__ */ React457.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React457.createElement("path", {
  d: "M13 18a1 1 0 011 1v8a1 1 0 01-2 0l-.001-5.586-5.827 5.829a.999.999 0 11-1.414-1.414L10.585 20H5a1 1 0 010-2h8zm6-14a1 1 0 011 1l.001 5.586 5.827-5.829a.999.999 0 111.414 1.414L21.415 12H27a1 1 0 010 2h-8a1 1 0 01-1-1V5a1 1 0 011-1z"
}))));
RollAp.displayName = "RollAp";
RollAp["iconName"] = "roll-ap";
var RollAp_default = RollAp;

// src/icon/SaveDraft.tsx
import React458, { forwardRef as forwardRef408, memo as memo321 } from "react";
var SaveDraft = memo321(forwardRef408((props, svgRef) => /* @__PURE__ */ React458.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React458.createElement("path", {
  d: "M22.172 3a2 2 0 011.414.586l4.828 4.828A2 2 0 0129 9.828V27a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h17.172zM10 5H6a1 1 0 00-1 1v20a1 1 0 001 1h20a1 1 0 001-1V10.243a.997.997 0 00-.293-.707L23 5.829V13c0 1.105-.767 2-1.714 2h-9.571c-.947 0-1.714-.895-1.714-2V5zm11.286 0h-9.571v7a1 1 0 001 1h7.571a1 1 0 001-1V5zM19 7a1 1 0 011 1v2a1 1 0 01-2 0V8a1 1 0 011-1z"
}))));
SaveDraft.displayName = "SaveDraft";
SaveDraft["iconName"] = "save-draft";
var SaveDraft_default = SaveDraft;

// src/icon/ScheduleMeeting.tsx
import React459, { forwardRef as forwardRef409, memo as memo322 } from "react";
var ScheduleMeeting = memo322(forwardRef409((props, svgRef) => /* @__PURE__ */ React459.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React459.createElement("path", {
  d: "M24.889 5.333A2.667 2.667 0 0127.556 8v16a2.667 2.667 0 01-2.667 2.667H7.111A2.667 2.667 0 014.444 24V8a2.667 2.667 0 012.667-2.667h17.778zm.889 8H6.222V24c0 .456.343.832.785.883l.104.006h17.778a.889.889 0 00.883-.785l.006-.104V13.333zm-10.667 7.111a.889.889 0 110 1.778H9.778a.889.889 0 110-1.778h5.333zM22.222 16a.889.889 0 110 1.778H9.778a.889.889 0 110-1.778h12.444zm2.667-8.889H7.111a.889.889 0 00-.883.785L6.222 8v3.556h19.556V8a.889.889 0 00-.785-.883l-.104-.006z"
}))));
ScheduleMeeting.displayName = "ScheduleMeeting";
ScheduleMeeting["iconName"] = "schedule_meeting";
var ScheduleMeeting_default = ScheduleMeeting;

// src/icon/Schedule.tsx
import React460, { forwardRef as forwardRef410, memo as memo323 } from "react";
var Schedule = memo323(forwardRef410((props, svgRef) => /* @__PURE__ */ React460.createElement("svg", {
  viewBox: "0 0 33 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React460.createElement("path", {
  d: "M23.793 30.946a8.434 8.434 0 10-.001-16.867 8.434 8.434 0 00.001 16.867zm0-3.2a5.233 5.233 0 110-10.466 5.233 5.233 0 010 10.466z"
}), /* @__PURE__ */ React460.createElement("path", {
  d: "M23.793 19.351c.582 0 1.054.472 1.054 1.054v1.054h1.054a1.054 1.054 0 010 2.108h-1.054v1.054a1.054 1.054 0 01-2.108 0v-1.054h-1.054a1.054 1.054 0 010-2.108h1.054v-1.054c0-.582.472-1.054 1.054-1.054zM1.431 10.24h23.04v3.2H1.431v-3.2zM8 0a1.6 1.6 0 011.6 1.6v1.92a1.6 1.6 0 11-3.2 0V1.6A1.6 1.6 0 018 0zM18.24 0a1.6 1.6 0 011.6 1.6v1.92a1.6 1.6 0 11-3.2 0V1.6a1.6 1.6 0 011.6-1.6z"
}), /* @__PURE__ */ React460.createElement("path", {
  d: "M1.6 3.84a1.6 1.6 0 011.6 1.6V24A1.6 1.6 0 110 24V5.44a1.6 1.6 0 011.6-1.6zM24.64 3.84a1.6 1.6 0 011.6 1.6v9.6a1.6 1.6 0 11-3.2 0v-9.6a1.6 1.6 0 011.6-1.6z"
}), /* @__PURE__ */ React460.createElement("path", {
  d: "M1.6 3.84h23.04a1.6 1.6 0 110 3.2H1.6a1.6 1.6 0 110-3.2zM1.6 22.4h14.72a1.6 1.6 0 110 3.2H1.6a1.6 1.6 0 110-3.2z"
}))));
Schedule.displayName = "Schedule";
Schedule["iconName"] = "schedule";
var Schedule_default = Schedule;

// src/icon/ScreenshareBorder.tsx
import React461, { forwardRef as forwardRef411, memo as memo324 } from "react";
var ScreenshareBorder = memo324(forwardRef411((props, svgRef) => /* @__PURE__ */ React461.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React461.createElement("path", {
  d: "M27 5a2 2 0 011.994 1.851L29 7v18h2a1 1 0 01.117 1.993L31 27H1a1 1 0 01-.117-1.993L1 25h2V7c0-1.054.816-1.918 1.851-1.995L5 5h22zm0 2H5v18h22V7zm-10.387 3.21l.094.083 4.657 4.657a1 1 0 01-1.32 1.497l-.094-.083-2.951-2.95L17 21a1 1 0 01-2 0l-.001-7.586-2.949 2.95a1 1 0 01-1.497-1.32l.083-.094 4.657-4.657a1 1 0 011.32-.083z"
}))));
ScreenshareBorder.displayName = "ScreenshareBorder";
ScreenshareBorder["iconName"] = "screenshare_border";
var ScreenshareBorder_default = ScreenshareBorder;

// src/icon/Screenshare.tsx
import React462, { forwardRef as forwardRef412, memo as memo325 } from "react";
var Screenshare = memo325(forwardRef412((props, svgRef) => /* @__PURE__ */ React462.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React462.createElement("path", {
  d: "M27 5H5a2 2 0 00-2 2v18H1a1 1 0 000 2h30a1 1 0 000-2h-2V7a2 2 0 00-2-2zm-10.293 5.293l4.657 4.657a1 1 0 01-1.32 1.497l-.094-.083-2.951-2.95L17 21a1 1 0 01-2 0l-.001-7.586-2.949 2.95a1 1 0 01-1.497-1.32l.083-.094 4.657-4.657a1 1 0 011.32-.083l.094.083z"
}))));
Screenshare.displayName = "Screenshare";
Screenshare["iconName"] = "screenshare";
var Screenshare_default = Screenshare;

// src/icon/SearchNav.tsx
import React463, { forwardRef as forwardRef413, memo as memo326 } from "react";
var SearchNav = memo326(forwardRef413((props, svgRef) => /* @__PURE__ */ React463.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React463.createElement("path", {
  d: "M14 3c6.075 0 11 4.925 11 11a10.95 10.95 0 01-2.454 6.926l6.197 6.195a1.5 1.5 0 11-2.121 2.121l-6.265-6.264A10.95 10.95 0 0114 25C7.925 25 3 20.075 3 14S7.925 3 14 3zm0 3a8 8 0 100 16 8 8 0 000-16z"
}))));
SearchNav.displayName = "SearchNav";
SearchNav["iconName"] = "search_nav";
var SearchNav_default = SearchNav;

// src/icon/Search.tsx
import React464, { forwardRef as forwardRef414, memo as memo327 } from "react";
var Search = memo327(forwardRef414((props, svgRef) => /* @__PURE__ */ React464.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React464.createElement("path", {
  d: "M21.778 6.222c4.057 4.057 4.283 10.495.676 14.817l6.395 6.396a.999.999 0 11-1.414 1.414l-6.395-6.396c-4.322 3.607-10.76 3.382-14.818-.675-4.296-4.296-4.296-11.261 0-15.556s11.261-4.296 15.556 0zm-.859 13.535c2.968-3.556 2.744-8.822-.555-12.121a9 9 0 00-12.728 0 9 9 0 000 12.728c3.299 3.299 8.566 3.522 12.122.554l.633-.528.528-.633z"
}))));
Search.displayName = "Search";
Search["iconName"] = "search";
var Search_default = Search;

// src/icon/Selects.tsx
import React465, { forwardRef as forwardRef415, memo as memo328 } from "react";
var Selects = memo328(forwardRef415((props, svgRef) => /* @__PURE__ */ React465.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React465.createElement("path", {
  d: "M27 2a3 3 0 013 3v22a3 3 0 01-3 3H5a3 3 0 01-3-3V5a3 3 0 013-3h22zm-4.593 8.375l-8.201 7.993-3.433-3.412a1.334 1.334 0 00-1.878 1.894l4.36 4.331a1.333 1.333 0 001.865.012l9.14-8.9a1.332 1.332 0 10-1.853-1.917z"
}))));
Selects.displayName = "Selects";
Selects["iconName"] = "selects";
var Selects_default = Selects;

// src/icon/SendFilled.tsx
import React466, { forwardRef as forwardRef416, memo as memo329 } from "react";
var SendFilled = memo329(forwardRef416((props, svgRef) => /* @__PURE__ */ React466.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React466.createElement("path", {
  d: "M28.941 4.342l-8.666 24c-.305.843-1.48.891-1.851.074l-4.196-9.23 7.309-7.307-1.414-1.414-7.308 7.308-9.227-4.193c-.816-.371-.769-1.546.074-1.851l24-8.666a1 1 0 011.28 1.28z"
}))));
SendFilled.displayName = "SendFilled";
SendFilled["iconName"] = "send_filled";
var SendFilled_default = SendFilled;

// src/icon/Send.tsx
import React467, { forwardRef as forwardRef417, memo as memo330 } from "react";
var Send = memo330(forwardRef417((props, svgRef) => /* @__PURE__ */ React467.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React467.createElement("path", {
  d: "M28.941 4.342l-8.666 24c-.305.843-1.48.891-1.851.074l-4.637-10.201-10.201-4.637c-.816-.371-.769-1.546.074-1.851l24-8.666a1 1 0 011.28 1.28zm-3.406 3.539l-9.796 9.796 3.489 7.675 6.307-17.471zM24.12 6.466L6.65 12.775l7.674 3.487 9.796-9.796z"
}))));
Send.displayName = "Send";
Send["iconName"] = "send";
var Send_default = Send;

// src/icon/SettingsBorder.tsx
import React468, { forwardRef as forwardRef418, memo as memo331 } from "react";
var SettingsBorder = memo331(forwardRef418((props, svgRef) => /* @__PURE__ */ React468.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React468.createElement("path", {
  d: "M20.857 2.057a15.048 15.048 0 014.823 2.688c.357.296.477.786.297 1.21a4.13 4.13 0 00.241 3.731 4.29 4.29 0 003.411 2.095c.467.033.858.359.966.806a14.528 14.528 0 01.001 6.827c-.108.448-.5.774-.967.807a4.285 4.285 0 00-3.411 2.094 4.132 4.132 0 00-.241 3.732c.18.423.06.913-.296 1.209a15.044 15.044 0 01-4.822 2.689 1.081 1.081 0 01-1.249-.428c-.783-1.2-2.13-1.939-3.608-1.939s-2.825.739-3.61 1.939a1.08 1.08 0 01-1.248.427 15.014 15.014 0 01-4.822-2.687 1.04 1.04 0 01-.297-1.21 4.13 4.13 0 00-.241-3.731 4.29 4.29 0 00-3.411-2.095 1.066 1.066 0 01-.966-.806 14.528 14.528 0 01-.001-6.827c.108-.448.5-.774.967-.807a4.285 4.285 0 003.411-2.094 4.135 4.135 0 00.242-3.732 1.04 1.04 0 01.296-1.209 15.044 15.044 0 014.822-2.689c.467-.157.982.02 1.249.428a4.295 4.295 0 003.608 1.94c1.458 0 2.789-.719 3.562-1.867l.038-.06a1.08 1.08 0 011.257-.441zm-9.694 2.121l-.205.082c-.945.39-1.841.889-2.667 1.487l-.176.131.023.076a6.126 6.126 0 01-.495 4.501l-.136.244a6.27 6.27 0 01-4.229 2.975l-.063.01-.037.2c-.095.556-.152 1.12-.171 1.688L3 15.999c0 .714.06 1.421.179 2.115l.037.198.063.012a6.279 6.279 0 014.093 2.756l.136.22a6.13 6.13 0 01.63 4.746l-.023.075.176.132a13.017 13.017 0 002.667 1.486l.205.081.027-.031a6.302 6.302 0 014.545-2.207l.267-.006a6.3 6.3 0 014.811 2.215l.025.03.206-.081c.945-.39 1.841-.889 2.667-1.487l.175-.132-.022-.075a6.126 6.126 0 01.495-4.501l.136-.244a6.27 6.27 0 014.229-2.975l.062-.011.038-.199c.095-.556.152-1.12.171-1.688l.007-.427c0-.714-.06-1.421-.179-2.115l-.038-.199-.062-.011a6.279 6.279 0 01-4.093-2.756l-.136-.22a6.13 6.13 0 01-.63-4.746l.022-.076-.175-.131a13.05 13.05 0 00-2.668-1.487l-.203-.08-.087.104a6.305 6.305 0 01-4.489 2.134l-.262.005a6.3 6.3 0 01-4.811-2.215l-.026-.032zM16 11a5 5 0 11-.001 10.001A5 5 0 0116 11zm0 2a3 3 0 100 6 3 3 0 000-6z"
}))));
SettingsBorder.displayName = "SettingsBorder";
SettingsBorder["iconName"] = "settings_border";
var SettingsBorder_default = SettingsBorder;

// src/icon/Settings.tsx
import React469, { forwardRef as forwardRef419, memo as memo332 } from "react";
var Settings = memo332(forwardRef419((props, svgRef) => /* @__PURE__ */ React469.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React469.createElement("path", {
  d: "M20.857 2.057a15.048 15.048 0 014.823 2.688c.357.296.477.786.297 1.21a4.13 4.13 0 00.241 3.731 4.29 4.29 0 003.411 2.095c.467.033.858.359.966.806a14.528 14.528 0 01.001 6.827c-.108.448-.5.774-.967.807a4.285 4.285 0 00-3.411 2.094 4.132 4.132 0 00-.241 3.732c.18.423.06.913-.296 1.209a15.044 15.044 0 01-4.822 2.689 1.081 1.081 0 01-1.249-.428c-.783-1.2-2.13-1.939-3.608-1.939s-2.825.739-3.61 1.939a1.08 1.08 0 01-1.248.427 15.014 15.014 0 01-4.822-2.687 1.04 1.04 0 01-.297-1.21 4.13 4.13 0 00-.241-3.731 4.29 4.29 0 00-3.411-2.095 1.066 1.066 0 01-.966-.806 14.528 14.528 0 01-.001-6.827c.108-.448.5-.774.967-.807a4.285 4.285 0 003.411-2.094 4.135 4.135 0 00.242-3.732 1.04 1.04 0 01.296-1.209 15.044 15.044 0 014.822-2.689c.467-.157.982.02 1.249.428a4.295 4.295 0 003.608 1.94c1.458 0 2.789-.719 3.562-1.867l.038-.06a1.08 1.08 0 011.257-.441zM16 12a4 4 0 100 8 4 4 0 000-8z"
}))));
Settings.displayName = "Settings";
Settings["iconName"] = "settings";
var Settings_default = Settings;

// src/icon/Share.tsx
import React470, { forwardRef as forwardRef420, memo as memo333 } from "react";
var Share = memo333(forwardRef420((props, svgRef) => /* @__PURE__ */ React470.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React470.createElement("path", {
  d: "M26 30H6a2 2 0 01-2-2V12a2 2 0 012-2h3a1 1 0 010 2H7a1 1 0 00-1 1v14a1 1 0 001 1h18a1 1 0 001-1V13a1 1 0 00-1-1h-2a1 1 0 010-2h3a2 2 0 012 2v16a2 2 0 01-2 2zM19.884 8.292L17 5.416v11.17a1 1 0 01-2 0V5.416l-2.884 2.876a.998.998 0 01-1.411-1.411l4.588-4.588a.999.999 0 011.414 0l4.588 4.588a.998.998 0 01-1.411 1.411z"
}))));
Share.displayName = "Share";
Share["iconName"] = "share";
var Share_default = Share;

// src/icon/Sharepoint.tsx
import React471, { forwardRef as forwardRef421, memo as memo334 } from "react";
var Sharepoint = memo334(forwardRef421((props, svgRef) => /* @__PURE__ */ React471.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React471.createElement("path", {
  d: "M18.257 2c-.041-.002-.081.009-.122.017L2.455 4.975a.57.57 0 00-.455.56v20.877c0 .269.19.51.455.56l15.68 3.011c.035.006.07.017.105.017a.535.535 0 00.35-.123.576.576 0 00.21-.437V2.56a.58.58 0 00-.21-.437.546.546 0 00-.333-.123zm1.663 4.533v6.615a3.303 3.303 0 002.66-2.362 5.718 5.718 0 012.607 2.187A3.362 3.362 0 0023.28 16a3.36 3.36 0 001.89 3.01 5.738 5.738 0 01-2.607 2.153 3.301 3.301 0 00-2.643-2.31v6.615c1.562-.251 2.717-1.544 2.783-3.167a6.817 6.817 0 003.57-2.957c.118.013.245.017.367.017a3.363 3.363 0 003.36-3.36 3.365 3.365 0 00-3.692-3.343 6.813 6.813 0 00-3.605-3.01c-.09-1.599-1.238-2.865-2.783-3.115zm-9.747 4.095c.56 0 1.008.048 1.4.105s.783.168 1.12.28V13.2a5.117 5.117 0 00-.56-.333c-.195-.1-.4-.176-.613-.227-.223-.057-.444-.105-.613-.105a2.26 2.26 0 00-.613-.07c-.28 0-.512.013-.735.07s-.392.099-.56.21a.977.977 0 00-.456.788c0 .168.066.343.123.455.111.112.216.274.385.385s.389.221.613.332c.223.112.507.239.787.35.391.169.783.337 1.12.56.337.169.617.385.84.665.223.223.391.503.56.84.111.337.175.676.175 1.067-.057.617-.164 1.061-.332 1.453-.223.392-.519.722-.91.945s-.774.396-1.278.507c-.503.111-1.015.175-1.575.175s-1.124-.063-1.627-.175a3.844 3.844 0 01-1.278-.385v-2.292c.395.342.853.603 1.348.77.503.168.949.28 1.452.28.28 0 .564.004.787-.053s.392-.116.56-.228c.169-.111.276-.221.333-.332s.105-.274.105-.385c0-.223-.046-.391-.157-.56s-.287-.286-.455-.455c-.223-.112-.455-.274-.735-.385s-.556-.234-.892-.402c-.783-.337-1.394-.722-1.785-1.225s-.613-1.061-.613-1.733c0-.56.11-1.008.333-1.4s.501-.682.893-.962c.392-.223.792-.449 1.295-.56s.997-.158 1.557-.158h.001z"
}))));
Sharepoint.displayName = "Sharepoint";
Sharepoint["iconName"] = "sharepoint";
var Sharepoint_default = Sharepoint;

// src/icon/ShortcutBorder.tsx
import React472, { forwardRef as forwardRef422, memo as memo335 } from "react";
var ShortcutBorder = memo335(forwardRef422((props, svgRef) => /* @__PURE__ */ React472.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React472.createElement("path", {
  d: "M22 24a2 2 0 012 2v2a2 2 0 01-2 2H10a2 2 0 01-2-2v-2a2 2 0 012-2h12zm-1 2H11a1 1 0 000 2h10a1 1 0 000-2zM17.2 2.9l12.4 9.3A1 1 0 0129 14h-5v7a2 2 0 01-2 2H10a2 2 0 01-2-2v-7H3a1 1 0 01-.6-1.8l12.4-9.3a2.001 2.001 0 012.4 0zM16 4.5L5.999 11.999 9 12a1 1 0 011 1v7a1 1 0 001 1h10a1 1 0 001-1v-7a1 1 0 011-1l3-.001L16 4.5z"
}))));
ShortcutBorder.displayName = "ShortcutBorder";
ShortcutBorder["iconName"] = "shortcut_border";
var ShortcutBorder_default = ShortcutBorder;

// src/icon/Shortcut.tsx
import React473, { forwardRef as forwardRef423, memo as memo336 } from "react";
var Shortcut = memo336(forwardRef423((props, svgRef) => /* @__PURE__ */ React473.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React473.createElement("path", {
  d: "M22 24a2 2 0 012 2v2a2 2 0 01-2 2H10a2 2 0 01-2-2v-2a2 2 0 012-2h12zM17.2 2.9l12.4 9.3A1 1 0 0129 14h-5v7a2 2 0 01-2 2H10a2 2 0 01-2-2v-7H3a1 1 0 01-.6-1.8l12.4-9.3a2.001 2.001 0 012.4 0z"
}))));
Shortcut.displayName = "Shortcut";
Shortcut["iconName"] = "shortcut";
var Shortcut_default = Shortcut;

// src/icon/Signal0.tsx
import React474, { forwardRef as forwardRef424, memo as memo337 } from "react";
var Signal0 = memo337(forwardRef424((props, svgRef) => /* @__PURE__ */ React474.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React474.createElement("path", {
  d: "M6 12a4 4 0 110 8 4 4 0 010-8zm10 0a4 4 0 110 8 4 4 0 010-8zm10 0a4 4 0 110 8 4 4 0 010-8zM6 14a2 2 0 10-.001 3.999A2 2 0 006 14zm10 0a2 2 0 10-.001 3.999A2 2 0 0016 14zm10 0a2 2 0 10-.001 3.999A2 2 0 0026 14z"
}))));
Signal0.displayName = "Signal0";
Signal0["iconName"] = "signal-0";
var Signal0_default = Signal0;

// src/icon/Signal1.tsx
import React475, { forwardRef as forwardRef425, memo as memo338 } from "react";
var Signal1 = memo338(forwardRef425((props, svgRef) => /* @__PURE__ */ React475.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React475.createElement("path", {
  d: "M6 12a4 4 0 110 8 4 4 0 010-8zm10 0a4 4 0 110 8 4 4 0 010-8zm10 0a4 4 0 110 8 4 4 0 010-8zm-10 2a2 2 0 10-.001 3.999A2 2 0 0016 14zm10 0a2 2 0 10-.001 3.999A2 2 0 0026 14z"
}))));
Signal1.displayName = "Signal1";
Signal1["iconName"] = "signal-1";
var Signal1_default = Signal1;

// src/icon/Signal2.tsx
import React476, { forwardRef as forwardRef426, memo as memo339 } from "react";
var Signal2 = memo339(forwardRef426((props, svgRef) => /* @__PURE__ */ React476.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React476.createElement("path", {
  d: "M6 12a4 4 0 110 8 4 4 0 010-8zm10 0a4 4 0 110 8 4 4 0 010-8zm10 0a4 4 0 110 8 4 4 0 010-8zm0 2a2 2 0 10-.001 3.999A2 2 0 0026 14z"
}))));
Signal2.displayName = "Signal2";
Signal2["iconName"] = "signal-2";
var Signal2_default = Signal2;

// src/icon/Signal3.tsx
import React477, { forwardRef as forwardRef427, memo as memo340 } from "react";
var Signal3 = memo340(forwardRef427((props, svgRef) => /* @__PURE__ */ React477.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React477.createElement("path", {
  d: "M10.667 16a4 4 0 11-8 0 4 4 0 018 0zM20 16a4 4 0 11-8 0 4 4 0 018 0zM29.333 16a4 4 0 11-8 0 4 4 0 018 0z"
}))));
Signal3.displayName = "Signal3";
Signal3["iconName"] = "signal-3";
var Signal3_default = Signal3;

// src/icon/SmsBorder.tsx
import React478, { forwardRef as forwardRef428, memo as memo341 } from "react";
var SmsBorder = memo341(forwardRef428((props, svgRef) => /* @__PURE__ */ React478.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React478.createElement("path", {
  d: "M16 3c7.763 0 14 5.174 14 11.889 0 6.732-6.306 12.148-14 12.148-.586 0-1.172-.035-1.77-.103l-.451-.057-.461-.072-.048.042c-1.386 1.166-3.175 1.983-5.325 2.129l-.362.018-.333.005H5.598a.929.929 0 01-.848-1.317l.054-.099.811-1.308.271-.479.122-.221.217-.41.184-.368c.112-.232.202-.439.275-.624l.051-.135.013-.04-.294-.232c-2.617-2.133-4.235-5.11-4.433-8.229l-.016-.335L2 14.888C2 8.198 8.252 2.999 16 2.999zm0 2C9.351 5 4.167 9.285 4.004 14.6L4 14.858l.004.284c.078 2.528 1.326 5.014 3.433 6.84l.257.216 1.4 1.105-.478 1.417c-.202.557-.515 1.21-.993 2.069l-.116.206.014.001c1.623-.052 3.05-.576 4.203-1.467l.227-.183.75-.659 1.357.211c.672.094 1.311.141 1.942.141 6.671 0 12-4.61 12-10.148 0-5.485-5.223-9.889-12-9.889z"
}))));
SmsBorder.displayName = "SmsBorder";
SmsBorder["iconName"] = "sms_border";
var SmsBorder_default = SmsBorder;

// src/icon/SmsDefault.tsx
import React479, { forwardRef as forwardRef429, memo as memo342 } from "react";
var SmsDefault = memo342(forwardRef429((props, svgRef) => /* @__PURE__ */ React479.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React479.createElement("path", {
  d: "M16 8c-4.649 0-8.4 3.159-8.4 7.225l.003.191c.06 1.969 1.043 3.862 2.669 5.204l.176.141-.008.024c-.114.32-.324.748-.671 1.36l-.486.795c-.23.376.038.86.477.86h.991l.2-.003a5.452 5.452 0 003.412-1.305l.029-.026.276.043c.454.065.893.097 1.332.097 4.616 0 8.4-3.292 8.4-7.382 0-4.081-3.742-7.225-8.4-7.225z"
}))));
SmsDefault.displayName = "SmsDefault";
SmsDefault["iconName"] = "sms-default";
var SmsDefault_default = SmsDefault;

// src/icon/SmsInviteBorder.tsx
import React480, { forwardRef as forwardRef430, memo as memo343 } from "react";
var SmsInviteBorder = memo343(forwardRef430((props, svgRef) => /* @__PURE__ */ React480.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React480.createElement("path", {
  d: "M16 3c7.763 0 14 5.174 14 11.889 0 .858-.102 1.694-.297 2.501a8.047 8.047 0 00-1.779-1.363c.05-.374.076-.754.076-1.138C28 9.404 22.777 5 16 5 9.351 5 4.167 9.285 4.004 14.6L4 14.858l.004.284c.078 2.528 1.326 5.014 3.433 6.84l.257.216 1.4 1.105-.478 1.417c-.202.557-.515 1.21-.993 2.069l-.116.206.014.001c1.623-.052 3.05-.576 4.203-1.467l.227-.183.75-.659 1.357.211c.672.094 1.311.141 1.942.141l.261-.002c.183.698.458 1.358.811 1.968a15.607 15.607 0 01-2.842-.069l-.451-.057-.461-.072-.048.042c-1.386 1.166-3.175 1.983-5.325 2.129l-.362.018-.333.005H5.598a.929.929 0 01-.848-1.317l.054-.099.811-1.308.271-.479.122-.221.217-.41.184-.368c.112-.232.202-.439.275-.624l.051-.135.013-.04-.294-.232c-2.617-2.133-4.235-5.11-4.433-8.229l-.016-.335L2 14.89C2 8.2 8.252 3.001 16 3.001zm8 14a1 1 0 011 1v4h4a1 1 0 010 2h-4.001L25 28a1 1 0 01-2 0l-.001-4H19a1 1 0 010-2h4v-4a1 1 0 011-1z"
}))));
SmsInviteBorder.displayName = "SmsInviteBorder";
SmsInviteBorder["iconName"] = "sms_invite_border";
var SmsInviteBorder_default = SmsInviteBorder;

// src/icon/Sms.tsx
import React481, { forwardRef as forwardRef431, memo as memo344 } from "react";
var Sms = memo344(forwardRef431((props, svgRef) => /* @__PURE__ */ React481.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React481.createElement("path", {
  d: "M16 3C8.252 3 2 8.199 2 14.889l.005.314c.1 3.24 1.738 6.355 4.449 8.564l.294.232-.013.04c-.191.526-.539 1.231-1.119 2.237l-.811 1.308A.929.929 0 005.6 29h1.652l.333-.005c2.311-.074 4.224-.916 5.687-2.147l.048-.042.461.072a15.9 15.9 0 002.221.16c7.694 0 14-5.417 14-12.148 0-6.715-6.237-11.889-14-11.889z"
}))));
Sms.displayName = "Sms";
Sms["iconName"] = "sms";
var Sms_default = Sms;

// src/icon/Sort.tsx
import React482, { forwardRef as forwardRef432, memo as memo345 } from "react";
var Sort = memo345(forwardRef432((props, svgRef) => /* @__PURE__ */ React482.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React482.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M16.707 5.293l5.586 5.586a1 1 0 01-.707 1.707H10.414a1 1 0 01-.707-1.707l5.586-5.586a.999.999 0 011.414 0z"
}), /* @__PURE__ */ React482.createElement("path", {
  fill: "var(--color53, #212121)",
  d: "M16.703 26.293l5.586-5.586A1 1 0 0021.582 19H10.41a1 1 0 00-.707 1.707l5.586 5.586a1 1 0 001.414 0z"
}))));
Sort.displayName = "Sort";
Sort["iconName"] = "sort";
var Sort_default = Sort;

// src/icon/SpeakerDown.tsx
import React483, { forwardRef as forwardRef433, memo as memo346 } from "react";
var SpeakerDown = memo346(forwardRef433((props, svgRef) => /* @__PURE__ */ React483.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React483.createElement("path", {
  d: "M21.414 3.414A2 2 0 0122 4.828v22.343a2 2 0 01-3.414 1.414L12 21.999H6a2 2 0 01-2-2v-8a2 2 0 012-2h6l6.586-6.586a2 2 0 012.828 0zM20 4.828l-6.586 6.586A2 2 0 0112 12H7a1 1 0 00-1 1v6a1 1 0 001 1h5a2 2 0 011.414.586L20 27.172V4.829zm5.511 5.551a1 1 0 011.332.474A11.959 11.959 0 0128 16c0 1.839-.415 3.621-1.202 5.24a1 1 0 11-1.799-.875 9.958 9.958 0 001-4.366 9.96 9.96 0 00-.963-4.288 1 1 0 01.474-1.332z"
}))));
SpeakerDown.displayName = "SpeakerDown";
SpeakerDown["iconName"] = "speaker-down";
var SpeakerDown_default = SpeakerDown;

// src/icon/SpeakerMute.tsx
import React484, { forwardRef as forwardRef434, memo as memo347 } from "react";
var SpeakerMute = memo347(forwardRef434((props, svgRef) => /* @__PURE__ */ React484.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React484.createElement("path", {
  d: "M19.414 3.414A2 2 0 0120 4.828v22.343a2 2 0 01-3.414 1.414L10 21.999H4a2 2 0 01-2-2v-8a2 2 0 012-2h6l6.586-6.586a2 2 0 012.828 0zM18 4.828l-6.586 6.586A2 2 0 0110 12H5a1 1 0 00-1 1v6a1 1 0 001 1h5a2 2 0 011.414.586L18 27.172V4.829zm5.172 6.929l2.83 2.828 2.827-2.828a.999.999 0 111.414 1.414l-2.827 2.828 2.827 2.828a.999.999 0 11-1.414 1.414l-2.827-2.828-2.83 2.828a.999.999 0 11-1.414-1.414l2.83-2.828-2.83-2.828a.999.999 0 111.414-1.414z"
}))));
SpeakerMute.displayName = "SpeakerMute";
SpeakerMute["iconName"] = "speaker-mute";
var SpeakerMute_default = SpeakerMute;

// src/icon/SpeakerUp.tsx
import React485, { forwardRef as forwardRef435, memo as memo348 } from "react";
var SpeakerUp = memo348(forwardRef435((props, svgRef) => /* @__PURE__ */ React485.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React485.createElement("path", {
  d: "M19.414 3.414A2 2 0 0120 4.828v22.343a2 2 0 01-3.414 1.414L10 21.999H4a2 2 0 01-2-2v-8a2 2 0 012-2h6l6.586-6.586a2 2 0 012.828 0zM18 4.828l-6.586 6.586A2 2 0 0110 12H5a1 1 0 00-1 1v6a1 1 0 001 1h5a2 2 0 011.414.586L18 27.172V4.829zm8.003 2.809a1 1 0 011.395.232C29.081 10.224 30 13.044 30 16s-.919 5.776-2.602 8.131a1 1 0 01-1.627-1.163C27.213 20.95 28 18.535 28 16s-.787-4.95-2.229-6.968a1 1 0 01.232-1.395zm-3.521 3.568a1 1 0 011.362.38A8.963 8.963 0 0125 16.001a8.953 8.953 0 01-1.171 4.441 1 1 0 11-1.738-.988A6.965 6.965 0 0023 16.001a6.962 6.962 0 00-.898-3.433 1 1 0 01.38-1.362z"
}))));
SpeakerUp.displayName = "SpeakerUp";
SpeakerUp["iconName"] = "speaker-up";
var SpeakerUp_default = SpeakerUp;

// src/icon/StarBorder.tsx
import React486, { forwardRef as forwardRef436, memo as memo349 } from "react";
var StarBorder = memo349(forwardRef436((props, svgRef) => /* @__PURE__ */ React486.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React486.createElement("path", {
  d: "M16.885 1.726c.394.195.714.514.908.908l2.97 6.018a1 1 0 00.753.547l6.641.965a2.001 2.001 0 011.109 3.412L24.46 18.26c-.236.23-.343.561-.288.885l1.134 6.614a1.999 1.999 0 01-2.902 2.108l-5.94-3.123a1.002 1.002 0 00-.931 0l-5.94 3.123a2 2 0 01-2.902-2.109l1.134-6.614a.999.999 0 00-.288-.885l-4.806-4.684a2 2 0 011.109-3.411l6.641-.965a1 1 0 00.753-.547l2.97-6.018a2 2 0 012.679-.908zM13.03 9.537a3.001 3.001 0 01-2.259 1.641l-6.24.907a.2.2 0 00-.111.341l4.515 4.401a3 3 0 01.863 2.655l-1.066 6.215a.2.2 0 00.29.211l5.581-2.934a3.003 3.003 0 012.792 0l5.581 2.934a.2.2 0 00.27-.084c.02-.039.028-.084.02-.127L22.2 19.482a3 3 0 01.863-2.655l4.515-4.401a.2.2 0 00-.11-.341l-6.24-.907a3.001 3.001 0 01-2.259-1.641l-2.791-5.655a.2.2 0 00-.359 0l-2.791 5.655z"
}))));
StarBorder.displayName = "StarBorder";
StarBorder["iconName"] = "star_border";
var StarBorder_default = StarBorder;

// src/icon/Star.tsx
import React487, { forwardRef as forwardRef437, memo as memo350 } from "react";
var Star = memo350(forwardRef437((props, svgRef) => /* @__PURE__ */ React487.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React487.createElement("path", {
  d: "M16.885 1.726c.394.195.714.514.908.908l2.97 6.018a1 1 0 00.753.547l6.641.965a2.001 2.001 0 011.109 3.412L24.46 18.26c-.236.23-.343.561-.288.885l1.134 6.614a1.999 1.999 0 01-2.902 2.108l-5.94-3.123a1.002 1.002 0 00-.931 0l-5.94 3.123a2 2 0 01-2.902-2.109l1.134-6.614a.999.999 0 00-.288-.885l-4.806-4.684a2 2 0 011.109-3.411l6.641-.965a1 1 0 00.753-.547l2.97-6.018a2 2 0 012.679-.908z"
}))));
Star.displayName = "Star";
Star["iconName"] = "star";
var Star_default = Star;

// src/icon/StartMeeting.tsx
import React488, { forwardRef as forwardRef438, memo as memo351 } from "react";
var StartMeeting = memo351(forwardRef438((props, svgRef) => /* @__PURE__ */ React488.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React488.createElement("path", {
  d: "M22.222 6.222a2.667 2.667 0 012.667 2.667v2.153l3.17-1.672a1.778 1.778 0 012.163 1.736v9.79a1.778 1.778 0 01-2.164 1.736l-3.17-1.673v2.154a2.667 2.667 0 01-2.667 2.667H4.443a2.667 2.667 0 01-2.667-2.667V8.891a2.667 2.667 0 012.667-2.667h17.778zm0 1.778H4.444a.889.889 0 00-.883.785l-.006.104v14.222c0 .456.343.832.785.883l.104.006h17.778a.889.889 0 00.883-.785l.006-.104V8.889a.889.889 0 00-.785-.883L22.222 8zm6.222 3.105l-3.556 1.877v6.037l3.556 1.877v-9.79zm-15.111.451c.491 0 .889.398.889.889v2.667h2.667a.889.889 0 110 1.778h-2.667v2.667a.889.889 0 11-1.778 0v-2.668l-2.667.001a.889.889 0 110-1.778l2.667-.001v-2.666c0-.491.398-.889.889-.889z"
}))));
StartMeeting.displayName = "StartMeeting";
StartMeeting["iconName"] = "start_meeting";
var StartMeeting_default = StartMeeting;

// src/icon/Start.tsx
import React489, { forwardRef as forwardRef439, memo as memo352 } from "react";
var Start = memo352(forwardRef439((props, svgRef) => /* @__PURE__ */ React489.createElement("svg", {
  viewBox: "0 0 27 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React489.createElement("path", {
  d: "M2.667 5.49h21.02a2.667 2.667 0 012.667 2.667v21.02a2.667 2.667 0 01-2.667 2.667H2.667A2.667 2.667 0 010 29.177V8.157A2.667 2.667 0 012.667 5.49zm.666 3.334V28.51h19.686V8.824H3.333z"
}), /* @__PURE__ */ React489.createElement("path", {
  d: "M13.176 13.176c.606 0 1.098.492 1.098 1.098v3.294h3.294a1.099 1.099 0 010 2.196h-3.294v3.294a1.099 1.099 0 01-2.196 0v-3.294H8.784a1.099 1.099 0 010-2.196h3.294v-3.294c0-.606.492-1.098 1.098-1.098zM13.176 0a5.49 5.49 0 015.49 5.49h-3.294a2.196 2.196 0 10-4.392 0H7.686A5.49 5.49 0 0113.176 0z"
}))));
Start.displayName = "Start";
Start["iconName"] = "start";
var Start_default = Start;

// src/icon/StopBorder.tsx
import React490, { forwardRef as forwardRef440, memo as memo353 } from "react";
var StopBorder = memo353(forwardRef440((props, svgRef) => /* @__PURE__ */ React490.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React490.createElement("path", {
  d: "M25 5a2 2 0 012 2v18a2 2 0 01-2 2H7a2 2 0 01-2-2V7a2 2 0 012-2h18zm-1 2H8a1 1 0 00-1 1v16a1 1 0 001 1h16a1 1 0 001-1V8a1 1 0 00-1-1z"
}))));
StopBorder.displayName = "StopBorder";
StopBorder["iconName"] = "stop_border";
var StopBorder_default = StopBorder;

// src/icon/StopCircle.tsx
import React491, { forwardRef as forwardRef441, memo as memo354 } from "react";
var StopCircle = memo354(forwardRef441((props, svgRef) => /* @__PURE__ */ React491.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React491.createElement("path", {
  d: "M16 2C8.268 2 2 8.268 2 16s6.268 14 14 14 14-6.268 14-14S23.732 2 16 2zm3 9a2 2 0 012 2v6a2 2 0 01-2 2h-6a2 2 0 01-2-2v-6a2 2 0 012-2h6z"
}))));
StopCircle.displayName = "StopCircle";
StopCircle["iconName"] = "stop_circle";
var StopCircle_default = StopCircle;

// src/icon/StopCircleBorder.tsx
import React492, { forwardRef as forwardRef442, memo as memo355 } from "react";
var StopCircleBorder = memo355(forwardRef442((props, svgRef) => /* @__PURE__ */ React492.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React492.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm3 7a2 2 0 012 2v6a2 2 0 01-2 2h-6a2 2 0 01-2-2v-6a2 2 0 012-2h6z"
}))));
StopCircleBorder.displayName = "StopCircleBorder";
StopCircleBorder["iconName"] = "stop_circle_border";
var StopCircleBorder_default = StopCircleBorder;

// src/icon/StopRecord.tsx
import React493, { forwardRef as forwardRef443, memo as memo356 } from "react";
var StopRecord = memo356(forwardRef443((props, svgRef) => /* @__PURE__ */ React493.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React493.createElement("path", {
  fill: "var(--color81, #f44336)",
  d: "M26 23.441A2.54 2.54 0 0123.441 26H8.558a2.54 2.54 0 01-2.559-2.559V8.558a2.54 2.54 0 012.559-2.559h14.883A2.54 2.54 0 0126 8.558v14.883z"
}))));
StopRecord.displayName = "StopRecord";
StopRecord["iconName"] = "stop-record";
var StopRecord_default = StopRecord;

// src/icon/Stop.tsx
import React494, { forwardRef as forwardRef444, memo as memo357 } from "react";
var Stop = memo357(forwardRef444((props, svgRef) => /* @__PURE__ */ React494.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React494.createElement("path", {
  d: "M25 5a2 2 0 012 2v18a2 2 0 01-2 2H7a2 2 0 01-2-2V7a2 2 0 012-2h18z"
}))));
Stop.displayName = "Stop";
Stop["iconName"] = "stop";
var Stop_default = Stop;

// src/icon/Strike.tsx
import React495, { forwardRef as forwardRef445, memo as memo358 } from "react";
var Strike = memo358(forwardRef445((props, svgRef) => /* @__PURE__ */ React495.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React495.createElement("path", {
  d: "M24.21 18c.824.974 1.212 2.165 1.212 3.633 0 4.412-3.691 7.383-9.369 7.383-4.781 0-8.402-2.18-9.281-5.66a3.708 3.708 0 01-.105-.844c0-.721.422-1.16 1.143-1.16.615 0 .879.299 1.125.967.791 2.777 3.568 4.553 7.137 4.553 4.061 0 6.855-2.092 6.855-4.975 0-1.815-.992-3.004-3.256-3.896h4.54zM29 16a1 1 0 010 2H3a1 1 0 010-2h26zM16 3c4.518 0 7.928 2.215 8.701 5.396.07.264.105.58.105.791 0 .686-.439 1.09-1.125 1.09-.563 0-.879-.264-1.072-.809C21.888 6.779 19.41 5.144 16 5.144c-3.604 0-6.328 1.969-6.328 4.764 0 1.997 1.371 3.193 4.449 4.092H8.743c-1.062-1.035-1.567-2.329-1.567-3.934C7.176 5.935 10.973 3 16 3z"
}))));
Strike.displayName = "Strike";
Strike["iconName"] = "strike";
var Strike_default = Strike;

// src/icon/TakeOver.tsx
import React496, { forwardRef as forwardRef446, memo as memo359 } from "react";
var TakeOver = memo359(forwardRef446((props, svgRef) => /* @__PURE__ */ React496.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React496.createElement("path", {
  d: "M9.064 16.054a2.241 2.241 0 012.146 2.168c.054.846.025 1.695.036 2.543l-.018 1.279c3.111.906 6.414.901 9.523-.014l-.011-3.01a3.597 3.597 0 01.223-1.575 2.116 2.116 0 011.919-1.353 90.817 90.817 0 014.868.009 2.262 2.262 0 012.167 2.102c.022.275.039.613.052.984l.02.775.01.804v1.137l-.008.63c-.032.772-.313 2.513-.8 3.109a1.638 1.638 0 00-.08.149l-.649.673-.71.518c-.119.085-.239.169-.362.249a16.805 16.805 0 01-4.005 1.772l-.529.146a24.097 24.097 0 01-7.552.927c-3.121-.131-6.154-.682-9.021-1.992a10.117 10.117 0 01-2.869-1.852c-.858-.747-1.362-3.825-1.389-4.969l-.02-1.148a20.044 20.044 0 01.031-1.717c.109-1.461.956-2.316 2.407-2.368a65.916 65.916 0 014.621.025zM16 2c.32 0 .604.15.787.383a.994.994 0 01.091.081l5.657 5.657a.999.999 0 11-1.414 1.414l-4.122-4.122v12.586a1 1 0 01-2 0V5.412l-4.121 4.123a.999.999 0 11-1.414-1.414l5.657-5.657.094-.083A.998.998 0 0115.999 2z"
}))));
TakeOver.displayName = "TakeOver";
TakeOver["iconName"] = "take_over";
var TakeOver_default = TakeOver;

// src/icon/TaskNewBorder.tsx
import React497, { forwardRef as forwardRef447, memo as memo360 } from "react";
var TaskNewBorder = memo360(forwardRef447((props, svgRef) => /* @__PURE__ */ React497.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React497.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm6.376 7.741a.999.999 0 010 1.414l-7.071 7.071a.99.99 0 01-.531.277l-.117.014h-.118a.997.997 0 01-.648-.291l-4.243-4.243a.999.999 0 111.414-1.414l3.535 3.535 6.365-6.363a.999.999 0 011.414 0z"
}))));
TaskNewBorder.displayName = "TaskNewBorder";
TaskNewBorder["iconName"] = "task-new_border";
var TaskNewBorder_default = TaskNewBorder;

// src/icon/TaskNew.tsx
import React498, { forwardRef as forwardRef448, memo as memo361 } from "react";
var TaskNew = memo361(forwardRef448((props, svgRef) => /* @__PURE__ */ React498.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React498.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm6.376 9.741a1 1 0 00-1.32-.083l-.094.083-6.365 6.363-3.535-3.535a.999.999 0 00-1.497 1.32l.083.094 4.243 4.243a.99.99 0 00.531.277l.117.014h.118l.117-.014a.99.99 0 00.436-.194l.094-.083 7.071-7.071a.999.999 0 000-1.414z"
}))));
TaskNew.displayName = "TaskNew";
TaskNew["iconName"] = "task-new";
var TaskNew_default = TaskNew;

// src/icon/TeamBorder.tsx
import React499, { forwardRef as forwardRef449, memo as memo362 } from "react";
var TeamBorder = memo362(forwardRef449((props, svgRef) => /* @__PURE__ */ React499.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React499.createElement("path", {
  d: "M8 19c-4.346 0-8 3.045-8 7a2 2 0 002 2l6.536.001a3.98 3.98 0 01-.527-1.73L8 26c-3.576.011-5.455.011-5.637 0-.272-.017-.363-.289-.324-.574C2.381 22.935 4.919 21 8 21c.452 0 .892.042 1.315.12.358-.62.784-1.204 1.267-1.747A9.02 9.02 0 008 19zm13-2c-5.981 0-11 3.904-11 9a2 2 0 002 2h18a2 2 0 002-2c0-5.096-5.019-9-11-9zm0 2c4.707 0 8.571 2.811 8.967 6.393.053.479-.253.607-.448.607H12.28c-.177 0-.279-.209-.264-.416C12.293 21.912 16.209 19 21 19zM8 7a5 5 0 10.001 10.001A5 5 0 008 7zm13-4a6 6 0 100 12 6 6 0 000-12zM8 9a3 3 0 110 6 3 3 0 010-6zm13-4a4 4 0 110 8 4 4 0 010-8z"
}))));
TeamBorder.displayName = "TeamBorder";
TeamBorder["iconName"] = "team_border";
var TeamBorder_default = TeamBorder;

// src/icon/TeamDefault.tsx
import React500, { forwardRef as forwardRef450, memo as memo363 } from "react";
var TeamDefault = memo363(forwardRef450((props, svgRef) => /* @__PURE__ */ React500.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React500.createElement("path", {
  d: "M23.6 12.7c0 .596-.218 1.112-.653 1.547s-.951.653-1.547.653-1.111-.218-1.547-.653-.653-.951-.653-1.547.218-1.112.653-1.547.951-.653 1.547-.653 1.111.218 1.547.653.653.951.653 1.547zm-10.999 0c0 .596-.218 1.112-.653 1.547s-.951.653-1.547.653-1.111-.218-1.547-.653-.653-.951-.653-1.547.218-1.112.653-1.547.951-.653 1.547-.653 1.111.218 1.547.653.653.951.653 1.547zm5.499 9.899c0 .596-.218 1.112-.653 1.547s-.951.653-1.547.653-1.111-.218-1.547-.653-.653-.951-.653-1.547.218-1.112.653-1.547.951-.653 1.547-.653 1.111.218 1.547.653.653.951.653 1.547zm5.5-3.299c0 .596-.218 1.112-.653 1.547s-.951.653-1.547.653-1.111-.218-1.547-.653-.653-.951-.653-1.547.218-1.112.653-1.547.951-.653 1.547-.653 1.111.218 1.547.653.653.951.653 1.547zm-10.999 0c0 .596-.218 1.112-.653 1.547s-.951.653-1.547.653-1.111-.218-1.547-.653-.653-.951-.653-1.547.218-1.112.653-1.547.951-.653 1.547-.653 1.111.218 1.547.653.653.951.653 1.547zM18.1 9.401c0 .596-.218 1.112-.653 1.547s-.951.653-1.547.653-1.111-.218-1.547-.653-.653-.951-.653-1.547.218-1.112.653-1.547.951-.653 1.547-.653 1.111.218 1.547.653.653.951.653 1.547z"
}))));
TeamDefault.displayName = "TeamDefault";
TeamDefault["iconName"] = "team-default";
var TeamDefault_default = TeamDefault;

// src/icon/Team.tsx
import React501, { forwardRef as forwardRef451, memo as memo364 } from "react";
var Team = memo364(forwardRef451((props, svgRef) => /* @__PURE__ */ React501.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React501.createElement("path", {
  d: "M8 19c-4.346 0-8 3.045-8 7a2 2 0 002 2l6.536.001A3.98 3.98 0 018 26c0-2.541.969-4.815 2.582-6.627A9.02 9.02 0 008 19zm13-2c-5.981 0-11 3.904-11 9a2 2 0 002 2h18a2 2 0 002-2c0-5.096-5.019-9-11-9zM8 7a5 5 0 10.001 10.001A5 5 0 008 7zm13-4a6 6 0 100 12 6 6 0 000-12z"
}))));
Team.displayName = "Team";
Team["iconName"] = "team";
var Team_default = Team;

// src/icon/Text.tsx
import React502, { forwardRef as forwardRef452, memo as memo365 } from "react";
var Text = memo365(forwardRef452((props, svgRef) => /* @__PURE__ */ React502.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React502.createElement("path", {
  d: "M16.533 5.001c.466-.02.906.263 1.069.719l7.279 20.333a.92.92 0 01-.628 1.2 1.086 1.086 0 01-1.303-.683l-2.126-5.939a.978.978 0 01-.163.013h-8.553l-2.12 5.926c-.19.532-.757.829-1.303.683a.921.921 0 01-.651-1.128c.007-.024.014-.048.023-.072L15.336 5.72a1.086 1.086 0 011.135-.714zm3.578 13.644L16.467 8.463l-3.645 10.182h7.289z"
}))));
Text.displayName = "Text";
Text["iconName"] = "text";
var Text_default = Text;

// src/icon/Theme.tsx
import React503, { forwardRef as forwardRef453, memo as memo366 } from "react";
var Theme = memo366(forwardRef453((props, svgRef) => /* @__PURE__ */ React503.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React503.createElement("path", {
  d: "M25.5 17a2.5 2.5 0 110-5 2.5 2.5 0 010 5zm-5-7a2.5 2.5 0 110-5 2.5 2.5 0 010 5zM9 7.5a2.5 2.5 0 115 0 2.5 2.5 0 01-5 0zM6.5 17a2.5 2.5 0 110-5 2.5 2.5 0 010 5zM16 2C8.268 2 2 8.268 2 16s6.268 14 14 14a2.333 2.333 0 002.333-2.333c0-.607-.233-1.151-.607-1.556a2.407 2.407 0 01-.591-1.556 2.333 2.333 0 012.333-2.333h2.753a7.777 7.777 0 007.778-7.778C29.999 7.568 23.73 2 15.999 2z"
}))));
Theme.displayName = "Theme";
Theme["iconName"] = "theme";
var Theme_default = Theme;

// src/icon/ThumbupBorder.tsx
import React504, { forwardRef as forwardRef454, memo as memo367 } from "react";
var ThumbupBorder = memo367(forwardRef454((props, svgRef) => /* @__PURE__ */ React504.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React504.createElement("path", {
  d: "M4 28a2 2 0 01-2-2v-9a2 2 0 012-2h4l6.825-11.12A4 4 0 0118.217 2H19a2.305 2.305 0 012.227 2.899L19.867 10H26a4 4 0 014 4v4.5a9.5 9.5 0 01-9.5 9.5H4zm3-11H5a1 1 0 00-1 1v7a1 1 0 001 1h2v-9zM19 4h-.783a1.99 1.99 0 00-1.687.926l-6.825 11.12C9.341 16.639 9 17 9 17v9h11.5a7.5 7.5 0 007.5-7.5V14a2 2 0 00-2-2h-6.133a2 2 0 01-1.933-2.515l1.36-5.101A.305.305 0 0018.999 4z"
}))));
ThumbupBorder.displayName = "ThumbupBorder";
ThumbupBorder["iconName"] = "thumbup_border";
var ThumbupBorder_default = ThumbupBorder;

// src/icon/Thumbup.tsx
import React505, { forwardRef as forwardRef455, memo as memo368 } from "react";
var Thumbup = memo368(forwardRef455((props, svgRef) => /* @__PURE__ */ React505.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React505.createElement("path", {
  d: "M7 15v13H4a2 2 0 01-2-2v-9a2 2 0 012-2h3zM19 2a2.305 2.305 0 012.227 2.899L19.867 10H26a4 4 0 014 4v4.5a9.5 9.5 0 01-9.5 9.5H9V13.37l5.825-9.49A4 4 0 0118.217 2H19z"
}))));
Thumbup.displayName = "Thumbup";
Thumbup["iconName"] = "thumbup";
var Thumbup_default = Thumbup;

// src/icon/TimeBorder.tsx
import React506, { forwardRef as forwardRef456, memo as memo369 } from "react";
var TimeBorder = memo369(forwardRef456((props, svgRef) => /* @__PURE__ */ React506.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React506.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 2C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zM9 17a1 1 0 010-2h6V7a1 1 0 012 0v9a1 1 0 01-.883.993L16 17H9z"
}))));
TimeBorder.displayName = "TimeBorder";
TimeBorder["iconName"] = "time_border";
var TimeBorder_default = TimeBorder;

// src/icon/Time.tsx
import React507, { forwardRef as forwardRef457, memo as memo370 } from "react";
var Time = memo370(forwardRef457((props, svgRef) => /* @__PURE__ */ React507.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React507.createElement("path", {
  d: "M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm0 4a1 1 0 00-.993.883L15 7v8H9a1 1 0 00-.117 1.993L9 17l7.117-.007c.459-.053.823-.418.877-.877l.007-.117v-9a1 1 0 00-1-1z"
}))));
Time.displayName = "Time";
Time["iconName"] = "time";
var Time_default = Time;

// src/icon/Transcription.tsx
import React508, { forwardRef as forwardRef458, memo as memo371 } from "react";
var Transcription = memo371(forwardRef458((props, svgRef) => /* @__PURE__ */ React508.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React508.createElement("path", {
  d: "M28 4a2 2 0 012 2v16a2 2 0 01-2 2h-7.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141a1 1 0 00-.707-.293H4.001a2 2 0 01-2-2V6a2 2 0 012-2h24zm-1 2H5a1 1 0 00-1 1v14a1 1 0 001 1h7a2 2 0 011.414.586L16 25.172l2.586-2.586A2 2 0 0120 22h7a1 1 0 001-1V7a1 1 0 00-1-1zm-3 11a1 1 0 010 2h-4a1 1 0 010-2h4zm-8 0a1 1 0 010 2h-4a1 1 0 010-2h4zm-8 0a1 1 0 010 2H7a1 1 0 010-2h1zm17-4a1 1 0 010 2h-2a1 1 0 010-2h2zm-6 0a1 1 0 010 2h-5a1 1 0 010-2h5zm-9 0a1 1 0 010 2H7a1 1 0 010-2h3z"
}))));
Transcription.displayName = "Transcription";
Transcription["iconName"] = "transcription";
var Transcription_default = Transcription;

// src/icon/TransferCall.tsx
import React509, { forwardRef as forwardRef459, memo as memo372 } from "react";
var TransferCall = memo372(forwardRef459((props, svgRef) => /* @__PURE__ */ React509.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React509.createElement("path", {
  d: "M15.998 19.956c-.011.453.06.432-.433.556-.803.208-1.633.268-2.456.314a99.83 99.83 0 01-3.946.156c-2.256.038-4.513.035-6.758-.236a8.248 8.248 0 01-1.114-.239c-.108-.029-.194-.144-.291-.222v-.706c.011-.046.023-.095.031-.141.046-.242.071-.487.137-.721.222-.784.729-1.349 1.407-1.776.644-.407 1.359-.666 2.048-.977.618-.277 1.222-.588 1.835-.882.103-.049.131-.118.128-.231a16.172 16.172 0 010-.853.269.269 0 00-.111-.234 3.778 3.778 0 01-1.009-1.211c-.544-1.027-.652-2.114-.425-3.241.199-.972.627-1.822 1.373-2.491 1.274-1.139 3.143-1.087 4.336.13.883.9 1.282 2.013 1.313 3.258.037 1.445-.444 2.67-1.593 3.596-.04.032-.066.11-.066.164-.009.297 0 .597-.006.897-.003.101.028.164.12.208.561.265 1.117.542 1.681.799.672.306 1.362.574 2.023.9.65.32 1.177.796 1.479 1.476.242.545.311 1.122.293 1.71zm14.704 4.291c.242.545.311 1.122.296 1.707-.011.45.06.432-.436.559-.803.208-1.632.268-2.456.314a99.78 99.78 0 01-3.945.156c-2.256.038-4.512.035-6.757-.236a8.248 8.248 0 01-1.114-.239c-.108-.029-.194-.144-.291-.222v-.706c.011-.046.023-.095.031-.141.046-.242.071-.487.137-.721.222-.784.729-1.349 1.407-1.776.644-.407 1.359-.666 2.048-.977.618-.277 1.222-.588 1.835-.882.103-.049.131-.118.128-.231a20.214 20.214 0 010-.853.269.269 0 00-.111-.234 3.763 3.763 0 01-1.008-1.211c-.544-1.026-.652-2.114-.424-3.241.199-.972.627-1.822 1.373-2.491 1.273-1.139 3.142-1.087 4.336.13.883.9 1.282 2.013 1.313 3.258.037 1.445-.444 2.67-1.592 3.596-.04.032-.066.11-.066.164-.009.3 0 .597-.006.897-.003.101.029.164.12.208.561.265 1.117.542 1.681.799.672.306 1.362.574 2.023.9.649.32 1.176.796 1.478 1.476zM13.996 6.08a.765.765 0 01-.933-.448.806.806 0 01.481-1.079c1.296-.419 3.451-.733 5.761.358.407.192.77.445 1.099.739L23.001 4l-.242 6.546a.51.51 0 01-.798.361L16.9 7.881l2.012-1.28a4.005 4.005 0 00-.402-.227c-1.838-.873-3.434-.64-4.513-.294z"
}))));
TransferCall.displayName = "TransferCall";
TransferCall["iconName"] = "transfer-call";
var TransferCall_default = TransferCall;

// src/icon/TransferCallBorder.tsx
import React510, { forwardRef as forwardRef460, memo as memo373 } from "react";
var TransferCallBorder = memo373(forwardRef460((props, svgRef) => /* @__PURE__ */ React510.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React510.createElement("path", {
  d: "M8.791 2.353a3.42 3.42 0 011.577 1.5 33.63 33.63 0 001.257 2.265 49.99 49.99 0 001.696 2.601c.414.626.579 1.307.486 2.017-.091.699-.403 1.322-.977 1.9a6.076 6.076 0 01-1.027.705 1.161 1.161 0 01-.218.137l-.171.083-.137.078a7.09 7.09 0 01-.229.109c.016.079.043.175.083.29l.098.258c.124.331.324.717.602 1.154.285.448.649.938 1.09 1.465a13.92 13.92 0 001.328 1.391c.395.352.753.616 1.068.791.121.067.226.121.312.159l.218-.239.08-.079.085-.107.254-.263c.119-.12.226-.223.321-.31.171-.156.362-.306.617-.477a3.574 3.574 0 012.169-.483c.803.071 1.484.39 1.965.905a69.978 69.978 0 001.865 1.697l.459.399c.57.491 1.262 1.072 2.075 1.742.586.482.976 1.073 1.157 1.757.164.617.135 1.216-.074 1.743l-.087.194c-.193.479-.565 1.044-1.117 1.713-.476.576-.912 1.028-1.295 1.343l-.161.127c-.44.363-.947.637-1.516.818a6.008 6.008 0 01-1.828.264c-1.073 0-2.192-.21-3.356-.625-1.135-.405-2.29-.984-3.466-1.737a24.373 24.373 0 01-3.044-2.327l-.431-.391a36.73 36.73 0 01-3.448-3.565c-1.492-1.787-2.714-3.551-3.664-5.291-.955-1.731-1.628-3.354-2.018-4.87C.992 9.65.896 8.256 1.108 7.021c.204-1.306.769-2.366 1.703-3.149.433-.361 1.041-.728 1.828-1.11.803-.39 1.468-.63 2.018-.716a3.627 3.627 0 012.133.308zM6.966 4.022c-.314.049-.8.222-1.451.538-.661.321-1.134.608-1.416.843-.548.46-.881 1.078-1.018 1.956-.16.934-.085 2.047.247 3.337.345 1.34.953 2.809 1.836 4.41.884 1.619 2.031 3.276 3.432 4.954a34.87 34.87 0 003.283 3.393 22.997 22.997 0 003.194 2.502c1.055.675 2.074 1.187 3.059 1.538.959.342 1.853.509 2.684.509.466 0 .872-.058 1.223-.17.274-.087.514-.206.768-.392l.155-.12c.275-.206.66-.595 1.112-1.142.391-.473.643-.844.765-1.097l.106-.236c.064-.128.078-.299.017-.53-.072-.27-.226-.504-.496-.726l-1.295-1.078a76.207 76.207 0 01-2.581-2.268l-.624-.582-.088-.088c-.138-.148-.36-.25-.681-.279a1.596 1.596 0 00-.827.134l-.119.063-.049.035a3.377 3.377 0 00-.189.145l-.079.069-.16.152-.227.231-.036.047a2.91 2.91 0 01-.09.104l-.159.162-.157.172a1.998 1.998 0 01-2.3.472 6.246 6.246 0 01-.459-.233c-.46-.256-.934-.607-1.428-1.047a16.01 16.01 0 01-1.531-1.601 16.348 16.348 0 01-1.243-1.674 8.88 8.88 0 01-.691-1.286l-.073-.183a5.005 5.005 0 01-.292-.913 2 2 0 011.025-2.162l.25-.12.178-.098.111-.054.05-.036.143-.086c.134-.073.249-.143.346-.21l.175-.127.102-.083.049-.052c.16-.183.247-.349.289-.528l.02-.109a.87.87 0 00-.147-.621 52.75 52.75 0 01-1.763-2.705 34.089 34.089 0 01-1.299-2.338 1.447 1.447 0 00-.553-.588l-.12-.063a1.627 1.627 0 00-.976-.142zm17.135 1.265a1.014 1.014 0 011.414 0l5.192 5.019a.968.968 0 010 1.388l-5.192 5.019c-.391.383-1.024.383-1.414 0s-.391-1.004 0-1.388l3.488-3.344H17.001c-.552 0-1-.439-1-.981s.448-.981 1-.981h10.586l-3.486-3.344a.968.968 0 010-1.388z"
}))));
TransferCallBorder.displayName = "TransferCallBorder";
TransferCallBorder["iconName"] = "transfer_call_border";
var TransferCallBorder_default = TransferCallBorder;

// src/icon/Unblocked.tsx
import React511, { forwardRef as forwardRef461, memo as memo374 } from "react";
var Unblocked = memo374(forwardRef461((props, svgRef) => /* @__PURE__ */ React511.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React511.createElement("path", {
  d: "M6.101 6.101C11.568.634 20.433.634 25.9 6.101s5.467 14.332 0 19.799c-5.467 5.467-14.332 5.467-19.799 0s-5.467-14.332 0-19.799zm16.97 1.414L7.515 23.071a.999.999 0 001.32 1.497l.094-.083L24.485 8.929a.999.999 0 00-1.32-1.497l-.094.083z"
}))));
Unblocked.displayName = "Unblocked";
Unblocked["iconName"] = "unblocked";
var Unblocked_default = Unblocked;

// src/icon/Underline.tsx
import React512, { forwardRef as forwardRef462, memo as memo375 } from "react";
var Underline = memo375(forwardRef462((props, svgRef) => /* @__PURE__ */ React512.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React512.createElement("path", {
  d: "M24 26a1 1 0 010 2H8a1 1 0 010-2h16zm0-22a1 1 0 011 1v10c0 4.971-4.029 9-9 9s-9-4.029-9-9V5a1 1 0 012 0v10a7 7 0 006.759 6.996L16 22a7 7 0 006.996-6.759L23 15V5a1 1 0 011-1z"
}))));
Underline.displayName = "Underline";
Underline["iconName"] = "underline";
var Underline_default = Underline;

// src/icon/UndockBorder.tsx
import React513, { forwardRef as forwardRef463, memo as memo376 } from "react";
var UndockBorder = memo376(forwardRef463((props, svgRef) => /* @__PURE__ */ React513.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React513.createElement("path", {
  d: "M20 10a2 2 0 012 2v16a2 2 0 01-2 2H4a2 2 0 01-2-2V12a2 2 0 012-2h16zm0 2H4v16h16V12zm-3 3v6l-2.343-2.344-6.536 6.536a.999.999 0 11-1.414-1.414l6.536-6.536L11 15h6zM28 2a2 2 0 012 2v16a2 2 0 01-2 2h-4v-2h4V4H12v4h-2V4a2 2 0 012-2h16z"
}))));
UndockBorder.displayName = "UndockBorder";
UndockBorder["iconName"] = "undock_border";
var UndockBorder_default = UndockBorder;

// src/icon/Undock.tsx
import React514, { forwardRef as forwardRef464, memo as memo377 } from "react";
var Undock = memo377(forwardRef464((props, svgRef) => /* @__PURE__ */ React514.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React514.createElement("path", {
  d: "M20 10a2 2 0 012 2v16a2 2 0 01-2 2H4a2 2 0 01-2-2V12a2 2 0 012-2h16zm-3 5h-6l2.243 2.242-6.536 6.536a.999.999 0 001.32 1.497l.094-.083 6.536-6.536L17 21v-6zM28 2a2 2 0 012 2v16a2 2 0 01-2 2h-4V8H10V4a2 2 0 012-2h16z"
}))));
Undock.displayName = "Undock";
Undock["iconName"] = "undock";
var Undock_default = Undock;

// src/icon/UnfoldLess.tsx
import React515, { forwardRef as forwardRef465, memo as memo378 } from "react";
var UnfoldLess = memo378(forwardRef465((props, svgRef) => /* @__PURE__ */ React515.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React515.createElement("path", {
  d: "M11.05 27.621l4.95-4.95 4.95 4.95a.999.999 0 101.414-1.414l-5.657-5.657a.999.999 0 00-1.414 0l-5.657 5.657a.999.999 0 101.414 1.414zM9.636 5.707l5.657 5.657a1 1 0 001.32.083l.094-.083 5.657-5.657a.999.999 0 00-1.32-1.497l-.094.083L16 9.243l-4.95-4.95a.999.999 0 00-1.497 1.32l.083.094z"
}))));
UnfoldLess.displayName = "UnfoldLess";
UnfoldLess["iconName"] = "unfold_less";
var UnfoldLess_default = UnfoldLess;

// src/icon/UnfoldMore.tsx
import React516, { forwardRef as forwardRef466, memo as memo379 } from "react";
var UnfoldMore = memo379(forwardRef466((props, svgRef) => /* @__PURE__ */ React516.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React516.createElement("path", {
  d: "M11.05 20.55L16 25.5l4.95-4.95a.999.999 0 111.414 1.414l-5.657 5.657a.999.999 0 01-1.414 0l-5.657-5.657a.999.999 0 111.414-1.414zM9.636 9.95l5.657-5.657a1 1 0 011.32-.083l.094.083 5.657 5.657a.999.999 0 01-1.32 1.497l-.094-.083L16 6.414l-4.95 4.95a.999.999 0 01-1.497-1.32l.083-.094z"
}))));
UnfoldMore.displayName = "UnfoldMore";
UnfoldMore["iconName"] = "unfold_more";
var UnfoldMore_default = UnfoldMore;

// src/icon/Unlock.tsx
import React517, { forwardRef as forwardRef467, memo as memo380 } from "react";
var Unlock = memo380(forwardRef467((props, svgRef) => /* @__PURE__ */ React517.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React517.createElement("path", {
  d: "M24 2a6 6 0 016 6v4h-2V8a4 4 0 00-3.8-3.995L24 4a4 4 0 00-3.995 3.8L20 8v6h4a2 2 0 011.994 1.851L26 16v12a2 2 0 01-1.851 1.994L24 30H8a2.001 2.001 0 01-1.995-1.851L6 28V16c0-1.054.816-1.918 1.851-1.995L8 14h10V8a6 6 0 016-6zm-1 14H9a1 1 0 00-.993.883L8 17v10a1 1 0 00.883.993L9 28h14a1 1 0 00.993-.883L24 27V17a1 1 0 00-.883-.993L23 16zm-7 3a1 1 0 011 1v4a1 1 0 01-2 0v-4a1 1 0 011-1z"
}))));
Unlock.displayName = "Unlock";
Unlock["iconName"] = "unlock";
var Unlock_default = Unlock;

// src/icon/UnpinSlash.tsx
import React518, { forwardRef as forwardRef468, memo as memo381 } from "react";
var UnpinSlash = memo381(forwardRef468((props, svgRef) => /* @__PURE__ */ React518.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React518.createElement("path", {
  d: "M3.565 2.979a.999.999 0 011.414 0l24.042 24.042a.999.999 0 11-1.414 1.414l-5.984-5.983-.078.359a10.215 10.215 0 01-2.73 4.888 1.141 1.141 0 01-1.613 0l-5.644-5.644-7.256 7.256c-.445.445-2.78 2.058-3.225 1.613s1.167-2.78 1.613-3.225l7.256-7.256-5.644-5.644a1.141 1.141 0 010-1.613 10.214 10.214 0 015.246-2.808L3.565 4.394a.999.999 0 010-1.414zm7.788 9.202a8.23 8.23 0 00-4.716 1.623l-.281.219 11.62 11.62.029-.033a8.234 8.234 0 001.814-4.964l-8.466-8.465zM19.63 1.154c.086.05.165.11.235.181l10.802 10.801a1.141 1.141 0 01-.235 1.794l-7.394 4.28-1.464-1.463 6.887-3.988-9.219-9.219-3.987 6.888-1.463-1.464 4.28-7.394a1.14 1.14 0 011.558-.415z"
}))));
UnpinSlash.displayName = "UnpinSlash";
UnpinSlash["iconName"] = "unpin-slash";
var UnpinSlash_default = UnpinSlash;

// src/icon/Unpin.tsx
import React519, { forwardRef as forwardRef469, memo as memo382 } from "react";
var Unpin = memo382(forwardRef469((props, svgRef) => /* @__PURE__ */ React519.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React519.createElement("path", {
  d: "M9.946 20.442l1.613 1.613-7.256 7.256c-.445.445-2.78 2.058-3.225 1.613s1.167-2.78 1.613-3.225l7.256-7.256zM19.63 1.154c.086.05.165.11.235.181l10.802 10.801a1.141 1.141 0 01-.235 1.794l-8.715 5.046a10.246 10.246 0 01-2.901 8.723 1.141 1.141 0 01-1.613 0l-12.9-12.9a1.141 1.141 0 010-1.613 10.248 10.248 0 018.724-2.901l5.045-8.715a1.14 1.14 0 011.558-.415zm-.389 2.385l-5.161 8.917-1.338-.192a8.249 8.249 0 00-6.105 1.54l-.281.219 11.62 11.62.029-.033a8.24 8.24 0 001.768-6.055l-.037-.296-.192-1.338 8.916-5.163-9.219-9.219z"
}))));
Unpin.displayName = "Unpin";
Unpin["iconName"] = "unpin";
var Unpin_default = Unpin;

// src/icon/Unread.tsx
import React520, { forwardRef as forwardRef470, memo as memo383 } from "react";
var Unread = memo383(forwardRef470((props, svgRef) => /* @__PURE__ */ React520.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React520.createElement("path", {
  d: "M25.615 2a2 2 0 011.752 2.965L24 11.08l3.331 5.943a2 2 0 01-1.745 2.978H6v9a1 1 0 01-2 0v-26a1 1 0 011-1h20.615z"
}))));
Unread.displayName = "Unread";
Unread["iconName"] = "unread";
var Unread_default = Unread;

// src/icon/Unselect.tsx
import React521, { forwardRef as forwardRef471, memo as memo384 } from "react";
var Unselect = memo384(forwardRef471((props, svgRef) => /* @__PURE__ */ React521.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React521.createElement("path", {
  d: "M27 2a3 3 0 013 3v22a3 3 0 01-3 3H5a3 3 0 01-3-3V5a3 3 0 013-3h22zm0 2.5H5a.5.5 0 00-.492.41L4.5 5v22a.5.5 0 00.41.492L5 27.5h22a.5.5 0 00.492-.41L27.5 27V5a.5.5 0 00-.41-.492L27 4.5z"
}))));
Unselect.displayName = "Unselect";
Unselect["iconName"] = "unselect";
var Unselect_default = Unselect;

// src/icon/UserDefault.tsx
import React522, { forwardRef as forwardRef472, memo as memo385 } from "react";
var UserDefault = memo385(forwardRef472((props, svgRef) => /* @__PURE__ */ React522.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React522.createElement("path", {
  d: "M16.8 5.66a5.222 5.222 0 014.168 2.106 5.276 5.276 0 011.056 3.794 26.765 26.765 0 00-.136 2.901v.139a3.457 3.457 0 010 2.106 5.804 5.804 0 01-1.144 2.459 5.648 5.648 0 01-.6 2.459 8.879 8.879 0 00-.456 1.828v.155c.001.59.01.59.136.59 2.188.662 4.644 1.774 6.763 2.708A15.152 15.152 0 0116 31.199a15.151 15.151 0 01-10.724-4.428.14.14 0 01.059-.021 57.038 57.038 0 016.96-2.618h.019c.117-.002.117-.037.117-.746a5.668 5.668 0 00-.272-1.828c-.136-.615-.456-1.5-.6-2.459a5.694 5.694 0 01-1.048-2.459 3.3 3.3 0 010-2.106v-.074c0-.279-.144-1.688-.28-2.901a5.276 5.276 0 011.056-3.794 5.259 5.259 0 014.176-2.106h1.336z"
}))));
UserDefault.displayName = "UserDefault";
UserDefault["iconName"] = "user-default";
var UserDefault_default = UserDefault;

// src/icon/VideoAndMessage.tsx
import React523, { forwardRef as forwardRef473, memo as memo386 } from "react";
var VideoAndMessage = memo386(forwardRef473((props, svgRef) => /* @__PURE__ */ React523.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React523.createElement("path", {
  d: "M21 6a2 2 0 012 2v14a2 2 0 01-2 2h-4.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141A1 1 0 007.587 24H3.001a2 2 0 01-2-2V8a2 2 0 012-2h18zm-1 2H4a1 1 0 00-1 1v12a1 1 0 001 1h4a2 2 0 011.414.586L12 25.172l2.586-2.586A2 2 0 0116 22h4a1 1 0 001-1V9a1 1 0 00-1-1zm10 .618a1 1 0 01.993.883l.007.117v10.764a1 1 0 01-1.34.94l-.107-.046-5-2.5a1 1 0 01-.545-.77L24 17.881v-5.764a1 1 0 01.445-.832l.108-.063 5-2.5c.139-.069.292-.106.447-.106zm-1 2.618l-3 1.5v4.528l3 1.5v-7.528zM13 16a1 1 0 010 2H6a1 1 0 010-2h7zm5-4a1 1 0 010 2H6a1 1 0 010-2h12z"
}))));
VideoAndMessage.displayName = "VideoAndMessage";
VideoAndMessage["iconName"] = "video_and_message";
var VideoAndMessage_default = VideoAndMessage;

// src/icon/VideoMeeting.tsx
import React524, { forwardRef as forwardRef474, memo as memo387 } from "react";
var VideoMeeting = memo387(forwardRef474((props, svgRef) => /* @__PURE__ */ React524.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React524.createElement("path", {
  d: "M21.182 8C22.186 8 23 8.761 23 9.7v13.6c0 .939-.814 1.7-1.818 1.7H4.818C3.814 25 3 24.239 3 23.3V9.7C3 8.761 3.814 8 4.818 8h16.364zm7.104 3c.366 0 .668.333.709.761l.005.101v9.276c0 .134-.026.266-.075.385-.164.395-.545.572-.882.425l-.077-.04-3.571-2.154c-.215-.13-.36-.38-.389-.663L24 18.983v-4.967c0-.29.121-.558.318-.717l.077-.054 3.571-2.154a.615.615 0 01.319-.091z"
}))));
VideoMeeting.displayName = "VideoMeeting";
VideoMeeting["iconName"] = "video_meeting";
var VideoMeeting_default = VideoMeeting;

// src/icon/VideocamBorder.tsx
import React525, { forwardRef as forwardRef475, memo as memo388 } from "react";
var VideocamBorder = memo388(forwardRef475((props, svgRef) => /* @__PURE__ */ React525.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React525.createElement("path", {
  d: "M21 6a2 2 0 012 2v16a2 2 0 01-2 2H3a2 2 0 01-2-2V8a2 2 0 012-2h18zm-1 2H4a1 1 0 00-1 1v14a1 1 0 001 1h16a1 1 0 001-1V9a1 1 0 00-1-1zm10 1.618a1 1 0 01.993.883l.007.117v10.764a1 1 0 01-1.34.94l-.107-.046-5-2.5a1 1 0 01-.545-.77L24 18.881v-5.764a1 1 0 01.445-.832l.108-.063 5-2.5c.139-.069.292-.106.447-.106zm-1 2.618l-3 1.5v4.528l3 1.5v-7.528z"
}))));
VideocamBorder.displayName = "VideocamBorder";
VideocamBorder["iconName"] = "videocam_border";
var VideocamBorder_default = VideocamBorder;

// src/icon/VideocamOffBorder.tsx
import React526, { forwardRef as forwardRef476, memo as memo389 } from "react";
var VideocamOffBorder = memo389(forwardRef476((props, svgRef) => /* @__PURE__ */ React526.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React526.createElement("path", {
  d: "M21 6c.597 0 1.132.261 1.499.675l-1.711 1.709A.998.998 0 0020 8H4a1 1 0 00-1 1v14a1 1 0 001 1h1.172l-2 2H3a2 2 0 01-2-2V8a2 2 0 012-2h18zM5.393 29.434a.999.999 0 11-1.414-1.414L28.021 3.978a.999.999 0 111.414 1.414L23 11.827v12.172a2 2 0 01-2 2H8.827l2-2H20a1 1 0 001-1v-9.172L5.393 29.433zM30 9.618a1 1 0 01.993.883l.007.117v10.764a1 1 0 01-1.34.94l-.107-.046-5-2.5a1 1 0 01-.545-.77L24 18.881v-5.764a1 1 0 01.445-.832l.108-.063 5-2.5c.139-.069.292-.106.447-.106zm-1 2.618l-3 1.5v4.528l3 1.5v-7.528z"
}))));
VideocamOffBorder.displayName = "VideocamOffBorder";
VideocamOffBorder["iconName"] = "videocam-off_border";
var VideocamOffBorder_default = VideocamOffBorder;

// src/icon/VideocamOff.tsx
import React527, { forwardRef as forwardRef477, memo as memo390 } from "react";
var VideocamOff = memo390(forwardRef477((props, svgRef) => /* @__PURE__ */ React527.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React527.createElement("path", {
  d: "M29.435 3.979a.999.999 0 010 1.414L5.393 29.435a.999.999 0 11-1.414-1.414L28.021 3.979a.999.999 0 011.414 0zM21 6c.597 0 1.132.261 1.499.675L3.172 26H3a2 2 0 01-2-2V8a2 2 0 012-2h18zm2 5.828V24a2 2 0 01-2 2H8.827L23 11.828zm7-2.21a1 1 0 01.993.883l.007.117v10.764a1 1 0 01-1.34.94l-.107-.046-5-2.5a1 1 0 01-.545-.77L24 18.881v-5.764a1 1 0 01.445-.832l.108-.063 5-2.5c.139-.069.292-.106.447-.106z"
}))));
VideocamOff.displayName = "VideocamOff";
VideocamOff["iconName"] = "videocam-off";
var VideocamOff_default = VideocamOff;

// src/icon/Videocam.tsx
import React528, { forwardRef as forwardRef478, memo as memo391 } from "react";
var Videocam = memo391(forwardRef478((props, svgRef) => /* @__PURE__ */ React528.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React528.createElement("path", {
  d: "M21 6a2 2 0 012 2v16a2 2 0 01-2 2H3a2 2 0 01-2-2V8a2 2 0 012-2h18zm9 3.618a1 1 0 01.993.883l.007.117v10.764a1 1 0 01-1.34.94l-.107-.046-5-2.5a1 1 0 01-.545-.77L24 18.881v-5.764a1 1 0 01.445-.832l.108-.063 5-2.5c.139-.069.292-.106.447-.106z"
}))));
Videocam.displayName = "Videocam";
Videocam["iconName"] = "videocam";
var Videocam_default = Videocam;

// src/icon/ViewBorder.tsx
import React529, { forwardRef as forwardRef479, memo as memo392 } from "react";
var ViewBorder = memo392(forwardRef479((props, svgRef) => /* @__PURE__ */ React529.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React529.createElement("path", {
  d: "M16 5c8.284 0 15 8 15 11s-6.716 11-15 11C7.716 27 1 19 1 16S7.716 5 16 5zm0 2c-3.233 0-6.526 1.462-9.29 3.88-1.169 1.022-2.162 2.156-2.853 3.223C3.289 14.981 3 15.712 3 16s.289 1.019.857 1.897c.691 1.066 1.684 2.2 2.853 3.223C9.474 23.538 12.766 25 16 25s6.526-1.462 9.29-3.88c1.169-1.022 2.162-2.156 2.853-3.223.569-.878.857-1.609.857-1.897s-.289-1.019-.857-1.897c-.691-1.066-1.684-2.2-2.853-3.223C22.526 8.462 19.234 7 16 7zm0 3a6 6 0 110 12 6 6 0 010-12zm0 2a4 4 0 100 8 4 4 0 000-8z"
}))));
ViewBorder.displayName = "ViewBorder";
ViewBorder["iconName"] = "view_border";
var ViewBorder_default = ViewBorder;

// src/icon/ViewLogBorder.tsx
import React530, { forwardRef as forwardRef480, memo as memo393 } from "react";
var ViewLogBorder = memo393(forwardRef480((props, svgRef) => /* @__PURE__ */ React530.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React530.createElement("path", {
  d: "M14 2a1 1 0 010 2H7a1 1 0 00-1 1v22a1 1 0 001 1h18a1 1 0 001-1V16l.007-.117A1 1 0 0128 16v12a2 2 0 01-2 2H6a2 2 0 01-2-2V4a2 2 0 012-2zm7 17a1 1 0 01.117 1.993L21 21h-9.997a1 1 0 01-.117-1.993l.117-.007H21zm-5-6a1 1 0 01.117 1.993L16 15h-4.997a1 1 0 01-.117-1.993l.117-.007H16zM27 2a1 1 0 011 1v8a1 1 0 01-2 0l-.001-5.586-5.827 5.829a1 1 0 01-1.414-1.414L24.585 4H19a1 1 0 010-2h8z"
}))));
ViewLogBorder.displayName = "ViewLogBorder";
ViewLogBorder["iconName"] = "view-log_border";
var ViewLogBorder_default = ViewLogBorder;

// src/icon/View.tsx
import React531, { forwardRef as forwardRef481, memo as memo394 } from "react";
var View = memo394(forwardRef481((props, svgRef) => /* @__PURE__ */ React531.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React531.createElement("path", {
  d: "M16 5c8.284 0 15 8 15 11s-6.716 11-15 11C7.716 27 1 19 1 16S7.716 5 16 5zm0 5a6 6 0 100 12 6 6 0 000-12zm0 2a4 4 0 110 8 4 4 0 010-8z"
}))));
View.displayName = "View";
View["iconName"] = "view";
var View_default = View;

// src/icon/Voicemail.tsx
import React532, { forwardRef as forwardRef482, memo as memo395 } from "react";
var Voicemail = memo395(forwardRef482((props, svgRef) => /* @__PURE__ */ React532.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React532.createElement("path", {
  d: "M8 23a7 7 0 116.326-3.999h3.348A7 7 0 1124 23H8zm0-10a3 3 0 100 6 3 3 0 000-6zm16 0a3 3 0 100 6 3 3 0 000-6z"
}))));
Voicemail.displayName = "Voicemail";
Voicemail["iconName"] = "voicemail";
var Voicemail_default = Voicemail;

// src/icon/Warning.tsx
import React533, { forwardRef as forwardRef483, memo as memo396 } from "react";
var Warning = memo396(forwardRef483((props, svgRef) => /* @__PURE__ */ React533.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React533.createElement("path", {
  d: "M16.999 4.27c.304.176.557.428.733.733l11.537 19.998a2 2 0 01-1.732 3H4.463a2 2 0 01-1.732-2.999L14.268 5.004A2 2 0 0117 4.271zM16 22a1 1 0 100 2 1 1 0 000-2zm0-10a1 1 0 00-1 1v6a1 1 0 002 0v-6a1 1 0 00-1-1z"
}))));
Warning.displayName = "Warning";
Warning["iconName"] = "warning";
var Warning_default2 = Warning;

// src/icon/WatchVideo.tsx
import React534, { forwardRef as forwardRef484, memo as memo397 } from "react";
var WatchVideo = memo397(forwardRef484((props, svgRef) => /* @__PURE__ */ React534.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React534.createElement("path", {
  d: "M17.818 5a5 5 0 015 5v3.92l6.328-5.751c.614-.559 1.584-.166 1.667.629l.006.111v14.545c0 .868-1.03 1.324-1.673.74l-6.328-5.753v3.922a4.999 4.999 0 01-4.783 4.995l-.217.005H6a5 5 0 01-5-5V9.999a5 5 0 015-5zm0 2H6a3 3 0 00-3 3v12.364a3 3 0 003 3h11.818a3 3 0 003-3V10a3 3 0 00-3-3zm11 4.168l-5.514 5.012 5.514 5.014V11.168z"
}))));
WatchVideo.displayName = "WatchVideo";
WatchVideo["iconName"] = "watch-video";
var WatchVideo_default = WatchVideo;

// src/icon/WeakConnection.tsx
import React535, { forwardRef as forwardRef485, memo as memo398 } from "react";
var WeakConnection = memo398(forwardRef485((props, svgRef) => /* @__PURE__ */ React535.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React535.createElement("path", {
  fill: "var(--color18, #000)",
  opacity: 0.32,
  d: "M25 4h2a2 2 0 012 2v20a2 2 0 01-2 2h-2a2 2 0 01-2-2V6a2 2 0 012-2z"
}), /* @__PURE__ */ React535.createElement("path", {
  fill: "var(--color18, #000)",
  d: "M17 14a2 2 0 012 2v10a2 2 0 01-2 2h-2a2 2 0 01-2-2V16a2 2 0 012-2h2zM7 20a2 2 0 012 2v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4a2 2 0 012-2h2z"
}))));
WeakConnection.displayName = "WeakConnection";
WeakConnection["iconName"] = "weak-connection";
var WeakConnection_default = WeakConnection;

// src/icon/WebinarBorder.tsx
import React536, { forwardRef as forwardRef486, memo as memo399 } from "react";
var WebinarBorder = memo399(forwardRef486((props, svgRef) => /* @__PURE__ */ React536.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React536.createElement("path", {
  d: "M28 3a2 2 0 012 2v18c0 .073-.004.146-.012.217.008.146.012.297.012.45 0 .736-.905 1.333-1.506 1.333H17v2h4a1 1 0 010 2H11a1 1 0 010-2h4v-2H4a2 2 0 01-2-2V5a2 2 0 012-2h24zm-1 2H5a1 1 0 00-1 1v16a1 1 0 001 1h10.026c.336-4.169 3.838-6 7.49-6 2.063 0 4.07.576 5.485 1.834L28 6a1 1 0 00-1-1zm-4.484 14c-3.035 0-5.09 1.341-5.484 3.775a.197.197 0 00.168.223l.028.002H27a1 1 0 00.902-.568c-.502-2.167-2.374-3.359-5.127-3.429L22.517 19zM13 15a1 1 0 010 2H7a1 1 0 010-2h6zm9.5-7a3.5 3.5 0 110 7 3.5 3.5 0 010-7zm0 2a1.5 1.5 0 10.001 3.001A1.5 1.5 0 0022.5 10zM13 9a1 1 0 010 2H7a1 1 0 010-2h6z"
}))));
WebinarBorder.displayName = "WebinarBorder";
WebinarBorder["iconName"] = "webinar_border";
var WebinarBorder_default = WebinarBorder;

// src/icon/Webinar.tsx
import React537, { forwardRef as forwardRef487, memo as memo400 } from "react";
var Webinar = memo400(forwardRef487((props, svgRef) => /* @__PURE__ */ React537.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React537.createElement("path", {
  d: "M28 3a2 2 0 012 2v18a2 2 0 01-2 2H17v2h4a1 1 0 010 2H11a1 1 0 010-2h4v-2H4a2 2 0 01-2-2V5a2 2 0 012-2h24zm-6 14c-3.262 0-6 2.157-6 5 0 .552.413 1 .923 1h10.154c.51 0 .923-.448.923-1 0-2.843-2.738-5-6-5zm-9-2H7a1 1 0 000 2h6a1 1 0 000-2zm9-6.5a3 3 0 100 6 3 3 0 000-6zM13 9H7a1 1 0 000 2h6a1 1 0 000-2z"
}))));
Webinar.displayName = "Webinar";
Webinar["iconName"] = "webinar";
var Webinar_default = Webinar;

// src/icon/Webpage.tsx
import React538, { forwardRef as forwardRef488, memo as memo401 } from "react";
var Webpage = memo401(forwardRef488((props, svgRef) => /* @__PURE__ */ React538.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React538.createElement("path", {
  d: "M16.607 5.494a7 7 0 019.899 9.899l-2.364 2.367a9.05 9.05 0 00-.122-2.708l1.071-1.073a5 5 0 000-7.071 5 5 0 00-7.071 0l-4.243 4.243a5 5 0 002.828 8.485l-1.645 1.645a6.999 6.999 0 01-2.597-11.544l4.243-4.243zM6 16.101l2.364-2.367a9.05 9.05 0 00.122 2.708l-1.071 1.073a5 5 0 000 7.071 5 5 0 007.071 0l4.243-4.243a5 5 0 00-2.828-8.485l1.645-1.645a6.999 6.999 0 012.597 11.544L15.9 26a7 7 0 01-9.899-9.899z"
}))));
Webpage.displayName = "Webpage";
Webpage["iconName"] = "webpage";
var Webpage_default = Webpage;

// src/icon/Whisper.tsx
import React539, { forwardRef as forwardRef489, memo as memo402 } from "react";
var Whisper = memo402(forwardRef489((props, svgRef) => /* @__PURE__ */ React539.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React539.createElement("path", {
  d: "M8.832 6.356c.365-1.305 2.042-2.795 3.836-2.234s4.948-.047 4.983-.047a.16.16 0 01.11.04.162.162 0 01.056.112c.012.454-.157.894-.47 1.218 2.67 1.811 2.004 5.368 1.696 6.89l.027.037c.642.862.69 2.075.458 2.907-.142.523-.407 1.462-1.007 2.062-.24.846-.978 1.633-1.505 2.331v.922c0 .029.019.054.047.062 2.281.538 7.938 2.252 7.938 6.536 0 .462-.453.803-.908.808H1.727c-.454-.01-.729-.352-.726-.813 0-4.289 5.718-6.058 8.004-6.593a.063.063 0 00.047-.062v-.907c-.528-.704-1.332-1.44-1.571-2.292-.598-.6-.862-1.549-1.004-2.062-.233-.832-.112-2.038.528-2.899l.029-.037c-.044-.249-.427-.498-.447-.747-.289-1.953-.071-3.408.664-4.322.391-.5.959-.826 1.582-.909zm15.908-.822l1.86 1.022A6.985 6.985 0 0024 12a6.992 6.992 0 002.902 5.676l-1.706 1.203A8.98 8.98 0 0122 12a8.97 8.97 0 012.74-6.466zm2.821 1.549l2.093 1.149a4.002 4.002 0 00-.03 7.525l-1.849 1.304A5.995 5.995 0 0125 12a5.992 5.992 0 012.561-4.917zM31 9v2a1 1 0 000 2v1.787l-.283.2A3 3 0 0131 9z"
}))));
Whisper.displayName = "Whisper";
Whisper["iconName"] = "whisper";
var Whisper_default = Whisper;

// src/icon/Work.tsx
import React540, { forwardRef as forwardRef490, memo as memo403 } from "react";
var Work = memo403(forwardRef490((props, svgRef) => /* @__PURE__ */ React540.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React540.createElement("path", {
  d: "M22 3a2 2 0 012 2v3h4a2 2 0 012 2v17a2 2 0 01-2 2H4a2 2 0 01-2-2V10a2 2 0 012-2h4V5a2 2 0 012-2h12zm5 7H5a1 1 0 00-1 1v15a1 1 0 001 1h22a1 1 0 001-1V11a1 1 0 00-1-1zm-6-5H11a1 1 0 00-1 1v2h12V6a1 1 0 00-1-1z"
}))));
Work.displayName = "Work";
Work["iconName"] = "work";
var Work_default = Work;

// src/icon/WorkspaceBorder.tsx
import React541, { forwardRef as forwardRef491, memo as memo404 } from "react";
var WorkspaceBorder = memo404(forwardRef491((props, svgRef) => /* @__PURE__ */ React541.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React541.createElement("path", {
  d: "M23.558 4a2 2 0 011.897 1.368l4.236 12.709c.204.612.308 1.252.308 1.897V26a2 2 0 01-2 2h-24a2 2 0 01-2-2v-6.026c0-.645.104-1.286.308-1.897L6.543 5.368A2 2 0 018.44 4h15.117zM9.172 20H4v5a1 1 0 001 1h22a1 1 0 001-1v-5h-5.172a1 1 0 00-.608.206l-.099.087-1.828 1.828a3 3 0 01-1.923.872l-.198.007h-4.343a3.006 3.006 0 01-1.977-.743l-.145-.135-1.828-1.828a.996.996 0 00-.576-.284l-.131-.009zM22.838 6H9.163a1 1 0 00-.949.684L4.441 18h4.731c.729 0 1.431.266 1.977.743l.145.135 1.828 1.828a.996.996 0 00.576.284l.131.009h4.343a1 1 0 00.608-.206l.099-.087 1.828-1.828a3 3 0 011.923-.872l.198-.007h4.73L23.786 6.683a1 1 0 00-.949-.684zM23 13a1 1 0 010 2H9a1 1 0 010-2h14zm-2-5a1 1 0 010 2H11a1 1 0 010-2h10z"
}))));
WorkspaceBorder.displayName = "WorkspaceBorder";
WorkspaceBorder["iconName"] = "workspace_border";
var WorkspaceBorder_default = WorkspaceBorder;

// src/icon/Workspace.tsx
import React542, { forwardRef as forwardRef492, memo as memo405 } from "react";
var Workspace = memo405(forwardRef492((props, svgRef) => /* @__PURE__ */ React542.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React542.createElement("path", {
  d: "M9.172 20l.131.009c.173.023.338.091.477.197l.099.087 1.828 1.828.145.135c.491.43 1.108.688 1.759.735l.218.008h4.343l.198-.007a3 3 0 001.764-.724l.16-.148 1.828-1.828.099-.087c.139-.106.303-.174.477-.197l.131-.009h7.172v6a2 2 0 01-2 2h-24a2 2 0 01-2-2v-6h7.172zM23.558 4a2 2 0 011.897 1.368L29.666 18l-7.037.007a3 3 0 00-1.764.724l-.16.148-1.828 1.828-.099.087a1.003 1.003 0 01-.477.197L18.17 21h-4.343l-.131-.009a1.007 1.007 0 01-.477-.197l-.099-.087-1.828-1.828-.145-.135a2.996 2.996 0 00-1.759-.735l-.218-.008H2.33L6.542 5.369a2 2 0 011.897-1.368h15.117zM23 13H9a1 1 0 00-.117 1.993L9 15h14a1 1 0 00.117-1.993L23 13zm-2-5H11a1 1 0 00-.117 1.993L11 10h10a1 1 0 00.117-1.993L21 8z"
}))));
Workspace.displayName = "Workspace";
Workspace["iconName"] = "workspace";
var Workspace_default = Workspace;

// src/icon/ZipD.tsx
import React543, { forwardRef as forwardRef493, memo as memo406 } from "react";
var ZipD = memo406(forwardRef493((props, svgRef) => /* @__PURE__ */ React543.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React543.createElement("path", {
  fill: "var(--color21, #222b42)",
  d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
}), /* @__PURE__ */ React543.createElement("path", {
  fill: "var(--color37, #356afd)",
  d: "M16.756 8l5.466 4.962-.024 8.878c0 .607-.204 1.118-.612 1.535s-.909.625-1.503.625h-8.154c-.594 0-1.095-.209-1.503-.625s-.612-.929-.612-1.535l-.035-11.661c0-.607.204-1.118.612-1.535s.909-.625 1.503-.625l1.44-.005v1.765h-1.778v.889h1.778v1.778h-1.778v.889h1.778v1.778h-1.778v.889h1.778v1.778h-1.778v.889H16v-.889h-1.778v-1.778H16v-.889h-1.778v-1.778H16v-.889h-1.778v-1.778H16v-.889h-1.778V8.01l2.534-.009z"
}), /* @__PURE__ */ React543.createElement("path", {
  fill: "var(--color27, #f1f1f1)",
  d: "M13.333 8.012v1.766h-1.777v.889h1.777v1.777h-1.777v.889h1.777v1.778h-1.777V16h1.777v1.778h-1.777v.889H16v-.889h-1.778V16H16v-.889h-1.778v-1.778H16v-.889h-1.778v-1.778H16v-.888h-1.778V8.009z"
}))));
ZipD.displayName = "ZipD";
ZipD["iconName"] = "zip-D";
var ZipD_default = ZipD;

// src/icon/Zip.tsx
import React544, { forwardRef as forwardRef494, memo as memo407 } from "react";
var Zip = memo407(forwardRef494((inProps, svgRef) => {
  const theme = useTheme2();
  const { themeType = theme.palette.type, ...props } = inProps;
  return themeType === "dark" ? /* @__PURE__ */ React544.createElement(ZipD_default, {
    ...props,
    ref: svgRef
  }) : /* @__PURE__ */ React544.createElement("svg", {
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    ...props
  }, /* @__PURE__ */ React544.createElement("path", {
    fill: "var(--color3, #fff)",
    opacity: 0.992,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React544.createElement("path", {
    fill: "var(--color58, #4475fd)",
    opacity: 0.16,
    d: "M3.556 0h24.889a3.556 3.556 0 013.556 3.556v24.889a3.556 3.556 0 01-3.556 3.556H3.556A3.556 3.556 0 010 28.445V3.556A3.556 3.556 0 013.556 0z"
  }), /* @__PURE__ */ React544.createElement("path", {
    fill: "var(--color58, #4475fd)",
    d: "M16.756 8l5.466 4.962-.024 8.878c0 .607-.204 1.118-.612 1.535s-.909.625-1.503.625h-8.154c-.594 0-1.095-.209-1.503-.625s-.612-.929-.612-1.535l-.035-11.661c0-.607.204-1.118.612-1.535s.909-.625 1.503-.625l1.44-.005v1.765h-1.778v.889h1.778v1.778h-1.778v.889h1.778v1.778h-1.778v.889h1.778v1.778h-1.778v.889H16v-.889h-1.778v-1.778H16v-.889h-1.778v-1.778H16v-.889h-1.778v-1.778H16v-.889h-1.778V8.01l2.534-.009z"
  }));
}));
Zip.displayName = "Zip";
Zip["iconName"] = "zip";
var Zip_default = Zip;

// src/icon/ZoomIn.tsx
import React545, { forwardRef as forwardRef495, memo as memo408 } from "react";
var ZoomIn = memo408(forwardRef495((props, svgRef) => /* @__PURE__ */ React545.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React545.createElement("path", {
  d: "M16 4a1 1 0 011 1v10h10a1 1 0 010 2H17v10a1 1 0 01-2 0V17H5a1 1 0 010-2h10V5a1 1 0 011-1z"
}))));
ZoomIn.displayName = "ZoomIn";
ZoomIn["iconName"] = "zoom-in";
var ZoomIn_default = ZoomIn;

// src/icon/ZoomOut.tsx
import React546, { forwardRef as forwardRef496, memo as memo409 } from "react";
var ZoomOut = memo409(forwardRef496((props, svgRef) => /* @__PURE__ */ React546.createElement("svg", {
  viewBox: "0 0 32 32",
  xmlns: "http://www.w3.org/2000/svg",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React546.createElement("path", {
  d: "M28 16a1 1 0 01-1 1H5a1 1 0 010-2h22a1 1 0 011 1z"
}))));
ZoomOut.displayName = "ZoomOut";
ZoomOut["iconName"] = "zoom-out";
var ZoomOut_default = ZoomOut;

// framer/src/utils/colorOptions.ts
var colorOptions = [
  "action.grayDark",
  "action.grayLight",
  "action.primary",
  "avatar.ash",
  "avatar.blueberry",
  "avatar.brass",
  "avatar.global",
  "avatar.gold",
  "avatar.lake",
  "avatar.oasis",
  "avatar.pear",
  "avatar.persimmon",
  "avatar.sage",
  "avatar.tomato",
  "content.brand",
  "danger.b01",
  "danger.b02",
  "danger.b03",
  "danger.b04",
  "danger.f01",
  "danger.f02",
  "danger.f11",
  "dialHeader.avatarBg",
  "dialHeader.avatarIcon",
  "dialHeader.bg",
  "dialHeader.focusBorder",
  "dialHeader.icon",
  "dialHeader.text",
  "dialHeader.textHint",
  "disabled.b01",
  "disabled.f01",
  "disabled.f02",
  "header.bgLeft",
  "header.bgOverlay",
  "header.bgOverlayDisabled",
  "header.bgRight",
  "header.border",
  "header.divider",
  "header.fabBg",
  "header.fabIcon",
  "header.focusBorder",
  "header.icon",
  "header.iconDisabled",
  "header.text",
  "header.textHint",
  "highContrast",
  "highlight.b01",
  "highlight.b02",
  "highlight.b03",
  "highlight.f01",
  "highlight.f02",
  "informative.b01",
  "informative.f01",
  "informative.f02",
  "interactive.b01",
  "interactive.b02",
  "interactive.f01",
  "label.black02",
  "label.blue01",
  "label.blue02",
  "label.green01",
  "label.green02",
  "label.orange01",
  "label.orange02",
  "label.purple01",
  "label.purple02",
  "label.red01",
  "label.red02",
  "label.teal01",
  "label.teal02",
  "label.yellow01",
  "label.yellow02",
  "nav.b01",
  "nav.b02",
  "nav.bookmark",
  "nav.ctlDefault",
  "nav.ctlSelected",
  "nav.f01",
  "nav.f02",
  "nav.f03",
  "nav.f04",
  "nav.iconDefault",
  "nav.iconSelected",
  "nav.line",
  "nav.mention",
  "nav.menuBg",
  "nav.menuText",
  "neutral.b01",
  "neutral.b02",
  "neutral.b03",
  "neutral.b04",
  "neutral.b05",
  "neutral.b06",
  "neutral.elevation",
  "neutral.f01",
  "neutral.f02",
  "neutral.f03",
  "neutral.f04",
  "neutral.f05",
  "neutral.f06",
  "neutral.f07",
  "neutral.f11",
  "neutral.l01",
  "neutral.l02",
  "neutral.l03",
  "neutral.l04",
  "neutral.transparent",
  "presence.available",
  "presence.busy",
  "presence.invisible",
  "subAction",
  "success.b01",
  "success.b02",
  "success.b03",
  "success.b04",
  "success.b05",
  "success.f01",
  "success.f02",
  "success.f11",
  "tab.default",
  "tab.selected",
  "umi.bg",
  "umi.mentioned",
  "umi.text",
  "warning.b01",
  "warning.b02",
  "warning.b03",
  "warning.f01",
  "warning.f02",
  "warning.f11"
];

// framer/src/utils/elevationOptions.ts
var elevationOptions = [
  "undefined",
  "0",
  "1",
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8",
  "9",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "20",
  "21",
  "22",
  "23",
  "24"
];

// framer/src/utils/iconOptions.ts
var iconOptions = [
  "Svg0",
  "Svg1",
  "Svg2",
  "Svg3",
  "Svg4",
  "Svg5",
  "Svg6",
  "Svg7",
  "Svg8",
  "Svg9",
  "CustomizeTabs",
  "Connect",
  "ViewLogBorder",
  "AppleLogo",
  "LeaveMeeting",
  "Warning",
  "RcBlog",
  "RcHelp",
  "Hd",
  "GdriveLogo",
  "WebinarBorder",
  "Webinar",
  "AddParkLocation",
  "ParkCallText",
  "ParkCallMessage",
  "ParkCall",
  "Expand",
  "RollAp",
  "BoxNew",
  "Sharepoint",
  "DownwardsArrowWithTipRightwards",
  "DeletedFileD",
  "MicrosoftLogoDisabled",
  "GoogleLogoDisabled",
  "AddNewFolder",
  "Foldercreated",
  "JoinAudioPoc",
  "SmsInviteBorder",
  "Advanced",
  "OuboundCallOnBehalf",
  "InboundCallOnBehalf",
  "CallOnBehalf",
  "AddReactions",
  "AddEmojiMore",
  "RcvMicOff",
  "RcvVideocamOff",
  "Whisper",
  "Barge",
  "TakeOver",
  "MonitorCall",
  "PickUpCall",
  "Help",
  "HelpBorder",
  "OpenFolder",
  "WatchVideo",
  "GoodConnection",
  "NoConnection",
  "PoorConnection",
  "WeakConnection",
  "DeletedFile",
  "DragableArea",
  "DockBorder",
  "Undock",
  "UndockBorder",
  "HUD",
  "CompanySetup",
  "CompanySetupBorder",
  "DefaultGdriveD",
  "MacNumbersD",
  "MacKeynoteD",
  "MacPagesD",
  "GoogleDocD",
  "GoogleSlideD",
  "GoogleSheetD",
  "DefaultVideoD",
  "GifFileD",
  "ZipD",
  "DefaultFileD",
  "ImageBrokenD",
  "ExcelD",
  "PdfD",
  "PptD",
  "DocD",
  "DefaultMusicD",
  "ImagePreviewD",
  "CodeSnippets",
  "Theme",
  "RcCloudContact",
  "PartnerCloudContact",
  "StartMeeting",
  "ScheduleMeeting",
  "JoinMeeting",
  "VideoAndMessage",
  "ScreenshareBorder",
  "Screenshare",
  "SmsDefault",
  "TeamDefault",
  "GroupDefault",
  "UserDefault",
  "RichTextEditor",
  "SendFilled",
  "CloudContact",
  "Nickname",
  "Birthday",
  "Address",
  "Apps",
  "Department",
  "AddField",
  "RemoveField",
  "ContactsAndCalendars",
  "Text",
  "RcContact",
  "GoogleLogo",
  "MicrosoftLogo",
  "NewEmail",
  "VideoMeeting",
  "Sort",
  "Radio",
  "RadioUnselect",
  "AddTask",
  "AddEvent",
  "HideBorder",
  "WorkspaceBorder",
  "Workspace",
  "NewNote",
  "NewFile",
  "ForwardingBorder",
  "Forwarding",
  "AddIntegration",
  "ListView",
  "ResendFax",
  "NoAudio",
  "Audio",
  "NewFax",
  "FaxBorder",
  "Fax",
  "FailedFax",
  "FailedFaxBorder",
  "InboundFaxBorder",
  "InboundFax",
  "OutboundFaxBorder",
  "OutboundFax",
  "StopCircleBorder",
  "StopCircle",
  "Stop",
  "StopBorder",
  "PlayCircle",
  "PlayCircleBorder",
  "Play",
  "PlayBorder",
  "PauseCircle",
  "PauseCircleBorder",
  "Pause",
  "PauseBorder",
  "AlignCenter",
  "AlignJustify",
  "AlignLeft",
  "AlignRight",
  "Bold",
  "Italic",
  "Underline",
  "Strike",
  "Indent",
  "Outdent",
  "InsertCode",
  "InsertImage",
  "InsertLink",
  "InsertTable",
  "InsertVideo",
  "FontColor",
  "HorizontalLine",
  "ListBullet",
  "ListOrdered",
  "Box",
  "Evernote",
  "Dropbox",
  "Google",
  "Onedrive",
  "GifFile",
  "MacPages",
  "MacNumbers",
  "MacKeynote",
  "GoogleDoc",
  "GoogleSheet",
  "GoogleSlide",
  "DefaultGdrive",
  "DefaultFile",
  "DefaultMusic",
  "DefaultVideo",
  "Zip",
  "Doc",
  "Excel",
  "Pdf",
  "Ppt",
  "GoogleCalendar2019",
  "MicrosoftOutlook2019",
  "EndAnswer",
  "HoldAnswer",
  "MarkerS",
  "MarkerM",
  "StopRecord",
  "ImagePreview",
  "ImageBroken",
  "AdminBorder",
  "Admin",
  "AddTeamBorder",
  "AddTeam",
  "TeamBorder",
  "Team",
  "MemberBorder",
  "People",
  "AddMemberBorder",
  "AddMember",
  "ContactsBorder",
  "Contacts",
  "Asterisk",
  "Hash",
  "Transcription",
  "Comments",
  "Quote",
  "ChatBubble",
  "Dial",
  "Deletenumber",
  "ActiveCall",
  "Merge",
  "Record",
  "Keypad",
  "Dialer",
  "Hold",
  "CallAdd",
  "Ignore",
  "CallMore",
  "HandUp",
  "Voicemail",
  "Askfirst",
  "Signal",
  "Signal1",
  "Signal2",
  "Signal3",
  "MicBorder",
  "Mic",
  "MicOffBorder",
  "MicOff",
  "BubbleLinesBorder",
  "BubbleLines",
  "VideocamBorder",
  "Videocam",
  "VideocamOffBorder",
  "VideocamOff",
  "PhoneBorder",
  "Phone",
  "PhoneOffBorder",
  "PhoneOff",
  "TransferCallBorder",
  "IncallBorder",
  "HoldcallBorder",
  "ActivecallBorder",
  "Incall",
  "OutcallBorder",
  "Outcall",
  "MissedcallBorder",
  "Missedcall",
  "Forwardcall",
  "CallList",
  "TransferCall",
  "ArrowUp",
  "ArrowDown",
  "ArrowLeft",
  "ArrowRight1",
  "ArrowDown2",
  "ArrowLeft2",
  "ArrowRight",
  "ArrowUp2",
  "ChevronLeft",
  "ChevronRight",
  "DoubleChevronLeft",
  "DoubleChevronRight",
  "Previous",
  "Forward",
  "JumpToLatest",
  "JumpToUnread",
  "UnfoldLess",
  "UnfoldMore",
  "FileBorder",
  "File",
  "BookmarkBorder",
  "Bookmark",
  "StarBorder",
  "Star",
  "NotificationBorder",
  "Notification",
  "MuteNotificationBorder",
  "MuteNotification",
  "ThumbupBorder",
  "Thumbup",
  "Unpin",
  "UnpinSlash",
  "Pin",
  "Close",
  "DeleteCircle",
  "SettingsBorder",
  "Settings",
  "NoteBorder",
  "Note",
  "TaskNewBorder",
  "TaskNew",
  "EventNewBorder",
  "EventNew",
  "DashboardBorder",
  "Dashboard",
  "Unselect",
  "Indeterminate",
  "Selects",
  "Unlock",
  "LockBorder",
  "Lock",
  "AddBorder",
  "Add",
  "RemoveBorder",
  "Remove",
  "ViewBorder",
  "View",
  "Blocked",
  "Unblocked",
  "Read",
  "Unread",
  "ShortcutBorder",
  "Shortcut",
  "TimeBorder",
  "Time",
  "DateBorder",
  "Date",
  "MentionBorder",
  "Mention",
  "AnalyticsBorder",
  "Analytics",
  "LocationBorder",
  "Location",
  "ConferenceBorder",
  "Conference",
  "DefaultIntegrationBorder",
  "DefaultIntegration",
  "SmsBorder",
  "Sms",
  "Attachment",
  "Check",
  "Computer",
  "Copy",
  "Delete",
  "Logout",
  "Archive",
  "Download",
  "Draft",
  "Edit",
  "NonEdit",
  "Email",
  "Emoji",
  "Gif",
  "ExternalLink",
  "Filter",
  "Inbox",
  "Info",
  "Leave",
  "Login",
  "MoreHoriz",
  "MoreVert",
  "Refresh",
  "Repeat",
  "Reply",
  "ResetZoom",
  "SaveDraft",
  "Send",
  "Share",
  "SpeakerDown",
  "SpeakerMute",
  "SpeakerUp",
  "Webpage",
  "Work",
  "ZoomIn",
  "ZoomOut",
  "Search",
  "SearchNav",
  "NewAction",
  "DefaultTeamAvatar",
  "Minimize",
  "Schedule",
  "Join",
  "Start",
  "Feedback",
  "DefaultGroupAvatar",
  "DefaultAvatar",
  "Assignment",
  "ItemListSelected"
].sort();

// framer/src/utils/radiusOptions.ts
var radiusOptions = [
  "circle",
  "lg",
  "md",
  "round",
  "sm",
  "xl",
  "xxl",
  "zero"
];

// framer/src/utils/themeOptions.ts
var themeOptions = [
  "rcBlue",
  "rcJupiterBlue",
  "rcDark",
  "rcHighContrast",
  "rcPhoenix",
  "avayaCustomized",
  "verizonSimple",
  "vodafoneBalanced",
  "rainbowRich",
  "atosRich",
  "telusRich",
  "attRich",
  "btRich",
  "eastlinkSimple",
  "mcmRich",
  "ecotelSimple"
];

// framer/src/utils/typographyOptions.ts
var typographyOptions = [
  "display4",
  "display3",
  "display2",
  "display1",
  "headline2",
  "headline1",
  "title2",
  "title1",
  "subheading2",
  "subheading1",
  "body2",
  "body1",
  "caption2",
  "caption1",
  "inherit"
];

// framer/src/themes/atosRich/atosRich.ts
var atosRich = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#0066A1"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#4D9AC7",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#0066A1"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#0066A1",
      bg: "#0066A1",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.72)"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#0066A1",
      bgOverlay: "rgba(255,255,255,0.16)",
      bgOverlayDisabled: "rgba(255,255,255,0.08)",
      bgRight: "#4D9AC7",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.48)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FA560A",
      f01: "#121212",
      f02: "#FA560A"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E6F2F8",
      b02: "#0066A1",
      f01: "#0066A1"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#0066A1",
      ctlDefault: "#939393",
      ctlSelected: "#0066A1",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#0066A1",
      line: "#E5E5E5",
      mention: "#FA560A",
      menuBg: "#0066A1",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#0066A1"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#0066A1",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#0066A1"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FA560A",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var atosRich_default = atosRich;

// framer/src/themes/atosRich/index.ts
var atosRich_default2 = atosRich_default;

// framer/src/themes/atosRich/mobile/atosRichMobile.ts
var atosRichMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#4D9AC7",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#0066A1"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#0066A1",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E6F2F8",
      b02: "#0066A1",
      f01: "#0066A1"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#0066A1"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#0066A1"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#0066A1",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#0066A1"
    },
    type: "light",
    umi: {
      bg: "#0066A1",
      mentioned: "#FA560A",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var atosRichMobile_default = atosRichMobile;

// framer/src/themes/atosRich/mobile/index.ts
var mobile_default = atosRichMobile_default;

// framer/src/themes/attRich/attRich.ts
var attRich = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#0A6EBE"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#5399D1",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#0A6EBE"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#0A6EBE",
      bg: "#0A6EBE",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.88)"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#0A6EBE",
      bgOverlay: "rgba(0,0,0,0.16)",
      bgOverlayDisabled: "rgba(0,0,0,0.08)",
      bgRight: "#5399D1",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.88)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#A15600",
      f01: "#121212",
      f02: "#A15600"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E6F2F8",
      b02: "#0A6EBE",
      f01: "#0A6EBE"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#0A6EBE",
      ctlDefault: "#939393",
      ctlSelected: "#0A6EBE",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#0A6EBE",
      line: "#E5E5E5",
      mention: "#A15600",
      menuBg: "#0A6EBE",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#0A6EBE"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#0A6EBE",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#0A6EBE"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var attRich_default = attRich;

// framer/src/themes/attRich/index.ts
var attRich_default2 = attRich_default;

// framer/src/themes/attRich/mobile/attRichMobile.ts
var attRichMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#5399D1",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#0A6EBE"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#0A6EBE",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E6F2F8",
      b02: "#0A6EBE",
      f01: "#0A6EBE"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#0A6EBE"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#0A6EBE"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#0A6EBE",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#0A6EBE"
    },
    type: "light",
    umi: {
      bg: "#0A6EBE",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var attRichMobile_default = attRichMobile;

// framer/src/themes/attRich/mobile/index.ts
var mobile_default2 = attRichMobile_default;

// framer/src/themes/avayaCustomized/avayaCustomized.ts
var avayaCustomized = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#DA291C"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#E7583E",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#DA291C"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#DA291C",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#DA291C",
      bg: "#575759",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.72)"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#F3F3F3",
      bgOverlay: "rgba(116,116,116,0.16)",
      bgOverlayDisabled: "rgba(116,116,116,0.08)",
      bgRight: "#F3F3F3",
      border: "transparent",
      divider: "#E5E5E5",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#DA291C",
      icon: "#121212",
      iconDisabled: "#B9B9B9",
      text: "#121212",
      textHint: "rgba(18,18,18,0.64)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#DA291C",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F9F9F9",
      f01: "#E3EBF4",
      f02: "#DA291C"
    },
    interactive: {
      b01: "#F3F3F3",
      b02: "#575759",
      f01: "#575759"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#DA291C",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#757575",
      ctlDefault: "#939393",
      ctlSelected: "#575759",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#DA291C",
      line: "#E5E5E5",
      mention: "#DA291C",
      menuBg: "#575759",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#DA291C"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#575759",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#DA291C"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#DA291C",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var avayaCustomized_default = avayaCustomized;

// framer/src/themes/avayaCustomized/index.ts
var avayaCustomized_default2 = avayaCustomized_default;

// framer/src/themes/avayaCustomized/mobile/avayaCustomizedMobile.ts
var avayaCustomizedMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#E7583E",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#DA291C"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#FFFFFF",
      bgMa: "#FFFFFF",
      icon: "#575759",
      iconMa: "#575759",
      searchBox: "#F9F9F9",
      statusbar: "#2F2F2F",
      text: "#2F2F2F",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#DA291C"
    },
    interactive: {
      b01: "#F3F3F3",
      b02: "#575759",
      f01: "#575759"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#DA291C"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#DA291C"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#575759",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#DA291C"
    },
    type: "light",
    umi: {
      bg: "#575759",
      mentioned: "#DA291C",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var avayaCustomizedMobile_default = avayaCustomizedMobile;

// framer/src/themes/avayaCustomized/mobile/index.ts
var mobile_default3 = avayaCustomizedMobile_default;

// framer/src/themes/btRich/btRich.ts
var btRich = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#5514B4"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#885ACA",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#5514B4"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#5514B4",
      bg: "#5514B4",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.72)"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#5514B4",
      bgOverlay: "rgba(255,255,255,0.16)",
      bgOverlayDisabled: "rgba(255,255,255,0.08)",
      bgRight: "#885ACA",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.48)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#F9F8FE",
      b02: "#5514B4",
      f01: "#5514B4"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#5514B4",
      ctlDefault: "#939393",
      ctlSelected: "#5514B4",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#5514B4",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#5514B4",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#5514B4"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#5514B4",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#5514B4"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var btRich_default = btRich;

// framer/src/themes/btRich/index.ts
var btRich_default2 = btRich_default;

// framer/src/themes/btRich/mobile/btRichMobile.ts
var btRichMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#885ACA",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#5514B4"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#5514B4",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#F9F8FE",
      b02: "#5514B4",
      f01: "#5514B4"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#5514B4"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#5514B4"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#5514B4",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#5514B4"
    },
    type: "light",
    umi: {
      bg: "#5514B4",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var btRichMobile_default = btRichMobile;

// framer/src/themes/btRich/mobile/index.ts
var mobile_default4 = btRichMobile_default;

// framer/src/themes/eastlinkSimple/eastlinkSimple.ts
var eastlinkSimple = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#332A86"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#7069AA",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#332A86"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#332A86",
      bg: "#F3F3F3",
      focusBorder: "#332A86",
      icon: "#121212",
      text: "#121212",
      textHint: "#666666"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#F9F9F9",
      bgOverlay: "#FFFFFF",
      bgOverlayDisabled: "rgba(255,255,255,0.32)",
      bgRight: "#F9F9F9",
      border: "#E5E5E5",
      divider: "#E5E5E5",
      fabBg: "#332A86",
      fabIcon: "#FFFFFF",
      focusBorder: "#332A86",
      icon: "#121212",
      iconDisabled: "#B9B9B9",
      text: "#121212",
      textHint: "#757575"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E3EBF4",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#757575",
      ctlDefault: "#939393",
      ctlSelected: "#332A86",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#332A86",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#332A86",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#332A86"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#332A86",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#332A86"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var eastlinkSimple_default = eastlinkSimple;

// framer/src/themes/eastlinkSimple/index.ts
var eastlinkSimple_default2 = eastlinkSimple_default;

// framer/src/themes/eastlinkSimple/mobile/eastlinkSimpleMobile.ts
var eastlinkSimpleMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#7069AA",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#332A86"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#F9F9F9",
      bgMa: "#FFFFFF",
      icon: "#2F2F2F",
      iconMa: "#666666",
      searchBox: "#F9F9F9",
      statusbar: "#2F2F2F",
      text: "#2F2F2F",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E3EBF4",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#332A86"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#332A86"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#332A86",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#332A86"
    },
    type: "light",
    umi: {
      bg: "#332A86",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var eastlinkSimpleMobile_default = eastlinkSimpleMobile;

// framer/src/themes/eastlinkSimple/mobile/index.ts
var mobile_default5 = eastlinkSimpleMobile_default;

// framer/src/themes/ecotelSimple/ecotelSimple.ts
var ecotelSimple = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#066FAC"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#509AC4",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#066FAC"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#066FAC",
      bg: "#F3F3F3",
      focusBorder: "#066FAC",
      icon: "#121212",
      text: "#121212",
      textHint: "#666666"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#F9F9F9",
      bgOverlay: "#FFFFFF",
      bgOverlayDisabled: "rgba(255,255,255,0.32)",
      bgRight: "#F9F9F9",
      border: "#E5E5E5",
      divider: "#E5E5E5",
      fabBg: "#066FAC",
      fabIcon: "#FFFFFF",
      focusBorder: "#066FAC",
      icon: "#121212",
      iconDisabled: "#B9B9B9",
      text: "#121212",
      textHint: "#757575"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E3EBF4",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#757575",
      ctlDefault: "#939393",
      ctlSelected: "#066FAC",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#066FAC",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#066FAC",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#066FAC"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#066FAC",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#066FAC"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var ecotelSimple_default = ecotelSimple;

// framer/src/themes/ecotelSimple/index.ts
var ecotelSimple_default2 = ecotelSimple_default;

// framer/src/themes/ecotelSimple/mobile/ecotelSimpleMobile.ts
var ecotelSimpleMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#509AC4",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#066FAC"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#F9F9F9",
      bgMa: "#FFFFFF",
      icon: "#2F2F2F",
      iconMa: "#666666",
      searchBox: "#F9F9F9",
      statusbar: "#2F2F2F",
      text: "#2F2F2F",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E3EBF4",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#066FAC"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#066FAC"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#066FAC",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#066FAC"
    },
    type: "light",
    umi: {
      bg: "#066FAC",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var ecotelSimpleMobile_default = ecotelSimpleMobile;

// framer/src/themes/ecotelSimple/mobile/index.ts
var mobile_default6 = ecotelSimpleMobile_default;

// framer/src/themes/mcmRich/mcmRich.ts
var mcmRich = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#005B87"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#4C8CAB",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#005B87"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#005B87",
      bg: "#005B87",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.88)"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#005B87",
      bgOverlay: "rgba(255,255,255,0.16)",
      bgOverlayDisabled: "rgba(255,255,255,0.08)",
      bgRight: "#4C8CAB",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.48)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E6F2F8",
      b02: "#005B87",
      f01: "#005B87"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#005B87",
      ctlDefault: "#939393",
      ctlSelected: "#005B87",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#005B87",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#005B87",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#005B87"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#005B87",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#005B87"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var mcmRich_default = mcmRich;

// framer/src/themes/mcmRich/index.ts
var mcmRich_default2 = mcmRich_default;

// framer/src/themes/mcmRich/mobile/mcmRichMobile.ts
var mcmRichMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#4C8CAB",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#005B87"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#005B87",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E6F2F8",
      b02: "#005B87",
      f01: "#005B87"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#005B87"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#005B87"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#005B87",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#005B87"
    },
    type: "light",
    umi: {
      bg: "#005B87",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var mcmRichMobile_default = mcmRichMobile;

// framer/src/themes/mcmRich/mobile/index.ts
var mobile_default7 = mcmRichMobile_default;

// framer/src/themes/rainbowRich/rainbowRich.ts
var rainbowRich = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#6B489D"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#977EBA",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#6B489D"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#6B489D",
      bg: "#6B489D",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.72)"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#6B489D",
      bgOverlay: "rgba(255,255,255,0.16)",
      bgOverlayDisabled: "rgba(255,255,255,0.08)",
      bgRight: "#977EBA",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.48)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#F9F8FD",
      b02: "#6B489D",
      f01: "#6B489D"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#6B489D",
      ctlDefault: "#939393",
      ctlSelected: "#6B489D",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#6B489D",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#6B489D",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#6B489D"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#6B489D",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#6B489D"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rainbowRich_default = rainbowRich;

// framer/src/themes/rainbowRich/index.ts
var rainbowRich_default2 = rainbowRich_default;

// framer/src/themes/rainbowRich/mobile/rainbowRichMobile.ts
var rainbowRichMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#977EBA",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#6B489D"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#6B489D",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#F9F8FD",
      b02: "#6B489D",
      f01: "#6B489D"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#6B489D"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#6B489D"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#6B489D",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#6B489D"
    },
    type: "light",
    umi: {
      bg: "#6B489D",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rainbowRichMobile_default = rainbowRichMobile;

// framer/src/themes/rainbowRich/mobile/index.ts
var mobile_default8 = rainbowRichMobile_default;

// framer/src/themes/rcBlue/rcBlue.ts
var rcBlue = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#066FAC"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#509AC4",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#066FAC"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#066FAC",
      bg: "#066FAC",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.88)"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#066FAC",
      bgOverlay: "rgba(255,255,255,0.16)",
      bgOverlayDisabled: "rgba(255,255,255,0.08)",
      bgRight: "#509AC4",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.48)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E6F2F8",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#066FAC",
      ctlDefault: "#939393",
      ctlSelected: "#066FAC",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#066FAC",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#066FAC",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#066FAC"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#066FAC",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#066FAC"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcBlue_default = rcBlue;

// framer/src/themes/rcBlue/index.ts
var rcBlue_default2 = rcBlue_default;

// framer/src/themes/rcBlue/mobile/rcBlueMobile.ts
var rcBlueMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#509AC4",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#066FAC"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#066FAC",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E6F2F8",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#066FAC"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#066FAC"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#066FAC",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#066FAC"
    },
    type: "light",
    umi: {
      bg: "#066FAC",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcBlueMobile_default = rcBlueMobile;

// framer/src/themes/rcBlue/mobile/index.ts
var mobile_default9 = rcBlueMobile_default;

// framer/src/themes/rcDark/rcDark.ts
var rcDark = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#FFFFFF",
      grayLight: "#A0A2A9",
      primary: "#729AFF"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#6990FD",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#729AFF"
    },
    danger: {
      b01: "#391D19",
      b02: "#49241F",
      b03: "#D53C32",
      b04: "#D53C32",
      f01: "#49241F",
      f02: "#E68B85",
      f11: "#E68B85"
    },
    dialHeader: {
      avatarBg: "#6990FD",
      avatarIcon: "#FFFFFF",
      bg: "#383A43",
      focusBorder: "#729AFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "#898B94"
    },
    disabled: {
      b01: "#44464E",
      f01: "#72747E",
      f02: "#54565E"
    },
    error: {
      main: "#DD6057"
    },
    header: {
      bgLeft: "#30323A",
      bgOverlay: "rgba(137,139,148,0.16)",
      bgOverlayDisabled: "rgba(137,139,148,0.08)",
      bgRight: "#30323A",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#282A32",
      fabIcon: "#FFFFFF",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "#898B94"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FFFFFF",
      b02: "#3E2A19",
      b03: "#884C12",
      f01: "#FF8800",
      f02: "#FF8800"
    },
    info: {
      main: "#A0A2A9"
    },
    informative: {
      b01: "#282A32",
      f01: "#222E49",
      f02: "#729AFF"
    },
    interactive: {
      b01: "#29334C",
      b02: "#356AFD",
      f01: "#729AFF"
    },
    label: {
      black02: "#FFFFFF",
      blue01: "#729AFF",
      blue02: "#729AFF",
      green01: "#72B375",
      green02: "#72B375",
      orange01: "#FF8800",
      orange02: "#FF8800",
      purple01: "#A89CD6",
      purple02: "#A89CD6",
      red01: "#E68B85",
      red02: "#E68B85",
      teal01: "#71ADBA",
      teal02: "#71ADBA",
      yellow01: "#D99F26",
      yellow02: "#D99F26"
    },
    nav: {
      b01: "#1e2027",
      b02: "#282A32",
      bookmark: "#729AFF",
      ctlDefault: "#72747E",
      ctlSelected: "#729AFF",
      f01: "#898B94",
      f02: "#A0A2A9",
      f03: "#BCBDC2",
      f04: "#FFFFFF",
      iconDefault: "#FFFFFF",
      iconSelected: "#729AFF",
      line: "#383A43",
      mention: "#FF8800",
      menuBg: "#356AFD",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#1e2027",
      b02: "#30323A",
      b03: "#383A43",
      b04: "#72747E",
      b05: "#72747E",
      b06: "#1e2027",
      elevation: "#282A32",
      f01: "#FFFFFF",
      f02: "#72747E",
      f03: "#898B94",
      f04: "#A0A2A9",
      f05: "#BCBDC2",
      f06: "#FFFFFF",
      f07: "#1e2027",
      f11: "#FFFFFF",
      l01: "#1e2027",
      l02: "#383A43",
      l03: "#54565E",
      l04: "#A0A2A9",
      transparent: "transparent"
    },
    presence: {
      available: "#3D9A4A",
      busy: "#DD6057",
      invisible: "#72747E"
    },
    primary: {
      main: "#356AFD"
    },
    secondary: {
      main: "#884C12"
    },
    subAction: "#729AFF",
    success: {
      b01: "#1C281B",
      b02: "#223221",
      b03: "#368440",
      b04: "#368440",
      b05: "#A0A2A9",
      f01: "#223221",
      f02: "#72B375",
      f11: "#72B375",
      main: "#3D9A4A"
    },
    tab: {
      default: "#FFFFFF",
      selected: "#729AFF"
    },
    type: "dark",
    umi: {
      bg: "#72747E",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#2B2416",
      b02: "#373D1B",
      b03: "#D99F26",
      f01: "#D99F26",
      f02: "#D99F26",
      f11: "#D99F26",
      main: "#74561D"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcDark_default = rcDark;

// framer/src/themes/rcDark/index.ts
var rcDark_default2 = rcDark_default;

// framer/src/themes/rcDark/mobile/rcDarkMobile.ts
var rcDarkMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#6990FD",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#729AFF"
    },
    danger: {
      b01: "#391D19",
      b02: "#AB2B23",
      b03: "#D53C32",
      f01: "#FFFFFF",
      f02: "#D53C32",
      f11: "#DD6057"
    },
    disabled: {
      b01: "#44464E",
      f01: "#75777E",
      f02: "#54565E"
    },
    error: {
      main: "#DD6057"
    },
    header: {
      bg: "#30323A",
      bgMa: "#30323A",
      icon: "#FFFFFF",
      iconMa: "#A0A2A9",
      searchBox: "#282A32",
      statusbar: "#1E2027",
      text: "#FFFFFF",
      textMa: "#FFFFFF"
    },
    highlight: {
      b02: "#FFFFFF",
      f01: "#FF8800"
    },
    info: {
      main: "#A0A2A9"
    },
    informative: {
      b01: "#1C2539",
      b02: "#222E49",
      f02: "#729AFF"
    },
    interactive: {
      b01: "#29334C",
      b02: "#356AFD",
      f01: "#729AFF"
    },
    label: {
      black02: "#FFFFFF",
      blue02: "#729AFF",
      green02: "#72B375",
      orange02: "#FF8800",
      purple02: "#A89CD6",
      red02: "#E68B85",
      teal02: "#71ADBA",
      yellow02: "#D99F26"
    },
    nav: {
      iconDefault: "#FFFFFF",
      iconDefaultMa: "#A0A2A9",
      iconSelected: "#729AFF"
    },
    neutral: {
      b01: "#282A32",
      b02: "#1E2027",
      b03: "#30323A",
      b04: "#54565E",
      b05: "#1E2027",
      b06: "#000000",
      elevation: "#30323A",
      f01: "#FFFFFF",
      f05: "#A0A2A9",
      f06: "#FFFFFF",
      f07: "#000000",
      l02: "#44464E"
    },
    presence: {
      available: "#3D9A4A",
      busy: "#DD6057",
      invisible: "#898B94"
    },
    primary: {
      main: "#356AFD"
    },
    secondary: {
      main: "#884C12"
    },
    subAction: "#729AFF",
    success: {
      b01: "#FFFFFF",
      b02: "#2D6634",
      b03: "#3D9A4A",
      f01: "#FFFFFF",
      f02: "#72B375",
      f11: "#72B375",
      main: "#3D9A4A"
    },
    tab: {
      default: "#A0A2A9",
      selected: "#729AFF"
    },
    type: "dark",
    umi: {
      bg: "#356AFD",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFFFFF",
      b02: "#B06010",
      b03: "#B06010",
      f01: "#FFFFFF",
      f02: "#FF8800",
      f11: "#FF8800",
      main: "#74561D"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcDarkMobile_default = rcDarkMobile;

// framer/src/themes/rcDark/mobile/index.ts
var mobile_default10 = rcDarkMobile_default;

// framer/src/themes/rcHighContrast/rcHighContrast.ts
var rcHighContrast = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  overrides: {
    MuiPaper: {
      elevation1: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation10: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation11: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation12: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation13: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation14: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation15: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation16: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation17: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation18: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation19: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation2: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation20: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation21: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation22: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation23: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation24: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation3: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation4: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation5: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation6: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation7: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation8: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      elevation9: {
        "box-shadow": "0 0 0 1px #FFFFFF"
      },
      root: {
        backgroundColor: "#000000",
        color: "#FFFFFF"
      }
    }
  },
  palette: {
    action: {
      grayDark: "#FFFFFF",
      grayLight: "#FFFFFF",
      primary: "#35C6FF"
    },
    avatar: {
      ash: "#FFFFFF",
      blueberry: "#AE9CFF",
      brass: "#EBA800",
      global: "#84CCFF",
      gold: "#FEFF05",
      lake: "#12F7FF",
      oasis: "#00C5BE",
      pear: "#7FFF5D",
      persimmon: "#FF833B",
      sage: "#42FFA0",
      tomato: "#FF827A"
    },
    content: {
      brand: "#35C6FF"
    },
    danger: {
      b01: "#391D19",
      b02: "#49241F",
      b03: "#FF827A",
      b04: "#FF827A",
      f01: "#49241F",
      f02: "#FF827A",
      f11: "#FF827A"
    },
    dialHeader: {
      avatarBg: "#84CCFF",
      avatarIcon: "#FFFFFF",
      bg: "#000000",
      focusBorder: "#35C6FF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "#FFFFFF"
    },
    disabled: {
      b01: "#4D4D4D",
      f01: "#000000",
      f02: "#4D4D4D"
    },
    error: {
      main: "#DD6057"
    },
    header: {
      bgLeft: "#000000",
      bgOverlay: "rgba(255,255,255,0.16)",
      bgOverlayDisabled: "rgba(255,255,255,0.08)",
      bgRight: "#000000",
      border: "#FFFFFF",
      divider: "#FFFFFF",
      fabBg: "#000000",
      fabIcon: "#FFFFFF",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "#FFFFFF"
    },
    highContrast: "#FFFFFF",
    highlight: {
      b01: "#FFFFFF",
      b02: "#3E2A19",
      b03: "#884C12",
      f01: "#FFA43B",
      f02: "#FFA43B"
    },
    info: {
      main: "#FFFFFF"
    },
    informative: {
      b01: "#000000",
      f01: "#222E49",
      f02: "#35C6FF"
    },
    interactive: {
      b01: "#29334C",
      b02: "#35C6FF",
      f01: "#35C6FF"
    },
    label: {
      black02: "#FFFFFF",
      blue01: "#35C6FF",
      blue02: "#35C6FF",
      green01: "#7FFF5D",
      green02: "#7FFF5D",
      orange01: "#FFA43B",
      orange02: "#FFA43B",
      purple01: "#AE9CFF",
      purple02: "#AE9CFF",
      red01: "#FF827A",
      red02: "#FF827A",
      teal01: "#12F7FF",
      teal02: "#12F7FF",
      yellow01: "#FEFF05",
      yellow02: "#FEFF05"
    },
    nav: {
      b01: "#000000",
      b02: "#000000",
      bookmark: "#35C6FF",
      ctlDefault: "#FFFFFF",
      ctlSelected: "#35C6FF",
      f01: "#FFFFFF",
      f02: "#FFFFFF",
      f03: "#FFFFFF",
      f04: "#FFFFFF",
      iconDefault: "#FFFFFF",
      iconSelected: "#35C6FF",
      line: "#FFFFFF",
      mention: "#FFA43B",
      menuBg: "#35C6FF",
      menuText: "#000000"
    },
    neutral: {
      b01: "#000000",
      b02: "#000000",
      b03: "#000000",
      b04: "#FFFFFF",
      b05: "#FFFFFF",
      b06: "#000000",
      elevation: "#000000",
      f01: "#000000",
      f02: "#808080",
      f03: "#FFFFFF",
      f04: "#FFFFFF",
      f05: "#FFFFFF",
      f06: "#FFFFFF",
      f07: "#000000",
      f11: "#FFFFFF",
      l01: "#000000",
      l02: "#FFFFFF",
      l03: "#FFFFFF",
      l04: "#FFFFFF",
      transparent: "transparent"
    },
    presence: {
      available: "#7FFF5D",
      busy: "#FF827A",
      invisible: "#808080"
    },
    primary: {
      main: "#35C6FF"
    },
    secondary: {
      main: "#884C12"
    },
    subAction: "#35C6FF",
    success: {
      b01: "#1C281B",
      b02: "#223221",
      b03: "#7FFF5D",
      b04: "#7FFF5D",
      b05: "#FFFFFF",
      f01: "#223221",
      f02: "#7FFF5D",
      f11: "#7FFF5D",
      main: "#3D9A4A"
    },
    tab: {
      default: "#FFFFFF",
      selected: "#35C6FF"
    },
    type: "dark",
    umi: {
      bg: "#FFFFFF",
      mentioned: "#FFA43B",
      text: "#000000"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#2B2416",
      b02: "#373D1B",
      b03: "#FEFF05",
      f01: "#FEFF05",
      f02: "#FEFF05",
      f11: "#FEFF05",
      main: "#74561D"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcHighContrast_default = rcHighContrast;

// framer/src/themes/rcHighContrast/index.ts
var rcHighContrast_default2 = rcHighContrast_default;

// framer/src/themes/rcHighContrast/mobile/rcHighContrastMobile.ts
var rcHighContrastMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  overrides: {
    MuiPaper: {
      elevation1: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation10: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation11: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation12: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation13: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation14: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation15: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation16: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation17: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation18: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation19: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation2: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation20: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation21: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation22: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation23: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation24: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation3: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation4: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation5: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation6: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation7: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation8: {
        "box-shadow": "0 0 0 1px undefined"
      },
      elevation9: {
        "box-shadow": "0 0 0 1px undefined"
      },
      root: {
        backgroundColor: "#30323A",
        color: "#FFFFFF"
      }
    }
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#729AFF",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#729AFF"
    },
    danger: {
      b01: "#391D19",
      b02: "#49241F",
      b03: "#D53C32",
      f01: "#E68B85",
      f02: "#E68B85",
      f11: "#E68B85"
    },
    disabled: {
      b01: "#44464E",
      f01: "#54565E",
      f02: "#54565E"
    },
    error: {
      main: "#DD6057"
    },
    header: {
      bg: "#30323A",
      bgMa: "#30323A",
      icon: "#FFFFFF",
      iconMa: "#FFFFFF",
      searchBox: "#FFFFFF",
      statusbar: "#1E2027",
      text: "#FFFFFF",
      textMa: "#FFFFFF"
    },
    highlight: {
      b02: "#3E2A19",
      f01: "#FF8800"
    },
    info: {
      main: "#A0A2A9"
    },
    informative: {
      b01: "#1C2539",
      b02: "#222E49",
      f02: "#729AFF"
    },
    interactive: {
      b01: "#29334C",
      b02: "#35C6FF",
      f01: "#729AFF"
    },
    label: {
      black02: "#FFFFFF",
      blue02: "#729AFF",
      green02: "#72B375",
      orange02: "#FF8800",
      purple02: "#A89CD6",
      red02: "#E68B85",
      teal02: "#71ADBA",
      yellow02: "#D99F26"
    },
    nav: {
      iconDefault: "#FFFFFF",
      iconDefaultMa: "#A0A2A9",
      iconSelected: "#729AFF"
    },
    neutral: {
      b01: "#282A32",
      b02: "#1E2027",
      b03: "#30323A",
      b04: "#54565E",
      b05: "#1E2027",
      b06: "#000000",
      elevation: "#30323A",
      f01: "#FFFFFF",
      f05: "#A0A2A9",
      f06: "#FFFFFF",
      f07: "#FFFFFF",
      l02: "#44464E"
    },
    presence: {
      available: "#3D9A4A",
      busy: "#DD6057",
      invisible: "#A0A2A9"
    },
    primary: {
      main: "#35C6FF"
    },
    secondary: {
      main: "#884C12"
    },
    subAction: "#729AFF",
    success: {
      b01: "#1C281B",
      b02: "#223221",
      b03: "#3D9A4A",
      f01: "#72B375",
      f02: "#72B375",
      f11: "#72B375",
      main: "#3D9A4A"
    },
    tab: {
      default: "#A0A2A9",
      selected: "#729AFF"
    },
    type: "dark",
    umi: {
      bg: "#35C6FF",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFFFFF",
      b02: "#3E2A19",
      b03: "#B06010",
      f01: "#FF8800",
      f02: "#FF8800",
      f11: "#FF8800",
      main: "#74561D"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcHighContrastMobile_default = rcHighContrastMobile;

// framer/src/themes/rcHighContrast/mobile/index.ts
var mobile_default11 = rcHighContrastMobile_default;

// framer/src/themes/rcJupiterBlue/rcJupiterBlue.ts
var rcJupiterBlue = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#464B59",
      grayLight: "#656C80",
      primary: "#2559E4"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#638EFF",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#2559E4"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#2559E4",
      bg: "#2559E4",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.88)"
    },
    disabled: {
      b01: "#B5B9C5",
      f01: "#FFFFFF",
      f02: "#B5B9C5"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#2559E4",
      bgOverlay: "rgba(255,255,255,0.16)",
      bgOverlayDisabled: "rgba(255,255,255,0.08)",
      bgRight: "#638EFF",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#16181D",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.48)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#16181D",
      f02: "#FF8800"
    },
    info: {
      main: "#656C80"
    },
    informative: {
      b01: "#F5F6FB",
      f01: "#E3EAFC",
      f02: "#2559E4"
    },
    interactive: {
      b01: "#F5F6FB",
      b02: "#2559E4",
      f01: "#2559E4"
    },
    label: {
      black02: "#16181D",
      blue01: "#2559E4",
      blue02: "#2559E4",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F5F6FB",
      bookmark: "#2559E4",
      ctlDefault: "#8D93A5",
      ctlSelected: "#2559E4",
      f01: "#6D768D",
      f02: "#656C80",
      f03: "#464B59",
      f04: "#16181D",
      iconDefault: "#16181D",
      iconSelected: "#2559E4",
      line: "#E8E9ED",
      mention: "#FF8800",
      menuBg: "#2559E4",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9FA",
      b03: "#F0F1F4",
      b04: "#656C80",
      b05: "#464B59",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#8D93A5",
      f03: "#6D768D",
      f04: "#656C80",
      f05: "#464B59",
      f06: "#16181D",
      f07: "#16181D",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E8E9ED",
      l03: "#CED1D9",
      l04: "#656C80",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#8D93A5"
    },
    primary: {
      main: "#2559E4"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#2559E4",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#16181D",
      selected: "#2559E4"
    },
    type: "light",
    umi: {
      bg: "#656C80",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcJupiterBlue_default = rcJupiterBlue;

// framer/src/themes/rcJupiterBlue/index.ts
var rcJupiterBlue_default2 = rcJupiterBlue_default;

// framer/src/themes/rcJupiterBlue/mobile/rcJupiterBlueMobile.ts
var rcJupiterBlueMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#2559E4",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#2559E4"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#2559E4",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F5F6FB",
      b02: "#E3EAFC",
      f02: "#2559E4"
    },
    interactive: {
      b01: "#F5F6FB",
      b02: "#2559E4",
      f01: "#2559E4"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#2559E4",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#2559E4"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#2559E4"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#2559E4",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#2559E4"
    },
    type: "light",
    umi: {
      bg: "#2559E4",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcJupiterBlueMobile_default = rcJupiterBlueMobile;

// framer/src/themes/rcJupiterBlue/mobile/index.ts
var mobile_default12 = rcJupiterBlueMobile_default;

// framer/src/themes/rcPhoenix/rcPhoenix.ts
var rcPhoenix = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#4237C8"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#6954D2",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#4237C8"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#4237C8",
      bg: "#4237C8",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.72)"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#280C58",
      bgOverlay: "rgba(255,255,255,0.16)",
      bgOverlayDisabled: "rgba(255,255,255,0.08)",
      bgRight: "#280C58",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.48)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F9F9F9",
      f01: "#E3EAFC",
      f02: "#4237C8"
    },
    interactive: {
      b01: "#F9F8FD",
      b02: "#4237C8",
      f01: "#4237C8"
    },
    label: {
      black02: "#121212",
      blue01: "#2559E4",
      blue02: "#2559E4",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#4237C8",
      ctlDefault: "#939393",
      ctlSelected: "#4237C8",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#4237C8",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#4237C8",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#4237C8"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#4237C8",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#4237C8"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcPhoenix_default = rcPhoenix;

// framer/src/themes/rcPhoenix/index.ts
var rcPhoenix_default2 = rcPhoenix_default;

// framer/src/themes/rcPhoenix/mobile/rcPhoenixMobile.ts
var rcPhoenixMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#6954D2",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#4237C8"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#280C58",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F5F6FB",
      b02: "#E3EAFC",
      f02: "#4237C8"
    },
    interactive: {
      b01: "#F9F8FD",
      b02: "#4237C8",
      f01: "#4237C8"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#2559E4",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#4237C8"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#4237C8"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#4237C8",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#4237C8"
    },
    type: "light",
    umi: {
      bg: "#4237C8",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var rcPhoenixMobile_default = rcPhoenixMobile;

// framer/src/themes/rcPhoenix/mobile/index.ts
var mobile_default13 = rcPhoenixMobile_default;

// framer/src/themes/telusRich/telusRich.ts
var telusRich = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#2B8000"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#6AA64C",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#2B8000"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#2B8000",
      bg: "#2B8000",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.72)"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#2B8000",
      bgOverlay: "rgba(255,255,255,0.16)",
      bgOverlayDisabled: "rgba(255,255,255,0.08)",
      bgRight: "#6AA64C",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.48)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#F0FCEF",
      b02: "#2B8000",
      f01: "#2B8000"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#2B8000",
      ctlDefault: "#939393",
      ctlSelected: "#2B8000",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#2B8000",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#2B8000",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#2B8000"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#2B8000",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#2B8000"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var telusRich_default = telusRich;

// framer/src/themes/telusRich/index.ts
var telusRich_default2 = telusRich_default;

// framer/src/themes/telusRich/mobile/telusRichMobile.ts
var telusRichMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#6AA64C",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#2B8000"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#2B8000",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#F0FCEF",
      b02: "#2B8000",
      f01: "#2B8000"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#2B8000"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#2B8000"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#2B8000",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#2B8000"
    },
    type: "light",
    umi: {
      bg: "#2B8000",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var telusRichMobile_default = telusRichMobile;

// framer/src/themes/telusRich/mobile/index.ts
var mobile_default14 = telusRichMobile_default;

// framer/src/themes/verizonSimple/verizonSimple.ts
var verizonSimple = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#000000"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#666666",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#000000"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#000000",
      bg: "#F3F3F3",
      focusBorder: "#000000",
      icon: "#121212",
      text: "#121212",
      textHint: "#666666"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#F9F9F9",
      bgOverlay: "#FFFFFF",
      bgOverlayDisabled: "rgba(255,255,255,0.32)",
      bgRight: "#F9F9F9",
      border: "#E5E5E5",
      divider: "#E5E5E5",
      fabBg: "#000000",
      fabIcon: "#FFFFFF",
      focusBorder: "#000000",
      icon: "#121212",
      iconDisabled: "#B9B9B9",
      text: "#121212",
      textHint: "#757575"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E3EBF4",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#757575",
      ctlDefault: "#939393",
      ctlSelected: "#000000",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#000000",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#000000",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#000000"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#000000",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#000000"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var verizonSimple_default = verizonSimple;

// framer/src/themes/verizonSimple/index.ts
var verizonSimple_default2 = verizonSimple_default;

// framer/src/themes/verizonSimple/mobile/verizonSimpleMobile.ts
var verizonSimpleMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#666666",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#000000"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#F9F9F9",
      bgMa: "#FFFFFF",
      icon: "#2F2F2F",
      iconMa: "#666666",
      searchBox: "#F9F9F9",
      statusbar: "#2F2F2F",
      text: "#2F2F2F",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E3EBF4",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#000000"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#000000"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#000000",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#000000"
    },
    type: "light",
    umi: {
      bg: "#000000",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var verizonSimpleMobile_default = verizonSimpleMobile;

// framer/src/themes/verizonSimple/mobile/index.ts
var mobile_default15 = verizonSimpleMobile_default;

// framer/src/themes/vodafoneBalanced/vodafoneBalanced.ts
var vodafoneBalanced = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    action: {
      grayDark: "#494949",
      grayLight: "#666666",
      primary: "#E60000"
    },
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#ED4C4C",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#E60000"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#E6413C",
      b04: "#D63E39",
      f01: "#FFE5E0",
      f02: "#BE3933",
      f11: "#F88878"
    },
    dialHeader: {
      avatarBg: "#FFFFFF",
      avatarIcon: "#E60000",
      bg: "#F3F3F3",
      focusBorder: "#E60000",
      icon: "#121212",
      text: "#121212",
      textHint: "#666666"
    },
    disabled: {
      b01: "#B9B9B9",
      f01: "#FFFFFF",
      f02: "#B9B9B9"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bgLeft: "#E60000",
      bgOverlay: "rgba(0,0,0,0.16)",
      bgOverlayDisabled: "rgba(0,0,0,0.08)",
      bgRight: "#ED4C4C",
      border: "transparent",
      divider: "rgba(0,0,0,0.12)",
      fabBg: "#FFFFFF",
      fabIcon: "#121212",
      focusBorder: "#FFFFFF",
      icon: "#FFFFFF",
      iconDisabled: "rgba(255,255,255,0.32)",
      text: "#FFFFFF",
      textHint: "rgba(255,255,255,0.84)"
    },
    highContrast: "transparent",
    highlight: {
      b01: "#FF8800",
      b02: "#FFDFB1",
      b03: "#FF8800",
      f01: "#121212",
      f02: "#FF8800"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      f01: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E3EBF4",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#121212",
      blue01: "#066FAC",
      blue02: "#066FAC",
      green01: "#3C9949",
      green02: "#32773B",
      orange01: "#CD6E0D",
      orange02: "#A15600",
      purple01: "#8A77E3",
      purple02: "#6C5DAF",
      red01: "#E6413C",
      red02: "#BE3933",
      teal01: "#3093A4",
      teal02: "#2B727F",
      yellow01: "#B17D1A",
      yellow02: "#896219"
    },
    nav: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      bookmark: "#757575",
      ctlDefault: "#939393",
      ctlSelected: "#066FAC",
      f01: "#757575",
      f02: "#666666",
      f03: "#494949",
      f04: "#121212",
      iconDefault: "#121212",
      iconSelected: "#E60000",
      line: "#E5E5E5",
      mention: "#FF8800",
      menuBg: "#E60000",
      menuText: "#FFFFFF"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#F3F3F3",
      b04: "#666666",
      b05: "#494949",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f02: "#939393",
      f03: "#757575",
      f04: "#666666",
      f05: "#494949",
      f06: "#121212",
      f07: "#121212",
      f11: "#FFFFFF",
      l01: "#FFFFFF",
      l02: "#E5E5E5",
      l03: "#C7C7C7",
      l04: "#666666",
      transparent: "transparent"
    },
    presence: {
      available: "#3C9949",
      busy: "#E6413C",
      invisible: "#939393"
    },
    primary: {
      main: "#E60000"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#E60000",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#3C9949",
      b04: "#368541",
      b05: "#3C9949",
      f01: "#CEF4CE",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#121212",
      selected: "#E60000"
    },
    type: "light",
    umi: {
      bg: "#666666",
      mentioned: "#FF8800",
      text: "#FFFFFF"
    },
    vDanger: {
      f01: "#DD6057"
    },
    vDisabled: {
      f01: "#54565E"
    },
    vNeutral: {
      b01: "#1e2027",
      b02: "#282A32",
      b03: "#30323A",
      b04: "#383A43",
      f01: "#FFFFFF"
    },
    warning: {
      b01: "#FFF7EB",
      b02: "#FFE7C1",
      b03: "#F6AD16",
      f01: "#F6AD16",
      f02: "#896219",
      f11: "#F6AD16",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var vodafoneBalanced_default = vodafoneBalanced;

// framer/src/themes/vodafoneBalanced/index.ts
var vodafoneBalanced_default2 = vodafoneBalanced_default;

// framer/src/themes/vodafoneBalanced/mobile/vodafoneBalancedMobile.ts
var vodafoneBalancedMobile = {
  breakpoints: {
    keys: ["xs", "sm", "md", "lg", "xl"],
    values: {
      lg: 1280,
      md: 960,
      sm: 641,
      xl: 1920,
      xs: 0
    }
  },
  opacity: {
    "08": 0.08,
    "12": 0.12,
    "16": 0.16,
    "24": 0.24,
    "32": 0.32,
    "40": 0.4,
    "48": 0.48,
    "56": 0.56,
    "64": 0.64,
    "72": 0.72,
    "80": 0.8,
    "88": 0.88,
    "96": 0.96
  },
  palette: {
    avatar: {
      ash: "#666666",
      blueberry: "#5A5ABF",
      brass: "#8E6B2B",
      global: "#ED4C4C",
      gold: "#7A7000",
      lake: "#1A70C1",
      oasis: "#04549F",
      pear: "#3C7E44",
      persimmon: "#A14B00",
      sage: "#047C68",
      tomato: "#C93637"
    },
    content: {
      brand: "#E60000"
    },
    danger: {
      b01: "#FFF7F5",
      b02: "#FFE5E0",
      b03: "#D63E39",
      f01: "#BE3933",
      f02: "#BE3933",
      f11: "#F88878"
    },
    disabled: {
      b01: "#E5E5E5",
      f01: "#939393",
      f02: "#C7C7C7"
    },
    error: {
      main: "#D63E39"
    },
    header: {
      bg: "#E60000",
      bgMa: "#FFFFFF",
      icon: "#FFFFFF",
      iconMa: "#666666",
      searchBox: "#FFFFFF",
      statusbar: "#2F2F2F",
      text: "#FFFFFF",
      textMa: "#2F2F2F"
    },
    highlight: {
      b02: "#FFE5AA",
      f01: "#2F2F2F"
    },
    info: {
      main: "#666666"
    },
    informative: {
      b01: "#F6F9FC",
      b02: "#E3EBF4",
      f02: "#066FAC"
    },
    interactive: {
      b01: "#E3EBF4",
      b02: "#066FAC",
      f01: "#066FAC"
    },
    label: {
      black02: "#2F2F2F",
      blue02: "#066FAC",
      green02: "#32773B",
      orange02: "#A15600",
      purple02: "#6C5DAF",
      red02: "#BE3933",
      teal02: "#2B727F",
      yellow02: "#896219"
    },
    nav: {
      iconDefault: "#2F2F2F",
      iconDefaultMa: "#666666",
      iconSelected: "#E60000"
    },
    neutral: {
      b01: "#FFFFFF",
      b02: "#F9F9F9",
      b03: "#E5E5E5",
      b04: "#666666",
      b05: "#2F2F2F",
      b06: "#000000",
      elevation: "#FFFFFF",
      f01: "#FFFFFF",
      f05: "#666666",
      f06: "#2F2F2F",
      f07: "#FFFFFF",
      l02: "#E5E5E5"
    },
    presence: {
      available: "#368541",
      busy: "#D63E39",
      invisible: "#757575"
    },
    primary: {
      main: "#E60000"
    },
    secondary: {
      main: "#FF8800"
    },
    subAction: "#E60000",
    success: {
      b01: "#F0FCEF",
      b02: "#CEF4CE",
      b03: "#368541",
      f01: "#32773B",
      f02: "#32773B",
      f11: "#46BE59",
      main: "#368541"
    },
    tab: {
      default: "#666666",
      selected: "#E60000"
    },
    type: "light",
    umi: {
      bg: "#E60000",
      mentioned: "#A15600",
      text: "#FFFFFF"
    },
    video01: "#09BBFD",
    video02: "#066FAC",
    video03: "#A15600",
    video04: "#32773B",
    video05: "#2F2F2F",
    video06: "#666666",
    video07: "#FFFFFF",
    warning: {
      b01: "#FFF7F0",
      b02: "#FFE6CE",
      b03: "#B26110",
      f01: "#A15600",
      f02: "#A15600",
      f11: "#FF8800",
      main: "#F6AD16"
    }
  },
  radius: {
    circle: "50%",
    lg: "4px",
    md: "3px",
    round: "100vw",
    sm: "2px",
    xl: "8px",
    xxl: "16px",
    zero: "0px"
  },
  shadows: [
    "none",
    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
  ],
  typography: {
    body1: {
      fontSize: "0.9375rem",
      fontWeight: 400,
      lineHeight: "22px"
    },
    body2: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "22px"
    },
    button: {
      fontSize: "0.9375rem",
      fontWeight: 700,
      lineHeight: "20px",
      textTransform: "none"
    },
    caption1: {
      fontSize: "0.75rem",
      fontWeight: 400,
      lineHeight: "16px"
    },
    caption2: {
      fontSize: "0.75rem",
      fontWeight: 700,
      lineHeight: "16px"
    },
    codeFontFamily: "Courier",
    display1: {
      fontSize: "2.125rem",
      fontWeight: 400,
      lineHeight: "40px"
    },
    display2: {
      fontSize: "2.8125rem",
      fontWeight: 400,
      lineHeight: "56px"
    },
    display3: {
      fontSize: "3.5rem",
      fontWeight: 700,
      lineHeight: "72px"
    },
    display4: {
      fontSize: "6rem",
      fontWeight: 700,
      lineHeight: "112px"
    },
    fontFamily: "Lato, Helvetica, Arial, sans-serif",
    fontSize: 14,
    fontWeightBold: 700,
    fontWeightLight: 300,
    fontWeightMedium: 500,
    fontWeightRegular: 400,
    headline1: {
      fontSize: "1.5rem",
      fontWeight: 400,
      lineHeight: "32px"
    },
    headline2: {
      fontSize: "1.5rem",
      fontWeight: 700,
      lineHeight: "32px"
    },
    htmlFontSize: 16,
    subheading1: {
      fontSize: "1rem",
      fontWeight: 400,
      lineHeight: "24px"
    },
    subheading2: {
      fontSize: "1rem",
      fontWeight: 700,
      lineHeight: "24px"
    },
    title1: {
      fontSize: "1.25rem",
      fontWeight: 400,
      lineHeight: "28px"
    },
    title2: {
      fontSize: "1.25rem",
      fontWeight: 700,
      lineHeight: "28px"
    }
  },
  unit: "4px"
};
var vodafoneBalancedMobile_default = vodafoneBalancedMobile;

// framer/src/themes/vodafoneBalanced/mobile/index.ts
var mobile_default16 = vodafoneBalancedMobile_default;

// framer/src/themes/themes.ts
var RcThemes = {
  rcBlue: rcBlue_default2,
  rcJupiterBlue: rcJupiterBlue_default2,
  rcDark: rcDark_default2,
  rcHighContrast: rcHighContrast_default2,
  rcPhoenix: rcPhoenix_default2,
  avayaCustomized: avayaCustomized_default2,
  verizonSimple: verizonSimple_default2,
  vodafoneBalanced: vodafoneBalanced_default2,
  rainbowRich: rainbowRich_default2,
  atosRich: atosRich_default2,
  telusRich: telusRich_default2,
  attRich: attRich_default2,
  btRich: btRich_default2,
  eastlinkSimple: eastlinkSimple_default2,
  mcmRich: mcmRich_default2,
  ecotelSimple: ecotelSimple_default2
};
var RcMobileThemes = {
  rcBlue: mobile_default9,
  rcJupiterBlue: mobile_default12,
  rcDark: mobile_default10,
  rcHighContrast: mobile_default11,
  rcPhoenix: mobile_default13,
  avayaCustomized: mobile_default3,
  verizonSimple: mobile_default15,
  vodafoneBalanced: mobile_default16,
  rainbowRich: mobile_default8,
  atosRich: mobile_default,
  telusRich: mobile_default14,
  attRich: mobile_default2,
  btRich: mobile_default4,
  eastlinkSimple: mobile_default5,
  mcmRich: mobile_default7,
  ecotelSimple: mobile_default6
};
var RcThemeIds = Object.keys(RcThemes);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ARIA_SORT_VALUES: () => ARIA_SORT_VALUES,
  COLUMN_TEXT_ALIGN: () => COLUMN_TEXT_ALIGN,
  CSSTransition: () => CSSTransition_default,
  CheckboxStyle: () => CheckboxStyle,
  ClickAwayListener: () => ClickAwayListener_default,
  ConnectSymbol: () => ConnectSymbol,
  Connectable: () => Connectable,
  DEFAULT_FORMAT: () => DEFAULT_FORMAT,
  DEFAULT_GET_OPTION_LABEL: () => DEFAULT_GET_OPTION_LABEL,
  DEFAULT_KEY_TO_CHIPS: () => DEFAULT_KEY_TO_CHIPS,
  DEFAULT_LIMIT_CHIPS: () => DEFAULT_LIMIT_CHIPS,
  DialPadButton: () => DialPadButton,
  GroupedVirtuoso: () => GroupedVirtuoso,
  HALF_DAY_HOURS: () => HALF_DAY_HOURS,
  HOUR_MINUTES: () => HOUR_MINUTES,
  NumberPicker: () => NumberPicker,
  ONE_HOUR: () => ONE_HOUR,
  ORDER_TABLE_BY: () => ORDER_TABLE_BY,
  PortalManager: () => PortalManager,
  PortalStore: () => PortalStore,
  RcAccordion: () => RcAccordion,
  RcAccordionDetails: () => RcAccordionDetails,
  RcAccordionSummary: () => RcAccordionSummary,
  RcAlert: () => RcAlert,
  RcAppBar: () => RcAppBar,
  RcAutocompleteDefaultFilterOptions: () => RcAutocompleteDefaultFilterOptions,
  RcAvatar: () => ExportType,
  RcBackdrop: () => RcBackdrop,
  RcBadge: () => RcBadge,
  RcBox: () => RcBox,
  RcButton: () => RcButton,
  RcButtonBase: () => RcButtonBase,
  RcButtonGroup: () => RcButtonGroup,
  RcCard: () => RcCard,
  RcCardActionArea: () => RcCardActionArea,
  RcCardActions: () => RcCardActions,
  RcCardContent: () => RcCardContent,
  RcCardHeader: () => RcCardHeader,
  RcCardHoverActions: () => RcCardHoverActions,
  RcCardMedia: () => RcCardMedia,
  RcCardSelectionArea: () => RcCardSelectionArea,
  RcCheckbox: () => RcCheckbox,
  RcCheckboxClasses: () => RcCheckboxClasses,
  RcChip: () => RcChip,
  RcCircularProgress: () => RcCircularProgress,
  RcClasses: () => RcClasses,
  RcCollapse: () => RcCollapse,
  RcDatePicker: () => RcDatePicker,
  RcDatePickerClasses: () => RcDatePickerClasses,
  RcDefaultDarkTheme: () => RcDefaultDarkTheme,
  RcDefaultHighContrastTheme: () => RcDefaultHighContrastTheme,
  RcDetachedWindow: () => RcDetachedWindow,
  RcDetachedWindowStylesProvider: () => RcDetachedWindowStylesProvider,
  RcDialDelete: () => RcDialDelete,
  RcDialPad: () => RcDialPad,
  RcDialTextField: () => RcDialTextField,
  RcDialer: () => RcDialer,
  RcDialerPadSounds: () => RcDialerPadSounds_default,
  RcDialog: () => RcDialog,
  RcDialogActions: () => RcDialogActions,
  RcDialogContent: () => RcDialogContent,
  RcDialogContentText: () => RcDialogContentText,
  RcDialogContext: () => RcDialogContext,
  RcDialogTitle: () => RcDialogTitle,
  RcDivider: () => RcDivider,
  RcDownshift: () => ExportType2,
  RcDownshiftDefaultFilterOptions: () => RcDownshiftDefaultFilterOptions,
  RcDownshiftDefaultRenderNoOptions: () => RcDownshiftDefaultRenderNoOptions,
  RcDownshiftInput: () => RcDownshiftInput,
  RcDownshiftInputClasses: () => RcDownshiftInputClasses,
  RcDragDropContext: () => RcDragDropContext,
  RcDragHandle: () => RcDragHandle,
  RcDraggable: () => RcDraggable,
  RcDrawer: () => RcDrawer,
  RcDroppable: () => RcDroppable,
  RcFade: () => RcFade,
  RcForm: () => RcForm,
  RcFormContext: () => RcFormContext,
  RcFormControl: () => RcFormControl,
  RcFormControlLabel: () => RcFormControlLabel,
  RcFormGroup: () => RcFormGroup,
  RcFormHelperText: () => RcFormHelperText,
  RcFormLabel: () => RcFormLabel,
  RcGlobalScrollBarStyle: () => RcGlobalScrollBarStyle,
  RcGrid: () => RcGrid,
  RcGrow: () => RcGrow,
  RcHidden: () => RcHidden,
  RcHighlight: () => RcHighlight,
  RcIcon: () => RcIcon,
  RcIconButton: () => RcIconButton,
  RcIconButtonGroup: () => RcIconButtonGroup,
  RcIconService: () => RcIconService,
  RcImageView: () => RcImageView,
  RcInlineEditable: () => RcInlineEditable,
  RcInputLabel: () => RcInputLabel,
  RcLinearProgress: () => RcLinearProgress,
  RcLink: () => RcLink,
  RcList: () => RcList,
  RcListItem: () => RcListItem,
  RcListItemAvatar: () => RcListItemAvatar,
  RcListItemIcon: () => RcListItemIcon,
  RcListItemSecondaryAction: () => RcListItemSecondaryAction,
  RcListItemText: () => RcListItemText,
  RcListSubheader: () => RcListSubheader,
  RcLoading: () => RcLoading,
  RcMenu: () => RcMenu,
  RcMenuContext: () => RcMenuContext,
  RcMenuItem: () => RcMenuItem,
  RcMenuList: () => RcMenuList,
  RcMenuListContext: () => RcMenuListContext,
  RcOutlineTextFieldIconSizes: () => RcOutlineTextFieldIconSizes,
  RcPagination: () => RcPagination,
  RcPaginationItem: () => RcPaginationItem,
  RcPaper: () => RcPaper,
  RcPlainSelect: () => RcPlainSelect,
  RcPopover: () => RcPopover,
  RcPopper: () => RcPopper,
  RcPopupBox: () => RcPopupBox,
  RcPortal: () => RcPortal,
  RcPortalHost: () => RcPortalHost,
  RcPortalWindowContext: () => RcPortalWindowContext,
  RcPresence: () => RcPresence,
  RcRadio: () => RcRadio,
  RcRadioGroup: () => RcRadioGroup,
  RcRating: () => RcRating,
  RcResponsive: () => RcResponsive,
  RcResponsiveContext: () => RcResponsiveContext,
  RcSelect: () => RcSelect,
  RcSlide: () => RcSlide,
  RcSlider: () => RcSlider,
  RcSnackbar: () => RcSnackbar,
  RcSnackbarAction: () => RcSnackbarAction,
  RcSnackbarContent: () => RcSnackbarContent,
  RcSnackbarContentClasses: () => RcSnackbarContentClasses,
  RcSnackbarContentColors: () => RcSnackbarContentColors,
  RcSnackbarContentLineHeight: () => RcSnackbarContentLineHeight,
  RcSnackbarContentLoadingSizes: () => RcSnackbarContentLoadingSizes,
  RcSnackbarContentPaddings: () => RcSnackbarContentPaddings,
  RcSplitButton: () => RcSplitButton,
  RcStep: () => RcStep,
  RcStepButton: () => RcStepButton,
  RcStepConnector: () => RcStepConnector,
  RcStepIcon: () => RcStepIcon,
  RcStepLabel: () => RcStepLabel,
  RcStepper: () => RcStepper,
  RcSubMenu: () => RcSubMenu,
  RcSubMenuContext: () => RcSubMenuContext,
  RcSuggestionList: () => RcSuggestionList,
  RcSuggestionListClasses: () => RcSuggestionListClasses,
  RcSwitch: () => RcSwitch,
  RcSwitchClasses: () => RcSwitchClasses,
  RcTab: () => RcTab,
  RcTabContext: () => RcTabContext,
  RcTabList: () => RcTabList,
  RcTabPanel: () => RcTabPanel,
  RcTable: () => RcTable,
  RcTableBodyCellContent: () => RcTableBodyCellContent,
  RcTableHeadCell: () => RcTableHeadCell,
  RcTableHeadView: () => RcTableHeadView,
  RcTablePagination: () => RcTablePagination,
  RcTableRow: () => RcTableRow,
  RcTabs: () => RcTabs,
  RcTag: () => RcTag,
  RcText: () => RcText,
  RcTextField: () => RcTextField,
  RcTextWithEllipsis: () => RcTextWithEllipsis,
  RcTextarea: () => RcTextarea,
  RcThemeContext: () => RcThemeContext,
  RcThemeHandler: () => RcThemeHandler,
  RcThemeProvider: () => RcThemeProvider,
  RcThemeSwitcherDefaultTheme: () => RcThemeSwitcherDefaultTheme,
  RcThemeSwitcherProvider: () => RcThemeSwitcherProvider,
  RcThumbnail: () => RcThumbnail,
  RcTimePicker: () => ExportType3,
  RcTimePickerClasses: () => RcTimePickerClasses,
  RcTimePickerIconWidths: () => RcTimePickerIconWidths,
  RcTimePickerUtils: () => RcTimePickerUtils,
  RcToggleButton: () => RcToggleButton,
  RcToggleButtonGroup: () => RcToggleButtonGroup,
  RcToolbar: () => RcToolbar,
  RcTooltip: () => RcTooltip,
  RcTypography: () => RcTypography,
  RcVirtualizedDivider: () => RcVirtualizedDivider,
  RcVirtualizedMenu: () => RcVirtualizedMenu,
  RcVirtualizedMenuList: () => RcVirtualizedMenuList,
  RcVisuallyHidden: () => RcVisuallyHidden,
  RcZoom: () => RcZoom,
  RcZoomFrom: () => RcZoomFrom,
  RcZoomInFadeOut: () => RcZoomInFadeOut,
  ReplaceTransition: () => ReplaceTransition_default,
  SORT_ICON_CLASS: () => SORT_ICON_CLASS,
  SelectionView: () => SelectionView,
  StyleSheetManager: () => StyleSheetManager,
  StyledAvatar: () => StyledAvatar,
  StyledSortIconWrapper: () => StyledSortIconWrapper,
  StyledTable: () => StyledTable,
  StyledTableHeadCell: () => StyledTableHeadCell,
  StyledTableHeadCellContent: () => StyledTableHeadCellContent,
  StyledTableHeadText: () => StyledTableHeadText,
  StyledTableRow: () => StyledTableRow,
  SwitchStyle: () => SwitchStyle,
  SwitchTransition: () => SwitchTransition_default,
  TABLE_BORDER_TYPE: () => TABLE_BORDER_TYPE,
  TABLE_STICKY_TYPE: () => TABLE_STICKY_TYPE,
  TABLE_TYPE: () => TABLE_TYPE,
  TIME_GAP: () => TIME_GAP,
  TableWrapper: () => TableWrapper,
  ThemeConsumer: () => ThemeConsumer,
  ThemeProvider: () => ThemeProvider2,
  ThrottleScheduler: () => ThrottleScheduler,
  TimeBoundary: () => TimeBoundary,
  ToggleText: () => ToggleText,
  Transition: () => Transition_default,
  TransitionGroup: () => TransitionGroup_default,
  UniqIdUtil: () => UniqIdUtil,
  UnmountSymbol: () => UnmountSymbol,
  Virtuoso: () => Virtuoso,
  VirtuosoGrid: () => VirtuosoGrid,
  a11yKeyboard: () => a11yKeyboard,
  a11yKeyboardCode: () => a11yKeyboardCode,
  backgroundTransition: () => backgroundTransition,
  breakpointList: () => breakpointList,
  checkDefaultPrevented: () => checkDefaultPrevented,
  clearReactReferencesInNode: () => clearReactReferencesInNode,
  clearWindowSelection: () => clearWindowSelection,
  combineClasses: () => combineClasses,
  combineProps: () => combineProps,
  config: () => config_default,
  configure: () => configure,
  createGlobalStyle: () => createGlobalStyle,
  createPromise: () => createPromise,
  createTheme: () => createTheme_default2,
  css: () => css2,
  darken: () => darken2,
  deepmerge: () => deepmerge2,
  doAlpha: () => doAlpha,
  downshiftComponentName: () => downshiftComponentName,
  ellipsis: () => ellipsis,
  fakeBorder: () => fakeBorder,
  flexCenterStyle: () => flexCenterStyle,
  flexWidth: () => flexWidth,
  focusVisible: () => focusVisible,
  focusVisibleColor: () => focusVisibleColor,
  focusVisibleShadowStyle: () => focusVisibleShadowStyle,
  focusWithin: () => focusWithin,
  getAvatarColorTokenFromId: () => getAvatarColorTokenFromId,
  getAvatarShortName: () => getAvatarShortName,
  getContrastBgColor: () => getContrastBgColor,
  getDialPadValueOnlyRegex: () => getDialPadValueOnlyRegex,
  getFormattedTime: () => getFormattedTime,
  getHourAndMinute: () => getHourAndMinute,
  getMatchDetail: () => getMatchDetail,
  getNumberPickerBoundary: () => getNumberPickerBoundary,
  getPanelId: () => getPanelId,
  getParsePaletteColor: () => getParsePaletteColor,
  getPeriod: () => getPeriod,
  getRangeBoundary: () => getRangeBoundary,
  getRecoupHour: () => getRecoupHour,
  getResizeObserver: () => getResizeObserver,
  getScrollbarSize: () => getScrollbarSize2,
  getSelectionPosition: () => getSelectionPosition,
  getTabId: () => getTabId,
  getTimestamp: () => getTimestamp,
  getTimestampFromDate: () => getTimestampFromDate,
  getTimestampFromHourAndMin: () => getTimestampFromHourAndMin,
  getTransitionProps: () => getTransitionProps2,
  hasValue: () => hasValue2,
  isClick: () => isClick,
  isElmEqualOrContainRef: () => isElmEqualOrContainRef,
  isFilled: () => isFilled2,
  isItemCanSelected: () => isItemCanSelected,
  isOutOfRange: () => isOutOfRange,
  isRcElement: () => isRcElement,
  isRef: () => isRef,
  isShowJunoWarning: () => isShowJunoWarning,
  isUrl: () => isUrl,
  keyframes: () => keyframes,
  lastMinute: () => lastMinute,
  lightAlpha: () => lightAlpha,
  lighten: () => lighten2,
  lineClamp: () => lineClamp,
  logInDev: () => logInDev,
  minuteSource: () => minuteSource,
  moveIndexInTwoDimension: () => moveIndexInTwoDimension,
  nonStyleButton: () => nonStyleButton,
  nonTouchHoverMedia: () => nonTouchHoverMedia,
  omit: () => omit3,
  opacity: () => opacity3,
  outerSize: () => outerSize,
  overridableStyled: () => overridableStyled,
  pad: () => pad,
  palette: () => palette4,
  palette2: () => palette22,
  paletteContrastText: () => paletteContrastText,
  parseColor: () => parseColor,
  parseNumber: () => parseNumber,
  parseNumberToString: () => parseNumberToString,
  pick: () => pick,
  preloadImg: () => preloadImg,
  px: () => px2,
  pxToNumber: () => pxToNumber,
  radius: () => radius3,
  rcConfiguration: () => rcConfiguration,
  reflow: () => reflow3,
  removeClassName: () => removeClassName,
  rippleEnter: () => rippleEnter,
  rippleStyle: () => rippleStyle,
  setAlpha: () => setAlpha,
  setOpacity: () => setOpacity,
  setSelectionPosition: () => setSelectionPosition,
  setTransitionStyle: () => setTransitionStyle,
  shadowBorder: () => shadowBorder,
  shadows: () => shadows4,
  shallowEqual: () => shallowEqual,
  spacing: () => spacing2,
  spacingUnit: () => spacingUnit,
  stringArrToRegExp: () => stringArrToRegExp,
  styled: () => styled_components_default,
  swapArrayLocs: () => swapArrayLocs,
  toSpacing: () => toSpacing,
  twelveHourSystemSource: () => twelveHourSystemSource,
  twentyFourHourSystemSource: () => twentyFourHourSystemSource,
  typography: () => typography4,
  typographyProp: () => typographyProp,
  useA11yKeyEvent: () => useA11yKeyEvent,
  useAnnouncer: () => useAnnouncer,
  useAudio: () => useAudio,
  useAvatarColorToken: () => useAvatarColorToken,
  useAvatarShortName: () => useAvatarShortName,
  useChange: () => useChange,
  useDebounce: () => useDebounce,
  useDeprecatedLog: () => useDeprecatedLog,
  useDepsChange: () => useDepsChange,
  useDialKeyboard: () => useDialKeyboard,
  useDownshift: () => useDownshift,
  useDownshiftError: () => useDownshiftError,
  useDownshiftGroup: () => useDownshiftGroup,
  useDownshiftTag: () => useDownshiftTag,
  useDynamicHeight: () => useDynamicHeight,
  useEventCallback: () => useEventCallback2,
  useEventListener: () => useEventListener,
  useEver: () => useEver,
  useFixedEndSelection: () => useFixedEndSelection,
  useForceUpdate: () => useForceUpdate,
  useForkRef: () => useForkRef2,
  useHiddenTabindex: () => useHiddenTabindex,
  useHighlightScroll: () => useHighlightScroll,
  useIconService: () => useIconService,
  useId: () => useId2,
  useInterval: () => useInterval,
  useKeyAudio: () => useKeyAudio,
  useKeyDownOnce: () => useKeyDownOnce,
  useKeyboardMoveFocus: () => useKeyboardMoveFocus,
  useLongPress: () => useLongPress,
  useMountState: () => useMountState,
  useOnReRender: () => useOnReRender,
  useOnlyOneFocusable: () => useOnlyOneFocusable,
  useOverflow: () => useOverflow,
  usePortalManagerWithID: () => usePortalManagerWithID,
  usePrevious: () => usePrevious,
  useRcFormContext: () => useRcFormContext,
  useRcPortalWindowContext: () => useRcPortalWindowContext,
  useRefState: () => useRefState,
  useResizeObserver: () => useResizeObserver,
  useResponsiveContext: () => useResponsiveContext,
  useResponsiveMatch: () => useResponsiveMatch,
  useResultRef: () => useResultRef,
  useRetry: () => useRetry,
  useSleep: () => useSleep,
  useSuggestionList: () => useSuggestionList,
  useTabContext: () => useTabContext,
  useTheme: () => RcUseTheme,
  useThemeProps: () => useThemeProps,
  useThemeSwitcher: () => useThemeSwitcher,
  useThrottle: () => useThrottle,
  useTouchMouseEvent: () => useTouchMouseEvent,
  useUnmountPortalHandler: () => useUnmountPortalHandler,
  visuallyHiddenStyles: () => visuallyHiddenStyles,
  withDelay: () => withDelay,
  withDeprecatedCheck: () => withDeprecatedCheck,
  withResponsive: () => withResponsive,
  withTheme: () => withTheme,
  withTooltip: () => withTooltip,
  zIndex: () => zIndex3
});

// src/components/index.ts
var components_exports = {};
__export(components_exports, {
  ARIA_SORT_VALUES: () => ARIA_SORT_VALUES,
  COLUMN_TEXT_ALIGN: () => COLUMN_TEXT_ALIGN,
  CSSTransition: () => CSSTransition_default,
  CheckboxStyle: () => CheckboxStyle,
  ClickAwayListener: () => ClickAwayListener_default,
  ConnectSymbol: () => ConnectSymbol,
  Connectable: () => Connectable,
  DEFAULT_FORMAT: () => DEFAULT_FORMAT,
  DEFAULT_GET_OPTION_LABEL: () => DEFAULT_GET_OPTION_LABEL,
  DEFAULT_KEY_TO_CHIPS: () => DEFAULT_KEY_TO_CHIPS,
  DEFAULT_LIMIT_CHIPS: () => DEFAULT_LIMIT_CHIPS,
  DialPadButton: () => DialPadButton,
  GroupedVirtuoso: () => GroupedVirtuoso,
  HALF_DAY_HOURS: () => HALF_DAY_HOURS,
  HOUR_MINUTES: () => HOUR_MINUTES,
  NumberPicker: () => NumberPicker,
  ONE_HOUR: () => ONE_HOUR,
  ORDER_TABLE_BY: () => ORDER_TABLE_BY,
  PortalManager: () => PortalManager,
  PortalStore: () => PortalStore,
  RcAccordion: () => RcAccordion,
  RcAccordionDetails: () => RcAccordionDetails,
  RcAccordionSummary: () => RcAccordionSummary,
  RcAlert: () => RcAlert,
  RcAppBar: () => RcAppBar,
  RcAutocompleteDefaultFilterOptions: () => RcAutocompleteDefaultFilterOptions,
  RcAvatar: () => ExportType,
  RcBackdrop: () => RcBackdrop,
  RcBadge: () => RcBadge,
  RcBox: () => RcBox,
  RcButton: () => RcButton,
  RcButtonBase: () => RcButtonBase,
  RcButtonGroup: () => RcButtonGroup,
  RcCard: () => RcCard,
  RcCardActionArea: () => RcCardActionArea,
  RcCardActions: () => RcCardActions,
  RcCardContent: () => RcCardContent,
  RcCardHeader: () => RcCardHeader,
  RcCardHoverActions: () => RcCardHoverActions,
  RcCardMedia: () => RcCardMedia,
  RcCardSelectionArea: () => RcCardSelectionArea,
  RcCheckbox: () => RcCheckbox,
  RcCheckboxClasses: () => RcCheckboxClasses,
  RcChip: () => RcChip,
  RcCircularProgress: () => RcCircularProgress,
  RcCollapse: () => RcCollapse,
  RcDatePicker: () => RcDatePicker,
  RcDatePickerClasses: () => RcDatePickerClasses,
  RcDetachedWindow: () => RcDetachedWindow,
  RcDetachedWindowStylesProvider: () => RcDetachedWindowStylesProvider,
  RcDialDelete: () => RcDialDelete,
  RcDialPad: () => RcDialPad,
  RcDialTextField: () => RcDialTextField,
  RcDialer: () => RcDialer,
  RcDialerPadSounds: () => RcDialerPadSounds_default,
  RcDialog: () => RcDialog,
  RcDialogActions: () => RcDialogActions,
  RcDialogContent: () => RcDialogContent,
  RcDialogContentText: () => RcDialogContentText,
  RcDialogContext: () => RcDialogContext,
  RcDialogTitle: () => RcDialogTitle,
  RcDivider: () => RcDivider,
  RcDownshift: () => ExportType2,
  RcDownshiftDefaultFilterOptions: () => RcDownshiftDefaultFilterOptions,
  RcDownshiftDefaultRenderNoOptions: () => RcDownshiftDefaultRenderNoOptions,
  RcDownshiftInput: () => RcDownshiftInput,
  RcDownshiftInputClasses: () => RcDownshiftInputClasses,
  RcDragDropContext: () => RcDragDropContext,
  RcDragHandle: () => RcDragHandle,
  RcDraggable: () => RcDraggable,
  RcDrawer: () => RcDrawer,
  RcDroppable: () => RcDroppable,
  RcFade: () => RcFade,
  RcForm: () => RcForm,
  RcFormContext: () => RcFormContext,
  RcFormControl: () => RcFormControl,
  RcFormControlLabel: () => RcFormControlLabel,
  RcFormGroup: () => RcFormGroup,
  RcFormHelperText: () => RcFormHelperText,
  RcFormLabel: () => RcFormLabel,
  RcGrid: () => RcGrid,
  RcGrow: () => RcGrow,
  RcHidden: () => RcHidden,
  RcHighlight: () => RcHighlight,
  RcIcon: () => RcIcon,
  RcIconButton: () => RcIconButton,
  RcIconButtonGroup: () => RcIconButtonGroup,
  RcIconService: () => RcIconService,
  RcImageView: () => RcImageView,
  RcInlineEditable: () => RcInlineEditable,
  RcInputLabel: () => RcInputLabel,
  RcLinearProgress: () => RcLinearProgress,
  RcLink: () => RcLink,
  RcList: () => RcList,
  RcListItem: () => RcListItem,
  RcListItemAvatar: () => RcListItemAvatar,
  RcListItemIcon: () => RcListItemIcon,
  RcListItemSecondaryAction: () => RcListItemSecondaryAction,
  RcListItemText: () => RcListItemText,
  RcListSubheader: () => RcListSubheader,
  RcLoading: () => RcLoading,
  RcMenu: () => RcMenu,
  RcMenuContext: () => RcMenuContext,
  RcMenuItem: () => RcMenuItem,
  RcMenuList: () => RcMenuList,
  RcMenuListContext: () => RcMenuListContext,
  RcOutlineTextFieldIconSizes: () => RcOutlineTextFieldIconSizes,
  RcPagination: () => RcPagination,
  RcPaginationItem: () => RcPaginationItem,
  RcPaper: () => RcPaper,
  RcPlainSelect: () => RcPlainSelect,
  RcPopover: () => RcPopover,
  RcPopper: () => RcPopper,
  RcPopupBox: () => RcPopupBox,
  RcPortal: () => RcPortal,
  RcPortalHost: () => RcPortalHost,
  RcPresence: () => RcPresence,
  RcRadio: () => RcRadio,
  RcRadioGroup: () => RcRadioGroup,
  RcRating: () => RcRating,
  RcResponsive: () => RcResponsive,
  RcSelect: () => RcSelect,
  RcSlide: () => RcSlide,
  RcSlider: () => RcSlider,
  RcSnackbar: () => RcSnackbar,
  RcSnackbarAction: () => RcSnackbarAction,
  RcSnackbarContent: () => RcSnackbarContent,
  RcSnackbarContentClasses: () => RcSnackbarContentClasses,
  RcSnackbarContentColors: () => RcSnackbarContentColors,
  RcSnackbarContentLineHeight: () => RcSnackbarContentLineHeight,
  RcSnackbarContentLoadingSizes: () => RcSnackbarContentLoadingSizes,
  RcSnackbarContentPaddings: () => RcSnackbarContentPaddings,
  RcSplitButton: () => RcSplitButton,
  RcStep: () => RcStep,
  RcStepButton: () => RcStepButton,
  RcStepConnector: () => RcStepConnector,
  RcStepIcon: () => RcStepIcon,
  RcStepLabel: () => RcStepLabel,
  RcStepper: () => RcStepper,
  RcSubMenu: () => RcSubMenu,
  RcSubMenuContext: () => RcSubMenuContext,
  RcSuggestionList: () => RcSuggestionList,
  RcSuggestionListClasses: () => RcSuggestionListClasses,
  RcSwitch: () => RcSwitch,
  RcSwitchClasses: () => RcSwitchClasses,
  RcTab: () => RcTab,
  RcTabContext: () => RcTabContext,
  RcTabList: () => RcTabList,
  RcTabPanel: () => RcTabPanel,
  RcTable: () => RcTable,
  RcTableBodyCellContent: () => RcTableBodyCellContent,
  RcTableHeadCell: () => RcTableHeadCell,
  RcTableHeadView: () => RcTableHeadView,
  RcTablePagination: () => RcTablePagination,
  RcTableRow: () => RcTableRow,
  RcTabs: () => RcTabs,
  RcTag: () => RcTag,
  RcText: () => RcText,
  RcTextField: () => RcTextField,
  RcTextWithEllipsis: () => RcTextWithEllipsis,
  RcTextarea: () => RcTextarea,
  RcThumbnail: () => RcThumbnail,
  RcTimePicker: () => ExportType3,
  RcTimePickerClasses: () => RcTimePickerClasses,
  RcTimePickerIconWidths: () => RcTimePickerIconWidths,
  RcTimePickerUtils: () => RcTimePickerUtils,
  RcToggleButton: () => RcToggleButton,
  RcToggleButtonGroup: () => RcToggleButtonGroup,
  RcToolbar: () => RcToolbar,
  RcTooltip: () => RcTooltip,
  RcTypography: () => RcTypography,
  RcVirtualizedDivider: () => RcVirtualizedDivider,
  RcVirtualizedMenu: () => RcVirtualizedMenu,
  RcVirtualizedMenuList: () => RcVirtualizedMenuList,
  RcVisuallyHidden: () => RcVisuallyHidden,
  RcZoom: () => RcZoom,
  RcZoomFrom: () => RcZoomFrom,
  RcZoomInFadeOut: () => RcZoomInFadeOut,
  ReplaceTransition: () => ReplaceTransition_default,
  SORT_ICON_CLASS: () => SORT_ICON_CLASS,
  SelectionView: () => SelectionView,
  StyledAvatar: () => StyledAvatar,
  StyledSortIconWrapper: () => StyledSortIconWrapper,
  StyledTable: () => StyledTable,
  StyledTableHeadCell: () => StyledTableHeadCell,
  StyledTableHeadCellContent: () => StyledTableHeadCellContent,
  StyledTableHeadText: () => StyledTableHeadText,
  StyledTableRow: () => StyledTableRow,
  SwitchStyle: () => SwitchStyle,
  SwitchTransition: () => SwitchTransition_default,
  TABLE_BORDER_TYPE: () => TABLE_BORDER_TYPE,
  TABLE_STICKY_TYPE: () => TABLE_STICKY_TYPE,
  TABLE_TYPE: () => TABLE_TYPE,
  TIME_GAP: () => TIME_GAP,
  TableWrapper: () => TableWrapper,
  ThrottleScheduler: () => ThrottleScheduler,
  TimeBoundary: () => TimeBoundary,
  ToggleText: () => ToggleText,
  Transition: () => Transition_default,
  TransitionGroup: () => TransitionGroup_default,
  UniqIdUtil: () => UniqIdUtil,
  UnmountSymbol: () => UnmountSymbol,
  Virtuoso: () => Virtuoso,
  VirtuosoGrid: () => VirtuosoGrid,
  config: () => config_default,
  createPromise: () => createPromise,
  downshiftComponentName: () => downshiftComponentName,
  getAvatarColorTokenFromId: () => getAvatarColorTokenFromId,
  getAvatarShortName: () => getAvatarShortName,
  getDialPadValueOnlyRegex: () => getDialPadValueOnlyRegex,
  getFormattedTime: () => getFormattedTime,
  getHourAndMinute: () => getHourAndMinute,
  getNumberPickerBoundary: () => getNumberPickerBoundary,
  getPanelId: () => getPanelId,
  getPeriod: () => getPeriod,
  getRangeBoundary: () => getRangeBoundary,
  getRecoupHour: () => getRecoupHour,
  getTabId: () => getTabId,
  getTimestamp: () => getTimestamp,
  getTimestampFromDate: () => getTimestampFromDate,
  getTimestampFromHourAndMin: () => getTimestampFromHourAndMin,
  getTransitionProps: () => getTransitionProps2,
  isClick: () => isClick,
  isItemCanSelected: () => isItemCanSelected,
  isOutOfRange: () => isOutOfRange,
  lastMinute: () => lastMinute,
  minuteSource: () => minuteSource,
  pad: () => pad,
  parseNumber: () => parseNumber,
  parseNumberToString: () => parseNumberToString,
  reflow: () => reflow3,
  setTransitionStyle: () => setTransitionStyle,
  stringArrToRegExp: () => stringArrToRegExp,
  twelveHourSystemSource: () => twelveHourSystemSource,
  twentyFourHourSystemSource: () => twentyFourHourSystemSource,
  useAvatarColorToken: () => useAvatarColorToken,
  useAvatarShortName: () => useAvatarShortName,
  useDialKeyboard: () => useDialKeyboard,
  useDownshift: () => useDownshift,
  useDownshiftError: () => useDownshiftError,
  useDownshiftGroup: () => useDownshiftGroup,
  useDownshiftTag: () => useDownshiftTag,
  useDynamicHeight: () => useDynamicHeight,
  useFixedEndSelection: () => useFixedEndSelection,
  useHighlightScroll: () => useHighlightScroll,
  useIconService: () => useIconService,
  useKeyAudio: () => useKeyAudio,
  usePortalManagerWithID: () => usePortalManagerWithID,
  useRcFormContext: () => useRcFormContext,
  useSuggestionList: () => useSuggestionList,
  useTabContext: () => useTabContext,
  useUnmountPortalHandler: () => useUnmountPortalHandler,
  withTooltip: () => withTooltip
});

// src/components/Accordion/Accordion.tsx
import React554, { forwardRef as forwardRef499, useMemo as useMemo6 } from "react";

// node_modules/styled-components/dist/styled-components.browser.esm.js
var styled_components_browser_esm_exports = {};
__export(styled_components_browser_esm_exports, {
  ServerStyleSheet: () => Ue,
  StyleSheetConsumer: () => le,
  StyleSheetContext: () => ue,
  StyleSheetManager: () => ye,
  ThemeConsumer: () => Le,
  ThemeContext: () => ze,
  ThemeProvider: () => Ge,
  __PRIVATE__: () => Ze,
  createGlobalStyle: () => $e,
  css: () => Ae,
  default: () => styled_components_browser_esm_default,
  isStyledComponent: () => N,
  keyframes: () => We,
  useTheme: () => Xe,
  version: () => C,
  withTheme: () => Je
});
var import_react_is9 = __toModule(require_react_is2());
var import_shallowequal = __toModule(require_shallowequal());
import r, { useState as o, useContext as i, useMemo as s, useEffect as a, useRef as c, createElement as u, useDebugValue as l, useLayoutEffect as d } from "react";

// node_modules/@emotion/stylis/dist/stylis.browser.esm.js
function stylis_min(W2) {
  function M2(d2, c2, e2, h2, a2) {
    for (var m = 0, b2 = 0, v2 = 0, n2 = 0, q2, g2, x2 = 0, K2 = 0, k2, u21 = k2 = q2 = 0, l2 = 0, r2 = 0, I2 = 0, t2 = 0, B3 = e2.length, J2 = B3 - 1, y2, f = "", p = "", F3 = "", G3 = "", C2; l2 < B3; ) {
      g2 = e2.charCodeAt(l2);
      l2 === J2 && b2 + n2 + v2 + m !== 0 && (b2 !== 0 && (g2 = b2 === 47 ? 10 : 47), n2 = v2 = m = 0, B3++, J2++);
      if (b2 + n2 + v2 + m === 0) {
        if (l2 === J2 && (0 < r2 && (f = f.replace(N2, "")), 0 < f.trim().length)) {
          switch (g2) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;
            default:
              f += e2.charAt(l2);
          }
          g2 = 59;
        }
        switch (g2) {
          case 123:
            f = f.trim();
            q2 = f.charCodeAt(0);
            k2 = 1;
            for (t2 = ++l2; l2 < B3; ) {
              switch (g2 = e2.charCodeAt(l2)) {
                case 123:
                  k2++;
                  break;
                case 125:
                  k2--;
                  break;
                case 47:
                  switch (g2 = e2.charCodeAt(l2 + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u21 = l2 + 1; u21 < J2; ++u21) {
                          switch (e2.charCodeAt(u21)) {
                            case 47:
                              if (g2 === 42 && e2.charCodeAt(u21 - 1) === 42 && l2 + 2 !== u21) {
                                l2 = u21 + 1;
                                break a;
                              }
                              break;
                            case 10:
                              if (g2 === 47) {
                                l2 = u21 + 1;
                                break a;
                              }
                          }
                        }
                        l2 = u21;
                      }
                  }
                  break;
                case 91:
                  g2++;
                case 40:
                  g2++;
                case 34:
                case 39:
                  for (; l2++ < J2 && e2.charCodeAt(l2) !== g2; ) {
                  }
              }
              if (k2 === 0)
                break;
              l2++;
            }
            k2 = e2.substring(t2, l2);
            q2 === 0 && (q2 = (f = f.replace(ca, "").trim()).charCodeAt(0));
            switch (q2) {
              case 64:
                0 < r2 && (f = f.replace(N2, ""));
                g2 = f.charCodeAt(1);
                switch (g2) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r2 = c2;
                    break;
                  default:
                    r2 = O2;
                }
                k2 = M2(c2, r2, k2, g2, a2 + 1);
                t2 = k2.length;
                0 < A2 && (r2 = X2(O2, f, I2), C2 = H2(3, k2, r2, c2, D2, z2, t2, g2, a2, h2), f = r2.join(""), C2 !== void 0 && (t2 = (k2 = C2.trim()).length) === 0 && (g2 = 0, k2 = ""));
                if (0 < t2)
                  switch (g2) {
                    case 115:
                      f = f.replace(da, ea);
                    case 100:
                    case 109:
                    case 45:
                      k2 = f + "{" + k2 + "}";
                      break;
                    case 107:
                      f = f.replace(fa, "$1 $2");
                      k2 = f + "{" + k2 + "}";
                      k2 = w2 === 1 || w2 === 2 && L2("@" + k2, 3) ? "@-webkit-" + k2 + "@" + k2 : "@" + k2;
                      break;
                    default:
                      k2 = f + k2, h2 === 112 && (k2 = (p += k2, ""));
                  }
                else
                  k2 = "";
                break;
              default:
                k2 = M2(c2, X2(c2, f, I2), k2, h2, a2 + 1);
            }
            F3 += k2;
            k2 = I2 = r2 = u21 = q2 = 0;
            f = "";
            g2 = e2.charCodeAt(++l2);
            break;
          case 125:
          case 59:
            f = (0 < r2 ? f.replace(N2, "") : f).trim();
            if (1 < (t2 = f.length))
              switch (u21 === 0 && (q2 = f.charCodeAt(0), q2 === 45 || 96 < q2 && 123 > q2) && (t2 = (f = f.replace(" ", ":")).length), 0 < A2 && (C2 = H2(1, f, c2, d2, D2, z2, p.length, h2, a2, h2)) !== void 0 && (t2 = (f = C2.trim()).length) === 0 && (f = "\0\0"), q2 = f.charCodeAt(0), g2 = f.charCodeAt(1), q2) {
                case 0:
                  break;
                case 64:
                  if (g2 === 105 || g2 === 99) {
                    G3 += f + e2.charAt(l2);
                    break;
                  }
                default:
                  f.charCodeAt(t2 - 1) !== 58 && (p += P2(f, q2, g2, f.charCodeAt(2)));
              }
            I2 = r2 = u21 = q2 = 0;
            f = "";
            g2 = e2.charCodeAt(++l2);
        }
      }
      switch (g2) {
        case 13:
        case 10:
          b2 === 47 ? b2 = 0 : 1 + q2 === 0 && h2 !== 107 && 0 < f.length && (r2 = 1, f += "\0");
          0 < A2 * Y2 && H2(0, f, c2, d2, D2, z2, p.length, h2, a2, h2);
          z2 = 1;
          D2++;
          break;
        case 59:
        case 125:
          if (b2 + n2 + v2 + m === 0) {
            z2++;
            break;
          }
        default:
          z2++;
          y2 = e2.charAt(l2);
          switch (g2) {
            case 9:
            case 32:
              if (n2 + m + b2 === 0)
                switch (x2) {
                  case 44:
                  case 58:
                  case 9:
                  case 32:
                    y2 = "";
                    break;
                  default:
                    g2 !== 32 && (y2 = " ");
                }
              break;
            case 0:
              y2 = "\\0";
              break;
            case 12:
              y2 = "\\f";
              break;
            case 11:
              y2 = "\\v";
              break;
            case 38:
              n2 + b2 + m === 0 && (r2 = I2 = 1, y2 = "\f" + y2);
              break;
            case 108:
              if (n2 + b2 + m + E2 === 0 && 0 < u21)
                switch (l2 - u21) {
                  case 2:
                    x2 === 112 && e2.charCodeAt(l2 - 3) === 58 && (E2 = x2);
                  case 8:
                    K2 === 111 && (E2 = K2);
                }
              break;
            case 58:
              n2 + b2 + m === 0 && (u21 = l2);
              break;
            case 44:
              b2 + v2 + n2 + m === 0 && (r2 = 1, y2 += "\r");
              break;
            case 34:
            case 39:
              b2 === 0 && (n2 = n2 === g2 ? 0 : n2 === 0 ? g2 : n2);
              break;
            case 91:
              n2 + b2 + v2 === 0 && m++;
              break;
            case 93:
              n2 + b2 + v2 === 0 && m--;
              break;
            case 41:
              n2 + b2 + m === 0 && v2--;
              break;
            case 40:
              if (n2 + b2 + m === 0) {
                if (q2 === 0)
                  switch (2 * x2 + 3 * K2) {
                    case 533:
                      break;
                    default:
                      q2 = 1;
                  }
                v2++;
              }
              break;
            case 64:
              b2 + v2 + n2 + m + u21 + k2 === 0 && (k2 = 1);
              break;
            case 42:
            case 47:
              if (!(0 < n2 + m + v2))
                switch (b2) {
                  case 0:
                    switch (2 * g2 + 3 * e2.charCodeAt(l2 + 1)) {
                      case 235:
                        b2 = 47;
                        break;
                      case 220:
                        t2 = l2, b2 = 42;
                    }
                    break;
                  case 42:
                    g2 === 47 && x2 === 42 && t2 + 2 !== l2 && (e2.charCodeAt(t2 + 2) === 33 && (p += e2.substring(t2, l2 + 1)), y2 = "", b2 = 0);
                }
          }
          b2 === 0 && (f += y2);
      }
      K2 = x2;
      x2 = g2;
      l2++;
    }
    t2 = p.length;
    if (0 < t2) {
      r2 = c2;
      if (0 < A2 && (C2 = H2(2, p, r2, d2, D2, z2, t2, h2, a2, h2), C2 !== void 0 && (p = C2).length === 0))
        return G3 + p + F3;
      p = r2.join(",") + "{" + p + "}";
      if (w2 * E2 !== 0) {
        w2 !== 2 || L2(p, 2) || (E2 = 0);
        switch (E2) {
          case 111:
            p = p.replace(ha, ":-moz-$1") + p;
            break;
          case 112:
            p = p.replace(Q2, "::-webkit-input-$1") + p.replace(Q2, "::-moz-$1") + p.replace(Q2, ":-ms-input-$1") + p;
        }
        E2 = 0;
      }
    }
    return G3 + p + F3;
  }
  function X2(d2, c2, e2) {
    var h2 = c2.trim().split(ia);
    c2 = h2;
    var a2 = h2.length, m = d2.length;
    switch (m) {
      case 0:
      case 1:
        var b2 = 0;
        for (d2 = m === 0 ? "" : d2[0] + " "; b2 < a2; ++b2) {
          c2[b2] = Z2(d2, c2[b2], e2).trim();
        }
        break;
      default:
        var v2 = b2 = 0;
        for (c2 = []; b2 < a2; ++b2) {
          for (var n2 = 0; n2 < m; ++n2) {
            c2[v2++] = Z2(d2[n2] + " ", h2[b2], e2).trim();
          }
        }
    }
    return c2;
  }
  function Z2(d2, c2, e2) {
    var h2 = c2.charCodeAt(0);
    33 > h2 && (h2 = (c2 = c2.trim()).charCodeAt(0));
    switch (h2) {
      case 38:
        return c2.replace(F2, "$1" + d2.trim());
      case 58:
        return d2.trim() + c2.replace(F2, "$1" + d2.trim());
      default:
        if (0 < 1 * e2 && 0 < c2.indexOf("\f"))
          return c2.replace(F2, (d2.charCodeAt(0) === 58 ? "" : "$1") + d2.trim());
    }
    return d2 + c2;
  }
  function P2(d2, c2, e2, h2) {
    var a2 = d2 + ";", m = 2 * c2 + 3 * e2 + 4 * h2;
    if (m === 944) {
      d2 = a2.indexOf(":", 9) + 1;
      var b2 = a2.substring(d2, a2.length - 1).trim();
      b2 = a2.substring(0, d2).trim() + b2 + ";";
      return w2 === 1 || w2 === 2 && L2(b2, 1) ? "-webkit-" + b2 + b2 : b2;
    }
    if (w2 === 0 || w2 === 2 && !L2(a2, 1))
      return a2;
    switch (m) {
      case 1015:
        return a2.charCodeAt(10) === 97 ? "-webkit-" + a2 + a2 : a2;
      case 951:
        return a2.charCodeAt(3) === 116 ? "-webkit-" + a2 + a2 : a2;
      case 963:
        return a2.charCodeAt(5) === 110 ? "-webkit-" + a2 + a2 : a2;
      case 1009:
        if (a2.charCodeAt(4) !== 100)
          break;
      case 969:
      case 942:
        return "-webkit-" + a2 + a2;
      case 978:
        return "-webkit-" + a2 + "-moz-" + a2 + a2;
      case 1019:
      case 983:
        return "-webkit-" + a2 + "-moz-" + a2 + "-ms-" + a2 + a2;
      case 883:
        if (a2.charCodeAt(8) === 45)
          return "-webkit-" + a2 + a2;
        if (0 < a2.indexOf("image-set(", 11))
          return a2.replace(ja, "$1-webkit-$2") + a2;
        break;
      case 932:
        if (a2.charCodeAt(4) === 45)
          switch (a2.charCodeAt(5)) {
            case 103:
              return "-webkit-box-" + a2.replace("-grow", "") + "-webkit-" + a2 + "-ms-" + a2.replace("grow", "positive") + a2;
            case 115:
              return "-webkit-" + a2 + "-ms-" + a2.replace("shrink", "negative") + a2;
            case 98:
              return "-webkit-" + a2 + "-ms-" + a2.replace("basis", "preferred-size") + a2;
          }
        return "-webkit-" + a2 + "-ms-" + a2 + a2;
      case 964:
        return "-webkit-" + a2 + "-ms-flex-" + a2 + a2;
      case 1023:
        if (a2.charCodeAt(8) !== 99)
          break;
        b2 = a2.substring(a2.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
        return "-webkit-box-pack" + b2 + "-webkit-" + a2 + "-ms-flex-pack" + b2 + a2;
      case 1005:
        return ka.test(a2) ? a2.replace(aa, ":-webkit-") + a2.replace(aa, ":-moz-") + a2 : a2;
      case 1e3:
        b2 = a2.substring(13).trim();
        c2 = b2.indexOf("-") + 1;
        switch (b2.charCodeAt(0) + b2.charCodeAt(c2)) {
          case 226:
            b2 = a2.replace(G2, "tb");
            break;
          case 232:
            b2 = a2.replace(G2, "tb-rl");
            break;
          case 220:
            b2 = a2.replace(G2, "lr");
            break;
          default:
            return a2;
        }
        return "-webkit-" + a2 + "-ms-" + b2 + a2;
      case 1017:
        if (a2.indexOf("sticky", 9) === -1)
          break;
      case 975:
        c2 = (a2 = d2).length - 10;
        b2 = (a2.charCodeAt(c2) === 33 ? a2.substring(0, c2) : a2).substring(d2.indexOf(":", 7) + 1).trim();
        switch (m = b2.charCodeAt(0) + (b2.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b2.charCodeAt(8))
              break;
          case 115:
            a2 = a2.replace(b2, "-webkit-" + b2) + ";" + a2;
            break;
          case 207:
          case 102:
            a2 = a2.replace(b2, "-webkit-" + (102 < m ? "inline-" : "") + "box") + ";" + a2.replace(b2, "-webkit-" + b2) + ";" + a2.replace(b2, "-ms-" + b2 + "box") + ";" + a2;
        }
        return a2 + ";";
      case 938:
        if (a2.charCodeAt(5) === 45)
          switch (a2.charCodeAt(6)) {
            case 105:
              return b2 = a2.replace("-items", ""), "-webkit-" + a2 + "-webkit-box-" + b2 + "-ms-flex-" + b2 + a2;
            case 115:
              return "-webkit-" + a2 + "-ms-flex-item-" + a2.replace(ba, "") + a2;
            default:
              return "-webkit-" + a2 + "-ms-flex-line-pack" + a2.replace("align-content", "").replace(ba, "") + a2;
          }
        break;
      case 973:
      case 989:
        if (a2.charCodeAt(3) !== 45 || a2.charCodeAt(4) === 122)
          break;
      case 931:
      case 953:
        if (la.test(d2) === true)
          return (b2 = d2.substring(d2.indexOf(":") + 1)).charCodeAt(0) === 115 ? P2(d2.replace("stretch", "fill-available"), c2, e2, h2).replace(":fill-available", ":stretch") : a2.replace(b2, "-webkit-" + b2) + a2.replace(b2, "-moz-" + b2.replace("fill-", "")) + a2;
        break;
      case 962:
        if (a2 = "-webkit-" + a2 + (a2.charCodeAt(5) === 102 ? "-ms-" + a2 : "") + a2, e2 + h2 === 211 && a2.charCodeAt(13) === 105 && 0 < a2.indexOf("transform", 10))
          return a2.substring(0, a2.indexOf(";", 27) + 1).replace(ma, "$1-webkit-$2") + a2;
    }
    return a2;
  }
  function L2(d2, c2) {
    var e2 = d2.indexOf(c2 === 1 ? ":" : "{"), h2 = d2.substring(0, c2 !== 3 ? e2 : 10);
    e2 = d2.substring(e2 + 1, d2.length - 1);
    return R2(c2 !== 2 ? h2 : h2.replace(na, "$1"), e2, c2);
  }
  function ea(d2, c2) {
    var e2 = P2(c2, c2.charCodeAt(0), c2.charCodeAt(1), c2.charCodeAt(2));
    return e2 !== c2 + ";" ? e2.replace(oa, " or ($1)").substring(4) : "(" + c2 + ")";
  }
  function H2(d2, c2, e2, h2, a2, m, b2, v2, n2, q2) {
    for (var g2 = 0, x2 = c2, w3; g2 < A2; ++g2) {
      switch (w3 = S2[g2].call(B2, d2, x2, e2, h2, a2, m, b2, v2, n2, q2)) {
        case void 0:
        case false:
        case true:
        case null:
          break;
        default:
          x2 = w3;
      }
    }
    if (x2 !== c2)
      return x2;
  }
  function T2(d2) {
    switch (d2) {
      case void 0:
      case null:
        A2 = S2.length = 0;
        break;
      default:
        if (typeof d2 === "function")
          S2[A2++] = d2;
        else if (typeof d2 === "object")
          for (var c2 = 0, e2 = d2.length; c2 < e2; ++c2) {
            T2(d2[c2]);
          }
        else
          Y2 = !!d2 | 0;
    }
    return T2;
  }
  function U2(d2) {
    d2 = d2.prefix;
    d2 !== void 0 && (R2 = null, d2 ? typeof d2 !== "function" ? w2 = 1 : (w2 = 2, R2 = d2) : w2 = 0);
    return U2;
  }
  function B2(d2, c2) {
    var e2 = d2;
    33 > e2.charCodeAt(0) && (e2 = e2.trim());
    V2 = e2;
    e2 = [V2];
    if (0 < A2) {
      var h2 = H2(-1, c2, e2, e2, D2, z2, 0, 0, 0, 0);
      h2 !== void 0 && typeof h2 === "string" && (c2 = h2);
    }
    var a2 = M2(O2, e2, c2, 0, 0);
    0 < A2 && (h2 = H2(-2, a2, e2, e2, D2, z2, a2.length, 0, 0, 0), h2 !== void 0 && (a2 = h2));
    V2 = "";
    E2 = 0;
    z2 = D2 = 1;
    return a2;
  }
  var ca = /^\0+/g, N2 = /[\0\r\f]/g, aa = /: */g, ka = /zoo|gra/, ma = /([,: ])(transform)/g, ia = /,\r+?/g, F2 = /([\t\r\n ])*\f?&/g, fa = /@(k\w+)\s*(\S*)\s*/, Q2 = /::(place)/g, ha = /:(read-only)/g, G2 = /[svh]\w+-[tblr]{2}/, da = /\(\s*(.*)\s*\)/g, oa = /([\s\S]*?);/g, ba = /-self|flex-/g, na = /[^]*?(:[rp][el]a[\w-]+)[^]*/, la = /stretch|:\s*\w+\-(?:conte|avail)/, ja = /([^-])(image-set\()/, z2 = 1, D2 = 1, E2 = 0, w2 = 1, O2 = [], S2 = [], A2 = 0, R2 = null, Y2 = 0, V2 = "";
  B2.use = T2;
  B2.set = U2;
  W2 !== void 0 && U2(W2);
  return B2;
}
var stylis_browser_esm_default = stylis_min;

// node_modules/@emotion/unitless/dist/unitless.browser.esm.js
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
var unitless_browser_esm_default = unitlessKeys;

// node_modules/@emotion/memoize/dist/memoize.browser.esm.js
function memoize4(fn) {
  var cache3 = {};
  return function(arg) {
    if (cache3[arg] === void 0)
      cache3[arg] = fn(arg);
    return cache3[arg];
  };
}
var memoize_browser_esm_default = memoize4;

// node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var index2 = memoize_browser_esm_default(function(prop2) {
  return reactPropsRegex.test(prop2) || prop2.charCodeAt(0) === 111 && prop2.charCodeAt(1) === 110 && prop2.charCodeAt(2) < 91;
});
var is_prop_valid_browser_esm_default = index2;

// node_modules/styled-components/dist/styled-components.browser.esm.js
var import_hoist_non_react_statics4 = __toModule(require_hoist_non_react_statics_cjs());
function v() {
  return (v = Object.assign || function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var n2 = arguments[t2];
      for (var r2 in n2)
        Object.prototype.hasOwnProperty.call(n2, r2) && (e2[r2] = n2[r2]);
    }
    return e2;
  }).apply(this, arguments);
}
var g = function(e2, t2) {
  for (var n2 = [e2[0]], r2 = 0, o2 = t2.length; r2 < o2; r2 += 1)
    n2.push(t2[r2], e2[r2 + 1]);
  return n2;
};
var S = function(t2) {
  return t2 !== null && typeof t2 == "object" && (t2.toString ? t2.toString() : Object.prototype.toString.call(t2)) === "[object Object]" && !(0, import_react_is9.typeOf)(t2);
};
var w = Object.freeze([]);
var E = Object.freeze({});
function b(e2) {
  return typeof e2 == "function";
}
function _(e2) {
  return typeof e2 == "string" && e2 || e2.displayName || e2.name || "Component";
}
function N(e2) {
  return e2 && typeof e2.styledComponentId == "string";
}
var A = typeof process != "undefined" && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled";
var C = "5.3.0";
var I = typeof window != "undefined" && "HTMLElement" in window;
var P = Boolean(typeof SC_DISABLE_SPEEDY == "boolean" ? SC_DISABLE_SPEEDY : typeof process != "undefined" && process.env.REACT_APP_SC_DISABLE_SPEEDY !== void 0 && process.env.REACT_APP_SC_DISABLE_SPEEDY !== "" ? process.env.REACT_APP_SC_DISABLE_SPEEDY !== "false" && process.env.REACT_APP_SC_DISABLE_SPEEDY : typeof process != "undefined" && process.env.SC_DISABLE_SPEEDY !== void 0 && process.env.SC_DISABLE_SPEEDY !== "" ? process.env.SC_DISABLE_SPEEDY !== "false" && process.env.SC_DISABLE_SPEEDY : true);
var O = {};
var R = true ? { 1: "Cannot create styled-component for component: %s.\n\n", 2: "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n", 3: "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n", 4: "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n", 5: "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n", 6: "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n", 7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n', 8: 'ThemeProvider: Please make your "theme" prop an object.\n\n', 9: "Missing document `<head>`\n\n", 10: "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n", 11: "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n", 12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n", 13: "%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n", 14: 'ThemeProvider: "theme" prop is required.\n\n', 15: "A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n", 16: "Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n", 17: "CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n" } : {};
function D() {
  for (var e2 = arguments.length <= 0 ? void 0 : arguments[0], t2 = [], n2 = 1, r2 = arguments.length; n2 < r2; n2 += 1)
    t2.push(n2 < 0 || arguments.length <= n2 ? void 0 : arguments[n2]);
  return t2.forEach(function(t3) {
    e2 = e2.replace(/%[a-z]/, t3);
  }), e2;
}
function j(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  throw false ? new Error("An error occurred. See https://git.io/JUIaE#" + e2 + " for more information." + (n2.length > 0 ? " Args: " + n2.join(", ") : "")) : new Error(D.apply(void 0, [R[e2]].concat(n2)).trim());
}
var T = function() {
  function e2(e3) {
    this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e3;
  }
  var t2 = e2.prototype;
  return t2.indexOfGroup = function(e3) {
    for (var t3 = 0, n2 = 0; n2 < e3; n2++)
      t3 += this.groupSizes[n2];
    return t3;
  }, t2.insertRules = function(e3, t3) {
    if (e3 >= this.groupSizes.length) {
      for (var n2 = this.groupSizes, r2 = n2.length, o2 = r2; e3 >= o2; )
        (o2 <<= 1) < 0 && j(16, "" + e3);
      this.groupSizes = new Uint32Array(o2), this.groupSizes.set(n2), this.length = o2;
      for (var i2 = r2; i2 < o2; i2++)
        this.groupSizes[i2] = 0;
    }
    for (var s2 = this.indexOfGroup(e3 + 1), a2 = 0, c2 = t3.length; a2 < c2; a2++)
      this.tag.insertRule(s2, t3[a2]) && (this.groupSizes[e3]++, s2++);
  }, t2.clearGroup = function(e3) {
    if (e3 < this.length) {
      var t3 = this.groupSizes[e3], n2 = this.indexOfGroup(e3), r2 = n2 + t3;
      this.groupSizes[e3] = 0;
      for (var o2 = n2; o2 < r2; o2++)
        this.tag.deleteRule(n2);
    }
  }, t2.getGroup = function(e3) {
    var t3 = "";
    if (e3 >= this.length || this.groupSizes[e3] === 0)
      return t3;
    for (var n2 = this.groupSizes[e3], r2 = this.indexOfGroup(e3), o2 = r2 + n2, i2 = r2; i2 < o2; i2++)
      t3 += this.tag.getRule(i2) + "/*!sc*/\n";
    return t3;
  }, e2;
}();
var k = new Map();
var x = new Map();
var V = 1;
var B = function(e2) {
  if (k.has(e2))
    return k.get(e2);
  for (; x.has(V); )
    V++;
  var t2 = V++;
  return ((0 | t2) < 0 || t2 > 1 << 30) && j(16, "" + t2), k.set(e2, t2), x.set(t2, e2), t2;
};
var M = function(e2) {
  return x.get(e2);
};
var z = function(e2, t2) {
  k.set(e2, t2), x.set(t2, e2);
};
var L = "style[" + A + '][data-styled-version="5.3.0"]';
var G = new RegExp("^" + A + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)');
var F = function(e2, t2, n2) {
  for (var r2, o2 = n2.split(","), i2 = 0, s2 = o2.length; i2 < s2; i2++)
    (r2 = o2[i2]) && e2.registerName(t2, r2);
};
var Y = function(e2, t2) {
  for (var n2 = t2.innerHTML.split("/*!sc*/\n"), r2 = [], o2 = 0, i2 = n2.length; o2 < i2; o2++) {
    var s2 = n2[o2].trim();
    if (s2) {
      var a2 = s2.match(G);
      if (a2) {
        var c2 = 0 | parseInt(a2[1], 10), u21 = a2[2];
        c2 !== 0 && (z(u21, c2), F(e2, u21, a2[3]), e2.getTag().insertRules(c2, r2)), r2.length = 0;
      } else
        r2.push(s2);
    }
  }
};
var q = function() {
  return typeof window != "undefined" && window.__webpack_nonce__ !== void 0 ? window.__webpack_nonce__ : null;
};
var H = function(e2) {
  var t2 = document.head, n2 = e2 || t2, r2 = document.createElement("style"), o2 = function(e3) {
    for (var t3 = e3.childNodes, n3 = t3.length; n3 >= 0; n3--) {
      var r3 = t3[n3];
      if (r3 && r3.nodeType === 1 && r3.hasAttribute(A))
        return r3;
    }
  }(n2), i2 = o2 !== void 0 ? o2.nextSibling : null;
  r2.setAttribute(A, "active"), r2.setAttribute("data-styled-version", "5.3.0");
  var s2 = q();
  return s2 && r2.setAttribute("nonce", s2), n2.insertBefore(r2, i2), r2;
};
var $ = function() {
  function e2(e3) {
    var t3 = this.element = H(e3);
    t3.appendChild(document.createTextNode("")), this.sheet = function(e4) {
      if (e4.sheet)
        return e4.sheet;
      for (var t4 = document.styleSheets, n2 = 0, r2 = t4.length; n2 < r2; n2++) {
        var o2 = t4[n2];
        if (o2.ownerNode === e4)
          return o2;
      }
      j(17);
    }(t3), this.length = 0;
  }
  var t2 = e2.prototype;
  return t2.insertRule = function(e3, t3) {
    try {
      return this.sheet.insertRule(t3, e3), this.length++, true;
    } catch (e4) {
      return false;
    }
  }, t2.deleteRule = function(e3) {
    this.sheet.deleteRule(e3), this.length--;
  }, t2.getRule = function(e3) {
    var t3 = this.sheet.cssRules[e3];
    return t3 !== void 0 && typeof t3.cssText == "string" ? t3.cssText : "";
  }, e2;
}();
var W = function() {
  function e2(e3) {
    var t3 = this.element = H(e3);
    this.nodes = t3.childNodes, this.length = 0;
  }
  var t2 = e2.prototype;
  return t2.insertRule = function(e3, t3) {
    if (e3 <= this.length && e3 >= 0) {
      var n2 = document.createTextNode(t3), r2 = this.nodes[e3];
      return this.element.insertBefore(n2, r2 || null), this.length++, true;
    }
    return false;
  }, t2.deleteRule = function(e3) {
    this.element.removeChild(this.nodes[e3]), this.length--;
  }, t2.getRule = function(e3) {
    return e3 < this.length ? this.nodes[e3].textContent : "";
  }, e2;
}();
var U = function() {
  function e2(e3) {
    this.rules = [], this.length = 0;
  }
  var t2 = e2.prototype;
  return t2.insertRule = function(e3, t3) {
    return e3 <= this.length && (this.rules.splice(e3, 0, t3), this.length++, true);
  }, t2.deleteRule = function(e3) {
    this.rules.splice(e3, 1), this.length--;
  }, t2.getRule = function(e3) {
    return e3 < this.length ? this.rules[e3] : "";
  }, e2;
}();
var J = I;
var X = { isServer: !I, useCSSOMInjection: !P };
var Z = function() {
  function e2(e3, t3, n2) {
    e3 === void 0 && (e3 = E), t3 === void 0 && (t3 = {}), this.options = v({}, X, {}, e3), this.gs = t3, this.names = new Map(n2), !this.options.isServer && I && J && (J = false, function(e4) {
      for (var t4 = document.querySelectorAll(L), n3 = 0, r2 = t4.length; n3 < r2; n3++) {
        var o2 = t4[n3];
        o2 && o2.getAttribute(A) !== "active" && (Y(e4, o2), o2.parentNode && o2.parentNode.removeChild(o2));
      }
    }(this));
  }
  e2.registerId = function(e3) {
    return B(e3);
  };
  var t2 = e2.prototype;
  return t2.reconstructWithOptions = function(t3, n2) {
    return n2 === void 0 && (n2 = true), new e2(v({}, this.options, {}, t3), this.gs, n2 && this.names || void 0);
  }, t2.allocateGSInstance = function(e3) {
    return this.gs[e3] = (this.gs[e3] || 0) + 1;
  }, t2.getTag = function() {
    return this.tag || (this.tag = (n2 = (t3 = this.options).isServer, r2 = t3.useCSSOMInjection, o2 = t3.target, e3 = n2 ? new U(o2) : r2 ? new $(o2) : new W(o2), new T(e3)));
    var e3, t3, n2, r2, o2;
  }, t2.hasNameForId = function(e3, t3) {
    return this.names.has(e3) && this.names.get(e3).has(t3);
  }, t2.registerName = function(e3, t3) {
    if (B(e3), this.names.has(e3))
      this.names.get(e3).add(t3);
    else {
      var n2 = new Set();
      n2.add(t3), this.names.set(e3, n2);
    }
  }, t2.insertRules = function(e3, t3, n2) {
    this.registerName(e3, t3), this.getTag().insertRules(B(e3), n2);
  }, t2.clearNames = function(e3) {
    this.names.has(e3) && this.names.get(e3).clear();
  }, t2.clearRules = function(e3) {
    this.getTag().clearGroup(B(e3)), this.clearNames(e3);
  }, t2.clearTag = function() {
    this.tag = void 0;
  }, t2.toString = function() {
    return function(e3) {
      for (var t3 = e3.getTag(), n2 = t3.length, r2 = "", o2 = 0; o2 < n2; o2++) {
        var i2 = M(o2);
        if (i2 !== void 0) {
          var s2 = e3.names.get(i2), a2 = t3.getGroup(o2);
          if (s2 !== void 0 && a2.length !== 0) {
            var c2 = A + ".g" + o2 + '[id="' + i2 + '"]', u21 = "";
            s2 !== void 0 && s2.forEach(function(e4) {
              e4.length > 0 && (u21 += e4 + ",");
            }), r2 += "" + a2 + c2 + '{content:"' + u21 + '"}/*!sc*/\n';
          }
        }
      }
      return r2;
    }(this);
  }, e2;
}();
var K = /(a)(d)/gi;
var Q = function(e2) {
  return String.fromCharCode(e2 + (e2 > 25 ? 39 : 97));
};
function ee(e2) {
  var t2, n2 = "";
  for (t2 = Math.abs(e2); t2 > 52; t2 = t2 / 52 | 0)
    n2 = Q(t2 % 52) + n2;
  return (Q(t2 % 52) + n2).replace(K, "$1-$2");
}
var te = function(e2, t2) {
  for (var n2 = t2.length; n2; )
    e2 = 33 * e2 ^ t2.charCodeAt(--n2);
  return e2;
};
var ne = function(e2) {
  return te(5381, e2);
};
function re(e2) {
  for (var t2 = 0; t2 < e2.length; t2 += 1) {
    var n2 = e2[t2];
    if (b(n2) && !N(n2))
      return false;
  }
  return true;
}
var oe = ne("5.3.0");
var ie = function() {
  function e2(e3, t2, n2) {
    this.rules = e3, this.staticRulesId = "", this.isStatic = false, this.componentId = t2, this.baseHash = te(oe, t2), this.baseStyle = n2, Z.registerId(t2);
  }
  return e2.prototype.generateAndInjectStyles = function(e3, t2, n2) {
    var r2 = this.componentId, o2 = [];
    if (this.baseStyle && o2.push(this.baseStyle.generateAndInjectStyles(e3, t2, n2)), this.isStatic && !n2.hash)
      if (this.staticRulesId && t2.hasNameForId(r2, this.staticRulesId))
        o2.push(this.staticRulesId);
      else {
        var i2 = Ne(this.rules, e3, t2, n2).join(""), s2 = ee(te(this.baseHash, i2.length) >>> 0);
        if (!t2.hasNameForId(r2, s2)) {
          var a2 = n2(i2, "." + s2, void 0, r2);
          t2.insertRules(r2, s2, a2);
        }
        o2.push(s2), this.staticRulesId = s2;
      }
    else {
      for (var c2 = this.rules.length, u21 = te(this.baseHash, n2.hash), l2 = "", d2 = 0; d2 < c2; d2++) {
        var h2 = this.rules[d2];
        if (typeof h2 == "string")
          l2 += h2, u21 = te(u21, h2 + d2);
        else if (h2) {
          var p = Ne(h2, e3, t2, n2), f = Array.isArray(p) ? p.join("") : p;
          u21 = te(u21, f + d2), l2 += f;
        }
      }
      if (l2) {
        var m = ee(u21 >>> 0);
        if (!t2.hasNameForId(r2, m)) {
          var y2 = n2(l2, "." + m, void 0, r2);
          t2.insertRules(r2, m, y2);
        }
        o2.push(m);
      }
    }
    return o2.join(" ");
  }, e2;
}();
var se = /^\s*\/\/.*$/gm;
var ae = [":", "[", ".", "#"];
function ce(e2) {
  var t2, n2, r2, o2, i2 = e2 === void 0 ? E : e2, s2 = i2.options, a2 = s2 === void 0 ? E : s2, c2 = i2.plugins, u21 = c2 === void 0 ? w : c2, l2 = new stylis_browser_esm_default(a2), d2 = [], h2 = function(e3) {
    function t3(t4) {
      if (t4)
        try {
          e3(t4 + "}");
        } catch (e4) {
        }
    }
    return function(n3, r3, o3, i3, s3, a3, c3, u22, l3, d3) {
      switch (n3) {
        case 1:
          if (l3 === 0 && r3.charCodeAt(0) === 64)
            return e3(r3 + ";"), "";
          break;
        case 2:
          if (u22 === 0)
            return r3 + "/*|*/";
          break;
        case 3:
          switch (u22) {
            case 102:
            case 112:
              return e3(o3[0] + r3), "";
            default:
              return r3 + (d3 === 0 ? "/*|*/" : "");
          }
        case -2:
          r3.split("/*|*/}").forEach(t3);
      }
    };
  }(function(e3) {
    d2.push(e3);
  }), f = function(e3, r3, i3) {
    return r3 === 0 && ae.indexOf(i3[n2.length]) !== -1 || i3.match(o2) ? e3 : "." + t2;
  };
  function m(e3, i3, s3, a3) {
    a3 === void 0 && (a3 = "&");
    var c3 = e3.replace(se, ""), u22 = i3 && s3 ? s3 + " " + i3 + " { " + c3 + " }" : c3;
    return t2 = a3, n2 = i3, r2 = new RegExp("\\" + n2 + "\\b", "g"), o2 = new RegExp("(\\" + n2 + "\\b){2,}"), l2(s3 || !i3 ? "" : i3, u22);
  }
  return l2.use([].concat(u21, [function(e3, t3, o3) {
    e3 === 2 && o3.length && o3[0].lastIndexOf(n2) > 0 && (o3[0] = o3[0].replace(r2, f));
  }, h2, function(e3) {
    if (e3 === -2) {
      var t3 = d2;
      return d2 = [], t3;
    }
  }])), m.hash = u21.length ? u21.reduce(function(e3, t3) {
    return t3.name || j(15), te(e3, t3.name);
  }, 5381).toString() : "", m;
}
var ue = r.createContext();
var le = ue.Consumer;
var de = r.createContext();
var he = (de.Consumer, new Z());
var pe = ce();
function fe() {
  return i(ue) || he;
}
function me() {
  return i(de) || pe;
}
function ye(e2) {
  var t2 = o(e2.stylisPlugins), n2 = t2[0], i2 = t2[1], c2 = fe(), u21 = s(function() {
    var t3 = c2;
    return e2.sheet ? t3 = e2.sheet : e2.target && (t3 = t3.reconstructWithOptions({ target: e2.target }, false)), e2.disableCSSOMInjection && (t3 = t3.reconstructWithOptions({ useCSSOMInjection: false })), t3;
  }, [e2.disableCSSOMInjection, e2.sheet, e2.target]), l2 = s(function() {
    return ce({ options: { prefix: !e2.disableVendorPrefixes }, plugins: n2 });
  }, [e2.disableVendorPrefixes, n2]);
  return a(function() {
    (0, import_shallowequal.default)(n2, e2.stylisPlugins) || i2(e2.stylisPlugins);
  }, [e2.stylisPlugins]), r.createElement(ue.Provider, { value: u21 }, r.createElement(de.Provider, { value: l2 }, true ? r.Children.only(e2.children) : e2.children));
}
var ve = function() {
  function e2(e3, t2) {
    var n2 = this;
    this.inject = function(e4, t3) {
      t3 === void 0 && (t3 = pe);
      var r2 = n2.name + t3.hash;
      e4.hasNameForId(n2.id, r2) || e4.insertRules(n2.id, r2, t3(n2.rules, r2, "@keyframes"));
    }, this.toString = function() {
      return j(12, String(n2.name));
    }, this.name = e3, this.id = "sc-keyframes-" + e3, this.rules = t2;
  }
  return e2.prototype.getName = function(e3) {
    return e3 === void 0 && (e3 = pe), this.name + e3.hash;
  }, e2;
}();
var ge = /([A-Z])/;
var Se = /([A-Z])/g;
var we = /^ms-/;
var Ee = function(e2) {
  return "-" + e2.toLowerCase();
};
function be(e2) {
  return ge.test(e2) ? e2.replace(Se, Ee).replace(we, "-ms-") : e2;
}
var _e = function(e2) {
  return e2 == null || e2 === false || e2 === "";
};
function Ne(e2, n2, r2, o2) {
  if (Array.isArray(e2)) {
    for (var i2, s2 = [], a2 = 0, c2 = e2.length; a2 < c2; a2 += 1)
      (i2 = Ne(e2[a2], n2, r2, o2)) !== "" && (Array.isArray(i2) ? s2.push.apply(s2, i2) : s2.push(i2));
    return s2;
  }
  if (_e(e2))
    return "";
  if (N(e2))
    return "." + e2.styledComponentId;
  if (b(e2)) {
    if (typeof (l2 = e2) != "function" || l2.prototype && l2.prototype.isReactComponent || !n2)
      return e2;
    var u21 = e2(n2);
    return (0, import_react_is9.isElement)(u21) && console.warn(_(e2) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."), Ne(u21, n2, r2, o2);
  }
  var l2;
  return e2 instanceof ve ? r2 ? (e2.inject(r2, o2), e2.getName(o2)) : e2 : S(e2) ? function e3(t2, n3) {
    var r3, o3, i3 = [];
    for (var s3 in t2)
      t2.hasOwnProperty(s3) && !_e(t2[s3]) && (S(t2[s3]) ? i3.push.apply(i3, e3(t2[s3], s3)) : b(t2[s3]) ? i3.push(be(s3) + ":", t2[s3], ";") : i3.push(be(s3) + ": " + (r3 = s3, (o3 = t2[s3]) == null || typeof o3 == "boolean" || o3 === "" ? "" : typeof o3 != "number" || o3 === 0 || r3 in unitless_browser_esm_default ? String(o3).trim() : o3 + "px") + ";"));
    return n3 ? [n3 + " {"].concat(i3, ["}"]) : i3;
  }(e2) : e2.toString();
}
function Ae(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  return b(e2) || S(e2) ? Ne(g(w, [e2].concat(n2))) : n2.length === 0 && e2.length === 1 && typeof e2[0] == "string" ? e2 : Ne(g(e2, n2));
}
var Ce = /invalid hook call/i;
var Ie = new Set();
var Pe = function(e2, t2) {
  if (true) {
    var n2 = "The component " + e2 + (t2 ? ' with the id of "' + t2 + '"' : "") + " has been created dynamically.\nYou may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.";
    try {
      c(), Ie.has(n2) || (console.warn(n2), Ie.add(n2));
    } catch (e3) {
      Ce.test(e3.message) && Ie.delete(n2);
    }
  }
};
var Oe = function(e2, t2, n2) {
  return n2 === void 0 && (n2 = E), e2.theme !== n2.theme && e2.theme || t2 || n2.theme;
};
var Re = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g;
var De = /(^-|-$)/g;
function je(e2) {
  return e2.replace(Re, "-").replace(De, "");
}
var Te = function(e2) {
  return ee(ne(e2) >>> 0);
};
function ke(e2) {
  return typeof e2 == "string" && e2.charAt(0) === e2.charAt(0).toLowerCase();
}
var xe = function(e2) {
  return typeof e2 == "function" || typeof e2 == "object" && e2 !== null && !Array.isArray(e2);
};
var Ve = function(e2) {
  return e2 !== "__proto__" && e2 !== "constructor" && e2 !== "prototype";
};
function Be(e2, t2, n2) {
  var r2 = e2[n2];
  xe(t2) && xe(r2) ? Me(r2, t2) : e2[n2] = t2;
}
function Me(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  for (var o2 = 0, i2 = n2; o2 < i2.length; o2++) {
    var s2 = i2[o2];
    if (xe(s2))
      for (var a2 in s2)
        Ve(a2) && Be(e2, s2[a2], a2);
  }
  return e2;
}
var ze = r.createContext();
var Le = ze.Consumer;
function Ge(e2) {
  var t2 = i(ze), n2 = s(function() {
    return function(e3, t3) {
      if (!e3)
        return j(14);
      if (b(e3)) {
        var n3 = e3(t3);
        return n3 !== null && !Array.isArray(n3) && typeof n3 == "object" ? n3 : j(7);
      }
      return Array.isArray(e3) || typeof e3 != "object" ? j(8) : t3 ? v({}, t3, {}, e3) : e3;
    }(e2.theme, t2);
  }, [e2.theme, t2]);
  return e2.children ? r.createElement(ze.Provider, { value: n2 }, e2.children) : null;
}
var Fe = {};
function Ye(e2, t2, n2) {
  var o2 = N(e2), s2 = !ke(e2), a2 = t2.attrs, c2 = a2 === void 0 ? w : a2, d2 = t2.componentId, h2 = d2 === void 0 ? function(e3, t3) {
    var n3 = typeof e3 != "string" ? "sc" : je(e3);
    Fe[n3] = (Fe[n3] || 0) + 1;
    var r2 = n3 + "-" + Te("5.3.0" + n3 + Fe[n3]);
    return t3 ? t3 + "-" + r2 : r2;
  }(t2.displayName, t2.parentComponentId) : d2, p = t2.displayName, f = p === void 0 ? function(e3) {
    return ke(e3) ? "styled." + e3 : "Styled(" + _(e3) + ")";
  }(e2) : p, g2 = t2.displayName && t2.componentId ? je(t2.displayName) + "-" + t2.componentId : t2.componentId || h2, S2 = o2 && e2.attrs ? Array.prototype.concat(e2.attrs, c2).filter(Boolean) : c2, A2 = t2.shouldForwardProp;
  o2 && e2.shouldForwardProp && (A2 = t2.shouldForwardProp ? function(n3, r2, o3) {
    return e2.shouldForwardProp(n3, r2, o3) && t2.shouldForwardProp(n3, r2, o3);
  } : e2.shouldForwardProp);
  var C2, I2 = new ie(n2, g2, o2 ? e2.componentStyle : void 0), P2 = I2.isStatic && c2.length === 0, O2 = function(e3, t3) {
    return function(e4, t4, n3, r2) {
      var o3 = e4.attrs, s3 = e4.componentStyle, a3 = e4.defaultProps, c3 = e4.foldedComponentIds, d3 = e4.shouldForwardProp, h3 = e4.styledComponentId, p2 = e4.target;
      l(h3);
      var f2 = function(e5, t5, n4) {
        e5 === void 0 && (e5 = E);
        var r3 = v({}, t5, { theme: e5 }), o4 = {};
        return n4.forEach(function(e6) {
          var t6, n5, i2, s4 = e6;
          for (t6 in b(s4) && (s4 = s4(r3)), s4)
            r3[t6] = o4[t6] = t6 === "className" ? (n5 = o4[t6], i2 = s4[t6], n5 && i2 ? n5 + " " + i2 : n5 || i2) : s4[t6];
        }), [r3, o4];
      }(Oe(t4, i(ze), a3) || E, t4, o3), y2 = f2[0], g3 = f2[1], S3 = function(e5, t5, n4, r3) {
        var o4 = fe(), i2 = me(), s4 = t5 ? e5.generateAndInjectStyles(E, o4, i2) : e5.generateAndInjectStyles(n4, o4, i2);
        return l(s4), !t5 && r3 && r3(s4), s4;
      }(s3, r2, y2, true ? e4.warnTooManyClasses : void 0), w2 = n3, _18 = g3.$as || t4.$as || g3.as || t4.as || p2, N2 = ke(_18), A3 = g3 !== t4 ? v({}, t4, {}, g3) : t4, C3 = {};
      for (var I3 in A3)
        I3[0] !== "$" && I3 !== "as" && (I3 === "forwardedAs" ? C3.as = A3[I3] : (d3 ? d3(I3, is_prop_valid_browser_esm_default, _18) : !N2 || is_prop_valid_browser_esm_default(I3)) && (C3[I3] = A3[I3]));
      return t4.style && g3.style !== t4.style && (C3.style = v({}, t4.style, {}, g3.style)), C3.className = Array.prototype.concat(c3, h3, S3 !== h3 ? S3 : null, t4.className, g3.className).filter(Boolean).join(" "), C3.ref = w2, u(_18, C3);
    }(C2, e3, t3, P2);
  };
  return O2.displayName = f, (C2 = r.forwardRef(O2)).attrs = S2, C2.componentStyle = I2, C2.displayName = f, C2.shouldForwardProp = A2, C2.foldedComponentIds = o2 ? Array.prototype.concat(e2.foldedComponentIds, e2.styledComponentId) : w, C2.styledComponentId = g2, C2.target = o2 ? e2.target : e2, C2.withComponent = function(e3) {
    var r2 = t2.componentId, o3 = function(e4, t3) {
      if (e4 == null)
        return {};
      var n3, r3, o4 = {}, i3 = Object.keys(e4);
      for (r3 = 0; r3 < i3.length; r3++)
        n3 = i3[r3], t3.indexOf(n3) >= 0 || (o4[n3] = e4[n3]);
      return o4;
    }(t2, ["componentId"]), i2 = r2 && r2 + "-" + (ke(e3) ? e3 : je(_(e3)));
    return Ye(e3, v({}, o3, { attrs: S2, componentId: i2 }), n2);
  }, Object.defineProperty(C2, "defaultProps", { get: function() {
    return this._foldedDefaultProps;
  }, set: function(t3) {
    this._foldedDefaultProps = o2 ? Me({}, e2.defaultProps, t3) : t3;
  } }), Pe(f, g2), C2.warnTooManyClasses = function(e3, t3) {
    var n3 = {}, r2 = false;
    return function(o3) {
      if (!r2 && (n3[o3] = true, Object.keys(n3).length >= 200)) {
        var i2 = t3 ? ' with the id of "' + t3 + '"' : "";
        console.warn("Over 200 classes were generated for component " + e3 + i2 + ".\nConsider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"), r2 = true, n3 = {};
      }
    };
  }(f, g2), C2.toString = function() {
    return "." + C2.styledComponentId;
  }, s2 && (0, import_hoist_non_react_statics4.default)(C2, e2, { attrs: true, componentStyle: true, displayName: true, foldedComponentIds: true, shouldForwardProp: true, styledComponentId: true, target: true, withComponent: true }), C2;
}
var qe = function(e2) {
  return function e3(t2, r2, o2) {
    if (o2 === void 0 && (o2 = E), !(0, import_react_is9.isValidElementType)(r2))
      return j(1, String(r2));
    var i2 = function() {
      return t2(r2, o2, Ae.apply(void 0, arguments));
    };
    return i2.withConfig = function(n2) {
      return e3(t2, r2, v({}, o2, {}, n2));
    }, i2.attrs = function(n2) {
      return e3(t2, r2, v({}, o2, { attrs: Array.prototype.concat(o2.attrs, n2).filter(Boolean) }));
    }, i2;
  }(Ye, e2);
};
["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "textPath", "tspan"].forEach(function(e2) {
  qe[e2] = qe(e2);
});
var He = function() {
  function e2(e3, t3) {
    this.rules = e3, this.componentId = t3, this.isStatic = re(e3), Z.registerId(this.componentId + 1);
  }
  var t2 = e2.prototype;
  return t2.createStyles = function(e3, t3, n2, r2) {
    var o2 = r2(Ne(this.rules, t3, n2, r2).join(""), ""), i2 = this.componentId + e3;
    n2.insertRules(i2, i2, o2);
  }, t2.removeStyles = function(e3, t3) {
    t3.clearRules(this.componentId + e3);
  }, t2.renderStyles = function(e3, t3, n2, r2) {
    e3 > 2 && Z.registerId(this.componentId + e3), this.removeStyles(e3, n2), this.createStyles(e3, t3, n2, r2);
  }, e2;
}();
function $e(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), o2 = 1; o2 < t2; o2++)
    n2[o2 - 1] = arguments[o2];
  var s2 = Ae.apply(void 0, [e2].concat(n2)), a2 = "sc-global-" + Te(JSON.stringify(s2)), u21 = new He(s2, a2);
  function l2(e3) {
    var t3 = fe(), n3 = me(), o3 = i(ze), l3 = c(t3.allocateGSInstance(a2)).current;
    return r.Children.count(e3.children) && console.warn("The global style component " + a2 + " was given child JSX. createGlobalStyle does not render children."), s2.some(function(e4) {
      return typeof e4 == "string" && e4.indexOf("@import") !== -1;
    }) && console.warn("Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app."), d(function() {
      return h2(l3, e3, t3, o3, n3), function() {
        return u21.removeStyles(l3, t3);
      };
    }, [l3, e3, t3, o3, n3]), null;
  }
  function h2(e3, t3, n3, r2, o3) {
    if (u21.isStatic)
      u21.renderStyles(e3, O, n3, o3);
    else {
      var i2 = v({}, t3, { theme: Oe(t3, r2, l2.defaultProps) });
      u21.renderStyles(e3, i2, n3, o3);
    }
  }
  return Pe(a2), r.memo(l2);
}
function We(e2) {
  typeof navigator != "undefined" && navigator.product === "ReactNative" && console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  var o2 = Ae.apply(void 0, [e2].concat(n2)).join(""), i2 = Te(o2);
  return new ve(i2, o2);
}
var Ue = function() {
  function e2() {
    var e3 = this;
    this._emitSheetCSS = function() {
      var t3 = e3.instance.toString(), n2 = q();
      return "<style " + [n2 && 'nonce="' + n2 + '"', A + '="true"', 'data-styled-version="5.3.0"'].filter(Boolean).join(" ") + ">" + t3 + "</style>";
    }, this.getStyleTags = function() {
      return e3.sealed ? j(2) : e3._emitSheetCSS();
    }, this.getStyleElement = function() {
      var t3;
      if (e3.sealed)
        return j(2);
      var n2 = ((t3 = {})[A] = "", t3["data-styled-version"] = "5.3.0", t3.dangerouslySetInnerHTML = { __html: e3.instance.toString() }, t3), o2 = q();
      return o2 && (n2.nonce = o2), [r.createElement("style", v({}, n2, { key: "sc-0-0" }))];
    }, this.seal = function() {
      e3.sealed = true;
    }, this.instance = new Z({ isServer: true }), this.sealed = false;
  }
  var t2 = e2.prototype;
  return t2.collectStyles = function(e3) {
    return this.sealed ? j(2) : r.createElement(ye, { sheet: this.instance }, e3);
  }, t2.interleaveWithNodeStream = function(e3) {
    return j(3);
  }, e2;
}();
var Je = function(e2) {
  var t2 = r.forwardRef(function(t3, n2) {
    var o2 = i(ze), s2 = e2.defaultProps, a2 = Oe(t3, o2, s2);
    return a2 === void 0 && console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class "' + _(e2) + '"'), r.createElement(e2, v({}, t3, { theme: a2, ref: n2 }));
  });
  return (0, import_hoist_non_react_statics4.default)(t2, e2), t2.displayName = "WithTheme(" + _(e2) + ")", t2;
};
var Xe = function() {
  return i(ze);
};
var Ze = { StyleSheet: Z, masterSheet: he };
typeof navigator != "undefined" && navigator.product === "ReactNative" && console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native"), window["__styled-components-init__"] = window["__styled-components-init__"] || 0, window["__styled-components-init__"] === 1 && console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."), window["__styled-components-init__"] += 1;
var styled_components_browser_esm_default = qe;

// src/foundation/styled-components.ts
var {
  default: styled4,
  css: css2,
  keyframes,
  createGlobalStyle,
  withTheme,
  StyleSheetManager,
  ThemeProvider: ThemeProvider2,
  ThemeConsumer
} = styled_components_browser_esm_exports;
var RcUseTheme = () => useTheme2();
var styled_components_default = styled4;

// src/foundation/config.ts
var JUNO_WARNING_IGNORE_KEY = "__JUNO_WARNING_IGNORE__";
var RcConfig = class {
  _WARNING_IGNORE = false;
  _WARNING_FUNCTION = (message, options) => {
    console[options?.level || "warn"](message);
  };
  constructor() {
    if (typeof window !== "undefined") {
      this._WARNING_IGNORE = window?.localStorage?.getItem(JUNO_WARNING_IGNORE_KEY) === "true";
      window.__JUNO__ = this;
    }
  }
  set WARNING_IGNORE(value) {
    if (value) {
      console.log("---------------- [Juno] ----------------");
      console.log(`Don't recommended you close it, we should avoid use any deprecated props or methods.`);
      console.log("---------------- [Juno] ----------------");
    }
    this._WARNING_IGNORE = !!value;
    window?.localStorage?.setItem(JUNO_WARNING_IGNORE_KEY, `${this._WARNING_IGNORE}`);
  }
  get WARNING_IGNORE() {
    return this._WARNING_IGNORE;
  }
  set WARNING_FUNCTION(func4) {
    if (typeof func4 === "function") {
      this._WARNING_FUNCTION = func4;
    } else {
      console.warn("[Juno] config warningFunction is not a function.");
    }
  }
  get WARNING_FUNCTION() {
    return this._WARNING_FUNCTION;
  }
};
var rcConfiguration = new RcConfig();
var configure = ({ warning: warning8, warningFunction }) => {
  if (warning8 !== void 0) {
    rcConfiguration.WARNING_IGNORE = !warning8;
  }
  if (warningFunction !== void 0) {
    rcConfiguration.WARNING_FUNCTION = warningFunction;
  }
};

// src/foundation/contexts/PortalWindowContext.ts
import { createContext as createContext7, useContext as useContext10 } from "react";
var RcPortalWindowContext = createContext7({
  document: typeof globalThis !== "undefined" ? globalThis.document : window.document
});
var useRcPortalWindowContext = () => useContext10(RcPortalWindowContext);

// src/foundation/contexts/ResponsiveContext/breakpointList.ts
var breakpointList = ["xs", "sm", "md", "lg", "xl"];

// src/foundation/contexts/ResponsiveContext/getMatchDetail.ts
var matchCache = new Map();
var getMatchGroups = (breakpoint) => {
  const ltMatchGroup = [];
  const gtMatchGroup = [];
  if (breakpoint === null) {
    for (let i2 = 0; i2 < breakpointList.length; i2++) {
      ltMatchGroup.push(`lt-${breakpointList[i2]}`);
    }
  } else {
    const bpIndex = breakpointList.indexOf(breakpoint);
    for (let i2 = 0; i2 < bpIndex; i2++) {
      gtMatchGroup.unshift(`gt-${breakpointList[i2]}`);
    }
    for (let i2 = bpIndex + 1; i2 < breakpointList.length; i2++) {
      ltMatchGroup.push(`lt-${breakpointList[i2]}`);
    }
  }
  return { ltMatchGroup, gtMatchGroup };
};
var getMatchMap = ({ ltMatchGroup, gtMatchGroup }, matchBP) => {
  const matchMap = {};
  if (matchBP !== null)
    matchMap[matchBP] = true;
  for (const ltBP of ltMatchGroup) {
    const [, bp] = ltBP.split("-");
    matchMap[`lt${bp.toUpperCase()}`] = true;
    matchMap[ltBP] = true;
  }
  for (const gtBP of gtMatchGroup) {
    const [, bp] = gtBP.split("-");
    matchMap[`gt${bp.toUpperCase()}`] = true;
    matchMap[gtBP] = true;
  }
  return matchMap;
};
var getMatchDetail = (breakpoint) => {
  if (!matchCache.has(breakpoint)) {
    const matchGroups = getMatchGroups(breakpoint);
    const matchMap = getMatchMap(matchGroups, breakpoint);
    matchCache.set(breakpoint, {
      ...matchGroups,
      matchBP: breakpoint,
      matchMap
    });
  }
  return matchCache.get(breakpoint);
};

// src/foundation/contexts/ResponsiveContext/ResponsiveContext.ts
import { createContext as createContext8, useContext as useContext11 } from "react";
var RcResponsiveContext = createContext8(void 0);
var useResponsiveContext = () => {
  return useContext11(RcResponsiveContext);
};

// src/foundation/hoc/withDelay/withDelay.tsx
import React547, { useEffect as useEffect29, useState as useState19 } from "react";
function withDelay(Component7) {
  return function ComponentWithDelay(props) {
    const { delay = 0, placeholder: placeholder2 = null, ...rest } = props;
    const [visible, setVisible] = useState19(delay === 0);
    useEffect29(() => {
      const timeout2 = !visible ? window.setTimeout(() => setVisible(true), delay) : void 0;
      return () => {
        if (timeout2) {
          clearTimeout(timeout2);
        }
      };
    }, []);
    return visible ? /* @__PURE__ */ React547.createElement(Component7, {
      ...rest
    }) : placeholder2;
  };
}

// src/foundation/hoc/withResponsive/withResponsive.tsx
var import_isArray = __toModule(require_isArray());
import React548, { forwardRef as forwardRef497, useMemo as useMemo5 } from "react";

// src/foundation/hoc/withResponsive/utils.ts
var getSizeMap = (withResponsiveTokens) => {
  const sizeMap = {};
  for (const withResponsiveToken of withResponsiveTokens) {
    const [size, breakpointKey = "default"] = withResponsiveToken.split(".");
    sizeMap[breakpointKey] = size;
  }
  return sizeMap;
};
var getMatchedSize = (sizeMap, matchDetail) => {
  let matchedSize = null;
  if (matchDetail !== null) {
    const { matchBP, gtMatchGroup, ltMatchGroup } = matchDetail;
    if (matchBP !== null && sizeMap[matchBP] !== void 0) {
      matchedSize = sizeMap[matchBP];
    } else {
      matchedSize = (() => {
        for (const gtBP of gtMatchGroup) {
          const size = sizeMap[gtBP];
          if (size !== void 0)
            return size;
        }
        for (const ltBP of ltMatchGroup) {
          const size = sizeMap[ltBP];
          if (size !== void 0)
            return size;
        }
        return null;
      })();
    }
  }
  if (matchedSize === null && sizeMap.default !== void 0) {
    matchedSize = sizeMap.default;
  }
  return matchedSize;
};

// src/foundation/hoc/withResponsive/withResponsive.tsx
function withResponsive(Component7, responsivePropKeys) {
  const responsiveKeys = [
    "hiddenPatterns",
    ...responsivePropKeys
  ];
  const ResponsiveComponent = forwardRef497((props, ref2) => {
    const breakpoint = useResponsiveContext();
    const componentProps = responsiveKeys.reduce((props2, key) => {
      Reflect.deleteProperty(props2, key);
      return props2;
    }, { ...props });
    const matchDetail = breakpoint === void 0 ? null : getMatchDetail(breakpoint);
    const hidden = useMemo5(() => {
      const hiddenPatterns = props.hiddenPatterns;
      if (hiddenPatterns === void 0)
        return false;
      if (matchDetail === null)
        return true;
      if (!(0, import_isArray.default)(hiddenPatterns))
        return matchDetail.matchMap[hiddenPatterns] ?? false;
      for (const pattern of hiddenPatterns) {
        if (matchDetail.matchMap[pattern])
          return true;
      }
      return false;
    }, [matchDetail, ...[props.hiddenPatterns].flat()]);
    const patternCaches = useMemo5(() => {
      const cache3 = {};
      for (const responsivePropKey of responsivePropKeys) {
        const patternsOrSize = props[responsivePropKey];
        if ((0, import_isArray.default)(patternsOrSize)) {
          cache3[responsivePropKey] = getSizeMap(patternsOrSize);
        } else {
          cache3[responsivePropKey] = patternsOrSize;
        }
      }
      return cache3;
    }, responsivePropKeys.map((key) => props[key]));
    const sizeProps = useMemo5(() => {
      const result = {};
      if (matchDetail === null)
        return result;
      for (const responsivePropKey of responsivePropKeys) {
        const sizeMapOrSize = patternCaches[responsivePropKey];
        if (typeof sizeMapOrSize !== "object") {
          result[responsivePropKey] = sizeMapOrSize;
        } else {
          const matchedSize = getMatchedSize(sizeMapOrSize, matchDetail);
          if (matchedSize !== null) {
            result[responsivePropKey] = matchedSize;
          }
        }
      }
      return result;
    }, [matchDetail, patternCaches]);
    if (hidden) {
      return null;
    }
    return /* @__PURE__ */ React548.createElement(Component7, {
      ...componentProps,
      ref: ref2,
      ...sizeProps
    });
  });
  ResponsiveComponent.displayName = `WithResponsive(${Component7.displayName})`;
  return ResponsiveComponent;
}

// src/foundation/hooks/useEventCallback/useEventCallback.ts
var useEventCallback2 = (func4) => {
  return useEventCallback(func4);
};

// src/foundation/hooks/useA11yKeyEvent/useA11yKeyEvent.ts
var useA11yKeyEvent = (fn, {
  onlyOnFocus,
  preventDefault: preventDefault2 = true,
  checkKeys = ["Enter", "Space"]
} = {}) => {
  return useEventCallback2((event) => {
    if (!fn || onlyOnFocus && event.target !== event.currentTarget)
      return;
    const key = event.key;
    if (checkKeys.includes(key)) {
      if (preventDefault2)
        event.preventDefault();
      fn(event);
    }
  });
};

// src/foundation/hooks/useAnnouncer/useAnnouncer.tsx
import { useCallback as useCallback20, useEffect as useEffect30, useRef as useRef32 } from "react";

// src/foundation/hooks/useId/useId.ts
var import_uniqueId = __toModule(require_uniqueId());

// src/foundation/hooks/useResultRef/useResultRef.ts
import { useRef as useRef31 } from "react";
function useResultRef(cb) {
  const renderRef = useRef31(0);
  const ref2 = useRef31();
  if (renderRef.current === 0) {
    ref2.current = cb();
    renderRef.current = 1;
  }
  return ref2;
}

// src/foundation/hooks/useId/useId.ts
var DEFAULT_PREFIX = "rc-juno-id-";
function useId2(id3, prefixMode) {
  const { current: resultId } = useResultRef(() => {
    if (id3) {
      if (prefixMode) {
        return (0, import_uniqueId.default)(`${id3}-`);
      }
      return id3;
    }
    return (0, import_uniqueId.default)(DEFAULT_PREFIX);
  });
  return resultId;
}

// src/foundation/hooks/useAnnouncer/useAnnouncer.tsx
var visuallyHiddenStyles = `
  clip-path: inset(100%);
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
`;
var useAnnouncer = (id3) => {
  const _id = useId2(id3 ? `rc-announcer-${id3}` : "rc-announcer", !id3);
  const ref2 = useRef32(null);
  useEffect30(() => {
    const el2 = document.createElement("div");
    ref2.current = el2;
    el2.id = _id;
    el2.setAttribute("aria-live", "assertive");
    el2.setAttribute("aria-atomic", "true");
    el2.setAttribute("aria-hidden", "false");
    el2.setAttribute("style", visuallyHiddenStyles);
    document.body.appendChild(el2);
    return () => {
      setTimeout(() => {
        const body = document.body;
        if (body.contains(el2)) {
          body.removeChild(el2);
        }
        if (el2 === ref2.current) {
          ref2.current = null;
        }
      });
    };
  }, [_id]);
  const announce = useCallback20((message) => {
    const el2 = ref2.current;
    if (el2 && message) {
      el2.setAttribute("aria-hidden", "false");
      el2.textContent = message;
    }
  }, []);
  return announce;
};

// src/foundation/hooks/useAudio/useAudio.ts
import { useEffect as useEffect31 } from "react";
var useAudio = (init2) => {
  const audioRef = useResultRef(() => {
    const audio = new Audio();
    init2?.(audio);
    return audio;
  });
  useEffect31(() => {
    return () => {
      audioRef.current.srcObject = null;
      audioRef.current = null;
    };
  }, []);
  return audioRef.current;
};

// src/foundation/hooks/useChange/useChange.ts
import { useRef as useRef34 } from "react";

// src/foundation/hooks/usePrevious/usePrevious.ts
import { useEffect as useEffect32, useRef as useRef33 } from "react";
function usePrevious(cb, isDefault) {
  const ref2 = useRef33(isDefault ? cb() : void 0);
  useEffect32(() => {
    ref2.current = cb();
  });
  return ref2.current;
}

// src/foundation/hooks/useChange/useChange.ts
var useChange = (cb, listenCb) => {
  const countRef = useRef34(0);
  const valueRef = useRef34();
  const prev = usePrevious(listenCb);
  const curr = listenCb();
  if (countRef.current === 0 || prev !== curr) {
    countRef.current = 1;
    valueRef.current = cb(prev, curr);
  }
  return valueRef.current;
};
var useDepsChange = (cb, deps) => {
  const countRef = useRef34(0);
  const valueRef = useRef34();
  const prev = usePrevious(() => deps, true);
  const curr = deps;
  if (countRef.current === 0 || curr.some((dep, index4) => dep !== prev[index4])) {
    countRef.current = 1;
    valueRef.current = cb(prev, curr);
  }
  return valueRef.current;
};

// src/foundation/hooks/useDebounce/useDebounce.ts
var import_debounce6 = __toModule(require_debounce());
import { useCallback as useCallback21, useEffect as useEffect33 } from "react";
var useDebounce = (fn, debounceTime2 = 200) => {
  const memoFn = useEventCallback2(fn);
  const debounceFn = useCallback21((0, import_debounce6.default)(memoFn, debounceTime2), []);
  useEffect33(() => () => debounceFn.cancel(), []);
  return debounceFn;
};

// src/foundation/hooks/useEventListener/useEventListener.ts
import { useEffect as useEffect34, useRef as useRef35 } from "react";

// src/foundation/utils/isRef.ts
var isRef = (obj) => {
  return obj && "current" in obj;
};

// src/foundation/hooks/useEventListener/useEventListener.ts
function useEventListener(target, ...o2) {
  const [key, cb, options] = o2;
  const listener = useEventCallback2(cb);
  const cancelRef = useRef35(() => {
  });
  const bindRef = useRef35(() => {
  });
  const currentRefElm = isRef(target) && target.current;
  useEffect34(() => {
    if (!target)
      return;
    const elm = isRef(target) ? target.current : target;
    if (!elm) {
      return cancelRef.current;
    }
    bindRef.current = () => elm.addEventListener(key, listener, options);
    cancelRef.current = () => elm.removeEventListener(key, listener, options);
    bindRef.current();
    return cancelRef.current;
  }, [target, currentRefElm]);
  return {
    listen: () => bindRef.current(),
    remove: () => cancelRef.current()
  };
}

// src/foundation/hooks/useEver/useEver.ts
import { useRef as useRef36 } from "react";
var defaultEverTargetValue = (value) => !!value;
var useEver = (value, targetValue = defaultEverTargetValue) => {
  const result = useRef36(false);
  if (!result.current) {
    result.current = targetValue(value);
  }
  return result.current;
};

// src/foundation/hooks/useForceUpdate/useForceUpdate.ts
import { useState as useState20 } from "react";
function useForceUpdate() {
  const [, dispatch] = useState20(Object.create(null));
  const memoizedDispatch = useEventCallback2(() => {
    dispatch(Object.create(null));
  });
  return memoizedDispatch;
}

// src/foundation/hooks/useForkRef/useForkRef.ts
var useForkRef2 = useForkRef;

// src/foundation/hooks/useHiddenTabindex/useHiddenTabindex.ts
var useHiddenTabindex = (hiddenRef) => {
  const handleFocus = useEventCallback2(() => {
    const hiddenElm = hiddenRef.current;
    if (hiddenElm && hiddenElm.tabIndex === 0) {
      hiddenElm.tabIndex = -1;
    }
  });
  const handleBlur = useEventCallback2(() => {
    const hiddenElm = hiddenRef.current;
    if (hiddenElm && hiddenElm.tabIndex === -1) {
      hiddenElm.tabIndex = 0;
    }
  });
  return {
    onFocus: handleFocus,
    onBlur: handleBlur
  };
};

// src/foundation/hooks/useInterval/useInterval.ts
import { useEffect as useEffect35, useRef as useRef37, useCallback as useCallback22 } from "react";
var useInterval = (callback, delay = 0, startImmediately = true) => {
  const intervalRef = useRef37();
  const countRef = useRef37(0);
  const getRunning = useEventCallback2(() => !!intervalRef.current);
  const savedCallback = useEventCallback2((times) => {
    callback(times);
  });
  const pause = useCallback22(() => {
    if (intervalRef.current) {
      clearInterval(intervalRef.current);
      intervalRef.current = void 0;
    }
  }, []);
  const cancel = useCallback22(() => {
    pause();
    countRef.current = 0;
  }, [pause]);
  const play = useCallback22(() => {
    const isRunning = getRunning();
    if (isRunning)
      return;
    intervalRef.current = window.setInterval(() => {
      countRef.current++;
      savedCallback(countRef.current);
    }, delay);
  }, [delay, getRunning, savedCallback]);
  useEffect35(() => {
    if (startImmediately) {
      play();
    }
    return () => cancel();
  }, [cancel, play, startImmediately]);
  return {
    cancel,
    pause,
    play,
    getRunning
  };
};

// src/foundation/hooks/useKeyDownOnce/useKeyDownOnce.ts
import { useRef as useRef38 } from "react";
var useKeyDownOnce = (includeKeys, { onKeyDown, onKeyUp }) => {
  const isKeyDownMapRef = useRef38({});
  const handleKeyDown2 = useEventCallback2((e2) => {
    if (includeKeys.includes(e2.key)) {
      if (!isKeyDownMapRef.current[e2.key]) {
        onKeyDown?.(e2);
      } else {
        e2.preventDefault();
        e2.stopPropagation();
      }
      isKeyDownMapRef.current[e2.key] = true;
    } else {
      onKeyDown?.(e2);
    }
  });
  const handleKeyUp = useEventCallback2((e2) => {
    if (includeKeys.includes(e2.key)) {
      isKeyDownMapRef.current[e2.key] = false;
    }
    onKeyUp?.(e2);
  });
  return {
    onKeyDown: handleKeyDown2,
    onKeyUp: handleKeyUp
  };
};

// src/foundation/hooks/useKeyboardMoveFocus/moveIndexInTwoDimension.tsx
function moveIndexInTwoDimension(direction, options) {
  const { currIndex, columns, total, infinite } = options;
  const lastIndex = total - 1;
  const isInOrder = infinite === "order";
  const fillTotal = Math.ceil(total / columns) * columns;
  let resultIndex;
  switch (direction) {
    case "ArrowUp": {
      const toIndex = (Math.max(currIndex, 0) - columns + fillTotal) % fillTotal;
      resultIndex = infinite ? toIndex : Math.min(toIndex, currIndex);
      break;
    }
    case "ArrowRight": {
      if (isInOrder) {
        const tmp = currIndex + 1;
        resultIndex = tmp > lastIndex ? 0 : tmp;
        break;
      }
      const toIndex = Math.floor(currIndex / columns) * columns + (currIndex + 1) % columns;
      resultIndex = infinite ? toIndex : Math.max(toIndex, currIndex);
      break;
    }
    case "ArrowDown": {
      const toIndex = (currIndex + columns) % fillTotal;
      resultIndex = infinite ? toIndex : Math.max(toIndex, currIndex);
      break;
    }
    case "ArrowLeft": {
      if (isInOrder) {
        const tmp = currIndex - 1;
        resultIndex = tmp < 0 ? lastIndex : tmp;
        break;
      }
      const toIndex = Math.floor(currIndex / columns) * columns + (currIndex - 1 + columns) % columns;
      resultIndex = infinite ? toIndex : Math.min(toIndex, currIndex);
      break;
    }
    case "Home":
      resultIndex = 0;
      break;
    case "End":
      resultIndex = lastIndex;
      break;
    default:
      resultIndex = currIndex;
  }
  if (!infinite && resultIndex >= total) {
    return currIndex;
  }
  if (resultIndex >= total) {
    if (direction === "ArrowRight") {
      resultIndex = fillTotal - 1;
    }
    return moveIndexInTwoDimension(direction, {
      ...options,
      currIndex: resultIndex
    });
  }
  return resultIndex;
}

// src/foundation/hooks/useKeyboardMoveFocus/useKeyboardMoveFocus.ts
import { useCallback as useCallback23, useRef as useRef39 } from "react";
var useKeyboardMoveFocus = ({
  infinite,
  options = [],
  focusedIndexRef,
  onFocusedIndexChange,
  getOptionDisabled,
  getOptionSearchText,
  columns = 1,
  endSearchDebounceTime = 500
}) => {
  const total = options.length;
  const searchText = useRef39("");
  const debounceEndSearch = useDebounce(() => searchText.current = "", endSearchDebounceTime);
  const searchTextAndFocus = (event) => {
    const key = event.key;
    if (!getOptionSearchText || key.length !== 1)
      return;
    debounceEndSearch();
    searchText.current += key.toLowerCase();
    const matchedIndex = options.findIndex((option) => {
      const text = getOptionSearchText(option);
      return Boolean(!getOptionDisabled?.(option) && text && text.toLowerCase().startsWith(searchText.current));
    });
    if (matchedIndex > -1) {
      onFocusedIndexChange(event, matchedIndex);
    }
  };
  const onKeyFocusedIndexHandle = (event) => {
    let currIndex = focusedIndexRef.current;
    const key = event.key;
    let findDirection;
    if (total === 0)
      return;
    while (true) {
      const toIndex = findDirection ? findDirection === "next" ? currIndex + 1 : currIndex - 1 : moveIndexInTwoDimension(key, {
        currIndex,
        columns,
        total,
        infinite
      });
      if (toIndex === currIndex) {
        searchTextAndFocus(event);
        break;
      }
      if (!getOptionDisabled?.(options[toIndex])) {
        if (toIndex !== focusedIndexRef.current) {
          onFocusedIndexChange(event, toIndex);
        }
        break;
      } else {
        if (focusedIndexRef.current !== -1 && toIndex === Math.max(focusedIndexRef.current, 0)) {
          break;
        }
        currIndex = toIndex;
        if (key === "Home") {
          findDirection = "next";
        } else if (key === "End") {
          findDirection = "prev";
        }
      }
    }
  };
  const getPrevFocusableOption = useCallback23((index4 = focusedIndexRef.current, isInfinite = true) => {
    for (let i2 = index4; i2 >= 0; i2--) {
      if (!getOptionDisabled?.(options[i2])) {
        return i2;
      }
    }
    if (isInfinite) {
      for (let i2 = total - 1; i2 > index4; i2--) {
        if (!getOptionDisabled?.(options[i2])) {
          return i2;
        }
      }
    }
    return -1;
  }, [focusedIndexRef, getOptionDisabled, options, total]);
  const getNextFocusableOption = useCallback23((index4 = focusedIndexRef.current, isInfinite = true) => {
    for (let i2 = index4; i2 < total; i2++) {
      if (!getOptionDisabled?.(options[i2])) {
        return i2;
      }
    }
    if (isInfinite) {
      for (let i2 = 0; i2 < index4; i2++) {
        if (!getOptionDisabled?.(options[i2])) {
          return i2;
        }
      }
    }
    return -1;
  }, [focusedIndexRef, getOptionDisabled, options, total]);
  return {
    getPrevFocusableOption,
    getNextFocusableOption,
    onKeyFocusedIndexHandle
  };
};

// src/foundation/utils/a11yKeyboardCode.ts
var a11yKeyboardCode = {
  ArrowLeft: 37,
  ArrowRight: 39,
  Space: 32,
  Escape: 27,
  Enter: 13,
  Tab: 9
};
var a11yKeyboard = {
  ArrowLeft: "ArrowLeft",
  ArrowRight: "ArrowRight",
  Space: "Space",
  Escape: "Escape",
  Enter: "Enter",
  Tab: "Tab"
};

// src/foundation/utils/checkDefaultPrevented.ts
var checkDefaultPrevented = (fc) => {
  return (e2, ...args) => {
    if (e2.defaultPrevented)
      return;
    fc(e2, ...args);
  };
};

// src/foundation/utils/classes.ts
var RcClasses = (classes, prefix4) => {
  return classes.reduce((prev, curr) => {
    prev[curr] = `${prefix4}-${curr}`;
    return prev;
  }, {});
};

// src/foundation/utils/withDeprecatedCheck.tsx
import React549, {
  forwardRef as forwardRef498,
  useEffect as useEffect36
} from "react";

// src/foundation/utils/isShowJunoWarning.tsx
var isShowJunoWarning = !rcConfiguration.WARNING_IGNORE && true;

// src/foundation/utils/withDeprecatedCheck.tsx
function showDeprecated({
  component,
  target,
  time,
  comment,
  message,
  level
}) {
  const showMessage = message || `props => (${target}) be deprecated, that will be remove in ${time} release${comment ? `, ${comment}` : ""}`;
  rcConfiguration.WARNING_FUNCTION(`JUNO [${component}]: ${showMessage}`, {
    level
  });
}
function logInDev(args, cb) {
  if (isShowJunoWarning) {
    showDeprecated(args);
    cb?.();
  }
}
var useDeprecatedLog = (...args) => {
  if (isShowJunoWarning) {
    useEffect36(() => {
      logInDev(...args);
    }, []);
  }
};
function withDeprecatedCheck(Component7, depreciates, source) {
  if (!isShowJunoWarning) {
    return Component7;
  }
  const name = Component7.displayName || source || "";
  return forwardRef498((props, ref2) => {
    useEffect36(() => {
      depreciates.forEach(({ prop: prop2, comment, time }) => {
        if (props[prop2] !== void 0 && props[prop2] !== Component7.defaultProps?.[prop2]) {
          showDeprecated({
            component: name,
            target: prop2,
            time,
            comment
          });
        }
      });
    }, []);
    return /* @__PURE__ */ React549.createElement(Component7, {
      ...props,
      ref: ref2
    });
  });
}

// src/foundation/utils/clearReactReferencesInNode.ts
function clearReactReferences(node4) {
  for (const key in node4) {
    if (key.includes("__react")) {
      delete node4[key];
    }
  }
}
function clearReactReferencesInner(node4) {
  node4.childNodes.forEach((node5) => {
    clearReactReferences(node5);
    if (node5.childNodes.length) {
      clearReactReferencesInner(node5);
    }
  });
}
function clearReactReferencesInNode(node4) {
  try {
    const parentElement = node4.parentElement;
    if (parentElement) {
      clearReactReferencesInner(parentElement);
      clearReactReferences(parentElement);
      if (typeof parentElement.remove === "function") {
        parentElement.remove();
      }
    }
  } catch (error4) {
    logInDev({
      component: "clearReactReferencesInNode",
      message: `trigger clearReactReferencesInNode fail`
    }, () => {
      console.log(error4);
    });
  }
}

// src/foundation/utils/combineProps.ts
var import_isPlainObject = __toModule(require_isPlainObject());
import { isValidElement as isValidElement14 } from "react";
var combineProps = (baseProps, newProps, coverPropKeys) => innerCombineProps({
  baseProps,
  newProps,
  coverPropKeys
});
var combineClasses = (baseClasses, newClasses) => innerCombineProps({
  baseProps: baseClasses,
  newProps: newClasses,
  combineAllString: true
});
var innerCombineProps = (params) => {
  const { baseProps, newProps } = params;
  if (!newProps || Object.keys(newProps).length === 0) {
    return baseProps;
  }
  const outputProps = mergeChildProps(params);
  return {
    ...newProps,
    ...outputProps
  };
};
function mergeChildProps({
  baseProps,
  newProps,
  combineAllString,
  coverPropKeys
}) {
  const result = Object.keys(baseProps || {}).reduce((output, curr) => {
    const prop2 = baseProps[curr];
    const propTo = newProps[curr];
    if (propTo !== void 0) {
      switch (typeof prop2) {
        case "undefined":
          output[curr] = propTo;
          break;
        case "object": {
          if (!isValidElement14(propTo) && !isValidElement14(prop2) && (0, import_isPlainObject.default)(propTo) && (0, import_isPlainObject.default)(prop2)) {
            output[curr] = mergeChildProps({
              baseProps: prop2,
              newProps: propTo || {},
              combineAllString: combineAllString || curr === "classes"
            });
          } else {
            output[curr] = propTo;
          }
          break;
        }
        case "string":
          if (combineAllString || curr === "className") {
            output[curr] = [prop2, propTo].filter((x2) => typeof x2 === "string" && x2).join(" ");
          } else {
            output[curr] = propTo;
          }
          break;
        case "boolean":
        case "symbol":
        case "bigint":
        case "number":
          output[curr] = propTo;
          break;
        case "function":
          if (coverPropKeys && coverPropKeys.includes(curr) && propTo) {
            output[curr] = propTo;
          } else {
            output[curr] = (...args) => {
              propTo?.(...args);
              prop2?.(...args);
            };
          }
          break;
        default:
      }
    } else {
      output[curr] = prop2;
    }
    return output;
  }, {});
  if (Object.keys(result).length === 0) {
    return void 0;
  }
  return {
    ...newProps,
    ...result
  };
}

// src/foundation/utils/deepmerge.ts
function deepmerge2(...args) {
  return deepmerge(...args);
}

// src/foundation/utils/getScrollbarSize.ts
var import_getScrollbarSize3 = __toModule(require_getScrollbarSize());
var getScrollbarSize2 = import_getScrollbarSize3.default;

// src/foundation/utils/hasValue.ts
var import_utils63 = __toModule(require_utils());
var hasValue2 = import_utils63.hasValue;
var isFilled2 = import_utils63.isFilled;

// src/foundation/utils/isRcElement.ts
import { isValidElement as isValidElement15 } from "react";
function isRcElement(element2, names) {
  return isValidElement15(element2) && names.indexOf(element2.type?.displayName) !== -1;
}

// src/foundation/utils/isUrl.ts
function isUrl(url) {
  const exp = /(\b(https?):\/\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/gi;
  return url.match(exp);
}

// src/foundation/utils/omit.ts
var import_omit = __toModule(require_omit());
var omit3 = (classes, keys3) => {
  return (0, import_omit.default)(classes, keys3);
};

// src/foundation/utils/outerSize.ts
function outerSize(el2) {
  const style3 = getComputedStyle(el2);
  return {
    get height() {
      return el2.offsetHeight + parseInt(style3.marginTop, 10) + parseInt(style3.marginBottom, 10);
    },
    get width() {
      return el2.offsetWidth + parseInt(style3.marginLeft, 10) + parseInt(style3.marginRight, 10);
    }
  };
}

// src/foundation/utils/parseColor.ts
function parseColor(color2, defaultColor, useMain = true) {
  if (!color2 && defaultColor !== void 0) {
    return defaultColor;
  }
  let result = ["primary", "main"];
  if (color2) {
    if (color2 instanceof Array) {
      result = color2;
    } else if (typeof color2 === "string") {
      const colors = color2.split(".");
      result = colors;
    } else {
      return color2;
    }
  }
  if (useMain) {
    if (!result[0]) {
      result[0] = "primary";
    }
    if (!result[1]) {
      result[1] = "main";
    }
  }
  return result;
}

// src/foundation/utils/pick.ts
var import_pick = __toModule(require_pick());
var pick = (classes, keys3) => {
  return (0, import_pick.default)(classes, keys3);
};

// src/foundation/utils/preloadImg.ts
function preloadImg(url) {
  return new Promise((resolve, reject) => {
    const img = new Image();
    img.style.display = "none";
    img.onload = () => {
      document.body.removeChild(img);
      resolve();
    };
    img.onerror = () => {
      document.body.removeChild(img);
      reject();
    };
    img.src = url;
    document.body.appendChild(img);
  });
}

// src/foundation/utils/removeClassName.tsx
function removeClassName(elmRef, removeClass4) {
  const elm = elmRef.current;
  if (!elm)
    return;
  if (elm.className.includes(removeClass4)) {
    elm.className = cleanClass(elm, removeClass4);
  }
  const icons = elm.querySelectorAll(`.${removeClass4}`);
  if (icons?.length > 0) {
    icons.forEach((x2) => x2.className = cleanClass(x2, removeClass4));
  }
}
function cleanClass(elm, removeClass4) {
  return elm.className.replace(removeClass4, "").trim();
}

// src/foundation/utils/selectionHandler.ts
function getSelectionPosition(inputRef) {
  const currentPosition = inputRef.current?.selectionStart;
  const currentPositionEnd = inputRef.current?.selectionEnd;
  const isSelectRange = currentPosition !== currentPositionEnd;
  return {
    isSelectRange,
    position: { start: currentPosition || 0, end: currentPositionEnd || 0 }
  };
}
function setSelectionPosition(inputRef, options) {
  const elm = inputRef.current;
  if (elm && options.start !== null && options.end !== null) {
    if (options.scrollIntoView)
      elm.blur();
    elm.setSelectionRange(options.start, options.end, options.direction);
    if (options.scrollIntoView)
      elm.focus();
  }
}
function clearWindowSelection() {
  if (window.getSelection) {
    const selection = window.getSelection();
    if (selection) {
      selection.empty?.();
      selection.removeAllRanges?.();
    }
  }
}

// src/foundation/utils/shallowEqual.ts
function is(x2, y2) {
  if (x2 === y2) {
    return x2 !== 0 || 1 / x2 === 1 / y2;
  }
  return Number.isNaN(x2) && Number.isNaN(y2);
}
var hasOwnProperty = Object.prototype.hasOwnProperty;
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }
  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }
  const keysA = Object.keys(objA);
  const keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  for (let i2 = 0; i2 < keysA.length; i2++) {
    if (!hasOwnProperty.call(objB, keysA[i2]) || !is(objA[keysA[i2]], objB[keysA[i2]])) {
      return false;
    }
  }
  return true;
}

// src/foundation/utils/styleParser.ts
var pxToNumber = (style3 = "") => parseFloat(style3);

// src/foundation/utils/swapArrayLocs.ts
var swapArrayLocs = (arr, index1, index22) => {
  const temp = arr[index1];
  arr[index1] = arr[index22];
  arr[index22] = temp;
  return arr;
};

// src/foundation/hooks/useRetry/useRetry.ts
import { useRef as useRef41 } from "react";

// src/foundation/hooks/useSleep/useSleep.ts
import { useEffect as useEffect37, useRef as useRef40 } from "react";
var useSleep = () => {
  const timeoutIdRef = useRef40();
  const rejectRef = useRef40();
  const sleepingRef = useRef40(false);
  const clearCurrTimeout = () => {
    const id3 = timeoutIdRef.current;
    sleepingRef.current = false;
    if (id3 !== void 0)
      window.clearTimeout(id3);
  };
  const sleep = (time) => new Promise((resolve, reject) => {
    clearCurrTimeout();
    sleepingRef.current = true;
    rejectRef.current = reject;
    timeoutIdRef.current = window.setTimeout(() => {
      sleepingRef.current = false;
      resolve();
    }, time);
  });
  const cancel = () => {
    clearCurrTimeout();
    rejectRef.current?.();
  };
  useEffect37(() => {
    return () => {
      clearCurrTimeout();
    };
  }, []);
  return {
    sleep,
    cancel,
    getSleeping: () => sleepingRef.current
  };
};

// src/foundation/hooks/useRetry/useRetry.ts
var useRetry = (cb, options) => {
  const { sleep, cancel: cancelSleep } = useSleep();
  const isCancelRef = useRef41(true);
  const complete = () => {
    isCancelRef.current = true;
    options?.onComplete?.();
  };
  const cancel = () => {
    if (!isCancelRef.current) {
      options?.onCancel?.();
      complete?.();
    }
    cancelSleep();
  };
  const retry = async (...args) => {
    cancel();
    isCancelRef.current = false;
    options?.onStart?.();
    if (await cb(...args)) {
      if (!isCancelRef.current) {
        options?.onSuccess?.();
        complete();
      }
      return;
    }
    if (!options)
      return;
    const { retryTimes, intervalTime, onSuccess } = options;
    for (let i2 = 0; i2 < retryTimes; i2++) {
      if (isCancelRef.current) {
        return;
      }
      try {
        await sleep(intervalTime);
      } catch (error4) {
        return;
      }
      if (await cb(...args, i2)) {
        if (!isCancelRef.current) {
          onSuccess?.();
          complete();
        }
        return;
      }
    }
    complete();
  };
  return {
    retry,
    cancel
  };
};

// src/foundation/hooks/useKeyboardMoveFocus/useOnlyOneFocusable.ts
var MOVE_ATTR_KEY = "data-move-focused";
var useOnlyOneFocusable = ({
  focusedIndexRef,
  containerRef,
  retryOptions
}) => {
  const moveFocusedId = useId2(MOVE_ATTR_KEY, true);
  const getIndexElm = (toIndex) => containerRef.current?.querySelector(`[${moveFocusedId}="${toIndex}"]`);
  const setIndexTabIndex = (toIndex) => {
    const toElm = getIndexElm(toIndex);
    if (toElm) {
      const prevElm = containerRef.current?.querySelector(`[${moveFocusedId}][tabindex="0"]`);
      prevElm?.setAttribute("tabindex", "-1");
      toElm.setAttribute("tabindex", "0");
    }
  };
  const { retry: focusIndexWithRetry } = useRetry((toIndex) => {
    const toElm = getIndexElm(toIndex);
    if (toElm) {
      toElm.focus();
      return true;
    }
    return false;
  }, retryOptions);
  return {
    moveFocusedId,
    focusIndex: focusIndexWithRetry,
    setIndexTabIndex,
    getItemProps: (index4, options) => {
      return combineProps({
        [moveFocusedId]: index4,
        tabIndex: index4 === focusedIndexRef.current ? 0 : -1,
        onFocus: () => {
          focusedIndexRef.current = index4;
          setIndexTabIndex(index4);
        }
      }, options);
    }
  };
};

// src/foundation/hooks/useLongPress/useLongPress.ts
import { useEffect as useEffect38, useRef as useRef43 } from "react";

// src/foundation/hooks/useTouchMouseEvent/useTouchMouseEvent.ts
import { useRef as useRef42 } from "react";
var useTouchMouseEvent = ({
  onMouseDown: onMouseDownArg,
  onMouseUp: onMouseUpArg,
  onTouchStart: onTouchStartArg,
  onTouchEnd: onTouchEndArg
}, { isPreventDefault = true } = {}) => {
  const isLiveEndRef = useRef42(false);
  const isStartRef = useRef42(false);
  const startAction = () => isStartRef.current = true;
  const endAction = () => isStartRef.current = false;
  const onTouchStart = useEventCallback2((e2) => {
    startAction();
    onTouchStartArg?.(e2);
  });
  const onTouchEnd = useEventCallback2((e2) => {
    endAction();
    isLiveEndRef.current = true;
    onTouchEndArg?.(e2);
  });
  const preventDefaultEvent = (e2) => {
    if (isPreventDefault) {
      e2.preventDefault();
      e2.stopPropagation();
    }
  };
  const onMouseDown = useEventCallback2((e2) => {
    startAction();
    if (isLiveEndRef.current) {
      e2.preventDefault();
      e2.stopPropagation();
      return;
    }
    onMouseDownArg?.(e2);
  });
  const onMouseUp = useEventCallback2((e2) => {
    if (!isStartRef.current) {
      preventDefaultEvent(e2);
      return;
    }
    endAction();
    if (isLiveEndRef.current) {
      isLiveEndRef.current = false;
      preventDefaultEvent(e2);
      return;
    }
    onMouseUpArg?.(e2);
  });
  return {
    onTouchStart,
    onTouchEnd,
    onMouseDown,
    onMouseUp
  };
};
var isElmEqualOrContainRef = (elm, elmRef) => {
  return elm && elmRef && (elmRef.current === elm || elmRef.current?.contains(elm));
};

// src/foundation/hooks/useLongPress/useLongPress.ts
var useLongPress = ({ onTap, onPress }, {
  onTouchStart,
  onTouchEnd,
  onMouseDown,
  onKeyDown,
  onKeyUp,
  onContextMenu,
  onMouseUp: onMouseUpArg
} = {}, { isPreventDefault = true, delay = 300 } = {}) => {
  const isEmittedRef = useRef43(false);
  const isA11yDownRef = useRef43(false);
  const elmRef = useRef43(null);
  const reasonRef = useRef43("click");
  const emitLongPress = useDebounce((e2) => {
    if (onPress) {
      onPress(e2, reasonRef.current);
      isEmittedRef.current = true;
    }
  }, delay);
  const end2 = (e2) => {
    document.removeEventListener("mouseup", onMouseUp);
    if (!isEmittedRef.current && isElmEqualOrContainRef(e2.target, elmRef)) {
      onTap?.(e2, reasonRef.current);
    }
    reasonRef.current = "click";
    isEmittedRef.current = false;
    emitLongPress.cancel();
  };
  const start3 = (e2) => {
    document.addEventListener("mouseup", onMouseUp);
    const isTouch2 = e2.type === "touchstart";
    if (!isTouch2)
      e2.preventDefault();
    e2.stopPropagation();
    if (isTouch2) {
      reasonRef.current = "tap";
    }
    emitLongPress(e2);
  };
  const { onMouseUp, ...events } = useTouchMouseEvent({
    onTouchStart: (e2) => {
      onTouchStart?.(e2);
      start3(e2);
    },
    onTouchEnd: (e2) => {
      onTouchEnd?.(e2);
      end2(e2);
    },
    onMouseDown: (e2) => {
      onMouseDown?.(e2);
      start3(e2);
    },
    onMouseUp: (e2) => {
      onMouseUpArg?.(e2);
      end2(e2);
    }
  }, { isPreventDefault });
  const handleDeleteKeyDown = useA11yKeyEvent((e2) => {
    reasonRef.current = "keyboard";
    if (!isA11yDownRef.current) {
      emitLongPress(e2);
    }
    isA11yDownRef.current = true;
  });
  const handleKeyDown2 = useEventCallback2((e2) => {
    onKeyDown?.(e2);
    handleDeleteKeyDown(e2);
  });
  const handleKeyUp = useEventCallback2((e2) => {
    onKeyUp?.(e2);
    if (isA11yDownRef.current)
      end2(e2);
    isA11yDownRef.current = false;
  });
  const handleContextMenu = useEventCallback2((e2) => {
    onContextMenu?.(e2);
    e2.preventDefault();
  });
  useEffect38(() => {
    return () => {
      document.removeEventListener("mouseup", onMouseUp);
    };
  }, [onMouseUp]);
  return {
    ref: elmRef,
    onContextMenu: handleContextMenu,
    onKeyDown: handleKeyDown2,
    onKeyUp: handleKeyUp,
    ...events
  };
};

// src/foundation/hooks/useMountState/useMountState.ts
import { useEffect as useEffect39, useRef as useRef44 } from "react";
var useMountState = () => {
  const isMountedRef = useRef44(false);
  useEffect39(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  return isMountedRef;
};

// src/foundation/hooks/useOnReRender/useOnReRender.ts
import { useLayoutEffect as useLayoutEffect10, useRef as useRef45 } from "react";
var useOnReRender = (cb, deps) => {
  const count2 = useRef45(0);
  const method = useEventCallback2(cb);
  useLayoutEffect10(() => {
    if (count2.current === 0) {
      count2.current = 1;
      return () => {
      };
    }
    const destroy2 = method();
    return destroy2;
  }, deps);
};

// src/foundation/hooks/useOverflow/useOverflow.ts
import { useRef as useRef47 } from "react";

// src/foundation/hooks/useResizeObserver/useResizeObserver.ts
var import_debounce7 = __toModule(require_debounce());
var import_throttle = __toModule(require_throttle());
import { useLayoutEffect as useLayoutEffect11, useRef as useRef46 } from "react";

// node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var MapShim = function() {
  if (typeof Map !== "undefined") {
    return Map;
  }
  function getIndex(arr, key) {
    var result = -1;
    arr.some(function(entry, index4) {
      if (entry[0] === key) {
        result = index4;
        return true;
      }
      return false;
    });
    return result;
  }
  return function() {
    function class_1() {
      this.__entries__ = [];
    }
    Object.defineProperty(class_1.prototype, "size", {
      get: function() {
        return this.__entries__.length;
      },
      enumerable: true,
      configurable: true
    });
    class_1.prototype.get = function(key) {
      var index4 = getIndex(this.__entries__, key);
      var entry = this.__entries__[index4];
      return entry && entry[1];
    };
    class_1.prototype.set = function(key, value) {
      var index4 = getIndex(this.__entries__, key);
      if (~index4) {
        this.__entries__[index4][1] = value;
      } else {
        this.__entries__.push([key, value]);
      }
    };
    class_1.prototype.delete = function(key) {
      var entries = this.__entries__;
      var index4 = getIndex(entries, key);
      if (~index4) {
        entries.splice(index4, 1);
      }
    };
    class_1.prototype.has = function(key) {
      return !!~getIndex(this.__entries__, key);
    };
    class_1.prototype.clear = function() {
      this.__entries__.splice(0);
    };
    class_1.prototype.forEach = function(callback, ctx) {
      if (ctx === void 0) {
        ctx = null;
      }
      for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
        var entry = _a[_i];
        callback.call(ctx, entry[1], entry[0]);
      }
    };
    return class_1;
  }();
}();
var isBrowser3 = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
var global$1 = function() {
  if (typeof global !== "undefined" && global.Math === Math) {
    return global;
  }
  if (typeof self !== "undefined" && self.Math === Math) {
    return self;
  }
  if (typeof window !== "undefined" && window.Math === Math) {
    return window;
  }
  return Function("return this")();
}();
var requestAnimationFrame$1 = function() {
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame.bind(global$1);
  }
  return function(callback) {
    return setTimeout(function() {
      return callback(Date.now());
    }, 1e3 / 60);
  };
}();
var trailingTimeout = 2;
function throttle(callback, delay) {
  var leadingCall = false, trailingCall = false, lastCallTime = 0;
  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }
    if (trailingCall) {
      proxy();
    }
  }
  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  function proxy() {
    var timeStamp = Date.now();
    if (leadingCall) {
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      }
      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay);
    }
    lastCallTime = timeStamp;
  }
  return proxy;
}
var REFRESH_DELAY = 20;
var transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
var mutationObserverSupported = typeof MutationObserver !== "undefined";
var ResizeObserverController = function() {
  function ResizeObserverController2() {
    this.connected_ = false;
    this.mutationEventsAdded_ = false;
    this.mutationsObserver_ = null;
    this.observers_ = [];
    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
  }
  ResizeObserverController2.prototype.addObserver = function(observer) {
    if (!~this.observers_.indexOf(observer)) {
      this.observers_.push(observer);
    }
    if (!this.connected_) {
      this.connect_();
    }
  };
  ResizeObserverController2.prototype.removeObserver = function(observer) {
    var observers2 = this.observers_;
    var index4 = observers2.indexOf(observer);
    if (~index4) {
      observers2.splice(index4, 1);
    }
    if (!observers2.length && this.connected_) {
      this.disconnect_();
    }
  };
  ResizeObserverController2.prototype.refresh = function() {
    var changesDetected = this.updateObservers_();
    if (changesDetected) {
      this.refresh();
    }
  };
  ResizeObserverController2.prototype.updateObservers_ = function() {
    var activeObservers = this.observers_.filter(function(observer) {
      return observer.gatherActive(), observer.hasActive();
    });
    activeObservers.forEach(function(observer) {
      return observer.broadcastActive();
    });
    return activeObservers.length > 0;
  };
  ResizeObserverController2.prototype.connect_ = function() {
    if (!isBrowser3 || this.connected_) {
      return;
    }
    document.addEventListener("transitionend", this.onTransitionEnd_);
    window.addEventListener("resize", this.refresh);
    if (mutationObserverSupported) {
      this.mutationsObserver_ = new MutationObserver(this.refresh);
      this.mutationsObserver_.observe(document, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    } else {
      document.addEventListener("DOMSubtreeModified", this.refresh);
      this.mutationEventsAdded_ = true;
    }
    this.connected_ = true;
  };
  ResizeObserverController2.prototype.disconnect_ = function() {
    if (!isBrowser3 || !this.connected_) {
      return;
    }
    document.removeEventListener("transitionend", this.onTransitionEnd_);
    window.removeEventListener("resize", this.refresh);
    if (this.mutationsObserver_) {
      this.mutationsObserver_.disconnect();
    }
    if (this.mutationEventsAdded_) {
      document.removeEventListener("DOMSubtreeModified", this.refresh);
    }
    this.mutationsObserver_ = null;
    this.mutationEventsAdded_ = false;
    this.connected_ = false;
  };
  ResizeObserverController2.prototype.onTransitionEnd_ = function(_a) {
    var _b = _a.propertyName, propertyName = _b === void 0 ? "" : _b;
    var isReflowProperty = transitionKeys.some(function(key) {
      return !!~propertyName.indexOf(key);
    });
    if (isReflowProperty) {
      this.refresh();
    }
  };
  ResizeObserverController2.getInstance = function() {
    if (!this.instance_) {
      this.instance_ = new ResizeObserverController2();
    }
    return this.instance_;
  };
  ResizeObserverController2.instance_ = null;
  return ResizeObserverController2;
}();
var defineConfigurable = function(target, props) {
  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
    var key = _a[_i];
    Object.defineProperty(target, key, {
      value: props[key],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }
  return target;
};
var getWindowOf = function(target) {
  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
  return ownerGlobal || global$1;
};
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value) {
  return parseFloat(value) || 0;
}
function getBordersSize2(styles158) {
  var positions = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    positions[_i - 1] = arguments[_i];
  }
  return positions.reduce(function(size, position4) {
    var value = styles158["border-" + position4 + "-width"];
    return size + toFloat(value);
  }, 0);
}
function getPaddings(styles158) {
  var positions = ["top", "right", "bottom", "left"];
  var paddings = {};
  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
    var position4 = positions_1[_i];
    var value = styles158["padding-" + position4];
    paddings[position4] = toFloat(value);
  }
  return paddings;
}
function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }
  var styles158 = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles158);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom;
  var width2 = toFloat(styles158.width), height2 = toFloat(styles158.height);
  if (styles158.boxSizing === "border-box") {
    if (Math.round(width2 + horizPad) !== clientWidth) {
      width2 -= getBordersSize2(styles158, "left", "right") + horizPad;
    }
    if (Math.round(height2 + vertPad) !== clientHeight) {
      height2 -= getBordersSize2(styles158, "top", "bottom") + vertPad;
    }
  }
  if (!isDocumentElement(target)) {
    var vertScrollbar = Math.round(width2 + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height2 + vertPad) - clientHeight;
    if (Math.abs(vertScrollbar) !== 1) {
      width2 -= vertScrollbar;
    }
    if (Math.abs(horizScrollbar) !== 1) {
      height2 -= horizScrollbar;
    }
  }
  return createRectInit(paddings.left, paddings.top, width2, height2);
}
var isSVGGraphicsElement = function() {
  if (typeof SVGGraphicsElement !== "undefined") {
    return function(target) {
      return target instanceof getWindowOf(target).SVGGraphicsElement;
    };
  }
  return function(target) {
    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === "function";
  };
}();
function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
  if (!isBrowser3) {
    return emptyRect;
  }
  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }
  return getHTMLElementContentRect(target);
}
function createReadOnlyRect(_a) {
  var x2 = _a.x, y2 = _a.y, width2 = _a.width, height2 = _a.height;
  var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype);
  defineConfigurable(rect, {
    x: x2,
    y: y2,
    width: width2,
    height: height2,
    top: y2,
    right: x2 + width2,
    bottom: height2 + y2,
    left: x2
  });
  return rect;
}
function createRectInit(x2, y2, width2, height2) {
  return { x: x2, y: y2, width: width2, height: height2 };
}
var ResizeObservation = function() {
  function ResizeObservation2(target) {
    this.broadcastWidth = 0;
    this.broadcastHeight = 0;
    this.contentRect_ = createRectInit(0, 0, 0, 0);
    this.target = target;
  }
  ResizeObservation2.prototype.isActive = function() {
    var rect = getContentRect(this.target);
    this.contentRect_ = rect;
    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
  };
  ResizeObservation2.prototype.broadcastRect = function() {
    var rect = this.contentRect_;
    this.broadcastWidth = rect.width;
    this.broadcastHeight = rect.height;
    return rect;
  };
  return ResizeObservation2;
}();
var ResizeObserverEntry = function() {
  function ResizeObserverEntry2(target, rectInit) {
    var contentRect = createReadOnlyRect(rectInit);
    defineConfigurable(this, { target, contentRect });
  }
  return ResizeObserverEntry2;
}();
var ResizeObserverSPI = function() {
  function ResizeObserverSPI2(callback, controller, callbackCtx) {
    this.activeObservations_ = [];
    this.observations_ = new MapShim();
    if (typeof callback !== "function") {
      throw new TypeError("The callback provided as parameter 1 is not a function.");
    }
    this.callback_ = callback;
    this.controller_ = controller;
    this.callbackCtx_ = callbackCtx;
  }
  ResizeObserverSPI2.prototype.observe = function(target) {
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    if (typeof Element === "undefined" || !(Element instanceof Object)) {
      return;
    }
    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }
    var observations = this.observations_;
    if (observations.has(target)) {
      return;
    }
    observations.set(target, new ResizeObservation(target));
    this.controller_.addObserver(this);
    this.controller_.refresh();
  };
  ResizeObserverSPI2.prototype.unobserve = function(target) {
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    if (typeof Element === "undefined" || !(Element instanceof Object)) {
      return;
    }
    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }
    var observations = this.observations_;
    if (!observations.has(target)) {
      return;
    }
    observations.delete(target);
    if (!observations.size) {
      this.controller_.removeObserver(this);
    }
  };
  ResizeObserverSPI2.prototype.disconnect = function() {
    this.clearActive();
    this.observations_.clear();
    this.controller_.removeObserver(this);
  };
  ResizeObserverSPI2.prototype.gatherActive = function() {
    var _this = this;
    this.clearActive();
    this.observations_.forEach(function(observation) {
      if (observation.isActive()) {
        _this.activeObservations_.push(observation);
      }
    });
  };
  ResizeObserverSPI2.prototype.broadcastActive = function() {
    if (!this.hasActive()) {
      return;
    }
    var ctx = this.callbackCtx_;
    var entries = this.activeObservations_.map(function(observation) {
      return new ResizeObserverEntry(observation.target, observation.broadcastRect());
    });
    this.callback_.call(ctx, entries, ctx);
    this.clearActive();
  };
  ResizeObserverSPI2.prototype.clearActive = function() {
    this.activeObservations_.splice(0);
  };
  ResizeObserverSPI2.prototype.hasActive = function() {
    return this.activeObservations_.length > 0;
  };
  return ResizeObserverSPI2;
}();
var observers = typeof WeakMap !== "undefined" ? new WeakMap() : new MapShim();
var ResizeObserver = function() {
  function ResizeObserver2(callback) {
    if (!(this instanceof ResizeObserver2)) {
      throw new TypeError("Cannot call a class as a function.");
    }
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    var controller = ResizeObserverController.getInstance();
    var observer = new ResizeObserverSPI(callback, controller, this);
    observers.set(this, observer);
  }
  return ResizeObserver2;
}();
[
  "observe",
  "unobserve",
  "disconnect"
].forEach(function(method) {
  ResizeObserver.prototype[method] = function() {
    var _a;
    return (_a = observers.get(this))[method].apply(_a, arguments);
  };
});
var index3 = function() {
  if (typeof global$1.ResizeObserver !== "undefined") {
    return global$1.ResizeObserver;
  }
  return ResizeObserver;
}();
var ResizeObserver_es_default = index3;

// src/foundation/hooks/useResizeObserver/useResizeObserver.ts
var getResizeObserver = (callback, externalWindow) => {
  if (externalWindow) {
    if (externalWindow?.["ResizeObserver"] === void 0) {
      const message = `window.ResizeObserver is not a constructor,
    should load polyfill script from 'foundation/polyfill/resize-observer-polyfill/ResizeObserver.global.js' or other CDN polyfill on render window.`;
      logInDev({
        component: "useResizeObserver",
        level: "error",
        message
      });
      throw Error(message);
    }
    return new externalWindow["ResizeObserver"](callback);
  }
  return new ResizeObserver_es_default(callback);
};
var useResizeObserver = (ref2, callback, performance2 = {}) => {
  const {
    mode = "debounce",
    time: performanceTime = 200,
    ignoreFireWhenObserve
  } = performance2;
  const countRef = useRef46(0);
  const cb = useEventCallback2((...args) => {
    if (ignoreFireWhenObserve) {
      if (countRef.current === 0) {
        countRef.current = 1;
        return;
      }
    }
    return callback(...args);
  });
  const { externalWindow } = useRcPortalWindowContext();
  const observerRef = useResultRef(() => {
    let resizeCallback;
    if (mode === "debounce") {
      resizeCallback = (0, import_debounce7.default)(cb, performanceTime);
    } else if (mode === "throttle") {
      resizeCallback = (0, import_throttle.default)(cb, performanceTime);
    } else {
      resizeCallback = cb;
    }
    return getResizeObserver(resizeCallback, externalWindow);
  });
  useLayoutEffect11(() => {
    const observer = observerRef.current;
    const elm = ref2.current;
    if (!elm) {
      throw new Error("please check element exist before bind resize observer");
    }
    observer.observe(elm);
    return () => {
      observer.disconnect();
    };
  }, [ref2]);
  return observerRef.current;
};

// src/foundation/hooks/useOverflow/useOverflow.ts
var useOverflow = (innerRef, cb, performance2 = {
  mode: "throttle",
  time: 200
}) => {
  const showRef = useRef47();
  return useResizeObserver(innerRef, () => {
    if (innerRef.current) {
      const { scrollWidth, clientWidth, scrollHeight, clientHeight } = innerRef.current;
      const show = scrollWidth > clientWidth || scrollHeight > clientHeight;
      if (showRef.current !== show) {
        showRef.current = show;
        cb(show, {
          scrollWidth,
          clientWidth,
          scrollHeight,
          clientHeight
        });
      }
    }
  }, performance2);
};

// src/foundation/hooks/useRefState/useRefState.ts
import { useRef as useRef48 } from "react";
var useRefState = (value, customUpdate) => {
  const forceUpdate = customUpdate ?? useForceUpdate();
  const innerValueRef = useRef48(value);
  const setInnerValue = useEventCallback2((toValue2, isUpdate = true) => {
    innerValueRef.current = toValue2;
    if (isUpdate) {
      forceUpdate();
    }
  });
  return [innerValueRef, setInnerValue];
};

// src/foundation/hooks/useResponsiveMatch/useResponsiveMatch.ts
var useResponsiveMatch = (defaultBreakpoint) => {
  const _breakpoint = useResponsiveContext();
  const breakpoint = _breakpoint === void 0 ? defaultBreakpoint : _breakpoint;
  if (breakpoint === void 0)
    return {};
  const matchDetail = getMatchDetail(breakpoint);
  return matchDetail.matchMap;
};

// src/foundation/hooks/useThrottle/useThrottle.ts
var import_throttle2 = __toModule(require_throttle());
import { useCallback as useCallback24, useEffect as useEffect40 } from "react";
var useThrottle = (fn, debounceTime2 = 200) => {
  const memoFn = useEventCallback2(fn);
  const throttleFn = useCallback24((0, import_throttle2.default)(memoFn, debounceTime2), []);
  useEffect40(() => () => throttleFn.cancel(), []);
  return throttleFn;
};

// src/foundation/overridableStyled.ts
var overridableStyled = styled_components_default;

// src/foundation/theme/assets/breakpoints.json
var keys2 = [
  "xs",
  "sm",
  "md",
  "lg",
  "xl"
];
var values3 = {
  xs: 0,
  sm: 641,
  md: 960,
  lg: 1280,
  xl: 1920
};
var breakpoints_default = {
  keys: keys2,
  values: values3
};

// src/foundation/theme/assets/opacity.json
var _8 = 0.08;
var _2 = 0.12;
var _6 = 0.16;
var _4 = 0.24;
var _22 = 0.32;
var _0 = 0.4;
var _82 = 0.48;
var _62 = 0.56;
var _42 = 0.64;
var _23 = 0.72;
var _02 = 0.8;
var _83 = 0.88;
var _63 = 0.96;
var opacity_default = {
  "08": _8,
  "12": _2,
  "16": _6,
  "24": _4,
  "32": _22,
  "40": _0,
  "48": _82,
  "56": _62,
  "64": _42,
  "72": _23,
  "80": _02,
  "88": _83,
  "96": _63
};

// src/foundation/theme/assets/palette.dark.json
var action = {
  grayDark: "#FFFFFF",
  grayLight: "#A0A2A9",
  primary: "#729AFF"
};
var avatar = {
  ash: "#666666",
  blueberry: "#5A5ABF",
  brass: "#8E6B2B",
  global: "#6990FD",
  gold: "#7A7000",
  lake: "#1A70C1",
  oasis: "#04549F",
  pear: "#3C7E44",
  persimmon: "#A14B00",
  sage: "#047C68",
  tomato: "#C93637"
};
var content = {
  brand: "#729AFF"
};
var danger = {
  b01: "#391D19",
  b02: "#49241F",
  b03: "#D53C32",
  b04: "#D53C32",
  f01: "#49241F",
  f02: "#E68B85",
  f11: "#E68B85"
};
var dialHeader = {
  avatarBg: "#6990FD",
  avatarIcon: "#FFFFFF",
  bg: "#383A43",
  focusBorder: "#729AFF",
  icon: "#FFFFFF",
  text: "#FFFFFF",
  textHint: "#898B94"
};
var disabled = {
  b01: "#44464E",
  f01: "#72747E",
  f02: "#54565E"
};
var error = {
  main: "#DD6057"
};
var header = {
  bgLeft: "#30323A",
  bgOverlay: "rgba(137,139,148,0.16)",
  bgOverlayDisabled: "rgba(137,139,148,0.08)",
  bgRight: "#30323A",
  border: "transparent",
  divider: "rgba(0,0,0,0.12)",
  fabBg: "#282A32",
  fabIcon: "#FFFFFF",
  focusBorder: "#FFFFFF",
  icon: "#FFFFFF",
  iconDisabled: "rgba(255,255,255,0.32)",
  text: "#FFFFFF",
  textHint: "#898B94"
};
var highContrast = "transparent";
var highlight = {
  b01: "#FFFFFF",
  b02: "#3E2A19",
  b03: "#884C12",
  f01: "#FF8800",
  f02: "#FF8800"
};
var info = {
  main: "#A0A2A9"
};
var informative = {
  b01: "#282A32",
  f01: "#222E49",
  f02: "#729AFF"
};
var interactive = {
  b01: "#29334C",
  b02: "#356AFD",
  f01: "#729AFF"
};
var label = {
  black02: "#FFFFFF",
  blue01: "#729AFF",
  blue02: "#729AFF",
  green01: "#72B375",
  green02: "#72B375",
  orange01: "#FF8800",
  orange02: "#FF8800",
  purple01: "#A89CD6",
  purple02: "#A89CD6",
  red01: "#E68B85",
  red02: "#E68B85",
  teal01: "#71ADBA",
  teal02: "#71ADBA",
  yellow01: "#D99F26",
  yellow02: "#D99F26"
};
var nav = {
  b01: "#1e2027",
  b02: "#282A32",
  bookmark: "#729AFF",
  ctlDefault: "#72747E",
  ctlSelected: "#729AFF",
  f01: "#898B94",
  f02: "#A0A2A9",
  f03: "#BCBDC2",
  f04: "#FFFFFF",
  iconDefault: "#FFFFFF",
  iconSelected: "#729AFF",
  line: "#383A43",
  mention: "#FF8800",
  menuBg: "#356AFD",
  menuText: "#FFFFFF"
};
var neutral = {
  b01: "#1e2027",
  b02: "#30323A",
  b03: "#383A43",
  b04: "#72747E",
  b05: "#72747E",
  b06: "#1e2027",
  elevation: "#282A32",
  f01: "#FFFFFF",
  f02: "#72747E",
  f03: "#898B94",
  f04: "#A0A2A9",
  f05: "#BCBDC2",
  f06: "#FFFFFF",
  f07: "#1e2027",
  f11: "#FFFFFF",
  l01: "#1e2027",
  l02: "#383A43",
  l03: "#54565E",
  l04: "#A0A2A9",
  transparent: "transparent"
};
var presence = {
  available: "#3D9A4A",
  busy: "#DD6057",
  invisible: "#72747E"
};
var primary = {
  main: "#356AFD"
};
var secondary = {
  main: "#884C12"
};
var subAction = "#729AFF";
var success = {
  b01: "#1C281B",
  b02: "#223221",
  b03: "#368440",
  b04: "#368440",
  b05: "#A0A2A9",
  f01: "#223221",
  f02: "#72B375",
  f11: "#72B375",
  main: "#3D9A4A"
};
var tab = {
  default: "#FFFFFF",
  selected: "#729AFF"
};
var type = "dark";
var umi = {
  bg: "#72747E",
  mentioned: "#FF8800",
  text: "#FFFFFF"
};
var vDanger = {
  f01: "#DD6057"
};
var vDisabled = {
  f01: "#54565E"
};
var vNeutral = {
  b01: "#1e2027",
  b02: "#282A32",
  b03: "#30323A",
  b04: "#383A43",
  f01: "#FFFFFF"
};
var warning2 = {
  b01: "#2B2416",
  b02: "#373D1B",
  b03: "#D99F26",
  f01: "#D99F26",
  f02: "#D99F26",
  f11: "#D99F26",
  main: "#74561D"
};
var palette_dark_default = {
  action,
  avatar,
  content,
  danger,
  dialHeader,
  disabled,
  error,
  header,
  highContrast,
  highlight,
  info,
  informative,
  interactive,
  label,
  nav,
  neutral,
  presence,
  primary,
  secondary,
  subAction,
  success,
  tab,
  type,
  umi,
  vDanger,
  vDisabled,
  vNeutral,
  warning: warning2
};

// src/foundation/theme/assets/palette.light.json
var action2 = {
  grayDark: "#494949",
  grayLight: "#666666",
  primary: "#066FAC"
};
var avatar2 = {
  ash: "#666666",
  blueberry: "#5A5ABF",
  brass: "#8E6B2B",
  global: "#509AC4",
  gold: "#7A7000",
  lake: "#1A70C1",
  oasis: "#04549F",
  pear: "#3C7E44",
  persimmon: "#A14B00",
  sage: "#047C68",
  tomato: "#C93637"
};
var content2 = {
  brand: "#066FAC"
};
var danger2 = {
  b01: "#FFF7F5",
  b02: "#FFE5E0",
  b03: "#E6413C",
  b04: "#D63E39",
  f01: "#FFE5E0",
  f02: "#BE3933",
  f11: "#F88878"
};
var dialHeader2 = {
  avatarBg: "#FFFFFF",
  avatarIcon: "#066FAC",
  bg: "#066FAC",
  focusBorder: "#FFFFFF",
  icon: "#FFFFFF",
  text: "#FFFFFF",
  textHint: "rgba(255,255,255,0.88)"
};
var disabled2 = {
  b01: "#B9B9B9",
  f01: "#FFFFFF",
  f02: "#B9B9B9"
};
var error2 = {
  main: "#D63E39"
};
var header2 = {
  bgLeft: "#066FAC",
  bgOverlay: "rgba(255,255,255,0.16)",
  bgOverlayDisabled: "rgba(255,255,255,0.08)",
  bgRight: "#509AC4",
  border: "transparent",
  divider: "rgba(0,0,0,0.12)",
  fabBg: "#FFFFFF",
  fabIcon: "#121212",
  focusBorder: "#FFFFFF",
  icon: "#FFFFFF",
  iconDisabled: "rgba(255,255,255,0.32)",
  text: "#FFFFFF",
  textHint: "rgba(255,255,255,0.48)"
};
var highContrast2 = "transparent";
var highlight2 = {
  b01: "#FF8800",
  b02: "#FFDFB1",
  b03: "#FF8800",
  f01: "#121212",
  f02: "#FF8800"
};
var info2 = {
  main: "#666666"
};
var informative2 = {
  b01: "#F6F9FC",
  f01: "#E3EBF4",
  f02: "#066FAC"
};
var interactive2 = {
  b01: "#E6F2F8",
  b02: "#066FAC",
  f01: "#066FAC"
};
var label2 = {
  black02: "#121212",
  blue01: "#066FAC",
  blue02: "#066FAC",
  green01: "#3C9949",
  green02: "#32773B",
  orange01: "#CD6E0D",
  orange02: "#A15600",
  purple01: "#8A77E3",
  purple02: "#6C5DAF",
  red01: "#E6413C",
  red02: "#BE3933",
  teal01: "#3093A4",
  teal02: "#2B727F",
  yellow01: "#B17D1A",
  yellow02: "#896219"
};
var nav2 = {
  b01: "#FFFFFF",
  b02: "#F9F9F9",
  bookmark: "#066FAC",
  ctlDefault: "#939393",
  ctlSelected: "#066FAC",
  f01: "#757575",
  f02: "#666666",
  f03: "#494949",
  f04: "#121212",
  iconDefault: "#121212",
  iconSelected: "#066FAC",
  line: "#E5E5E5",
  mention: "#FF8800",
  menuBg: "#066FAC",
  menuText: "#FFFFFF"
};
var neutral2 = {
  b01: "#FFFFFF",
  b02: "#F9F9F9",
  b03: "#F3F3F3",
  b04: "#666666",
  b05: "#494949",
  b06: "#000000",
  elevation: "#FFFFFF",
  f01: "#FFFFFF",
  f02: "#939393",
  f03: "#757575",
  f04: "#666666",
  f05: "#494949",
  f06: "#121212",
  f07: "#121212",
  f11: "#FFFFFF",
  l01: "#FFFFFF",
  l02: "#E5E5E5",
  l03: "#C7C7C7",
  l04: "#666666",
  transparent: "transparent"
};
var presence2 = {
  available: "#3C9949",
  busy: "#E6413C",
  invisible: "#939393"
};
var primary2 = {
  main: "#066FAC"
};
var secondary2 = {
  main: "#FF8800"
};
var subAction2 = "#066FAC";
var success2 = {
  b01: "#F0FCEF",
  b02: "#CEF4CE",
  b03: "#3C9949",
  b04: "#368541",
  b05: "#3C9949",
  f01: "#CEF4CE",
  f02: "#32773B",
  f11: "#46BE59",
  main: "#368541"
};
var tab2 = {
  default: "#121212",
  selected: "#066FAC"
};
var type2 = "light";
var umi2 = {
  bg: "#666666",
  mentioned: "#FF8800",
  text: "#FFFFFF"
};
var vDanger2 = {
  f01: "#DD6057"
};
var vDisabled2 = {
  f01: "#54565E"
};
var vNeutral2 = {
  b01: "#1e2027",
  b02: "#282A32",
  b03: "#30323A",
  b04: "#383A43",
  f01: "#FFFFFF"
};
var warning3 = {
  b01: "#FFF7EB",
  b02: "#FFE7C1",
  b03: "#F6AD16",
  f01: "#F6AD16",
  f02: "#896219",
  f11: "#F6AD16",
  main: "#F6AD16"
};
var palette_light_default = {
  action: action2,
  avatar: avatar2,
  content: content2,
  danger: danger2,
  dialHeader: dialHeader2,
  disabled: disabled2,
  error: error2,
  header: header2,
  highContrast: highContrast2,
  highlight: highlight2,
  info: info2,
  informative: informative2,
  interactive: interactive2,
  label: label2,
  nav: nav2,
  neutral: neutral2,
  presence: presence2,
  primary: primary2,
  secondary: secondary2,
  subAction: subAction2,
  success: success2,
  tab: tab2,
  type: type2,
  umi: umi2,
  vDanger: vDanger2,
  vDisabled: vDisabled2,
  vNeutral: vNeutral2,
  warning: warning3
};

// src/foundation/theme/assets/radius.json
var circle = "50%";
var lg = "4px";
var md = "3px";
var round3 = "100vw";
var sm = "2px";
var xl = "8px";
var xxl = "16px";
var zero = "0px";
var radius_default = {
  circle,
  lg,
  md,
  round: round3,
  sm,
  xl,
  xxl,
  zero
};

// src/foundation/theme/assets/shadows.json
var shadows_default3 = [
  "none",
  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
];

// src/foundation/theme/assets/shape.json
var borderRadius2 = 4;
var shape_default2 = {
  borderRadius: borderRadius2
};

// src/foundation/theme/assets/transition.json
var duration2 = {
  complex: 375,
  enteringScreen: 225,
  leavingScreen: 195,
  short: 250,
  shorter: 200,
  shortest: 150,
  standard: 300
};
var easing2 = {
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
};
var transition_default = {
  duration: duration2,
  easing: easing2
};

// src/foundation/theme/assets/typography.json
var body1 = {
  fontSize: "0.9375rem",
  fontWeight: 400,
  lineHeight: "22px"
};
var body2 = {
  fontSize: "0.9375rem",
  fontWeight: 700,
  lineHeight: "22px"
};
var button = {
  fontSize: "0.9375rem",
  fontWeight: 700,
  lineHeight: "20px",
  textTransform: "none"
};
var caption1 = {
  fontSize: "0.75rem",
  fontWeight: 400,
  lineHeight: "16px"
};
var caption2 = {
  fontSize: "0.75rem",
  fontWeight: 700,
  lineHeight: "16px"
};
var codeFontFamily = "Courier";
var display1 = {
  fontSize: "2.125rem",
  fontWeight: 400,
  lineHeight: "40px"
};
var display2 = {
  fontSize: "2.8125rem",
  fontWeight: 400,
  lineHeight: "56px"
};
var display3 = {
  fontSize: "3.5rem",
  fontWeight: 700,
  lineHeight: "72px"
};
var display4 = {
  fontSize: "6rem",
  fontWeight: 700,
  lineHeight: "112px"
};
var fontFamily2 = "Lato, Helvetica, Arial, sans-serif";
var fontSize2 = 14;
var fontWeightBold = 700;
var fontWeightLight = 300;
var fontWeightMedium = 500;
var fontWeightRegular = 400;
var headline1 = {
  fontSize: "1.5rem",
  fontWeight: 400,
  lineHeight: "32px"
};
var headline2 = {
  fontSize: "1.5rem",
  fontWeight: 700,
  lineHeight: "32px"
};
var htmlFontSize = 16;
var subheading1 = {
  fontSize: "1rem",
  fontWeight: 400,
  lineHeight: "24px"
};
var subheading2 = {
  fontSize: "1rem",
  fontWeight: 700,
  lineHeight: "24px"
};
var title1 = {
  fontSize: "1.25rem",
  fontWeight: 400,
  lineHeight: "28px"
};
var title2 = {
  fontSize: "1.25rem",
  fontWeight: 700,
  lineHeight: "28px"
};
var typography_default2 = {
  body1,
  body2,
  button,
  caption1,
  caption2,
  codeFontFamily,
  display1,
  display2,
  display3,
  display4,
  fontFamily: fontFamily2,
  fontSize: fontSize2,
  fontWeightBold,
  fontWeightLight,
  fontWeightMedium,
  fontWeightRegular,
  headline1,
  headline2,
  htmlFontSize,
  subheading1,
  subheading2,
  title1,
  title2
};

// src/foundation/theme/assets/zIndex.json
var appBar = 1100;
var drawer = 1200;
var mobileStepper = 1e3;
var modal = 1300;
var snackbar = 1400;
var speedDial = 1050;
var tooltip = 1500;
var zIndex_default2 = {
  appBar,
  drawer,
  mobileStepper,
  modal,
  snackbar,
  speedDial,
  tooltip
};

// src/foundation/theme/createTheme.ts
function createTheme2(options = {}) {
  const {
    palette: paletteInput = {},
    typography: typographyInput = {},
    opacity: opacityInput = {},
    radius: radiusInput = {},
    zIndex: zIndexInput = {},
    breakpoints: breakpointsInput = {},
    shape: shapeInput = {},
    shadows: shadowsInput = [],
    transitions: transitionsInput = {}
  } = options;
  const _breakpoints = Object.keys(breakpointsInput).length > 0 ? breakpointsInput : breakpoints_default;
  const _shadows = shadowsInput?.length > 0 ? shadowsInput : shadows_default3;
  const _palette = deepmerge2(paletteInput["type"] === "dark" ? palette_dark_default : palette_light_default, paletteInput);
  const theme = {
    ...options,
    spacing: 4,
    palette: _palette,
    typography: deepmerge2(typography_default2, typographyInput),
    opacity: deepmerge2(opacity_default, opacityInput),
    radius: deepmerge2(radius_default, radiusInput),
    shadows: _shadows,
    transitions: deepmerge2(transition_default, transitionsInput),
    zIndex: deepmerge2(zIndex_default2, zIndexInput),
    breakpoints: _breakpoints,
    shape: deepmerge2(shape_default2, shapeInput)
  };
  return createTheme_default(theme);
}
var createTheme_default2 = createTheme2;

// src/foundation/theme/options.json
var brandThemeFile = "theme";
var basePath = "/theme/";
var options_default = {
  brandThemeFile,
  basePath
};

// src/foundation/theme/ThemeHandler.ts
var _RcThemeHandler = class {
  currentTheme;
  emit;
  themeCache = new Map();
  themeProviderRef = 0;
  static getInstance() {
    if (!_RcThemeHandler.instance) {
      _RcThemeHandler.instance = new _RcThemeHandler();
    }
    return _RcThemeHandler.instance;
  }
  listen(cb) {
    this.emit = cb;
  }
  destroy() {
    _RcThemeHandler.instance = void 0;
  }
  getTheme() {
    return this.currentTheme;
  }
  setTheme(themeOptions2, isEmit = true) {
    const currentKey = JSON.stringify(themeOptions2);
    const currentTheme = this.themeCache.get(currentKey);
    if (currentTheme) {
      this.currentTheme = currentTheme;
    } else {
      const theme = createTheme_default2(themeOptions2);
      this.themeCache.set(currentKey, theme);
      this.currentTheme = theme;
    }
    if (isEmit && this.emit) {
      this.emit(this.currentTheme);
    }
    return this.currentTheme;
  }
  async setThemeName(name) {
    const theme = await this.read(name);
    this.setTheme(theme);
  }
  read(theme) {
    if (isUrl(theme)) {
      return this.loadUrl(theme);
    }
    return this.loadUrl(`${options_default.basePath}${theme}.json`);
  }
  async loadUrl(url) {
    try {
      const response = await fetch(url, { cache: "force-cache" });
      if (response.ok) {
        try {
          return await response.json();
        } catch (e2) {
          return Promise.reject(new Error(`failed parsing ${url} to json`));
        }
      }
      return await Promise.reject(new Error(`failed loading ${url}`));
    } catch (e2) {
      return await Promise.reject(new Error(`failed loading ${url}`));
    }
  }
};
var RcThemeHandler = _RcThemeHandler;
__publicField(RcThemeHandler, "instance");

// src/foundation/theme/ThemeProvider.tsx
var import_focus_visible = __toModule(require_focus_visible());
import React551, {
  createContext as createContext9,
  useContext as useContext12
} from "react";
var NestedThemeContext = createContext9(false);
var SubThemeProvider = ({
  theme: themeProp,
  children: children2
}) => {
  const parentTheme = RcUseTheme();
  const isHaveParentRcTheme = parentTheme.palette?.content?.brand;
  const theme = !themeProp && isHaveParentRcTheme ? parentTheme : createTheme_default2(themeProp);
  return /* @__PURE__ */ React551.createElement(ThemeProvider_default, {
    theme
  }, /* @__PURE__ */ React551.createElement(ThemeProvider2, {
    theme
  }, /* @__PURE__ */ React551.createElement(React551.Fragment, null, children2)));
};
var RootThemeProvider = (props) => {
  const { prefixGlobalClass, ...rest } = props;
  const stylesProviderProps = useResultRef(() => {
    return prefixGlobalClass ? {
      generateClassName: createGenerateClassName({
        seed: prefixGlobalClass
      })
    } : {};
  });
  return /* @__PURE__ */ React551.createElement(StylesProvider, {
    injectFirst: true,
    ...stylesProviderProps.current
  }, /* @__PURE__ */ React551.createElement(SubThemeProvider, {
    ...rest
  }));
};
var RcThemeProvider = (props) => {
  const isSubProvider = useContext12(NestedThemeContext);
  const ThemeProvider3 = isSubProvider ? SubThemeProvider : RootThemeProvider;
  return /* @__PURE__ */ React551.createElement(NestedThemeContext.Provider, {
    value: true
  }, /* @__PURE__ */ React551.createElement(ThemeProvider3, {
    ...props
  }));
};

// src/foundation/theme/ThemeSwitcherProvider/ThemeContext.tsx
import React552 from "react";
var RcThemeContext = React552.createContext({});

// src/foundation/theme/ThemeSwitcherProvider/ThemeSwitcherProvider.tsx
import React553, { isValidElement as isValidElement16, useState as useState21 } from "react";

// src/foundation/theme/ThemeSwitcherProvider/rcDark.json
var breakpoints = {
  keys: [
    "xs",
    "sm",
    "md",
    "lg",
    "xl"
  ],
  values: {
    lg: 1280,
    md: 960,
    sm: 641,
    xl: 1920,
    xs: 0
  }
};
var opacity = {
  "12": 0.12,
  "16": 0.16,
  "24": 0.24,
  "32": 0.32,
  "40": 0.4,
  "48": 0.48,
  "56": 0.56,
  "64": 0.64,
  "72": 0.72,
  "80": 0.8,
  "88": 0.88,
  "96": 0.96,
  "08": 0.08
};
var palette2 = {
  action: {
    grayDark: "#FFFFFF",
    grayLight: "#A0A2A9",
    primary: "#729AFF"
  },
  avatar: {
    ash: "#666666",
    blueberry: "#5A5ABF",
    brass: "#8E6B2B",
    global: "#6990FD",
    gold: "#7A7000",
    lake: "#1A70C1",
    oasis: "#04549F",
    pear: "#3C7E44",
    persimmon: "#A14B00",
    sage: "#047C68",
    tomato: "#C93637"
  },
  content: {
    brand: "#729AFF"
  },
  danger: {
    b01: "#391D19",
    b02: "#49241F",
    b03: "#D53C32",
    b04: "#D53C32",
    f01: "#49241F",
    f02: "#E68B85",
    f11: "#E68B85"
  },
  dialHeader: {
    avatarBg: "#6990FD",
    avatarIcon: "#FFFFFF",
    bg: "#383A43",
    focusBorder: "#729AFF",
    icon: "#FFFFFF",
    text: "#FFFFFF",
    textHint: "#898B94"
  },
  disabled: {
    b01: "#44464E",
    f01: "#72747E",
    f02: "#54565E"
  },
  error: {
    main: "#DD6057"
  },
  header: {
    bgLeft: "#30323A",
    bgOverlay: "rgba(137,139,148,0.16)",
    bgOverlayDisabled: "rgba(137,139,148,0.08)",
    bgRight: "#30323A",
    border: "transparent",
    divider: "rgba(0,0,0,0.12)",
    fabBg: "#282A32",
    fabIcon: "#FFFFFF",
    focusBorder: "#FFFFFF",
    icon: "#FFFFFF",
    iconDisabled: "rgba(255,255,255,0.32)",
    text: "#FFFFFF",
    textHint: "#898B94"
  },
  highContrast: "transparent",
  highlight: {
    b01: "#FFFFFF",
    b02: "#3E2A19",
    b03: "#884C12",
    f01: "#FF8800",
    f02: "#FF8800"
  },
  info: {
    main: "#A0A2A9"
  },
  informative: {
    b01: "#282A32",
    f01: "#222E49",
    f02: "#729AFF"
  },
  interactive: {
    b01: "#29334C",
    b02: "#356AFD",
    f01: "#729AFF"
  },
  label: {
    black02: "#FFFFFF",
    blue01: "#729AFF",
    blue02: "#729AFF",
    green01: "#72B375",
    green02: "#72B375",
    orange01: "#FF8800",
    orange02: "#FF8800",
    purple01: "#A89CD6",
    purple02: "#A89CD6",
    red01: "#E68B85",
    red02: "#E68B85",
    teal01: "#71ADBA",
    teal02: "#71ADBA",
    yellow01: "#D99F26",
    yellow02: "#D99F26"
  },
  nav: {
    b01: "#1e2027",
    b02: "#282A32",
    bookmark: "#729AFF",
    ctlDefault: "#72747E",
    ctlSelected: "#729AFF",
    f01: "#898B94",
    f02: "#A0A2A9",
    f03: "#BCBDC2",
    f04: "#FFFFFF",
    iconDefault: "#FFFFFF",
    iconSelected: "#729AFF",
    line: "#383A43",
    mention: "#FF8800",
    menuBg: "#356AFD",
    menuText: "#FFFFFF"
  },
  neutral: {
    b01: "#1e2027",
    b02: "#30323A",
    b03: "#383A43",
    b04: "#72747E",
    b05: "#72747E",
    b06: "#1e2027",
    elevation: "#282A32",
    f01: "#FFFFFF",
    f02: "#72747E",
    f03: "#898B94",
    f04: "#A0A2A9",
    f05: "#BCBDC2",
    f06: "#FFFFFF",
    f07: "#1e2027",
    f11: "#FFFFFF",
    l01: "#1e2027",
    l02: "#383A43",
    l03: "#54565E",
    l04: "#A0A2A9",
    transparent: "transparent"
  },
  presence: {
    available: "#3D9A4A",
    busy: "#DD6057",
    invisible: "#72747E"
  },
  primary: {
    main: "#356AFD"
  },
  secondary: {
    main: "#884C12"
  },
  subAction: "#729AFF",
  success: {
    b01: "#1C281B",
    b02: "#223221",
    b03: "#368440",
    b04: "#368440",
    b05: "#A0A2A9",
    f01: "#223221",
    f02: "#72B375",
    f11: "#72B375",
    main: "#3D9A4A"
  },
  tab: {
    default: "#FFFFFF",
    selected: "#729AFF"
  },
  type: "dark",
  umi: {
    bg: "#72747E",
    mentioned: "#FF8800",
    text: "#FFFFFF"
  },
  vDanger: {
    f01: "#DD6057"
  },
  vDisabled: {
    f01: "#54565E"
  },
  vNeutral: {
    b01: "#1e2027",
    b02: "#282A32",
    b03: "#30323A",
    b04: "#383A43",
    f01: "#FFFFFF"
  },
  warning: {
    b01: "#2B2416",
    b02: "#373D1B",
    b03: "#D99F26",
    f01: "#D99F26",
    f02: "#D99F26",
    f11: "#D99F26",
    main: "#74561D"
  }
};
var radius = {
  circle: "50%",
  lg: "4px",
  md: "3px",
  round: "100vw",
  sm: "2px",
  xl: "8px",
  xxl: "16px",
  zero: "0px"
};
var shadows2 = [
  "none",
  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
];
var typography2 = {
  body1: {
    fontSize: "0.9375rem",
    fontWeight: 400,
    lineHeight: "22px"
  },
  body2: {
    fontSize: "0.9375rem",
    fontWeight: 700,
    lineHeight: "22px"
  },
  button: {
    fontSize: "0.9375rem",
    fontWeight: 700,
    lineHeight: "20px",
    textTransform: "none"
  },
  caption1: {
    fontSize: "0.75rem",
    fontWeight: 400,
    lineHeight: "16px"
  },
  caption2: {
    fontSize: "0.75rem",
    fontWeight: 700,
    lineHeight: "16px"
  },
  codeFontFamily: "Courier",
  display1: {
    fontSize: "2.125rem",
    fontWeight: 400,
    lineHeight: "40px"
  },
  display2: {
    fontSize: "2.8125rem",
    fontWeight: 400,
    lineHeight: "56px"
  },
  display3: {
    fontSize: "3.5rem",
    fontWeight: 700,
    lineHeight: "72px"
  },
  display4: {
    fontSize: "6rem",
    fontWeight: 700,
    lineHeight: "112px"
  },
  fontFamily: "Lato, Helvetica, Arial, sans-serif",
  fontSize: 14,
  fontWeightBold: 700,
  fontWeightLight: 300,
  fontWeightMedium: 500,
  fontWeightRegular: 400,
  headline1: {
    fontSize: "1.5rem",
    fontWeight: 400,
    lineHeight: "32px"
  },
  headline2: {
    fontSize: "1.5rem",
    fontWeight: 700,
    lineHeight: "32px"
  },
  htmlFontSize: 16,
  subheading1: {
    fontSize: "1rem",
    fontWeight: 400,
    lineHeight: "24px"
  },
  subheading2: {
    fontSize: "1rem",
    fontWeight: 700,
    lineHeight: "24px"
  },
  title1: {
    fontSize: "1.25rem",
    fontWeight: 400,
    lineHeight: "28px"
  },
  title2: {
    fontSize: "1.25rem",
    fontWeight: 700,
    lineHeight: "28px"
  }
};
var unit = "4px";
var overrides = {
  MuiPaper: {
    root: {
      backgroundColor: "#282A32",
      color: "#FFFFFF"
    }
  }
};
var rcDark_default3 = {
  breakpoints,
  opacity,
  palette: palette2,
  radius,
  shadows: shadows2,
  typography: typography2,
  unit,
  overrides
};

// src/foundation/theme/ThemeSwitcherProvider/rcHighContrast.json
var breakpoints2 = {
  keys: [
    "xs",
    "sm",
    "md",
    "lg",
    "xl"
  ],
  values: {
    lg: 1280,
    md: 960,
    sm: 641,
    xl: 1920,
    xs: 0
  }
};
var opacity2 = {
  "12": 0.12,
  "16": 0.16,
  "24": 0.24,
  "32": 0.32,
  "40": 0.4,
  "48": 0.48,
  "56": 0.56,
  "64": 0.64,
  "72": 0.72,
  "80": 0.8,
  "88": 0.88,
  "96": 0.96,
  "08": 0.08
};
var overrides2 = {
  MuiPaper: {
    root: {
      backgroundColor: "#000000",
      color: "#FFFFFF"
    },
    elevation1: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation2: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation3: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation4: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation5: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation6: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation7: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation8: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation9: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation10: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation11: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation12: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation13: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation14: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation15: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation16: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation17: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation18: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation19: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation20: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation21: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation22: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation23: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    },
    elevation24: {
      "box-shadow": "0 0 0 1px #FFFFFF"
    }
  }
};
var palette3 = {
  action: {
    grayDark: "#FFFFFF",
    grayLight: "#FFFFFF",
    primary: "#35C6FF"
  },
  avatar: {
    ash: "#FFFFFF",
    blueberry: "#AE9CFF",
    brass: "#EBA800",
    global: "#84CCFF",
    gold: "#FEFF05",
    lake: "#12F7FF",
    oasis: "#00C5BE",
    pear: "#7FFF5D",
    persimmon: "#FF833B",
    sage: "#42FFA0",
    tomato: "#FF827A"
  },
  content: {
    brand: "#35C6FF"
  },
  danger: {
    b01: "#391D19",
    b02: "#49241F",
    b03: "#FF827A",
    b04: "#FF827A",
    f01: "#49241F",
    f02: "#FF827A",
    f11: "#FF827A"
  },
  dialHeader: {
    avatarBg: "#84CCFF",
    avatarIcon: "#FFFFFF",
    bg: "#000000",
    focusBorder: "#35C6FF",
    icon: "#FFFFFF",
    text: "#FFFFFF",
    textHint: "#FFFFFF"
  },
  disabled: {
    b01: "#4D4D4D",
    f01: "#000000",
    f02: "#4D4D4D"
  },
  error: {
    main: "#DD6057"
  },
  header: {
    bgLeft: "#000000",
    bgOverlay: "rgba(255,255,255,0.16)",
    bgOverlayDisabled: "rgba(255,255,255,0.08)",
    bgRight: "#000000",
    border: "#FFFFFF",
    divider: "#FFFFFF",
    fabBg: "#000000",
    fabIcon: "#FFFFFF",
    focusBorder: "#FFFFFF",
    icon: "#FFFFFF",
    iconDisabled: "rgba(255,255,255,0.32)",
    text: "#FFFFFF",
    textHint: "#FFFFFF"
  },
  highContrast: "#FFFFFF",
  highlight: {
    b01: "#FFFFFF",
    b02: "#3E2A19",
    b03: "#884C12",
    f01: "#FFA43B",
    f02: "#FFA43B"
  },
  info: {
    main: "#FFFFFF"
  },
  informative: {
    b01: "#000000",
    f01: "#222E49",
    f02: "#35C6FF"
  },
  interactive: {
    b01: "#29334C",
    b02: "#35C6FF",
    f01: "#35C6FF"
  },
  label: {
    black02: "#FFFFFF",
    blue01: "#35C6FF",
    blue02: "#35C6FF",
    green01: "#7FFF5D",
    green02: "#7FFF5D",
    orange01: "#FFA43B",
    orange02: "#FFA43B",
    purple01: "#AE9CFF",
    purple02: "#AE9CFF",
    red01: "#FF827A",
    red02: "#FF827A",
    teal01: "#12F7FF",
    teal02: "#12F7FF",
    yellow01: "#FEFF05",
    yellow02: "#FEFF05"
  },
  nav: {
    b01: "#000000",
    b02: "#000000",
    bookmark: "#35C6FF",
    ctlDefault: "#FFFFFF",
    ctlSelected: "#35C6FF",
    f01: "#FFFFFF",
    f02: "#FFFFFF",
    f03: "#FFFFFF",
    f04: "#FFFFFF",
    iconDefault: "#FFFFFF",
    iconSelected: "#35C6FF",
    line: "#FFFFFF",
    mention: "#FFA43B",
    menuBg: "#35C6FF",
    menuText: "#000000"
  },
  neutral: {
    b01: "#000000",
    b02: "#000000",
    b03: "#000000",
    b04: "#FFFFFF",
    b05: "#FFFFFF",
    b06: "#000000",
    elevation: "#000000",
    f01: "#000000",
    f02: "#808080",
    f03: "#FFFFFF",
    f04: "#FFFFFF",
    f05: "#FFFFFF",
    f06: "#FFFFFF",
    f07: "#000000",
    f11: "#FFFFFF",
    l01: "#000000",
    l02: "#FFFFFF",
    l03: "#FFFFFF",
    l04: "#FFFFFF",
    transparent: "transparent"
  },
  presence: {
    available: "#7FFF5D",
    busy: "#FF827A",
    invisible: "#808080"
  },
  primary: {
    main: "#35C6FF"
  },
  secondary: {
    main: "#884C12"
  },
  subAction: "#35C6FF",
  success: {
    b01: "#1C281B",
    b02: "#223221",
    b03: "#7FFF5D",
    b04: "#7FFF5D",
    b05: "#FFFFFF",
    f01: "#223221",
    f02: "#7FFF5D",
    f11: "#7FFF5D",
    main: "#3D9A4A"
  },
  tab: {
    default: "#FFFFFF",
    selected: "#35C6FF"
  },
  type: "dark",
  umi: {
    bg: "#FFFFFF",
    mentioned: "#FFA43B",
    text: "#000000"
  },
  vDanger: {
    f01: "#DD6057"
  },
  vDisabled: {
    f01: "#54565E"
  },
  vNeutral: {
    b01: "#1e2027",
    b02: "#282A32",
    b03: "#30323A",
    b04: "#383A43",
    f01: "#FFFFFF"
  },
  warning: {
    b01: "#2B2416",
    b02: "#373D1B",
    b03: "#FEFF05",
    f01: "#FEFF05",
    f02: "#FEFF05",
    f11: "#FEFF05",
    main: "#74561D"
  }
};
var radius2 = {
  circle: "50%",
  lg: "4px",
  md: "3px",
  round: "100vw",
  sm: "2px",
  xl: "8px",
  xxl: "16px",
  zero: "0px"
};
var shadows3 = [
  "none",
  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"
];
var typography3 = {
  body1: {
    fontSize: "0.9375rem",
    fontWeight: 400,
    lineHeight: "22px"
  },
  body2: {
    fontSize: "0.9375rem",
    fontWeight: 700,
    lineHeight: "22px"
  },
  button: {
    fontSize: "0.9375rem",
    fontWeight: 700,
    lineHeight: "20px",
    textTransform: "none"
  },
  caption1: {
    fontSize: "0.75rem",
    fontWeight: 400,
    lineHeight: "16px"
  },
  caption2: {
    fontSize: "0.75rem",
    fontWeight: 700,
    lineHeight: "16px"
  },
  codeFontFamily: "Courier",
  display1: {
    fontSize: "2.125rem",
    fontWeight: 400,
    lineHeight: "40px"
  },
  display2: {
    fontSize: "2.8125rem",
    fontWeight: 400,
    lineHeight: "56px"
  },
  display3: {
    fontSize: "3.5rem",
    fontWeight: 700,
    lineHeight: "72px"
  },
  display4: {
    fontSize: "6rem",
    fontWeight: 700,
    lineHeight: "112px"
  },
  fontFamily: "Lato, Helvetica, Arial, sans-serif",
  fontSize: 14,
  fontWeightBold: 700,
  fontWeightLight: 300,
  fontWeightMedium: 500,
  fontWeightRegular: 400,
  headline1: {
    fontSize: "1.5rem",
    fontWeight: 400,
    lineHeight: "32px"
  },
  headline2: {
    fontSize: "1.5rem",
    fontWeight: 700,
    lineHeight: "32px"
  },
  htmlFontSize: 16,
  subheading1: {
    fontSize: "1rem",
    fontWeight: 400,
    lineHeight: "24px"
  },
  subheading2: {
    fontSize: "1rem",
    fontWeight: 700,
    lineHeight: "24px"
  },
  title1: {
    fontSize: "1.25rem",
    fontWeight: 400,
    lineHeight: "28px"
  },
  title2: {
    fontSize: "1.25rem",
    fontWeight: 700,
    lineHeight: "28px"
  }
};
var unit2 = "4px";
var rcHighContrast_default3 = {
  breakpoints: breakpoints2,
  opacity: opacity2,
  overrides: overrides2,
  palette: palette3,
  radius: radius2,
  shadows: shadows3,
  typography: typography3,
  unit: unit2
};

// src/foundation/theme/ThemeSwitcherProvider/ThemeSwitcherProvider.tsx
var RcDefaultDarkTheme = rcDark_default3;
var RcDefaultHighContrastTheme = rcHighContrast_default3;
var RcThemeSwitcherDefaultTheme = {
  defaultTheme: "light",
  themeMap: {
    light: {}
  }
};
var RcThemeSwitcherProvider = ({
  children: children2,
  defaultTheme: defaultTheme2 = RcThemeSwitcherDefaultTheme.defaultTheme,
  themeMap = RcThemeSwitcherDefaultTheme.themeMap
}) => {
  const [currentTheme, setTheme] = useState21(defaultTheme2);
  return /* @__PURE__ */ React553.createElement(RcThemeContext.Provider, {
    value: {
      defaultTheme: defaultTheme2,
      themeMap,
      theme: currentTheme,
      setTheme
    }
  }, /* @__PURE__ */ React553.createElement(RcThemeContext.Consumer, null, ({ theme, themeMap: themeMap2 }) => {
    Object.keys(themeMap2).forEach((key) => {
      document.body.removeAttribute(key);
    });
    document.body.setAttribute(theme, "");
    if (isValidElement16(children2)) {
      const _children = React553.cloneElement(children2, {
        theme: themeMap2[theme]
      });
      return _children;
    }
    throw new Error("RcThemeSwitcherProvider can only have one children with theme props");
  }));
};

// src/foundation/theme/ThemeSwitcherProvider/useThemeSwitcher.ts
import { useContext as useContext13 } from "react";
var useThemeSwitcher = () => {
  const context = useContext13(RcThemeContext);
  if (!context) {
    throw new Error("To use `useThemeSwitcher`, component must be within a RcThemeSwitcherProvider");
  }
  return context;
};

// src/foundation/theme/useThemeProps.ts
function useThemeProps({
  props,
  name
}) {
  const theme = RcUseTheme();
  return combineProps(theme.props?.[name], props);
}

// src/foundation/styles/GlobalScrollBarStyle/GlobalScrollBarStyle.tsx
var scrollBarColor = "rgba(80,80,80,0.7)";
var RcGlobalScrollBarStyle = createGlobalStyle`
  /*  Firefox-only */
  * {
    scrollbar-color: ${scrollBarColor} transparent;
  }
  /*
  /* Works on Chrome/Edge/Safari */
  ::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  };

  ::-webkit-scrollbar-track {
    background-color: transparent;
  };

  ::-webkit-scrollbar-thumb {
    background-color: ${scrollBarColor};
    border-radius: 10px;
  };
`;

// src/foundation/styles/opacity.ts
function opacity3(name, reverse) {
  return ({ theme }) => {
    const value = theme.opacity[name];
    if (reverse) {
      return 1 - value;
    }
    return value;
  };
}
function doAlpha(color2, opacity4, theme) {
  const alpha2 = String(opacity4).indexOf(".") > -1 ? opacity4 : theme.palette.action.hoverOpacity * opacity4;
  try {
    return alpha(color2, +alpha2.toFixed(2));
  } catch (error4) {
    logInDev({
      component: "setOpacity",
      message: "your color pass into setOpacity is error color, check your color again, please"
    });
    return color2;
  }
}

// src/foundation/styles/newPalette.ts
function palette22(category, ...keys3) {
  return getPaletteColor(category, ...keys3);
}
function getPaletteColor(...args) {
  const [category, ...keys3] = args;
  return ({ theme }) => {
    const colorMap3 = theme.palette[category];
    if (!colorMap3) {
      return category;
    }
    if (typeof colorMap3 === "string") {
      return colorMap3;
    }
    return keys3.reduce((acc, curr, i2) => {
      if (i2 === keys3.length - 1) {
        if (typeof curr === "number") {
          return doAlpha(acc, curr, theme);
        }
      }
      return acc == null ? "" : acc[curr];
    }, colorMap3);
  };
}
function getParsePaletteColor(color2, defaultColor, useMain = true) {
  const args = parseColor(color2, defaultColor, useMain);
  if (!args) {
    return () => null;
  }
  if (typeof args === "string") {
    return () => args;
  }
  if (typeof args === "function") {
    return args;
  }
  return getPaletteColor(...args);
}

// src/foundation/styles/colorManipulator.ts
function darken2(colorInput, coefficient) {
  return (props) => {
    const color2 = typeof colorInput === "function" ? colorInput(props) : colorInput;
    return darken(color2, coefficient);
  };
}
function lighten2(colorInput, coefficient) {
  return (props) => {
    const color2 = typeof colorInput === "function" ? colorInput(props) : colorInput;
    return lighten(color2, coefficient);
  };
}
var getContrastBgColor = ({ theme, color: color2 }) => {
  const currColor = getParsePaletteColor(color2);
  return [
    currColor,
    theme.palette.type === "light" ? lighten2(currColor, 0.62) : darken2(currColor, 0.5)
  ];
};

// src/foundation/styles/ellipsis.ts
function ellipsis() {
  return css2`
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  `;
}

// src/foundation/styles/radius.ts
function radius3(name) {
  return ({ theme }) => {
    return theme.radius[name];
  };
}

// src/foundation/styles/focusVisible.ts
var focusVisible = "&.focus-visible, &[data-focus-visible-added]";
var focusWithin = "&:hover, &:focus-within";
var focusVisibleColor = palette22("interactive", "f01");
var shadowBorder = (r2 = "zero", color2 = focusVisibleColor, inset = true, size = 1) => css2`
  &:after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    box-shadow: ${inset ? "inset" : ""} 0 0 0 ${size}px ${color2};
    border-radius: ${radius3(r2)};
    pointer-events: none;
  }
`;
var focusVisibleShadowStyle = (r2, color2) => css2`
  ${focusVisible} {
    ${shadowBorder(r2, color2)};
  }
`;

// src/foundation/styles/fakeBorder.ts
var fakeBorder = ({
  pseudo,
  inset = true,
  radius: radius4,
  size = 1,
  color: color2 = palette22("highContrast"),
  allowTransparent
} = {}) => {
  return ({ theme }) => {
    const colorValue = typeof color2 === "function" && theme ? color2({ theme }) : color2;
    if (!allowTransparent && colorValue === "transparent")
      return;
    if (pseudo) {
      return shadowBorder(radius4, colorValue, inset, size);
    }
    return css2`
      box-shadow: ${inset ? "inset" : ""} 0 0 0 ${size}px ${colorValue};
    `;
  };
};

// src/foundation/styles/flexCenter.ts
var flexCenterStyle = css2`
  display: flex;
  justify-content: center;
  align-items: center;
`;

// src/foundation/styles/flexWidth.ts
var flexWidth = (width2) => css2`
  flex: 1 1 ${width2};

  ${width2 !== "auto" ? css2`
        max-width: ${width2};
        min-width: ${width2};
      ` : css2`
        max-width: unset;
        min-width: unset;
      `}
`;

// src/foundation/styles/px.ts
function px2(...values6) {
  return values6.map((n2) => `${n2}px`).join(" ");
}

// src/foundation/styles/lineClamp.ts
function lineClamp(lineNumber, maxHeight2) {
  return css2`
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: ${lineNumber};
    -webkit-box-orient: vertical;
    max-height: ${px2(maxHeight2)};
    word-break: break-word;
  `;
}

// src/foundation/styles/nonStyleButton.ts
function nonStyleButton() {
  return css2`
    background: none;
    color: inherit;
    border: none;
    padding: 0;
    font: inherit;
    cursor: pointer;
    outline: inherit;
  `;
}

// src/foundation/styles/nonTouchHoverMedia.ts
var nonTouchHoverMedia = "@media (hover: hover) and (pointer: fine)";

// src/foundation/styles/palette.ts
var import_get = __toModule(require_get());
function palette4(name, sub = "", opacity4) {
  return ({ theme }) => {
    const subArr = sub.toString().split(".");
    let color2 = sub ? theme.palette[name][sub] : theme.palette[name];
    if (subArr.length > 1) {
      color2 = (0, import_get.default)(theme.palette[name], sub);
    }
    if (!opacity4) {
      return color2;
    }
    return doAlpha(color2, opacity4, theme);
  };
}
function setAlpha(colorFn, opacity4) {
  return ({ theme }) => {
    return doAlpha(colorFn({ theme }), opacity4, theme);
  };
}
function setOpacity(colorFn, opacityName, reverse = false) {
  return (props) => {
    const { theme } = props;
    const currentOpacity = theme.opacity[opacityName];
    return doAlpha(colorFn(props), reverse ? 1 - currentOpacity : currentOpacity, theme);
  };
}
function lightAlpha(colorFn, unit3) {
  return ({ theme }) => {
    return setAlpha(colorFn, 1 - theme.palette.action.hoverOpacity * unit3)({ theme });
  };
}

// src/foundation/styles/paletteContrastText.ts
function paletteContrastText(colorFn) {
  return ({ theme }) => {
    return theme.palette.getContrastText(colorFn({ theme }));
  };
}

// src/foundation/styles/rippleEnter.ts
var rippleEnter = (theme) => keyframes`
  from {
    transform: scale(0);
    opacity: 0.1;
  }
  to {
    transform: scale(1);
    opacity: ${theme.palette.action.hoverOpacity * 2};
  }
`;

// src/foundation/styles/rippleStyle.ts
var backgroundTransition = ({ theme }) => theme.transitions.create(["background"], {
  easing: theme.transitions.easing.easeInOut,
  duration: theme.transitions.duration.shortest
});
var rippleStyle = css2`
  position: relative;
  overflow: hidden;
  transform: translate3d(0, 0, 0);
  transition: ${backgroundTransition};

  &:after {
    content: '';
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    background-image: radial-gradient(
      circle,
      ${palette22("neutral", "b06")} 10%,
      transparent 10.01%
    );
    background-repeat: no-repeat;
    background-position: 50%;
    transform: scale(10, 10);
    opacity: 0;
    transition: transform 0.5s ease-out, opacity 0.6s ease-in;
  }

  &:active:after {
    transform: scale(0, 0);
    opacity: 0.1;
    transition: 0s;
  }
`;

// src/foundation/styles/shadows.ts
function shadows4(elevation) {
  return ({ theme }) => {
    return theme.shadows[elevation];
  };
}

// src/foundation/styles/spacing.ts
function spacing2(...values6) {
  return ({ theme }) => {
    const unit3 = theme.spacing(1);
    return px2(...values6.map((n2) => n2 * unit3));
  };
}
function toSpacing(value) {
  return value / 4;
}
function spacingUnit(values6) {
  return ({ theme }) => {
    const unit3 = theme.spacing(1);
    return values6 * unit3;
  };
}

// src/foundation/styles/typography.ts
function typographyProp(name, key) {
  if (name === "inherit") {
    return void 0;
  }
  return ({ theme }) => {
    const themeOfTypography = theme.typography[name];
    if (typeof themeOfTypography !== "object") {
      throw new Error(`Unexpected typography name: ${name}`);
    }
    return themeOfTypography[key];
  };
}
function typography4(name, fontOnly = false) {
  const fontCss = css2`
    font-size: ${typographyProp(name, "fontSize")};
    font-weight: ${typographyProp(name, "fontWeight")};
    font-family: ${({ theme }) => theme.typography["fontFamily"]};
  `;
  return fontOnly ? fontCss : css2`
        ${fontCss};
        line-height: ${typographyProp(name, "lineHeight")};
      `;
}

// src/foundation/styles/zIndex.ts
function zIndex3(name) {
  return ({ theme }) => {
    return theme.zIndex[name];
  };
}

// src/components/Accordion/utils/AccordionUtils.ts
var RcAccordionClasses = RcClasses(["expanded", "root"], "RcAccordion");

// src/components/Accordion/styles/AccordionStyle.tsx
var AccordionStyleBetweenClassName = [
  `&.${RcAccordionClasses.root} + &.${RcAccordionClasses.expanded}`,
  `&.${RcAccordionClasses.expanded} + &.${RcAccordionClasses.root}`
].join(",");
var AccordionStyle = () => {
  return css2`
    box-shadow: none;

    &:before {
      display: none;
    }

    &.${RcAccordionClasses.root} + &.${RcAccordionClasses.root} {
      border-top: 1px solid ${palette22("neutral", "l02")};
    }

    ${AccordionStyleBetweenClassName} {
      margin-top: ${spacing2(4)};
      border-top: 0;
    }

    &.${RcAccordionClasses.expanded} {
      box-shadow: ${shadows4(2)};
      margin: 0;
    }
  `;
};

// src/components/Accordion/Accordion.tsx
var _RcAccordion = forwardRef499((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcAccordion" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo6(() => combineClasses(RcAccordionClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React554.createElement(Accordion_default, {
    square: true,
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcAccordion = styled_components_default(_RcAccordion)`
  ${AccordionStyle}
`;
RcAccordion.defaultProps = {};
RcAccordion.displayName = "RcAccordion";

// src/components/Accordion/AccordionSummary/AccordionSummary.tsx
import React562, { forwardRef as forwardRef507, useMemo as useMemo10 } from "react";

// src/components/Buttons/IconButton/IconButton.tsx
import React561, { forwardRef as forwardRef506, memo as memo411 } from "react";

// src/components/Icon/Icon.tsx
import React558, {
  forwardRef as forwardRef503,
  memo as memo410
} from "react";

// src/components/Progress/CircularProgress/CircularProgress.tsx
import React555, { forwardRef as forwardRef500, useMemo as useMemo7 } from "react";

// src/components/Progress/CircularProgress/styles/CircularProgressStyle.tsx
var CircularProgressStyle = (props) => {
  const { color: color2 } = props;
  const currColor = getParsePaletteColor(color2);
  return css2`
    color: ${currColor};
  `;
};

// src/components/Progress/CircularProgress/utils/CircularProgressUtils.ts
var RcCircularProgressClasses = RcClasses([], "RcCircularProgress");

// src/components/Progress/CircularProgress/CircularProgress.tsx
var _RcCircularProgress = forwardRef500((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCircularProgress" });
  const { classes: classesProp, color: color2, ...rest } = props;
  const classes = useMemo7(() => combineClasses(RcCircularProgressClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React555.createElement(CircularProgress_default, {
    ...rest,
    color: "inherit",
    ref: ref2,
    classes
  });
});
var RcCircularProgress = styled_components_default(_RcCircularProgress)`
  ${CircularProgressStyle}
`;
RcCircularProgress.defaultProps = {
  size: 24,
  color: "interactive.f01"
};
RcCircularProgress.displayName = "RcCircularProgress";

// src/components/Progress/LinearProgress/LinearProgress.tsx
import React556, { forwardRef as forwardRef501, useMemo as useMemo8 } from "react";

// src/components/Progress/LinearProgress/utils/LinearProgressUtils.ts
var RcLinearProgressClasses = RcClasses(["buffer", "colorPrimary", "barColorPrimary", "dashedColorPrimary"], "RcLinearProgress");

// src/components/Progress/LinearProgress/styles/LinearProgressStyle.tsx
var LinearProgressStyle = (props) => {
  const [currColor, contrastBgColor] = getContrastBgColor(props);
  return css2`
    &:not(.${RcLinearProgressClasses.buffer}),
    .${RcLinearProgressClasses.colorPrimary} {
      background-color: ${contrastBgColor};
    }

    .${RcLinearProgressClasses.barColorPrimary} {
      background-color: ${currColor};
    }

    .${RcLinearProgressClasses.dashedColorPrimary} {
      background-image: radial-gradient(
        ${contrastBgColor} 0%,
        ${contrastBgColor} 16%,
        transparent 42%
      );
    }
  `;
};

// src/components/Progress/LinearProgress/LinearProgress.tsx
var _RcLinearProgress = forwardRef501((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcLinearProgress" });
  const { classes: classesProp, color: color2, ...rest } = props;
  const classes = useMemo8(() => combineClasses(RcLinearProgressClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React556.createElement(LinearProgress_default, {
    ...rest,
    ref: ref2,
    classes
  });
});
var RcLinearProgress = styled_components_default(_RcLinearProgress)`
  ${LinearProgressStyle}
`;
RcLinearProgress.defaultProps = {
  color: "interactive.f01"
};
RcLinearProgress.displayName = "RcLinearProgress";

// src/components/Icon/utils/IconUtils.tsx
var RcIconSizes = {
  xxxlarge: 36,
  xxlarge: 32,
  xlarge: 28,
  large: 24,
  medium: 20,
  small: 16,
  xsmall: 12,
  inherit: "inherit"
};
function switchSize(size) {
  switch (size) {
    case "extraSmall":
      logInDev({
        component: "RcIcon",
        message: "please change extraSmall to xsmall"
      });
      return "xsmall";
    case "moreLarge":
      logInDev({
        component: "RcIcon",
        message: "please change moreLarge to xlarge"
      });
      return "xlarge";
    case "mediumLarge":
      logInDev({
        component: "RcIcon",
        message: "please change mediumLarge to xxlarge"
      });
      return "xxlarge";
    case "extraLarge":
      logInDev({
        component: "RcIcon",
        message: "please change extraLarge to xxxlarge"
      });
      return "xxxlarge";
    default:
      return size;
  }
}

// src/components/Icon/styles/IconStyle.tsx
var IconStyle = (props) => {
  const {
    onClick,
    size: sizeProp,
    color: color2,
    iconColor: iconColorProp,
    iconSize
  } = props;
  const size = switchSize(iconSize || sizeProp);
  const currentSize = RcIconSizes[size];
  const fontSize3 = typeof currentSize === "number" ? px2(currentSize) : currentSize;
  const iconColor2 = getParsePaletteColor(color2 || iconColorProp, null);
  return css2`
    display: inline-flex;
    cursor: ${onClick && "pointer"};
    font-size: ${fontSize3};
    color: ${iconColor2};
  `;
};

// src/components/Icon/styles/iconSvg.tsx
import React557, { forwardRef as forwardRef502 } from "react";
var _StyledSvg = forwardRef502(({ children: children2, ...props }, ref2) => {
  return React557.cloneElement(children2, { ref: ref2, ...props });
});
var StyledSvg = styled_components_default(_StyledSvg)`
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
`;

// src/components/Icon/utils/IconService.ts
import { useEffect as useEffect41, useState as useState22 } from "react";
var _RcIconService = class {
  static getInstance() {
    if (!_RcIconService.instance) {
      _RcIconService.instance = new _RcIconService();
    }
    return _RcIconService.instance;
  }
  static setInstance(icons) {
    const _icon = _RcIconService.getInstance();
    _icon.setIconMap(icons);
    return _icon;
  }
  _iconMap;
  _iconMapChangeListeners = [];
  setIconMap(iconMap) {
    if (iconMap === this._iconMap)
      return;
    this._iconMap = iconMap;
    this._iconMapChangeListeners.forEach((listener) => listener(iconMap));
  }
  getIconMap() {
    return this._iconMap;
  }
  onIconMapChange(listener) {
    this._iconMapChangeListeners.push(listener);
  }
  offIconMapChange(listener) {
    this._iconMapChangeListeners = this._iconMapChangeListeners.filter((item) => item !== listener);
  }
};
var RcIconService = _RcIconService;
__publicField(RcIconService, "instance");
function useIconService() {
  const iconService = RcIconService.getInstance();
  const [iconMap, setIconMap] = useState22(iconService.getIconMap());
  useEffect41(() => {
    iconService.onIconMapChange(setIconMap);
    return () => {
      iconService.offIconMapChange(setIconMap);
    };
  }, [iconService]);
  return { iconMap };
}

// src/components/Icon/Icon.tsx
var _RcIcon = memo410(forwardRef503((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcIcon" });
  const {
    loadingSize,
    useLoading,
    iconColor: iconColor2,
    iconSize,
    icon,
    desc,
    className,
    loading = useLoading,
    CircularProgressProps,
    symbol,
    children: children2,
    color: color2,
    size,
    ...rest
  } = props;
  const { iconMap = {} } = useIconService();
  let href = "";
  let Icon = null;
  let iconName = "";
  let renderDom;
  if (symbol) {
    if (typeof symbol === "object" && symbol.id) {
      href = `#${symbol.id}`;
      iconName = `${symbol.id}`;
    } else {
      Icon = symbol;
      renderDom = /* @__PURE__ */ React558.createElement(Icon, null);
      iconName = symbol["iconName"];
    }
  } else if (typeof children2 === "string" || icon) {
    const childrenIconKey = children2 && children2.toString() || icon || "";
    Icon = iconMap[childrenIconKey];
    iconName = childrenIconKey;
    if (Icon) {
      renderDom = /* @__PURE__ */ React558.createElement(Icon, null);
    }
  } else {
    renderDom = children2;
  }
  const _className = clsx_m_default(className, iconName, "icon");
  if (loading) {
    const progressSize = RcIconSizes[size];
    return /* @__PURE__ */ React558.createElement(RcCircularProgress, {
      size: loadingSize || typeof progressSize === "string" ? "1em" : progressSize,
      ref: ref2,
      ...CircularProgressProps
    });
  }
  return /* @__PURE__ */ React558.createElement("span", {
    className: _className,
    ...rest,
    ref: ref2
  }, renderDom && /* @__PURE__ */ React558.createElement(StyledSvg, null, renderDom), href && /* @__PURE__ */ React558.createElement(StyledSvg, null, /* @__PURE__ */ React558.createElement("svg", {
    role: "img"
  }, !!desc && /* @__PURE__ */ React558.createElement("title", null, desc), /* @__PURE__ */ React558.createElement("use", {
    xlinkHref: href,
    href
  }))));
}));
var RcIcon = styled_components_default(withDeprecatedCheck(_RcIcon, [
  {
    prop: "icon",
    time: "2021-1",
    comment: "please use symbol to replace icon"
  },
  {
    prop: "children",
    time: "2021-1",
    comment: "please use symbol to replace children"
  },
  {
    prop: "iconSize",
    time: "2021-1",
    comment: "please use size"
  },
  {
    prop: "iconColor",
    time: "2021-1",
    comment: "please use color"
  },
  {
    prop: "useLoading",
    time: "2021-1",
    comment: "please use loading"
  },
  {
    prop: "loadingSize",
    time: "2021-1",
    comment: "please use CircularProgressProps={{ size: 24 }} to set custom loading size"
  },
  {
    prop: "desc",
    time: "2021-1",
    comment: "please use symbol"
  }
], "RcIcon"))`
  ${IconStyle}
`;
RcIcon.defaultProps = {
  size: "large"
};
RcIcon.displayName = "RcIcon";

// src/components/Tooltip/Tooltip.tsx
import React559, {
  forwardRef as forwardRef504,
  useLayoutEffect as useLayoutEffect12,
  useMemo as useMemo9,
  useRef as useRef50,
  useState as useState23
} from "react";

// src/components/Tooltip/styles/Mask.tsx
var Mask = styled_components_default.span`
  display: inline-block;
  outline: none;
`;

// src/components/Tooltip/utils/TooltipUtils.ts
var RcTooltipClasses = RcClasses([
  "popper",
  "tooltip",
  "arrow",
  "tooltipPlacementBottom",
  "tooltipPlacementLeft",
  "tooltipPlacementRight",
  "tooltipPlacementTop"
], "RcTooltip");
var RcTooltipTypography = {
  medium: typography4("caption1"),
  large: typography4("body1"),
  xlarge: typography4("body1")
};
var RcTooltipSpace = {
  medium: spacing2(2),
  large: spacing2(3),
  xlarge: spacing2(3)
};
var RcTooltipPadding = {
  medium: spacing2(1, 2),
  large: spacing2(1, 2),
  xlarge: spacing2(3, 3)
};

// src/components/Tooltip/utils/useTooltipForceHide.ts
import { useRef as useRef49 } from "react";
var useTooltipForceHide = ({
  tooltipForceHide,
  open: openProp,
  onClose,
  onOpen,
  ref: ref2
}) => {
  const [openRef, setOpen] = useRefState(false);
  const isOverRef = useRef49(false);
  let openState = tooltipForceHide ? false : openProp ?? openRef.current;
  const prevOpenState = usePrevious(() => openState);
  useChange(() => {
    if (tooltipForceHide === false && isOverRef.current === true) {
      openState = openProp ?? true;
    }
    if (tooltipForceHide && prevOpenState) {
      setOpen(false, false);
      onClose?.({});
    } else if (openState) {
      setOpen(true, false);
      onOpen?.({});
    }
  }, () => tooltipForceHide);
  useEventListener(ref2, "mouseover", () => isOverRef.current = true);
  const leaveFn = () => isOverRef.current = false;
  useEventListener(ref2, "mouseleave", leaveFn);
  useEventListener(ref2, "blur", leaveFn);
  const handleOpen = useEventCallback2((event) => {
    setOpen(true);
    onOpen?.(event);
  });
  const handleClose = useEventCallback2((event) => {
    setOpen(false);
    onClose?.(event);
  });
  return tooltipForceHide !== void 0 ? {
    disableFocusListener: tooltipForceHide,
    disableHoverListener: tooltipForceHide,
    disableTouchListener: tooltipForceHide,
    open: openState,
    onOpen: handleOpen,
    onClose: handleClose
  } : void 0;
};

// src/components/Tooltip/styles/StyledTooltip.tsx
var tooltipTypography = ({ size }) => RcTooltipTypography[size];
var placementSpace = ({ size }) => RcTooltipSpace[size];
var tooltipPadding = ({ size }) => RcTooltipPadding[size];
var tooltipColor = ({ color: color2 }) => getParsePaletteColor(color2);
var tooltipTextColor = ({ textColor: textColor4 }) => getParsePaletteColor(textColor4);
var arrowSize = {
  vertical: css2`
    height: 0.4em;
    width: 0.6em;
  `,
  horizontal: css2`
    height: 0.6em;
    width: 0.4em;
  `
};
var marginOffset = "-0.4em";
var horizontalMarginTopAndMarginBottom = css2`
  margin-top: 3px;
  margin-bottom: 3px;
`;
var tooltipStyle = () => {
  return css2`
    .${RcTooltipClasses.tooltip} {
      ${tooltipTypography};
      background-color: ${tooltipColor};
      color: ${tooltipTextColor};
      padding: ${tooltipPadding};
      word-break: break-word;
      position: relative;
    }

    .${RcTooltipClasses.tooltipPlacementTop},
      .${RcTooltipClasses.tooltipPlacementBottom} {
      margin: ${placementSpace} 0;
    }

    .${RcTooltipClasses.tooltipPlacementRight},
      .${RcTooltipClasses.tooltipPlacementLeft} {
      margin: 0 ${placementSpace};
    }

    .${RcTooltipClasses.arrow} {
      color: ${tooltipColor};
    }

    .${RcTooltipClasses.tooltipPlacementTop} {
      .${RcTooltipClasses.arrow} {
        margin-bottom: ${marginOffset};
        ${arrowSize.vertical}
      }
    }

    .${RcTooltipClasses.tooltipPlacementBottom} {
      .${RcTooltipClasses.arrow} {
        margin-top: ${marginOffset};
        ${arrowSize.vertical}
      }
    }

    .${RcTooltipClasses.tooltipPlacementLeft} {
      .${RcTooltipClasses.arrow} {
        margin-right: ${marginOffset};
        ${arrowSize.horizontal}
        ${horizontalMarginTopAndMarginBottom}
      }
    }

    .${RcTooltipClasses.tooltipPlacementRight} {
      .${RcTooltipClasses.arrow} {
        margin-left: ${marginOffset};
        ${arrowSize.horizontal}
        ${horizontalMarginTopAndMarginBottom}
      }
    }
  `;
};

// src/components/Tooltip/Tooltip.tsx
var _RcTooltip = forwardRef504((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTooltip" });
  const {
    children: children2,
    tooltipForceHide,
    open: openProp,
    onOpen,
    onClose,
    className: classNameProp,
    classes: classesProp,
    PopperProps: PopperPropsProp,
    textColor: textColor4,
    color: color2,
    ignorePointer,
    size,
    maskProps,
    title,
    injectGlobalStyle,
    ...rest
  } = props;
  const { externalWindow } = useRcPortalWindowContext();
  const [isDisabledButton, setIsDisabledButton] = useState23(false);
  const innerRef = useRef50(null);
  const tooltipRef = useForkRef2(ref2, innerRef);
  const classes = useMemo9(() => combineClasses(combineClasses({ popper: classNameProp }, RcTooltipClasses), classesProp), [classNameProp, classesProp]);
  const PopperProps = useMemo9(() => combineProps({
    container: externalWindow?.document.body
  }, PopperPropsProp), [PopperPropsProp, externalWindow?.document.body]);
  const forceHideAdditionProps = useTooltipForceHide({
    ref: innerRef,
    tooltipForceHide,
    open: openProp,
    onClose,
    onOpen
  });
  const additionProp = forceHideAdditionProps ?? {
    open: openProp,
    onOpen,
    onClose
  };
  useLayoutEffect12(() => {
    const childNode = innerRef.current;
    if (isDisabledButton && childNode && childNode.tagName.toLowerCase() === "button" && childNode.disabled) {
      setIsDisabledButton(true);
      logInDev({
        component: "RcTooltip",
        message: "You have set a tooltip on disabled button, A disabled element does not fire events."
      });
    } else if (isDisabledButton) {
      setIsDisabledButton(false);
    }
  });
  return /* @__PURE__ */ React559.createElement(Tooltip_default, {
    ref: tooltipRef,
    title: isDisabledButton ? "" : title,
    arrow: true,
    classes,
    PopperProps,
    ...additionProp,
    ...rest
  }, ignorePointer ? /* @__PURE__ */ React559.createElement(Mask, {
    ...maskProps
  }, children2) : children2);
});
var RcTooltip = styled_components_default(withDeprecatedCheck(_RcTooltip, [
  {
    prop: "injectGlobalStyle",
    time: "2021-3",
    comment: `@deprecated now need anymore */`
  }
], "RcTooltip"))`
  ${tooltipStyle};
`;
RcTooltip.defaultProps = {
  placement: "bottom",
  color: "neutral.b04",
  textColor: "neutral.f01",
  size: "large"
};
RcTooltip.displayName = "RcTooltip";

// src/components/Tooltip/withTooltip/withTooltip.tsx
import React560, { forwardRef as forwardRef505 } from "react";
function withTooltip(Component7) {
  return forwardRef505((props, ref2) => {
    const { title, useRcTooltip, TooltipProps, ...rest } = props;
    if (title && useRcTooltip) {
      return /* @__PURE__ */ React560.createElement(RcTooltip, {
        title,
        ...TooltipProps
      }, /* @__PURE__ */ React560.createElement(Component7, {
        ...rest,
        ref: ref2
      }));
    }
    return /* @__PURE__ */ React560.createElement(Component7, {
      title,
      ...rest,
      ref: ref2
    });
  });
}

// src/components/Buttons/ButtonBase/ButtonBase.ts
var RcButtonBase = styled_components_default(ButtonBase_default)``;
RcButtonBase.displayName = "RcButtonBase";

// src/components/Buttons/IconButton/deprecated/IconButtonProps.ts
var rcIconButtonWarning = [
  {
    prop: "autoFocus",
    time: "2021-3",
    comment: `@deprecated don't have any logic below, now need anymore */`
  },
  {
    prop: "tooltipTitle",
    time: "2021-3",
    comment: `@deprecated tooltip title for the iconButton
   * please use \`title\`
   */`
  },
  {
    prop: "tooltipPlacement",
    time: "2021-3",
    comment: `@deprecated tooltip placement, default with bottom
   * please use \`TooltipProps\` with \`placement\`
   */`
  },
  {
    prop: "disableToolTip",
    time: "2021-3",
    comment: `@deprecated not use ToolTip, default with false
   * please use \`TooltipProps\` with \`tooltipForceHide\`
   */`
  },
  {
    prop: "popperProps",
    time: "2021-3",
    comment: `@deprecated popperProps for the icon tooltip
   * please use \`TooltipProps\` with \`PopperProps\`
   */`
  },
  {
    prop: "tooltipForceHide",
    time: "2021-3",
    comment: `@deprecated control the tooltip open or not
   * please use \`TooltipProps\` with \`tooltipForceHide\`
   */`
  },
  {
    prop: "externalLink",
    time: "2021-3",
    comment: `@deprecated will make iconButton becomes a link, default with false
   * please write jsx outside by yourself
   * \`\`\`ts
   * <a rel="noopener noreferrer external" target="_blank" href={href}>
   *   <RcIconButton .../>
   * </a>
   * \`\`\`
   */`
  },
  {
    prop: "ariaLabel",
    time: "2021-3",
    comment: `@deprecated ariaLabel, when null using tooltipTitle. use 'aria-label' replace */`
  },
  {
    prop: "download",
    time: "2021-3",
    comment: `@deprecated  make iconButton becomes download button
   * please write jsx by yourself
   * \`\`\`ts
   * <a download href={href} ref={aRef}>
   *   <RcIconButton .../>
   * </a>
   * \`\`\`
   */`
  },
  {
    prop: "buttonRef",
    time: "2021-3",
    comment: `@deprecated ref to the button, please \`ref\` directly */`
  },
  {
    prop: "aRef",
    time: "2021-3",
    comment: `@deprecated when download is true, pass the ref to the link
   * please write jsx by yourself
   * \`\`\`ts
   * <a download href={href} ref={aRef}>
   *   <RcIconButton .../>
   * </a>
   * \`\`\`
   */`
  },
  {
    prop: "href",
    time: "2021-3",
    comment: `@deprecated when externalLink or download is true, the link is available
   * please write jsx by yourself
   * \`\`\`ts
   * <a download href={href} ref={aRef}>
   *   <RcIconButton .../>
   * </a>
   * \`\`\`
   */`
  }
];

// src/components/Buttons/IconButton/utils/IconButtonUtils.tsx
var RcIconButtonClasses = RcClasses(["root", "disabled", "invisible", "outline", "contained", "persistBg"], "RcIconButton");
var RcIconButtonTouchRippleClasses = RcClasses(["ripplePulsate", "child"], "RcIconButtonTouchRipple");
var RcIconButtonSizes = omit3(RcIconSizes, ["inherit"]);
var RcIconButtonFocusVisibleInsetSize = {
  xxxlarge: 7,
  xxlarge: 6,
  xlarge: 6,
  large: 5,
  medium: 4,
  small: 3,
  xsmall: 3
};

// src/components/Buttons/IconButton/styles/StyledIconButton.tsx
var getFocusVisibleInsetSize = ({ size }) => {
  const inset = RcIconButtonFocusVisibleInsetSize[size];
  return css2`
      top: -${inset}px;
      right: -${inset}px;
      bottom: -${inset}px;
      left: -${inset}px;
    `;
};
var childrenClass = `&,${RcIcon}`;
var containedVariantTransitions = ({ theme }) => theme.transitions.create(["background-color", "box-shadow", "border"], {
  duration: theme.transitions.duration.short
});
var plainIconButtonFocusStyle = ({
  radius: radiusProp = "circle"
} = {}) => css2`
  &:after {
    content: '';
    position: absolute;
    ${getFocusVisibleInsetSize};
    box-shadow: 0 0 0 1px ${focusVisibleColor};
    border-radius: ${radius3(radiusProp)};
    pointer-events: none;
    z-index: 1;
  }
`;
var iconButtonStyle = ({
  variant,
  size,
  stretchIcon,
  color: color2,
  disabled: disabled3,
  useColorWhenDisabled,
  shouldPersistBg,
  radius: radiusProp,
  elevation,
  activeElevation
}) => {
  const iconSize = RcIconButtonSizes[size];
  const isCircle = ["plain", "round", "inverse", "contained"].includes(variant);
  const isPlain = variant === "plain";
  const isInverse = variant === "inverse";
  const isOutline = variant === "outline";
  const isContained = variant === "contained";
  const containerSize = px2(isPlain ? iconSize : iconSize * 2);
  const mainColor = getParsePaletteColor(color2);
  const mainColorContrast = paletteContrastText(mainColor);
  const currRadius = radiusProp || (isOutline ? "lg" : isCircle ? "circle" : "zero");
  const persistBgColor = setOpacity(mainColor, isInverse ? "16" : "12");
  const defaultShadow = isContained ? shadows4("1") : void 0;
  const nowShadow = elevation !== void 0 ? shadows4(elevation) : defaultShadow;
  return css2`
    display: inline-flex;
    justify-content: center;
    align-items: center;

    width: ${containerSize};
    height: ${containerSize};
    color: ${mainColor};
    border-radius: ${radius3(currRadius)};
    transition: ${backgroundTransition};
    cursor: ${disabled3 ? "default" : "pointer"};
    background-color: ${(shouldPersistBg || isInverse) && persistBgColor};
    box-shadow: ${nowShadow};

    ${nowShadow && css2`
      transition: ${containedVariantTransitions};

      &:active {
        box-shadow: ${shadows4(activeElevation ?? (elevation ? Math.min(+elevation + 11, 24) : "12"))};
      }
    `};

    ${childrenClass} {
      font-size: ${stretchIcon ? containerSize : px2(isOutline ? iconSize * 1.2 : iconSize)};
    }

    ${nonTouchHoverMedia} {
      &:hover {
        background-color: ${isPlain ? "transparent" : setOpacity(mainColor, isInverse ? "24" : "08")};

        ${childrenClass} {
          color: ${setOpacity(mainColor, "88")};
        }
      }
    }

    &:active {
      ${childrenClass} {
        color: ${mainColor};
      }
    }

    ${focusVisible} {
      background-color: ${isPlain ? "transparent" : setOpacity(mainColor, isInverse ? "32" : "16")};

      &:active {
        ${childrenClass} {
          color: ${setOpacity(mainColor, "88")};
        }
      }

      ${isPlain && plainIconButtonFocusStyle({ radius: currRadius })};
    }

    &.${RcIconButtonClasses.persistBg} {
      background-color: ${persistBgColor};
    }

    &.${RcIconButtonClasses.disabled} {
      ${childrenClass} {
        color: ${useColorWhenDisabled ? setOpacity(mainColor, "32") : palette22("disabled", "f02")};
      }

      background-color: ${isInverse && setOpacity(mainColor, "12")};
    }

    &.${RcIconButtonClasses.invisible} {
      opacity: 0;
      visibility: hidden;
      width: 0;
      height: 0;
    }

    &.${RcIconButtonClasses.outline} {
      border: 1px solid ${palette22("neutral", "l03")};
    }

    &.${RcIconButtonClasses.contained} {
      color: ${mainColorContrast};
      background-color: ${mainColor};

      ${nonTouchHoverMedia} {
        &:hover {
          background-color: ${setOpacity(mainColor, "08", true)};

          ${childrenClass} {
            color: ${mainColorContrast};
          }
        }
      }

      ${focusVisible} {
        background-color: ${setOpacity(mainColor, "16", true)};

        ${childrenClass} {
          color: ${mainColorContrast};
        }
      }

      &:active {
        background-color: ${setOpacity(mainColor, "24", true)};

        ${childrenClass} {
          color: ${mainColorContrast};
        }
      }
    }

    .${RcIconButtonTouchRippleClasses.ripplePulsate} {
      border-radius: 0;
      animation-name: none;
      opacity: 0;
    }

    ${!isPlain && !["circle", "round"].includes(currRadius) && css2`
        .${RcIconButtonTouchRippleClasses.child} {
          transform: scale(1.41421357);
        }
      `}
  `;
};

// src/components/Buttons/IconButton/IconButton.tsx
var _RcIconButton = memo411(forwardRef506((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcIconButton" });
  const {
    buttonRef = ref2,
    className,
    classes,
    children: children2,
    title,
    symbol,
    disabled: disabled3,
    invisible,
    type: type3,
    loading,
    TouchRippleProps,
    variant,
    CircularProgressProps,
    color: color2,
    shouldPersistBg,
    stretchIcon,
    iconColor: iconColor2,
    iconSize,
    disableTouchRipple,
    useColorWhenDisabled,
    size,
    radius: radius4,
    elevation,
    activeElevation,
    aRef,
    tooltipTitle,
    tooltipForceHide,
    disableToolTip,
    alwaysEnableTooltip,
    tooltipPlacement,
    ariaLabel,
    popperProps,
    externalLink,
    download,
    autoFocus,
    href,
    ...rest
  } = props;
  const theme = RcUseTheme();
  const isOutline = variant === "outline";
  const isContained = variant === "contained";
  const isPlain = variant === "plain";
  const IconClassName = clsx_m_default(className, classes.root, RcIconButtonClasses.root, {
    [RcIconButtonClasses.disabled]: disabled3,
    [RcIconButtonClasses.invisible]: invisible,
    [RcIconButtonClasses.outline]: isOutline,
    [RcIconButtonClasses.contained]: isContained
  });
  const iconButton = (() => {
    const icon = React561.isValidElement(children2) || children2 === "" ? children2 : /* @__PURE__ */ React561.createElement(RcIcon, {
      symbol,
      className: classes.icon,
      loading,
      CircularProgressProps
    }, children2);
    const iconButton2 = /* @__PURE__ */ React561.createElement(RcButtonBase, {
      ref: buttonRef,
      disableRipple: theme.props?.MuiButtonBase?.disableRipple || isPlain,
      type: type3,
      disabled: disabled3,
      "aria-label": ariaLabel || tooltipTitle || title,
      title,
      "aria-disabled": disabled3,
      className: IconClassName,
      TouchRippleProps: combineProps({
        classes: RcIconButtonTouchRippleClasses
      }, TouchRippleProps),
      ...rest
    }, icon);
    if (download && href) {
      return /* @__PURE__ */ React561.createElement("a", {
        download: true,
        href,
        ref: aRef
      }, iconButton2);
    }
    if (externalLink && href) {
      return /* @__PURE__ */ React561.createElement("a", {
        rel: "noopener noreferrer external",
        target: "_blank",
        href
      }, iconButton2);
    }
    return iconButton2;
  })();
  if (!!tooltipTitle && (!disabled3 && !disableToolTip || disabled3 && alwaysEnableTooltip)) {
    return /* @__PURE__ */ React561.createElement(RcTooltip, {
      title: tooltipTitle,
      tooltipForceHide,
      placement: tooltipPlacement,
      PopperProps: popperProps
    }, iconButton);
  }
  return iconButton;
}));
var RcIconButton = styled_components_default(withDeprecatedCheck(withTooltip(_RcIconButton), rcIconButtonWarning, "RcIconButton"))`
  ${iconButtonStyle}
`;
RcIconButton.displayName = "RcIconButton";
RcIconButton.defaultProps = {
  variant: "round",
  color: "neutral.f04",
  size: "medium",
  type: "button",
  focusRipple: true,
  disableTouchRipple: true,
  centerRipple: true,
  classes: {},
  useRcTooltip: true
};

// src/components/Accordion/AccordionSummary/utils/AccordionSummaryUtils.ts
var RcAccordionSummaryClasses = RcClasses(["content", "expanded", "expandIcon"], "RcAccordionSummary");

// src/components/Accordion/AccordionSummary/styles/AccordionSummaryStyle.tsx
var AccordionSummaryStyle = () => {
  return css2`
    box-sizing: border-box;
    padding: ${spacing2(0, 4)};

    &.${RcAccordionSummaryClasses.expanded} {
      margin: 0;
      min-height: 48px;
    }

    .${RcAccordionSummaryClasses.content} {
      margin: 0;
      align-items: center;
    }

    ${RcIconButton} {
      position: relative;
      overflow: hidden;
    }

    .${RcAccordionSummaryClasses.expandIcon} {
      margin-right: 0;
      padding: 0;
    }
  `;
};

// src/components/Accordion/AccordionSummary/AccordionSummary.tsx
var defaultIconButtonProps = { disableRipple: true };
var _RcAccordionSummary = forwardRef507((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcAccordionSummary" });
  const {
    classes: classesProp,
    expandIcon: expandIconProp,
    IconButtonProps,
    children: children2,
    ...rest
  } = props;
  const classes = useMemo10(() => combineClasses(RcAccordionSummaryClasses, classesProp), [classesProp]);
  const expandIcon = useMemo10(() => expandIconProp ? /* @__PURE__ */ React562.createElement(RcIconButton, {
    symbol: expandIconProp === true ? ArrowDown2_default : expandIconProp,
    tabIndex: -1,
    ...IconButtonProps
  }) : void 0, [IconButtonProps, expandIconProp]);
  return /* @__PURE__ */ React562.createElement(AccordionSummary_default, {
    ...rest,
    ref: ref2,
    classes,
    IconButtonProps: defaultIconButtonProps,
    expandIcon
  }, children2);
});
var RcAccordionSummary = styled_components_default(_RcAccordionSummary)`
  ${AccordionSummaryStyle}
`;
RcAccordionSummary.defaultProps = {
  disableRipple: false
};
RcAccordionSummary.displayName = "RcAccordionSummary";

// src/components/Accordion/AccordionDetails/AccordionDetails.tsx
import React563, { forwardRef as forwardRef508, useMemo as useMemo11 } from "react";

// src/components/Accordion/AccordionDetails/styles/AccordionDetailsStyle.tsx
var AccordionDetailsStyle = () => {
  return css2`
    border-top: 1px solid ${palette22("neutral", "l02")};
    padding: ${spacing2(4)};
  `;
};

// src/components/Accordion/AccordionDetails/utils/AccordionDetailsUtils.ts
var RcAccordionDetailsClasses = RcClasses([], "RcAccordionDetails");

// src/components/Accordion/AccordionDetails/AccordionDetails.tsx
var _RcAccordionDetails = forwardRef508((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcAccordionDetails" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo11(() => combineClasses(RcAccordionDetailsClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React563.createElement(AccordionDetails_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcAccordionDetails = styled_components_default(_RcAccordionDetails)`
  ${AccordionDetailsStyle}
`;
RcAccordionDetails.defaultProps = {};
RcAccordionDetails.displayName = "RcAccordionDetails";

// src/components/Alert/Alert.tsx
import React571, { forwardRef as forwardRef510 } from "react";

// node_modules/@material-ui/lab/esm/Alert/Alert.js
var import_prop_types113 = __toModule(require_prop_types());
import {
  createElement as createElement113,
  forwardRef as forwardRef509
} from "react";

// node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js
import {
  createElement as createElement108
} from "react";
var SuccessOutlined_default = createSvgIcon(/* @__PURE__ */ createElement108("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined");

// node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js
import {
  createElement as createElement109
} from "react";
var ReportProblemOutlined_default = createSvgIcon(/* @__PURE__ */ createElement109("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined");

// node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js
import {
  createElement as createElement110
} from "react";
var ErrorOutline_default = createSvgIcon(/* @__PURE__ */ createElement110("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline");

// node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js
import {
  createElement as createElement111
} from "react";
var InfoOutlined_default = createSvgIcon(/* @__PURE__ */ createElement111("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined");

// node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js
import {
  createElement as createElement112
} from "react";
var Close_default2 = createSvgIcon(/* @__PURE__ */ createElement112("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close");

// node_modules/@material-ui/lab/esm/Alert/Alert.js
var styles140 = function styles141(theme) {
  var getColor2 = theme.palette.type === "light" ? darken : lighten;
  var getBackgroundColor2 = theme.palette.type === "light" ? lighten : darken;
  return {
    root: _extends({}, theme.typography.body2, {
      borderRadius: theme.shape.borderRadius,
      backgroundColor: "transparent",
      display: "flex",
      padding: "6px 16px"
    }),
    standardSuccess: {
      color: getColor2(theme.palette.success.main, 0.6),
      backgroundColor: getBackgroundColor2(theme.palette.success.main, 0.9),
      "& $icon": {
        color: theme.palette.success.main
      }
    },
    standardInfo: {
      color: getColor2(theme.palette.info.main, 0.6),
      backgroundColor: getBackgroundColor2(theme.palette.info.main, 0.9),
      "& $icon": {
        color: theme.palette.info.main
      }
    },
    standardWarning: {
      color: getColor2(theme.palette.warning.main, 0.6),
      backgroundColor: getBackgroundColor2(theme.palette.warning.main, 0.9),
      "& $icon": {
        color: theme.palette.warning.main
      }
    },
    standardError: {
      color: getColor2(theme.palette.error.main, 0.6),
      backgroundColor: getBackgroundColor2(theme.palette.error.main, 0.9),
      "& $icon": {
        color: theme.palette.error.main
      }
    },
    outlinedSuccess: {
      color: getColor2(theme.palette.success.main, 0.6),
      border: "1px solid ".concat(theme.palette.success.main),
      "& $icon": {
        color: theme.palette.success.main
      }
    },
    outlinedInfo: {
      color: getColor2(theme.palette.info.main, 0.6),
      border: "1px solid ".concat(theme.palette.info.main),
      "& $icon": {
        color: theme.palette.info.main
      }
    },
    outlinedWarning: {
      color: getColor2(theme.palette.warning.main, 0.6),
      border: "1px solid ".concat(theme.palette.warning.main),
      "& $icon": {
        color: theme.palette.warning.main
      }
    },
    outlinedError: {
      color: getColor2(theme.palette.error.main, 0.6),
      border: "1px solid ".concat(theme.palette.error.main),
      "& $icon": {
        color: theme.palette.error.main
      }
    },
    filledSuccess: {
      color: "#fff",
      fontWeight: theme.typography.fontWeightMedium,
      backgroundColor: theme.palette.success.main
    },
    filledInfo: {
      color: "#fff",
      fontWeight: theme.typography.fontWeightMedium,
      backgroundColor: theme.palette.info.main
    },
    filledWarning: {
      color: "#fff",
      fontWeight: theme.typography.fontWeightMedium,
      backgroundColor: theme.palette.warning.main
    },
    filledError: {
      color: "#fff",
      fontWeight: theme.typography.fontWeightMedium,
      backgroundColor: theme.palette.error.main
    },
    icon: {
      marginRight: 12,
      padding: "7px 0",
      display: "flex",
      fontSize: 22,
      opacity: 0.9
    },
    message: {
      padding: "8px 0"
    },
    action: {
      display: "flex",
      alignItems: "center",
      marginLeft: "auto",
      paddingLeft: 16,
      marginRight: -8
    }
  };
};
var defaultIconMapping = {
  success: /* @__PURE__ */ createElement113(SuccessOutlined_default, {
    fontSize: "inherit"
  }),
  warning: /* @__PURE__ */ createElement113(ReportProblemOutlined_default, {
    fontSize: "inherit"
  }),
  error: /* @__PURE__ */ createElement113(ErrorOutline_default, {
    fontSize: "inherit"
  }),
  info: /* @__PURE__ */ createElement113(InfoOutlined_default, {
    fontSize: "inherit"
  })
};
var _ref5 = /* @__PURE__ */ createElement113(Close_default2, {
  fontSize: "small"
});
var Alert = /* @__PURE__ */ forwardRef509(function Alert2(props, ref2) {
  var action3 = props.action, children2 = props.children, classes = props.classes, className = props.className, _props$closeText = props.closeText, closeText = _props$closeText === void 0 ? "Close" : _props$closeText, color2 = props.color, icon = props.icon, _props$iconMapping = props.iconMapping, iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping, onClose = props.onClose, _props$role = props.role, role = _props$role === void 0 ? "alert" : _props$role, _props$severity = props.severity, severity = _props$severity === void 0 ? "success" : _props$severity, _props$variant = props.variant, variant = _props$variant === void 0 ? "standard" : _props$variant, other = _objectWithoutProperties(props, ["action", "children", "classes", "className", "closeText", "color", "icon", "iconMapping", "onClose", "role", "severity", "variant"]);
  return /* @__PURE__ */ createElement113(Paper_default, _extends({
    role,
    square: true,
    elevation: 0,
    className: clsx_m_default(classes.root, classes["".concat(variant).concat(capitalize(color2 || severity))], className),
    ref: ref2
  }, other), icon !== false ? /* @__PURE__ */ createElement113("div", {
    className: classes.icon
  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /* @__PURE__ */ createElement113("div", {
    className: classes.message
  }, children2), action3 != null ? /* @__PURE__ */ createElement113("div", {
    className: classes.action
  }, action3) : null, action3 == null && onClose ? /* @__PURE__ */ createElement113("div", {
    className: classes.action
  }, /* @__PURE__ */ createElement113(IconButton_default, {
    size: "small",
    "aria-label": closeText,
    title: closeText,
    color: "inherit",
    onClick: onClose
  }, _ref5)) : null);
});
true ? Alert.propTypes = {
  action: import_prop_types113.default.node,
  children: import_prop_types113.default.node,
  classes: import_prop_types113.default.object,
  className: import_prop_types113.default.string,
  closeText: import_prop_types113.default.string,
  color: import_prop_types113.default.oneOf(["error", "info", "success", "warning"]),
  icon: import_prop_types113.default.node,
  iconMapping: import_prop_types113.default.shape({
    error: import_prop_types113.default.node,
    info: import_prop_types113.default.node,
    success: import_prop_types113.default.node,
    warning: import_prop_types113.default.node
  }),
  onClose: import_prop_types113.default.func,
  role: import_prop_types113.default.string,
  severity: import_prop_types113.default.oneOf(["error", "info", "success", "warning"]),
  variant: import_prop_types113.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
var Alert_default = withStyles_default2(styles140, {
  name: "MuiAlert"
})(Alert);

// src/components/Alert/styles/AlertStyle.tsx
import React570 from "react";

// src/components/Alert/utils/AlertUtils.ts
var RcAlertClasses = RcClasses(["root", "message", "icon"], "RcAlert");
var RcAlertSpacings = {
  small: spacing2(3, 4),
  medium: spacing2(4, 5)
};
var RcAlertColors = {
  info: {
    text: palette22("neutral", "f06"),
    background: palette22("neutral", "b03")
  },
  error: {
    text: palette22("danger", "f02"),
    background: palette22("danger", "b01")
  },
  success: {
    text: palette22("success", "f02"),
    background: palette22("success", "b01")
  },
  warning: {
    text: palette22("warning", "f02"),
    background: palette22("warning", "b01")
  }
};

// src/components/Alert/styles/AlertStyle.tsx
var textColor = ({ severity }) => RcAlertColors[severity].text;
var backgroundColor = ({ severity }) => RcAlertColors[severity].background;
var rootSpacing = ({ size }) => RcAlertSpacings[size];
var EmptyIcon = /* @__PURE__ */ React570.createElement(React570.Fragment, null);
var AlertStyle = ({
  align,
  square,
  icon
}) => {
  const isEmpty3 = icon === void 0;
  return css2`
    &.${RcAlertClasses.root} {
      background-color: ${backgroundColor};
      display: flex;
      padding: ${rootSpacing};
      word-break: break-word;
      border-radius: ${square && radius3("zero")};
    }

    .${RcAlertClasses.message} {
      ${typography4("body1")};
      color: ${textColor};
      text-align: ${align};
      flex: 1 1 auto;
      padding: 0;
    }

    .${RcAlertClasses.icon} {
      ${flexCenterStyle};
      ${isEmpty3 && `margin: 0`};
      padding: 0;
    }
  `;
};

// src/components/Alert/Alert.tsx
var _RcAlert = forwardRef510((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcAlert" });
  const { icon, classes: classesProp, children: children2, align, size, ...rest } = props;
  const classes = combineClasses(RcAlertClasses, classesProp);
  return /* @__PURE__ */ React571.createElement(Alert_default, {
    icon: icon === true ? void 0 : icon ?? EmptyIcon,
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcAlert = styled_components_default(_RcAlert)`
  ${AlertStyle}
`;
RcAlert.defaultProps = {
  severity: "info",
  size: "medium",
  align: "left",
  square: true
};
RcAlert.displayName = "RcAlert";

// src/components/Animations/Highlight/Highlight.tsx
import React579, {
  forwardRef as forwardRef518,
  useImperativeHandle as useImperativeHandle9,
  useRef as useRef53,
  useState as useState24
} from "react";

// src/components/Transitions/index.ts
var Transitions_exports = {};
__export(Transitions_exports, {
  CSSTransition: () => CSSTransition_default,
  RcCollapse: () => RcCollapse,
  RcFade: () => RcFade,
  RcGrow: () => RcGrow,
  RcSlide: () => RcSlide,
  RcZoom: () => RcZoom,
  RcZoomFrom: () => RcZoomFrom,
  RcZoomInFadeOut: () => RcZoomInFadeOut,
  ReplaceTransition: () => ReplaceTransition_default,
  SwitchTransition: () => SwitchTransition_default,
  Transition: () => Transition_default,
  TransitionGroup: () => TransitionGroup_default,
  config: () => config_default,
  getTransitionProps: () => getTransitionProps2,
  reflow: () => reflow3,
  setTransitionStyle: () => setTransitionStyle
});

// src/components/Transitions/Collapse/Collapse.tsx
import React572, { forwardRef as forwardRef511 } from "react";
var _RcCollapse = forwardRef511((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCollapse" });
  return /* @__PURE__ */ React572.createElement(Collapse_default, {
    ref: ref2,
    ...props
  });
});
var RcCollapse = _RcCollapse;

// src/components/Transitions/Fade/Fade.tsx
import React573, { forwardRef as forwardRef512 } from "react";
var _RcFade = forwardRef512((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcFade" });
  return /* @__PURE__ */ React573.createElement(Fade_default, {
    ref: ref2,
    ...props
  });
});
var RcFade = _RcFade;

// src/components/Transitions/Grow/Grow.tsx
import React574, { forwardRef as forwardRef513 } from "react";
var _RcGrow = forwardRef513((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcGrow" });
  return /* @__PURE__ */ React574.createElement(Grow_default, {
    ref: ref2,
    ...props
  });
});
var RcGrow = _RcGrow;

// src/components/Transitions/Slide/Slide.tsx
import React575, { forwardRef as forwardRef514 } from "react";
var _RcSlide = forwardRef514((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcSlide" });
  return /* @__PURE__ */ React575.createElement(Slide_default, {
    ref: ref2,
    ...props
  });
});
var RcSlide = _RcSlide;

// src/components/Transitions/Transition.ts
var Transition_exports = {};
__export(Transition_exports, {
  CSSTransition: () => CSSTransition_default,
  ReplaceTransition: () => ReplaceTransition_default,
  SwitchTransition: () => SwitchTransition_default,
  Transition: () => Transition_default,
  TransitionGroup: () => TransitionGroup_default,
  config: () => config_default,
  getTransitionProps: () => getTransitionProps2,
  reflow: () => reflow3,
  setTransitionStyle: () => setTransitionStyle
});
var import_utils92 = __toModule(require_utils2());
__reExport(Transition_exports, __toModule(require_transitions()));
var reflow3 = import_utils92.reflow;
function getTransitionProps2(props, options) {
  const { timeout: timeout2, easing: easing3, style: style3 = {} } = props;
  return {
    duration: style3.transitionDuration || typeof timeout2 === "number" ? timeout2 : timeout2?.[options.mode] || 0,
    easing: style3.transitionTimingFunction || typeof easing3 === "object" ? easing3?.[options.mode] : easing3,
    delay: style3.transitionDelay
  };
}
var setTransitionStyle = (node4, value) => {
  node4.style.webkitTransition = value;
  node4.style.transition = value;
};

// src/components/Transitions/index.ts
__reExport(Transitions_exports, Transition_exports);

// src/components/Transitions/Zoom/Zoom.tsx
import React576, { forwardRef as forwardRef515 } from "react";
var _RcZoom = forwardRef515((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcZoom" });
  return /* @__PURE__ */ React576.createElement(Zoom_default, {
    ref: ref2,
    ...props
  });
});
var RcZoom = _RcZoom;

// src/components/Transitions/ZoomFrom/ZoomFrom.tsx
import React577, { forwardRef as forwardRef516, useRef as useRef51 } from "react";

// src/components/Transitions/utils/transitionendSubscriber.ts
var transitionendSubscriber = (elm, event) => {
  elm.addEventListener("transitionend", event);
  elm.addEventListener("transitioncancel", event);
  return () => {
    elm.removeEventListener("transitionend", event);
    elm.removeEventListener("transitioncancel", event);
  };
};

// src/components/Transitions/utils/useNormalizeTransition.ts
var useNormalizedTransition = (callback, nodeRef) => {
  return (maybeIsAppearing) => {
    if (callback) {
      const node4 = nodeRef.current;
      if (maybeIsAppearing === void 0) {
        callback(node4);
      } else {
        callback(node4, maybeIsAppearing);
      }
    }
  };
};
var useNormalizedTransitionProps = ({
  onEnter,
  onEntering,
  onEntered,
  onExit,
  onExiting,
  onExited
}, nodeRef) => {
  const handleEnter = useNormalizedTransition(onEnter, nodeRef);
  const handleEntering = useNormalizedTransition(onEntering, nodeRef);
  const handleEntered = useNormalizedTransition(onEntered, nodeRef);
  const handleExit = useNormalizedTransition(onExit, nodeRef);
  const handleExiting = useNormalizedTransition(onExiting, nodeRef);
  const handleExited = useNormalizedTransition(onExited, nodeRef);
  return {
    onEnter: handleEnter,
    onEntering: handleEntering,
    onEntered: handleEntered,
    onExit: handleExit,
    onExiting: handleExiting,
    onExited: handleExited
  };
};

// src/components/Transitions/ZoomFrom/utils/transformToFromElm.tsx
function transformToFromElm(fromRef, toRef) {
  const fromElm = fromRef.current;
  const toElm = toRef.current;
  const fromRect = fromElm.getBoundingClientRect();
  const toRect = toElm.getBoundingClientRect();
  const deltaX = fromRect.x - toRect.x;
  const deltaY = fromRect.y - toRect.y;
  const scaleX = fromRect.width / toRect.width;
  const scaleY = fromRect.height / toRect.height;
  toElm.style.transform = `translate(${deltaX}px, ${deltaY}px) scale(${scaleX}, ${scaleY})`;
  toElm.style.transformOrigin = "0 0";
}

// src/components/Transitions/ZoomFrom/ZoomFrom.tsx
var styles142 = {
  entering: {
    transform: ""
  },
  entered: {},
  exiting: {
    transform: ""
  },
  exited: {}
};
var RcZoomFrom = forwardRef516((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcZoomFrom" });
  const {
    from: fromRef,
    children: children2,
    in: inProp,
    style: style3,
    timeout: timeout2,
    onExit,
    onEnter,
    onExited,
    onExiting,
    onEntering,
    ...other
  } = props;
  const theme = RcUseTheme();
  const nodeRef = useRef51(null);
  const handlers = useNormalizedTransitionProps({
    ...props,
    onEnter: (node4, isAppearing) => {
      transformToFromElm(fromRef, nodeRef);
      reflow3(node4);
      onEnter?.(node4, isAppearing);
    },
    onEntering: (node4, isAppearing) => {
      const transitionProps = getTransitionProps2(props, {
        mode: "enter"
      });
      const transitionStyle = theme.transitions.create(["all"], transitionProps);
      setTransitionStyle(node4, transitionStyle);
      onEntering?.(node4, isAppearing);
    },
    onExit: (node4) => {
      const transitionProps = getTransitionProps2(props, {
        mode: "exit"
      });
      const transitionStyle = theme.transitions.create(["all"], transitionProps);
      setTransitionStyle(node4, transitionStyle);
      onExit?.(node4);
    },
    onExiting: (node4) => {
      transformToFromElm(fromRef, nodeRef);
      reflow3(node4);
      onExiting?.(node4);
    },
    onExited: (node4) => {
      setTransitionStyle(node4, "");
      onExited?.(node4);
    }
  }, nodeRef);
  const foreignRef = useForkRef2(children2.ref, ref2);
  const handleRef = useForkRef2(nodeRef, foreignRef);
  return /* @__PURE__ */ React577.createElement(Transition_default, {
    appear: true,
    timeout: timeout2,
    nodeRef,
    in: inProp,
    ...handlers,
    ...other
  }, (state, childProps) => {
    return React577.cloneElement(children2, {
      style: {
        visibility: state === "exited" && !inProp ? "hidden" : void 0,
        ...style3,
        ...children2.props.style,
        ...styles142[state]
      },
      ref: handleRef,
      ...childProps
    });
  });
});
RcZoomFrom.defaultProps = {
  timeout: {
    enter: Transition_exports.duration.enteringScreen,
    exit: Transition_exports.duration.enteringScreen
  }
};
RcZoomFrom.displayName = "ZoomInFadeOut";

// src/components/Transitions/ZoomInFadeOut/ZoomInFadeOut.tsx
import React578, { forwardRef as forwardRef517, useRef as useRef52 } from "react";
var styles143 = {
  entering: {
    opacity: 0,
    transform: "scale(1.1)"
  },
  entered: {
    transform: "scale(1)",
    opacity: 1
  },
  exiting: {
    opacity: 0,
    transform: "scale(1)"
  },
  exited: {
    opacity: 0
  }
};
var RcZoomInFadeOut = forwardRef517((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcZoomInFadeOut" });
  const {
    children: children2,
    in: inProp,
    style: style3,
    onExit,
    onEnter,
    timeout: timeout2,
    ...other
  } = props;
  const theme = RcUseTheme();
  const nodeRef = useRef52(null);
  const handlers = useNormalizedTransitionProps({
    ...props,
    onEnter: (node4, isAppearing) => {
      reflow3(node4);
      const transitionProps = getTransitionProps2(props, {
        mode: "enter"
      });
      const transitionStyle = theme.transitions.create(["opacity", "transform"], transitionProps);
      setTransitionStyle(node4, transitionStyle);
      onEnter?.(node4, isAppearing);
    },
    onExit: (node4) => {
      const transitionProps = getTransitionProps2(props, {
        mode: "exit"
      });
      const transitionStyle = theme.transitions.create(["opacity", "transform"], transitionProps);
      setTransitionStyle(node4, transitionStyle);
      onExit?.(node4);
    }
  }, nodeRef);
  const foreignRef = useForkRef2(children2.ref, ref2);
  const handleRef = useForkRef2(nodeRef, foreignRef);
  return /* @__PURE__ */ React578.createElement(Transition_default, {
    appear: true,
    nodeRef,
    in: inProp,
    timeout: timeout2,
    ...handlers,
    ...other
  }, (state, childProps) => {
    return React578.cloneElement(children2, {
      style: {
        transform: "scale(0)",
        opacity: state === "entering" ? 0 : 1,
        visibility: state === "exited" && !inProp ? "hidden" : void 0,
        ...style3,
        ...children2.props.style,
        ...styles143[state]
      },
      ref: handleRef,
      ...childProps
    });
  });
});
RcZoomInFadeOut.defaultProps = {
  timeout: {
    enter: Transition_exports.duration.enteringScreen,
    exit: Transition_exports.duration.enteringScreen
  }
};
RcZoomInFadeOut.displayName = "ZoomInFadeOut";

// src/components/Animations/Highlight/utils/getStyle.tsx
function getHighlightStyle({
  backgroundColorProp,
  theme
}) {
  const backgroundColor3 = (backgroundColorProp ? getParsePaletteColor(backgroundColorProp) : setOpacity(palette22("warning", "b03"), "12"))({ theme });
  const styles158 = {
    entering: {
      backgroundColor: backgroundColor3
    },
    entered: {
      backgroundColor: backgroundColor3
    },
    exiting: {
      backgroundColor: "rgba(255, 255, 255, 0)"
    },
    exited: {
      backgroundColor: ""
    }
  };
  return styles158;
}

// src/components/Animations/Highlight/Highlight.tsx
var RcHighlight = forwardRef518((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcHighlight" });
  const {
    children: children2,
    style: style3,
    onExit,
    onEnter,
    onExited,
    backgroundColor: backgroundColorProp,
    duration: duration5 = 3e3,
    holdTime: holdTime2 = 1e3,
    easing: easing3 = "cubic-bezier(.575, .105, .835, .295)",
    action: action3,
    ...other
  } = props;
  const theme = RcUseTheme();
  const [inValue, setInValue] = useState24(false);
  const styles158 = getHighlightStyle({ backgroundColorProp, theme });
  const nodeRef = useRef53(null);
  const handlers = useNormalizedTransitionProps({
    ...props,
    onEnter: (node4, isAppearing) => {
      reflow3(node4);
      setTransitionStyle(node4, "");
      onEnter?.(node4, isAppearing);
    },
    onExit: (node4) => {
      const transitionProps = getTransitionProps2({
        style: { transitionDelay: `${holdTime2}ms` },
        timeout: { exit: duration5 - holdTime2 },
        easing: easing3
      }, {
        mode: "exit"
      });
      const transitionStyle = theme.transitions.create(["background-color"], transitionProps);
      setTransitionStyle(node4, transitionStyle);
      onExit?.(node4);
    },
    onExited: (node4) => {
      setTransitionStyle(node4, "");
      onExited?.(node4);
    }
  }, nodeRef);
  const foreignRef = useForkRef2(children2.ref, ref2);
  const handleRef = useForkRef2(nodeRef, foreignRef);
  useImperativeHandle9(action3, () => () => {
    setInValue(true);
    setTimeout(() => setInValue(false), 0);
  }, []);
  return /* @__PURE__ */ React579.createElement(Transition_default, {
    appear: true,
    nodeRef,
    in: inValue,
    ...handlers,
    ...other,
    timeout: { exit: duration5 }
  }, (state, childProps) => {
    return React579.cloneElement(children2, {
      style: {
        ...style3,
        ...children2.props.style,
        ...styles158[state]
      },
      ref: handleRef,
      ...childProps
    });
  });
});
RcHighlight.defaultProps = {};
RcHighlight.displayName = "RcHighlight";

// src/components/AppBar/AppBar.tsx
var TOP_BAR_HEIGHT = "56px";
var RcAppBar = styled_components_default(AppBar_default)`
  height: ${TOP_BAR_HEIGHT};
  background-color: ${palette22("neutral", "b01")};
  background: linear-gradient(
    to right,
    ${palette22("header", "bgLeft")},
    ${palette22("header", "bgRight")}
  );
  border-bottom: 1px solid ${palette22("header", "divider")};
  z-index: ${({ theme }) => `${theme.zIndex.drawer + 10}`};
`;
RcAppBar.displayName = "RcAppBar";
RcAppBar.defaultProps = {
  position: "static",
  elevation: 0
};

// src/components/Avatar/Avatar.tsx
import React588, { forwardRef as forwardRef525, useMemo as useMemo13 } from "react";

// src/components/Presence/Presence.tsx
import React583, { forwardRef as forwardRef522, useMemo as useMemo12 } from "react";

// src/components/Presence/assets/Attended.tsx
import React580, { forwardRef as forwardRef519, memo as memo412 } from "react";
var Attended = memo412(forwardRef519((props, svgRef) => /* @__PURE__ */ React580.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 32 32",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React580.createElement("path", {
  d: "M30 10.393L24.509 5 12.96 16.253l-5.459-5.301L2 16.314 12.963 27z"
}))));
Attended.displayName = "Attended";
Attended["iconName"] = "attended";
var Attended_default = Attended;

// src/components/Presence/assets/Unattended.tsx
import React581, { forwardRef as forwardRef520, memo as memo413 } from "react";
var Unattended = memo413(forwardRef520((props, svgRef) => /* @__PURE__ */ React581.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 32 32",
  ref: svgRef,
  ...props
}, /* @__PURE__ */ React581.createElement("path", {
  d: "M24.27 2L16 10.271 7.73 2 2 7.73 10.271 16 2 24.27 7.73 30 16 21.729 24.27 30 30 24.27 21.729 16 30 7.73z"
}))));
Unattended.displayName = "Unattended";
Unattended["iconName"] = "unattended";
var Unattended_default = Unattended;

// src/components/Presence/utils/RcPresenceUtils.tsx
var RcPresenceSizes = {
  xxsmall: [8, 1],
  xsmall: [8, 2],
  small: [10, 2],
  medium: [10, 3],
  large: [14, 3],
  xlarge: [18, 3]
};
var RcPresenceInnerIconSizes = {
  xxsmall: [4, 2],
  xsmall: [6, 2],
  small: [6, 2],
  medium: [6, 2],
  large: [10, 4],
  xlarge: [14, 4]
};
var RcPresenceAvailableIconSizes = {
  xxsmall: [10, 0.5],
  xsmall: [10, 0.5],
  small: [6, void 0],
  medium: [6, void 0],
  large: [10, void 0],
  xlarge: [12, void 0]
};
var presenceOn = palette22("presence", "available");
var presenceBusy = palette22("presence", "busy");
var presenceOff = palette22("presence", "invisible");
var RcPresenceColors = {
  available: presenceOn,
  attended: presenceOn,
  unAttended: presenceBusy,
  onCall: presenceBusy,
  inMeeting: presenceBusy,
  DND: presenceBusy,
  busy: presenceBusy,
  unavailable: presenceOff,
  notReady: presenceOff,
  offline: presenceOff
};

// src/components/Presence/styles/StyledDND.tsx
var StyledDND = styled_components_default.div`
  ${({ size }) => {
  const value = RcPresenceInnerIconSizes[size];
  return css2`
      width: ${value[0]}px;
      height: ${value[1]}px;
    `;
}};
  background: ${palette22("neutral", "f01")};
`;

// src/components/Presence/styles/StyledPresence.tsx
import React582, { forwardRef as forwardRef521 } from "react";
var _StyledPresence = forwardRef521(({ color: color2, borderSize, type: type3, size, ...rest }, ref2) => /* @__PURE__ */ React582.createElement("div", {
  ref: ref2,
  ...rest
}));
var StyledPresence = styled_components_default(_StyledPresence)`
  display: flex;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  box-sizing: content-box;

  ${({ size, borderSize, type: type3, color: color2 }) => {
  const sizeValue = px2(RcPresenceSizes[size][0]);
  const availableSize = RcPresenceAvailableIconSizes[size];
  const iconSizeValue = px2(availableSize[0]);
  const scaleRate = availableSize[1];
  return css2`
      width: ${sizeValue};
      height: ${sizeValue};
      border: ${RcPresenceSizes[borderSize || size][1]}px solid
        ${palette22("neutral", "l01")};
      background: ${color2 ? getParsePaletteColor(color2) : RcPresenceColors[type3]};

      ${RcIcon} {
        transform: ${scaleRate && `scale(${scaleRate})`};

        svg {
          width: ${iconSizeValue};
          height: ${iconSizeValue};
        }
      }
    `;
}};
`;

// src/components/Presence/Presence.tsx
var _RcPresence = forwardRef522((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcPresence" });
  const { type: type3, size } = props;
  const innerChildren = useMemo12(() => {
    switch (type3) {
      case "DND":
        return /* @__PURE__ */ React583.createElement(StyledDND, {
          size
        });
      case "attended":
        return /* @__PURE__ */ React583.createElement(RcIcon, {
          symbol: Attended_default,
          color: "neutral.f01",
          size: "inherit"
        });
      case "unAttended":
        return /* @__PURE__ */ React583.createElement(RcIcon, {
          symbol: Unattended_default,
          color: "neutral.f01",
          size: "inherit"
        });
      default:
        return null;
    }
  }, [size, type3]);
  return /* @__PURE__ */ React583.createElement(StyledPresence, {
    ref: ref2,
    ...props
  }, innerChildren);
});
var RcPresence = styled_components_default(_RcPresence)``;
RcPresence.defaultProps = {
  size: "xsmall",
  type: "notReady"
};
RcPresence.displayName = "RcPresence";

// src/components/Avatar/styles/StyledAvatar.tsx
import React584, { forwardRef as forwardRef523 } from "react";

// src/components/Avatar/utils/AvatarUtils.ts
var RcAvatarSizes = {
  xxsmall: 24,
  xsmall: 32,
  small: 40,
  medium: 64,
  large: 80,
  xlarge: 100
};
var RcAvatarClasses = RcClasses(["presenceWrapper", "avatarContainer", "mask"], "RcAvatar");
var RcAvatarFonts = {
  xlarge: "display2",
  large: "display1",
  medium: "title2",
  small: "subheading2",
  xsmall: "subheading2",
  xxsmall: "caption2"
};

// src/components/Avatar/styles/StyledAvatar.tsx
var avatarPaletteKeys = Object.keys(palette_light_default.avatar);
var getBackgroundColor = (color2, iconSymbol) => {
  if (color2 && typeof color2 === "string" && avatarPaletteKeys.indexOf(color2) > -1) {
    return palette22("avatar", color2);
  }
  return getParsePaletteColor(color2, iconSymbol ? ["avatar", "primary"] : ["neutral", "b03"]);
};
var _StyledAvatar = forwardRef523(({ color: color2, size, iconSymbol, ...rest }, ref2) => {
  return /* @__PURE__ */ React584.createElement("div", {
    ref: ref2,
    ...rest
  });
});
var StyledAvatar = styled_components_default(_StyledAvatar)`
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  line-height: 1;
  border-radius: ${radius3("circle")};
  overflow: hidden;
  user-select: none;
  outline: none;
  color: ${palette22("neutral", "f01")};

  ${({ size, color: color2, iconSymbol }) => {
  const value = RcAvatarSizes[size];
  return css2`
      ${typography4(RcAvatarFonts[size])};
      width: ${value}px;
      height: ${value}px;
      background-color: ${getBackgroundColor(color2, iconSymbol)};
    `;
}};

  > img,
  > canvas {
    width: 100%;
    height: 100%;
  }
`;

// src/components/Avatar/styles/StyledAvatarWrapper.tsx
import React585, { forwardRef as forwardRef524 } from "react";
var _StyledAvatarWrapper = forwardRef524(({ children: children2, clickable, color: color2, shouldRenderPresenceHovered, ...rest }, ref2) => {
  if (clickable) {
    return /* @__PURE__ */ React585.createElement("button", {
      ref: ref2,
      type: "button",
      ...rest
    }, children2);
  }
  return /* @__PURE__ */ React585.createElement("div", {
    ref: ref2,
    ...rest
  }, children2);
});
var focusVisibleAndAvatarContainer = `${focusVisible} .${RcAvatarClasses.avatarContainer}`;
var StyledAvatarWrapper = styled_components_default(_StyledAvatarWrapper)`
  position: relative;
  display: inline-flex;
  outline: 0;

  ${({ disabled: disabled3 }) => disabled3 && css2`
      pointer-events: none;
      opacity: ${opacity3("32")};
    `};

  ${({ shouldRenderPresenceHovered }) => shouldRenderPresenceHovered && css2`
      .${RcAvatarClasses.presenceWrapper} {
        visibility: hidden;
      }

      ${focusWithin} {
        .${RcAvatarClasses.presenceWrapper} {
          visibility: visible;
        }
      }
    `}

  ${({ clickable }) => clickable && css2`
      ${nonStyleButton};

      ${focusVisible} {
        box-shadow: 0 0 0 1px ${focusVisibleColor};
        border-radius: 4px;
      }

      ${focusVisibleAndAvatarContainer},
      .${RcAvatarClasses.avatarContainer}:hover {
        opacity: ${opacity3("12", true)};
      }

      ${focusVisibleAndAvatarContainer},
      .${RcAvatarClasses.avatarContainer} {
        &:active {
          opacity: ${opacity3("24", true)};
        }
      }
    `};
`;

// src/components/Avatar/styles/StyledIconAvatar.tsx
import React586 from "react";
var _StyledIconAvatar = ({
  size,
  ...rest
}) => /* @__PURE__ */ React586.createElement(RcIcon, {
  size: "inherit",
  ...rest
});
var StyledIconAvatar = styled_components_default(_StyledIconAvatar)`
  font-size: ${({ size }) => size}px;
`;

// src/components/Avatar/styles/StyledMask.tsx
import React587 from "react";
var StyledMask = styled_components_default.div`
  position: absolute;
  right: 0;
  bottom: 0;

  width: 100%;
  height: 27.5%;
  background-color: ${setOpacity(palette22("neutral", "b06"), "56")};
  color: ${palette22("neutral", "f01")};
  text-align: center;
  ${flexCenterStyle}
`;
var defaultChildren = /* @__PURE__ */ React587.createElement(RcIcon, {
  size: "small",
  symbol: Edit_default
});
var RcAvatarMask = ({
  className,
  children: children2 = defaultChildren
}) => {
  return /* @__PURE__ */ React587.createElement(StyledMask, {
    className
  }, children2);
};

// src/components/Avatar/styles/StyledPresenceWrapper.tsx
var StyledPresenceWrapper = styled_components_default.div`
  position: absolute;
  ${({ horizontal: horizontal2 }) => horizontal2}: 14%;
  ${({ vertical: vertical2 }) => vertical2}: 14%;
  transform: translate(
    ${({ horizontal: horizontal2 }) => horizontal2 === "right" ? "" : "-"}50%,
    ${({ vertical: vertical2 }) => vertical2 === "bottom" ? "" : "-"}50%
  );
  transform-origin: 100% 100%;
`;

// src/components/Avatar/Avatar.tsx
var _RcAvatar = forwardRef525((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcAvatar" });
  const {
    presenceOrigin,
    id: idProps,
    size,
    classes,
    color: color2,
    children: children2,
    clickable: _clickable,
    onClick,
    mask: mask2,
    presence: presence3,
    customColor,
    tooltip: tooltip2,
    iconSize,
    iconSymbol,
    src: srcProp,
    alt: altProp,
    Img,
    imgProps,
    presenceProps,
    displayName: displayName2,
    ...rest
  } = props;
  let unClickable = props.unClickable;
  unClickable = unClickable ?? true;
  const clickable = _clickable ?? !unClickable;
  const handleClick = useMemo13(() => {
    const haveClick = clickable || !unClickable && onClick;
    return haveClick ? onClick : void 0;
  }, [clickable, onClick, unClickable]);
  const avatar3 = useMemo13(() => {
    const avatarChildren = (() => {
      const src = srcProp || imgProps?.src;
      if (src) {
        const ImgComp = Img || "img";
        return /* @__PURE__ */ React588.createElement(ImgComp, {
          src,
          alt: altProp,
          ...imgProps
        });
      }
      if (iconSymbol) {
        const _size = iconSize === "half" ? RcAvatarSizes[size] / 2 : RcAvatarSizes[iconSize || size];
        return /* @__PURE__ */ React588.createElement(StyledIconAvatar, {
          size: _size,
          symbol: iconSymbol
        });
      }
      return children2 || null;
    })();
    let _avatar = /* @__PURE__ */ React588.createElement(StyledAvatar, {
      size,
      color: color2,
      iconSymbol,
      className: clsx_m_default(classes?.avatarContainer, RcAvatarClasses.avatarContainer)
    }, avatarChildren, mask2 && /* @__PURE__ */ React588.createElement(RcAvatarMask, {
      className: clsx_m_default(classes?.mask, RcAvatarClasses.mask)
    }, typeof mask2 === "boolean" ? void 0 : mask2));
    if (tooltip2) {
      _avatar = /* @__PURE__ */ React588.createElement(RcTooltip, {
        title: tooltip2
      }, _avatar);
    }
    return _avatar;
  }, [
    Img,
    altProp,
    children2,
    classes?.avatarContainer,
    classes?.mask,
    color2,
    iconSize,
    iconSymbol,
    imgProps,
    mask2,
    size,
    srcProp,
    tooltip2
  ]);
  const { horizontal: horizontal2, vertical: vertical2 } = presenceOrigin;
  const presenceChildren = useMemo13(() => {
    let _presence = null;
    if (presence3) {
      _presence = presence3;
    } else if (presenceProps) {
      _presence = /* @__PURE__ */ React588.createElement(RcPresence, {
        size,
        ...presenceProps
      });
    }
    if (_presence) {
      return /* @__PURE__ */ React588.createElement(StyledPresenceWrapper, {
        horizontal: horizontal2,
        vertical: vertical2,
        className: clsx_m_default(classes?.presenceWrapper, RcAvatarClasses.presenceWrapper)
      }, _presence);
    }
    return null;
  }, [classes, horizontal2, presence3, presenceProps, size, vertical2]);
  const dataAttrProps = idProps ? {
    id: `${idProps}`,
    "data-uid": `${idProps}`,
    "data-cid": `${idProps}`,
    "data-test-automation-value": `${idProps}`
  } : {};
  return /* @__PURE__ */ React588.createElement(StyledAvatarWrapper, {
    ref: ref2,
    ...dataAttrProps,
    onClick: handleClick,
    "data-test-automation-class": "avatar",
    clickable,
    ...rest
  }, avatar3, presenceChildren);
});
var RcAvatar = styled_components_default(withDeprecatedCheck(withTooltip(_RcAvatar), [
  {
    prop: "customColor",
    time: "2021-3",
    comment: `if 'true', will just use color value, use \`color\` directly `
  },
  {
    prop: "unClickable",
    time: "2021-3",
    comment: `force set avatar clickable, default is true, please use clickable to set clickable `
  },
  {
    prop: "isMember",
    time: "2021-3",
    comment: `not used, just keep type temp `
  },
  {
    prop: "displayName",
    time: "2021-3",
    comment: `not used, just keep type temp `
  },
  {
    prop: "alt",
    time: "2021-3",
    comment: `alt for img, just use \`<img src /> in children or imgProps for apply alt\` `
  },
  {
    prop: "tooltip",
    time: "2021-3",
    comment: `support tooltip for avatar, use title to replace `
  }
], "RcAvatar"))``;
RcAvatar.defaultProps = {
  size: "medium",
  presenceOrigin: {
    horizontal: "right",
    vertical: "bottom"
  }
};
RcAvatar.displayName = "RcAvatar";
var ExportType = RcAvatar;

// src/components/Avatar/utils/useAvatarColorToken.ts
import { useMemo as useMemo14 } from "react";
var AVATAR_COLORS = [
  "avatar.tomato",
  "avatar.blueberry",
  "avatar.oasis",
  "avatar.gold",
  "avatar.sage",
  "avatar.ash",
  "avatar.persimmon",
  "avatar.pear",
  "avatar.brass",
  "avatar.lake"
];
function getAvatarColorTokenFromId(id3) {
  let hash = 0;
  const total = AVATAR_COLORS.length;
  for (const i2 of `${id3 ?? ""}`) {
    hash = hash + String(i2).charCodeAt(0);
  }
  if (hash < 0)
    hash = -hash;
  return AVATAR_COLORS[hash % total];
}
var useAvatarColorToken = (id3) => {
  const result = useMemo14(() => getAvatarColorTokenFromId(id3), [id3]);
  return result;
};

// src/components/Avatar/utils/useAvatarShortName.ts
import { useMemo as useMemo15 } from "react";
function isValidOnlyLetterOrNumbers(value) {
  return /^[0-9A-Za-z\s\-~`!@#$%^&*()-_+=[\]{};:"',<.>/?，。？￥！……【】’“；《》（）]+$/.test(value);
}
function getFirstUpperCase(name) {
  return name && name[0].toUpperCase() || "";
}
function handleOnlyLetterOrNumbers(firstName, lastName) {
  const firstLetter = getFirstUpperCase(firstName);
  const lastLetter = getFirstUpperCase(lastName);
  return `${firstLetter}${lastLetter}`;
}
function handleOneOfName(firstName, lastName) {
  const names = !!firstName && firstName.split(/\s+/) || !!lastName && lastName.split(/\s+/);
  const firstLetter = getFirstUpperCase(names[0]);
  const lastLetter = getFirstUpperCase(names[1]);
  return `${firstLetter}${lastLetter}`;
}
function getAvatarShortName(firstName = "", lastName = "", email) {
  if (lastName || firstName) {
    const firstValid = isValidOnlyLetterOrNumbers(firstName);
    const lastValid = isValidOnlyLetterOrNumbers(lastName);
    if (firstValid && lastValid) {
      return handleOnlyLetterOrNumbers(firstName, lastName);
    }
    if (!firstValid && !lastValid) {
      return "";
    }
    return handleOneOfName(firstName, lastName);
  }
  if (email) {
    return handleOnlyLetterOrNumbers(email, "");
  }
  return "";
}
var useAvatarShortName = ({
  firstName,
  lastName,
  email
}) => {
  const result = useMemo15(() => getAvatarShortName(firstName, lastName, email), [email, firstName, lastName]);
  return result;
};

// src/components/Backdrop/Backdrop.tsx
import React589, { forwardRef as forwardRef526, useMemo as useMemo16 } from "react";

// src/components/Backdrop/styles/BackdropStyle.tsx
var BackdropStyle = () => {
  return css2``;
};

// src/components/Backdrop/utils/BackdropUtils.ts
var RcBackdropClasses = RcClasses([], "RcBackdrop");

// src/components/Backdrop/Backdrop.tsx
var _RcBackdrop = forwardRef526((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcBackdrop" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo16(() => combineClasses(RcBackdropClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React589.createElement(Backdrop_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcBackdrop = styled_components_default(_RcBackdrop)`
  ${BackdropStyle}
`;
RcBackdrop.defaultProps = {};
RcBackdrop.displayName = "RcBackdrop";

// src/components/Badge/Badge.tsx
import React591, {
  forwardRef as forwardRef528,
  useMemo as useMemo17
} from "react";

// src/components/Box/Box.tsx
import React590, { forwardRef as forwardRef527 } from "react";
var RcBox = forwardRef527((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcBox" });
  const addProps = { ref: ref2 };
  return /* @__PURE__ */ React590.createElement(Box_default2, {
    ...addProps,
    ...props
  });
});

// src/components/Badge/utils/BadgeUtils.ts
var RcBadgeClasses = RcClasses(["badge", "invisible"], "RcBadge");

// src/components/Badge/styles/BadgeStyle.tsx
var BadgeStyle = ({
  badgeContent,
  overlap,
  variant,
  textColor: textColor4,
  borderColor: borderColor2,
  max: max2,
  color: color2
}) => {
  const overlapNone = overlap === "none";
  const isStandard = variant !== "dot";
  const borderCurrColor = getParsePaletteColor(borderColor2, null, false);
  const manyChar = ["number", "string"].includes(typeof badgeContent) && `${badgeContent}`.length !== 1 || max2 && max2 > 0 && +badgeContent > max2;
  return css2`
    .${RcBadgeClasses.badge} {
      color: ${getParsePaletteColor(textColor4, null, false)};
      background-color: ${getParsePaletteColor(color2, null, false)};

      ${borderColor2 && css2`
        ${isStandard ? fakeBorder({ color: borderCurrColor, radius: "round" }) : css2`
              border-color: ${borderCurrColor};
            `}
      `};

      ${isStandard && css2`
        height: 18px;
        min-width: 18px;
        padding: ${!manyChar && 0};
      `}

      ${overlapNone && css2`
        position: unset;
        transform: unset;

        &.${RcBadgeClasses.invisible} {
          transform: scale(0);
        }
      `}
    }
  `;
};

// src/components/Badge/Badge.tsx
var _RcBadge = forwardRef528((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcBadge" });
  const {
    classes: classesProp,
    children: children2,
    overlap,
    color: color2,
    variant,
    textColor: textColor4,
    anchorOrigin,
    borderColor: borderColor2,
    component,
    dotComponent,
    dotProps,
    ...rest
  } = props;
  const classes = useMemo17(() => combineProps(RcBadgeClasses, classesProp), [classesProp]);
  const CustomDotBadge = useMemo17(() => {
    const isDot = variant === "dot";
    return isDot ? forwardRef528(({ children: OmitChildren, ...rest2 }, ref3) => {
      const { horizontal: horizontal2, vertical: vertical2 } = anchorOrigin;
      const addClassName = `MuiBadge-anchorOrigin${capitalize(vertical2)}${capitalize(horizontal2)}${capitalize(overlap)}`;
      const DotComponent = dotComponent ?? RcPresence;
      const applyDotProps = combineProps({ className: clsx_m_default(addClassName, RcBadgeClasses.badge) }, dotProps);
      return /* @__PURE__ */ React591.createElement("div", {
        ...rest2,
        ref: ref3
      }, children2, dotComponent !== null && /* @__PURE__ */ React591.createElement(RcBox, {
        position: "absolute",
        zIndex: "1",
        clone: true
      }, /* @__PURE__ */ React591.createElement(DotComponent, {
        ...applyDotProps
      })));
    }) : void 0;
  }, [anchorOrigin, children2, dotComponent, dotProps, overlap, variant]);
  return /* @__PURE__ */ React591.createElement(Badge_default, {
    ...rest,
    variant,
    anchorOrigin,
    component: component || CustomDotBadge,
    overlap: overlap !== "none" ? overlap : void 0,
    ref: ref2,
    classes
  }, children2);
});
var RcBadge = styled_components_default(_RcBadge)`
  ${BadgeStyle}
`;
RcBadge.defaultProps = {
  color: "highlight.b03",
  textColor: "neutral.f01",
  overlap: "rectangular",
  anchorOrigin: {
    horizontal: "right",
    vertical: "top"
  }
};
RcBadge.displayName = "RcBadge";

// src/components/Buttons/Button/Button.tsx
import React592, {
  forwardRef as forwardRef529,
  useCallback as useCallback25,
  useLayoutEffect as useLayoutEffect13,
  useMemo as useMemo18,
  useRef as useRef54
} from "react";

// src/components/Buttons/Button/utils/ButtonUtils.ts
var RcButtonClasses = RcClasses(["disabled", "contained", "text", "outlined", "endIcon", "startIcon"], "RcButton");
var RcButtonColors = {
  primary: palette22("interactive", "b02"),
  secondary: palette22("highlight", "b03"),
  negative: palette22("danger", "b04"),
  positive: palette22("success", "b04"),
  action: palette22("neutral", "elevation"),
  neutral: palette22("neutral", "b04")
};
var RcButtonTextColors = {
  primary: palette22("interactive", "f01"),
  secondary: palette22("highlight", "f02"),
  negative: palette22("danger", "f02"),
  positive: palette22("success", "f02"),
  action: palette22("neutral", "f01"),
  neutral: palette22("neutral", "f04")
};
var RcButtonTypographies = {
  xsmall: "caption1",
  small: "caption2",
  medium: "body2",
  large: "body2",
  xlarge: "subheading2"
};
var RcButtonHeights = {
  xsmall: 24,
  small: 28,
  medium: 32,
  large: 36,
  xlarge: 48
};
var RcButtonMinWidths = {
  xsmall: 0,
  small: 0,
  medium: 88,
  large: 96,
  xlarge: 140
};
var RcButtonPadding = {
  xsmall: 2,
  small: 4,
  medium: 3,
  large: 4,
  xlarge: 5
};
var RcButtonIconSpace = {
  xsmall: 1,
  small: 1.5,
  medium: 2,
  large: 2,
  xlarge: 3
};

// src/components/Buttons/Button/utils/getButtonIconSize.ts
function getButtonIconSize(size) {
  switch (size) {
    case "xlarge":
      return "large";
    case "large":
      return "medium";
    case "small":
    case "medium":
      return "small";
    case "xsmall":
      return "xsmall";
    default:
      return "inherit";
  }
}

// src/components/Buttons/Button/styles/StyledButton.tsx
var buttonColor = ({ color: color2 }) => typeof color2 === "string" && RcButtonColors[color2] || getParsePaletteColor(color2);
var plainButtonTextColor = ({
  color: color2
}) => typeof color2 === "string" && RcButtonTextColors[color2] || getParsePaletteColor(color2);
var buttonTextColor = (props) => paletteContrastText(buttonColor(props));
var buttonHoverColor = (props) => setOpacity(buttonColor(props), "08");
var containedButtonHoverColor = (props) => setOpacity(buttonColor(props), "08", true);
var buttonStyle = (props) => {
  const {
    variant,
    size,
    radius: radiusProp,
    keepElevation,
    loading,
    disabled: disabled3,
    disabledVariant
  } = props;
  const isMask = loading || disabled3 && disabledVariant === "mask";
  const textDisabledColor = !isMask ? palette22("disabled", "f02") : void 0;
  const plainTextColor = plainButtonTextColor(props);
  const iconSpace = spacing2(RcButtonIconSpace[size]);
  const isPlain = variant === "plain";
  return css2`
    text-transform: none;
    ${typography4(RcButtonTypographies[size], true)};
    text-align: center;
    box-shadow: ${!keepElevation && "unset"};
    border-radius: ${radiusProp && radius3(radiusProp)};

    ${isMask && css2`
      &:after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        height: 100%;
        width: 100%;
        display: block;
        background: ${setOpacity(palette22("neutral", "b01"), "32")};
        width: 100%;
        height: 100%;
        border-radius: ${radius3(radiusProp ?? "lg")};
      }
    `};

    ${!isPlain && css2`
      min-width: ${px2(RcButtonMinWidths[size])};
      min-height: ${px2(RcButtonHeights[size])};
      padding: ${spacing2(0, RcButtonPadding[size])};
    `};

    .${RcButtonClasses.startIcon} {
      margin-right: ${iconSpace};

      ${isPlain && css2`
        margin-left: 0;
      `};
    }

    .${RcButtonClasses.endIcon} {
      margin-left: ${iconSpace};

      ${isPlain && css2`
        margin-right: 0;
      `};
    }

    &.${RcButtonClasses.text} {
      color: ${plainButtonTextColor};

      &.${RcButtonClasses.disabled} {
        color: ${textDisabledColor};
      }

      ${nonTouchHoverMedia} {
        &:hover {
          background-color: ${buttonHoverColor};
        }
      }

      ${isPlain && css2`
        padding: ${spacing2(1)};
        min-width: unset;
        line-height: 1;

        ${nonTouchHoverMedia} {
          &:hover {
            color: ${setOpacity(plainTextColor, "80")};
            background-color: transparent;
          }
        }

        ${focusVisible} {
          ${fakeBorder({ color: plainButtonTextColor(props) })}
        }

        &:active {
          &.${RcButtonClasses.text} {
            color: ${setOpacity(plainTextColor, "64")};
          }
        }
      `};
    }

    &.${RcButtonClasses.contained} {
      color: ${buttonTextColor};
      background-color: ${buttonColor};

      ${nonTouchHoverMedia} {
        &:hover {
          background-color: ${containedButtonHoverColor};
        }
      }

      ${!isMask && css2`
        &.${RcButtonClasses.disabled} {
          background-color: ${palette22("disabled", "b01")};
          color: ${palette22("disabled", "f01")};
        }
      `}
    }

    &.${RcButtonClasses.outlined} {
      color: ${plainButtonTextColor};
      border-color: ${plainButtonTextColor};
      padding: ${spacing2(0, RcButtonPadding[size] - 0.25)};

      ${nonTouchHoverMedia} {
        &:hover {
          background-color: ${buttonHoverColor};
        }
      }

      &.${RcButtonClasses.disabled} {
        color: ${textDisabledColor};
        border-color: ${textDisabledColor};
      }

      &:after {
        top: -1px;
        bottom: -1px;
        left: -1px;
        right: -1px;
        border: 1px solid transparent;
      }
    }
  `;
};

// src/components/Buttons/Button/Button.tsx
var _RcButton = forwardRef529((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcButton" });
  const {
    children: childrenProp,
    classes: classesProp,
    startIcon: startIconProp,
    endIcon: endIconProp,
    loading,
    loadingMode,
    disabled: disabled3,
    IconProps,
    size,
    color: color2,
    CircularProgressProps,
    variant,
    disabledVariant,
    radius: radius4,
    keepElevation,
    ...rest
  } = props;
  const theme = RcUseTheme();
  const innerRef = useRef54(null);
  const buttonRef = useForkRef2(innerRef, ref2);
  const isPlain = variant === "plain";
  const isReplace = loadingMode === "replace";
  const iconSize = getButtonIconSize(size);
  const loadingElm = useMemo18(() => {
    if (loading) {
      const progressSize = RcIconSizes[iconSize];
      return /* @__PURE__ */ React592.createElement(RcCircularProgress, {
        size: progressSize,
        color: "inherit",
        ...CircularProgressProps
      });
    }
    return void 0;
  }, [CircularProgressProps, iconSize, loading]);
  const getCurrIcon = useCallback25((currIcon) => {
    if (isRcElement(currIcon, ["RcIcon"]) && currIcon.props.size === RcIcon.defaultProps.size) {
      return React592.cloneElement(currIcon, { size: iconSize });
    }
    return currIcon;
  }, [iconSize]);
  const startIcon = useMemo18(() => {
    if (loadingElm) {
      switch (loadingMode) {
        case "prefix":
          return loadingElm;
        case "replace":
          return void 0;
        default:
          break;
      }
    }
    if (startIconProp) {
      return getCurrIcon(startIconProp);
    }
    if (IconProps) {
      return /* @__PURE__ */ React592.createElement(RcIcon, {
        size: iconSize,
        ...IconProps
      });
    }
    return void 0;
  }, [
    IconProps,
    getCurrIcon,
    iconSize,
    loadingElm,
    loadingMode,
    startIconProp
  ]);
  const endIcon = useMemo18(() => {
    if (loadingElm) {
      switch (loadingMode) {
        case "suffix":
          return loadingElm;
        case "replace":
          return void 0;
        default:
          break;
      }
    }
    if (endIconProp) {
      return getCurrIcon(endIconProp);
    }
    return void 0;
  }, [loadingElm, endIconProp, loadingMode, getCurrIcon]);
  const classes = useMemo18(() => combineClasses(RcButtonClasses, classesProp), [classesProp]);
  useLayoutEffect13(() => {
    removeClassName(innerRef, "MuiButton-iconSizeMedium");
  });
  return /* @__PURE__ */ React592.createElement(Button_default, {
    ref: buttonRef,
    disabled: disabled3 || loading,
    variant: isPlain ? void 0 : variant,
    disableRipple: theme?.props?.MuiButton?.disableRipple || isPlain,
    startIcon,
    endIcon,
    classes,
    ...rest
  }, loading && isReplace ? loadingElm : childrenProp);
});
var RcButton = styled_components_default(withDeprecatedCheck(withTooltip(_RcButton), [
  {
    prop: "IconProps",
    time: "2021-4",
    comment: `@deprecated Icon, please use startIcon with \`<RcIcon />\` */`
  }
], "RcButton"))`
  ${buttonStyle}
`;
RcButton.defaultProps = {
  size: "large",
  color: "primary",
  variant: "contained",
  loadingMode: "replace"
};
RcButton.displayName = "RcButton";

// src/components/Buttons/ButtonGroup/ButtonGroup.tsx
import React593, { forwardRef as forwardRef530 } from "react";
var _RcButtonGroup = forwardRef530((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcButtonGroup" });
  return /* @__PURE__ */ React593.createElement(ButtonGroup_default, {
    ref: ref2,
    ...props
  });
});
var RcButtonGroup = styled_components_default(_RcButtonGroup)``;
RcButtonGroup.defaultProps = {};

// src/components/Buttons/IconButtonGroup/IconButtonGroup.tsx
import React594, { forwardRef as forwardRef531 } from "react";

// src/components/Buttons/IconButtonGroup/styles/IconButtonGroupStyle.tsx
var IconButtonGroupStyle = (props) => {
  const { direction, gap, space: spaceProp, radius: radiusProp } = props;
  const gapSpace = gap && spacing2(gap);
  const paddingValue = spaceProp && (spaceProp instanceof Array ? spacing2(...spaceProp) : spacing2(spaceProp));
  const isVertical = direction === "vertical";
  return css2`
      border-radius: ${radiusProp && radius3(radiusProp)};
      display: inline-flex;
      flex-direction: ${isVertical ? "column" : "row"};
      white-space: nowrap;
      flex-wrap: nowrap;
      flex-shrink: 0;
      align-items: center;
      padding: ${paddingValue};

      > * + * {
        ${isVertical ? css2`
              margin-top: ${gapSpace};
            ` : css2`
              margin-left: ${gapSpace};
            `};
      }
    `;
};

// src/components/Buttons/IconButtonGroup/IconButtonGroup.tsx
var _RcIconButtonGroup = forwardRef531((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcIconButtonGroup" });
  const {
    children: children2,
    isStopPropagation,
    onClick,
    onKeyUp,
    gap,
    space: space2,
    radius: radius4,
    component: Component7 = "div",
    ...rest
  } = props;
  const clickHandler = useEventCallback2((event) => {
    onClick?.(event);
    isStopPropagation && event.stopPropagation();
  });
  const handleOnKeyUp = useA11yKeyEvent(clickHandler, {
    preventDefault: false
  });
  const keyUpHandler = useEventCallback2((event) => {
    onKeyUp?.(event);
    isStopPropagation && event.stopPropagation();
    handleOnKeyUp(event);
  });
  return /* @__PURE__ */ React594.createElement(Component7, {
    onClick: clickHandler,
    onKeyUp: keyUpHandler,
    ref: ref2,
    ...rest
  }, children2);
});
var RcIconButtonGroup = styled_components_default(_RcIconButtonGroup)`
  ${IconButtonGroupStyle}
`;
RcIconButtonGroup.defaultProps = {
  gap: 0,
  direction: "horizontal"
};
RcIconButtonGroup.displayName = "RcIconButtonGroup";

// src/components/Buttons/SplitButton/SplitButton.tsx
import React598, {
  forwardRef as forwardRef534,
  useMemo as useMemo20,
  useRef as useRef55,
  useState as useState26
} from "react";

// src/components/Menu/Menu/Menu.tsx
import React596, {
  forwardRef as forwardRef533,
  memo as memo414,
  useMemo as useMemo19,
  useState as useState25
} from "react";

// src/components/Menu/Menu/MenuContext.ts
import { createContext as createContext10 } from "react";
var RcMenuContext = createContext10({
  menuId: "",
  autoClose: false,
  focusedMenuItemId: null,
  setFocusedMenuItemId: () => null,
  closeMenu: () => null
});

// src/components/Divider/Divider.tsx
import React595, { forwardRef as forwardRef532 } from "react";

// src/components/Divider/styles/StyledDivider.tsx
var full = "100%";
var DividerStyle = ({
  vertical: vertical2,
  size,
  color: color2,
  title,
  titleBgColor
}) => {
  const volume = `${size === "bold" ? 2 : 1}px`;
  return css2`
    position: relative;
    margin: 0;
    border: 0;
    flex-shrink: 0;
    overflow: initial;

    width: ${vertical2 ? volume : full};
    height: ${vertical2 ? full : volume};
    background-color: ${getParsePaletteColor(color2, null, false)};

    ${!(vertical2 || !title) && css2`
      &::after {
        content: '${title}';
        ${typography4("caption1")};
        color: ${palette22("neutral", "f06")};
        position: absolute;
        left: 50%;
        top: 50%;
        padding: ${spacing2(0, 4)};
        transform: translate(-50%, -50%);
        background-color: ${getParsePaletteColor(titleBgColor)};
      }
    `};
  `;
};

// src/components/Divider/Divider.tsx
var _RcDivider = forwardRef532((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDivider" });
  const {
    vertical: vertical2,
    size,
    color: color2,
    title,
    titleBgColor,
    component: ComponentProp = "hr",
    ...rest
  } = props;
  return /* @__PURE__ */ React595.createElement(ComponentProp, {
    ref: ref2,
    role: "separator",
    ...rest
  });
});
var RcDivider = styled_components_default(_RcDivider)`
  ${DividerStyle}
`;
RcDivider.displayName = "RcDivider";
RcDivider.defaultProps = {
  color: "neutral.l02",
  titleBgColor: "neutral.b01",
  size: "default"
};

// src/components/Menu/MenuList/styles/MenuListStyle.tsx
var DividerInMenuStyle = css2`
  ${RcDivider} {
    margin: ${spacing2(2, 0)};
  }
`;
var MenuListStyle = ({
  maxHeight: maxHeight2
}) => {
  return css2`
    overflow: auto;
    max-height: ${maxHeight2 && px2(maxHeight2)};
    ${DividerInMenuStyle};
  `;
};

// src/components/Menu/Menu/styles/MenuStyle.tsx
var MenuStyle = () => {
  return css2`
    ${DividerInMenuStyle};
  `;
};

// src/components/Menu/Menu/utils/MenuUtils.ts
var RcMenuClasses = RcClasses([], "RcMenu");

// src/components/Menu/Menu/Menu.tsx
var MemoMuiMenu = memo414(Menu_default);
var _RcMenu = forwardRef533((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcMenu" });
  const { classes: classesProp, children: children2, autoClose, onClose, ...rest } = props;
  const [focusedMenuItemId, setFocusedMenuItemId] = useState25(null);
  const id3 = useId2("menu-", true);
  const { externalWindow } = useRcPortalWindowContext();
  const classes = useMemo19(() => combineClasses(RcMenuClasses, classesProp), [classesProp]);
  const handleClose = useEventCallback2((event, reason) => {
    onClose?.(event, reason);
  });
  const ctxValue = useMemo19(() => ({
    menuId: id3,
    autoClose: !!autoClose,
    focusedMenuItemId,
    setFocusedMenuItemId,
    closeMenu: handleClose
  }), [autoClose, focusedMenuItemId, handleClose, id3]);
  return /* @__PURE__ */ React596.createElement(RcMenuContext.Provider, {
    value: ctxValue
  }, /* @__PURE__ */ React596.createElement(MemoMuiMenu, {
    container: externalWindow?.document.body,
    ...rest,
    ref: ref2,
    classes,
    onClose: handleClose,
    disableEnforceFocus: true
  }, children2));
});
var RcMenu = styled_components_default(_RcMenu)`
  ${MenuStyle};
`;
RcMenu.defaultProps = {
  variant: "selectedMenu",
  getContentAnchorEl: null,
  anchorReference: "anchorEl",
  anchorOrigin: { vertical: "bottom", horizontal: "left" }
};
RcMenu.displayName = "RcMenu";

// src/components/Buttons/SplitButton/styles/StyledArrowIcon.tsx
import React597 from "react";
var _StyledArrowIcon = (props) => /* @__PURE__ */ React597.createElement(RcIcon, {
  symbol: ArrowDown_default,
  size: "medium",
  ...props
});
var StyledArrowIcon = styled_components_default(_StyledArrowIcon)`
  transform: ${({ open }) => open && "rotate(180deg)"};

  &&& {
    color: inherit;
    margin-right: 0;
  }
`;

// src/components/Buttons/SplitButton/utils/SplitButtonUtils.ts
var RcSplitButtonClasses = RcClasses(["root", "groupedHorizontal", "actionButton", "controlButton", "menuOpen"], "RcSplitButton");
var RcSplitButtonTouchRippleClasses = RcClasses(["child", "ripplePulsate"], "RcSplitButton-TouchRipple");
var getVariant = (variant) => {
  switch (variant) {
    case "round":
      return "text";
    case "plainIcon":
      return "plain";
    default:
      return variant;
  }
};
var variantIsHandler = (variant) => {
  return (arr) => arr.includes(variant);
};

// src/components/Buttons/SplitButton/styles/StyledSplitButton.tsx
var transition2 = ({ theme }) => theme.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
  duration: theme.transitions.duration.short
});
var borderLeft2 = ({
  variant,
  color: color2,
  disabled: disabled3,
  theme
}) => {
  switch (variant) {
    case "plain":
    case "plainIcon":
      return css2``;
    case "outlined":
      return css2`
        padding-right: 1px;
        border-left: 1px solid
          ${disabled3 ? palette22("neutral", "f02") : plainButtonTextColor};
      `;
    case "text":
    case "round":
      return css2`
        align-self: stretch;
        padding-right: 1px;
        border-left: 1px solid transparent;
      `;
    default:
      return css2`
        padding-right: 1px;
        border-left: 1px solid
          ${setOpacity(buttonTextColor({ color: color2, theme }), "24")};
      `;
  }
};
var iconButtonStyle2 = ({
  size,
  variant
}) => {
  const currIconSize = RcIconButtonSizes[size];
  const currSize = currIconSize / 2;
  const space2 = toSpacing(currSize);
  const rightSpace = toSpacing(currSize - 4);
  const width2 = px2(currIconSize);
  return css2`
    .${RcSplitButtonClasses.groupedHorizontal} {
      &.${RcSplitButtonClasses.actionButton} {
        min-width: auto;
        ${variant === "plainIcon" ? css2`
              padding: 0;
              box-shadow: none;

              ${focusVisible} {
                ${plainIconButtonFocusStyle({ radius: "circle" })}
              }
            ` : css2`
              padding: ${spacing2(space2, rightSpace, space2, space2)};
            `};

        ${RcIcon} {
          margin-right: 0;
        }
      }

      &.${RcSplitButtonClasses.controlButton} {
        min-width: ${width2};
        width: ${width2};
      }
    }
  `;
};
var splitButtonStyle = (props) => {
  const { variant, disabled: disabled3, loading } = props;
  const variantIs = variantIsHandler(variant);
  const currColor = buttonColor(props);
  const isContainer = variant === "contained";
  const activeColor24 = setOpacity(currColor, "24");
  const containedActiveColor = setOpacity(currColor, "24", true);
  return css2`
    .${RcSplitButtonClasses.actionButton} {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;

      &:after {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
    }

    .${RcSplitButtonClasses.controlButton} {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;

      &:after {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }

    &.${RcSplitButtonClasses.root} {
      ${!disabled3 && variantIs(["outlined", "text", "round"]) && !loading && css2`
        transition: ${transition2};

        ${nonTouchHoverMedia} {
          &:hover {
            background: ${buttonHoverColor};
          }
        }
      `};

      ${variantIs(["text", "round", "plainIcon"]) && css2`
        align-items: center;

        ${!disabled3 && !loading && css2`
          ${nonTouchHoverMedia} {
            &:hover {
              .${RcSplitButtonClasses.controlButton} {
                border-left-color: ${activeColor24};
              }
            }
          }
        `}
      `};
    }

    .${RcSplitButtonClasses.groupedHorizontal} {
      ${variantIs(["outlined", "text", "contained"]) && css2`
        min-width: 72px;
      `};

      &.${RcSplitButtonClasses.controlButton} {
        padding: 0;
        min-width: 24px;
        ${borderLeft2};
      }

      &.${RcSplitButtonClasses.actionButton} {
        border-right: ${variant === "outlined" && 0};
      }

      &:not(.${RcSplitButtonClasses.actionButton}) {
        margin-left: 0;
      }

      ${variantIs(["plain", "plainIcon"]) && css2`
        &.${RcSplitButtonClasses.controlButton} {
          border-top-left-radius: inherit;
          border-bottom-left-radius: inherit;
          box-shadow: none;

          transition: ${transition2};

          ${!loading && css2`
            ${nonTouchHoverMedia} {
              &:hover {
                background: ${buttonHoverColor};
              }
            }

            ${focusVisible} {
              background: ${buttonHoverColor};
            }
          `};
        }

        &.${RcSplitButtonClasses.actionButton} {
          border-top-right-radius: inherit;
          border-bottom-right-radius: inherit;
        }
      `};
    }

    ${variant === "plainIcon" && css2`
      &.${RcSplitButtonClasses.root},
        .${RcSplitButtonClasses.groupedHorizontal} {
        border-radius: ${radius3("circle")};

        ${RcButton} {
          min-height: auto;
        }
      }
    `};

    ${variant === "round" && css2`
      &.${RcSplitButtonClasses.root} {
        border-radius: ${radius3("round")};
        overflow: hidden;

        ${RcButton} {
          min-height: auto;
        }

        .${RcSplitButtonTouchRippleClasses.child},
          .${RcSplitButtonTouchRippleClasses.ripplePulsate} {
          transform: scale(2);
        }

        .${RcSplitButtonClasses.groupedHorizontal} {
          &.${RcSplitButtonClasses.actionButton} {
            border-top-left-radius: ${radius3("round")};
            border-bottom-left-radius: ${radius3("round")};
          }

          &.${RcSplitButtonClasses.controlButton} {
            border-top-right-radius: ${radius3("round")};
            border-bottom-right-radius: ${radius3("round")};
          }
        }
      }
    `};

    ${variantIs(["round", "plainIcon"]) && iconButtonStyle2};

    &.${RcSplitButtonClasses.menuOpen} {
      ${!variantIs(["plain", "plainIcon"]) && css2`
        .${RcSplitButtonClasses.actionButton} {
          background: ${!isContainer && buttonHoverColor};
        }
      `};

      .${RcSplitButtonClasses.controlButton} {
        background: ${isContainer ? containedActiveColor : activeColor24};
      }
    }
  `;
};

// src/components/Buttons/SplitButton/SplitButton.tsx
var DEFAULT_DELAY = 166;
var _RcSplitButton = forwardRef534((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcSplitButton" });
  const {
    classes: classesProp,
    type: type3,
    size,
    color: color2,
    variant,
    disabled: disabled3,
    ControlButtonProps: ControlButtonPropsProp,
    ActionButtonProps: ActionButtonPropsProp,
    MenuProps,
    children: childrenProp,
    onOpen,
    onClose,
    className,
    loading,
    ...rest
  } = props;
  const theme = RcUseTheme();
  const {
    title: actionButtonTitle,
    className: actionButtonClassNameProp,
    ...ActionButtonProps
  } = ActionButtonPropsProp;
  const variantIs = variantIsHandler(variant);
  const toButtonSize = ["xlarge", "xxlarge", "xxxlarge"].includes(size) ? "large" : size;
  const {
    ArrowIconProps,
    onClick: onControlButtonClick,
    className: controlButtonClassNameProp,
    ...ControlButtonProps
  } = ControlButtonPropsProp;
  const [anchorEl, setAnchorEl] = useState26();
  const [enterNextDelay, setEnterNextDelay] = useState26(DEFAULT_DELAY);
  const innerRef = useRef55(null);
  const splitRef = useForkRef2(innerRef, ref2);
  const isMenuOpen = !!anchorEl;
  const isMenuEverOpen = useEver(isMenuOpen);
  const { classes, actionButtonClassName, controlButtonClassName } = useMemo20(() => {
    const result = combineClasses(RcSplitButtonClasses, classesProp);
    return {
      classes: omit3(result, ["actionButton", "controlButton", "menuOpen"]),
      actionButtonClassName: result?.actionButton,
      controlButtonClassName: result?.controlButton
    };
  }, [classesProp]);
  const handleClick = useEventCallback2(checkDefaultPrevented(() => {
    setAnchorEl(innerRef.current);
    onOpen?.();
  }));
  const handleClose = useEventCallback2(checkDefaultPrevented((event, reason) => {
    if (enterNextDelay === 0) {
      setEnterNextDelay(DEFAULT_DELAY);
    }
    setAnchorEl(null);
    MenuProps?.onClose?.(event, reason);
    onClose?.(event, reason);
  }));
  const SharedButtonProps = useMemo20(() => {
    return {
      type: type3,
      size: toButtonSize,
      color: color2,
      variant: getVariant(variant),
      disabled: loading ? true : void 0,
      disabledVariant: loading ? "mask" : void 0
    };
  }, [color2, loading, toButtonSize, type3, variant]);
  const { actionButtonProps, children: children2 } = useMemo20(() => {
    if (!(childrenProp instanceof Array)) {
      logInDev({
        component: "RcSplitButton",
        message: "children must be implement with RcSplitButtonChildrenProps[]"
      });
      return {};
    }
    const _children = [];
    let actionButtonProps2 = {};
    React598.Children.forEach(childrenProp, (child, i2) => {
      const {
        onClick,
        children: children3,
        useRcTooltip = true,
        TooltipProps,
        title
      } = child.props;
      if (i2 === 0) {
        actionButtonProps2 = {
          title: actionButtonTitle || title,
          useRcTooltip,
          TooltipProps,
          onClick,
          children: children3,
          className: combineClasses(actionButtonClassName, actionButtonClassNameProp)
        };
        return;
      }
      _children.push(React598.cloneElement(child, {
        ...i2 === 1 ? {
          TooltipProps: {
            enterNextDelay,
            onOpen: () => {
              if (enterNextDelay === DEFAULT_DELAY) {
                setEnterNextDelay(0);
              }
            }
          }
        } : {},
        ...child.props,
        ...combineProps({
          onClick: handleClose
        }, {
          onClick
        })
      }));
    });
    return {
      actionButtonProps: actionButtonProps2,
      children: _children
    };
  }, [
    actionButtonClassName,
    actionButtonClassNameProp,
    actionButtonTitle,
    childrenProp,
    enterNextDelay,
    handleClose
  ]);
  const TouchRippleProps = useMemo20(() => variant === "round" ? {
    classes: RcSplitButtonTouchRippleClasses
  } : {}, [variant]);
  const _ActionButtonProps = useMemo20(() => {
    return {
      TouchRippleProps,
      loading,
      ...actionButtonProps,
      ...SharedButtonProps,
      ...ActionButtonProps
    };
  }, [
    ActionButtonProps,
    SharedButtonProps,
    TouchRippleProps,
    actionButtonProps,
    loading
  ]);
  const _ControlButtonProps = useMemo20(() => {
    const combineControlProps = combineProps({
      onClick: handleClick,
      TouchRippleProps,
      className: controlButtonClassName
    }, {
      onClick: onControlButtonClick,
      className: controlButtonClassNameProp
    });
    return {
      useRcTooltip: true,
      ...SharedButtonProps,
      ...combineControlProps,
      ...ControlButtonProps
    };
  }, [
    handleClick,
    controlButtonClassName,
    onControlButtonClick,
    TouchRippleProps,
    controlButtonClassNameProp,
    SharedButtonProps,
    ControlButtonProps
  ]);
  return /* @__PURE__ */ React598.createElement(React598.Fragment, null, /* @__PURE__ */ React598.createElement(RcButtonGroup, {
    disableRipple: theme.props?.MuiButtonGroup?.disableRipple || variantIs(["plain", "plainIcon"]),
    ...rest,
    className: clsx_m_default(className, {
      [RcSplitButtonClasses.menuOpen]: isMenuOpen
    }),
    innerRef: splitRef,
    classes
  }, /* @__PURE__ */ React598.createElement(RcButton, {
    ..._ActionButtonProps
  }), /* @__PURE__ */ React598.createElement(RcButton, {
    "aria-haspopup": "listbox",
    ..._ControlButtonProps
  }, /* @__PURE__ */ React598.createElement(StyledArrowIcon, {
    open: isMenuOpen,
    size: variantIs(["round", "plainIcon"]) ? size : toButtonSize,
    ...ArrowIconProps
  }))), isMenuEverOpen && /* @__PURE__ */ React598.createElement(RcMenu, {
    ...MenuProps,
    anchorEl,
    open: isMenuOpen,
    onClose: handleClose
  }, children2));
});
var RcSplitButton = styled_components_default(_RcSplitButton)`
  ${splitButtonStyle}
`;
RcSplitButton.displayName = "RcSplitButton";
RcSplitButton.defaultProps = {
  size: RcButton.defaultProps.size,
  color: RcButton.defaultProps.color,
  variant: RcButton.defaultProps.variant,
  ControlButtonProps: {},
  ActionButtonProps: {},
  MenuProps: {},
  disableElevation: true
};

// src/components/Buttons/ToggleButton/ToggleButton.tsx
import React600, {
  forwardRef as forwardRef536,
  useLayoutEffect as useLayoutEffect14,
  useMemo as useMemo21,
  useRef as useRef56
} from "react";

// node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js
var import_prop_types114 = __toModule(require_prop_types());
import {
  createElement as createElement114,
  forwardRef as forwardRef535
} from "react";
var styles144 = function styles145(theme) {
  return {
    root: _extends({}, theme.typography.button, {
      boxSizing: "border-box",
      borderRadius: theme.shape.borderRadius,
      padding: 11,
      border: "1px solid ".concat(alpha(theme.palette.action.active, 0.12)),
      color: alpha(theme.palette.action.active, 0.38),
      "&$selected": {
        color: theme.palette.action.active,
        backgroundColor: alpha(theme.palette.action.active, 0.12),
        "&:hover": {
          backgroundColor: alpha(theme.palette.action.active, 0.15)
        },
        "& + &": {
          borderLeft: 0,
          marginLeft: 0
        }
      },
      "&$disabled": {
        color: alpha(theme.palette.action.disabled, 0.12)
      },
      "&:hover": {
        textDecoration: "none",
        backgroundColor: alpha(theme.palette.text.primary, 0.05),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        },
        "&$disabled": {
          backgroundColor: "transparent"
        }
      }
    }),
    disabled: {},
    selected: {},
    label: {
      width: "100%",
      display: "inherit",
      alignItems: "inherit",
      justifyContent: "inherit"
    },
    sizeSmall: {
      padding: 7,
      fontSize: theme.typography.pxToRem(13)
    },
    sizeLarge: {
      padding: 15,
      fontSize: theme.typography.pxToRem(15)
    }
  };
};
var ToggleButton = /* @__PURE__ */ forwardRef535(function ToggleButton2(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, onChange = props.onChange, onClick = props.onClick, selected = props.selected, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, value = props.value, other = _objectWithoutProperties(props, ["children", "classes", "className", "disabled", "disableFocusRipple", "onChange", "onClick", "selected", "size", "value"]);
  var handleChange = function handleChange2(event) {
    if (onClick) {
      onClick(event, value);
      if (event.isDefaultPrevented()) {
        return;
      }
    }
    if (onChange) {
      onChange(event, value);
    }
  };
  return /* @__PURE__ */ createElement114(ButtonBase_default, _extends({
    className: clsx_m_default(classes.root, className, disabled3 && classes.disabled, selected && classes.selected, size !== "medium" && classes["size".concat(capitalize(size))]),
    disabled: disabled3,
    focusRipple: !disableFocusRipple,
    ref: ref2,
    onClick: handleChange,
    onChange,
    value,
    "aria-pressed": selected
  }, other), /* @__PURE__ */ createElement114("span", {
    className: classes.label
  }, children2));
});
true ? ToggleButton.propTypes = {
  children: import_prop_types114.default.node.isRequired,
  classes: import_prop_types114.default.object.isRequired,
  className: import_prop_types114.default.string,
  disabled: import_prop_types114.default.bool,
  disableFocusRipple: import_prop_types114.default.bool,
  disableRipple: import_prop_types114.default.bool,
  onChange: import_prop_types114.default.func,
  onClick: import_prop_types114.default.func,
  selected: import_prop_types114.default.bool,
  size: import_prop_types114.default.oneOf(["small", "medium", "large"]),
  value: import_prop_types114.default.any.isRequired
} : void 0;
var ToggleButton_default = withStyles_default2(styles144, {
  name: "MuiToggleButton"
})(ToggleButton);

// src/components/Buttons/ToggleButton/utils/ToggleButtonUtils.ts
var RcToggleButtonClasses = RcClasses(["selected", "disabled", "label"], "RcToggleButton");
var RcToggleButtonSpace = {
  small: { area: 0.5, inner: 1, outer: 2 },
  medium: { area: 1, inner: 1, outer: 2 },
  large: { area: 1, inner: 2, outer: 4 }
};

// src/components/Buttons/ToggleButton/styles/ToggleButtonStyle.tsx
var actionColor = palette22("action", "grayLight");
var selectedBgColor = setOpacity(focusVisibleColor, "12");
var ToggleButtonStyle = (props) => {
  const { size, variant, disabled: disabled3 } = props;
  const space2 = spacing2(RcToggleButtonSpace[size].area);
  return css2`
    color: ${palette22("neutral", "f04")};
    border: unset;

    ${nonTouchHoverMedia} {
      &:hover {
        color: ${palette22("neutral", "f06")};
      }
    }

    &.${RcToggleButtonClasses.selected} {
      color: ${focusVisibleColor};
    }

    &.${RcToggleButtonClasses.disabled} {
      color: ${palette22("neutral", "f02")};
    }

    .${RcToggleButtonClasses.label} {
      position: relative;
      font-size: ${px2(RcIconSizes[size])};
    }

    ${variant === "standard" && css2`
      padding: ${space2};

      ${nonTouchHoverMedia} {
        &:hover {
          background-color: ${setOpacity(actionColor, "08")};
        }
      }

      ${focusVisibleShadowStyle("sm")};

      &:active {
        background-color: ${setOpacity(actionColor, "12")};
      }

      ${!disabled3 && css2`
        &.${RcToggleButtonClasses.selected},
          &.${RcToggleButtonClasses.selected}:hover {
          background-color: ${selectedBgColor};
        }
      `};
    `};

    ${variant === "box" && css2`
      padding: ${space2};

      &.${RcToggleButtonClasses.selected} {
        background-color: unset;
      }

      ${nonTouchHoverMedia} {
        &:hover,
        &.${RcToggleButtonClasses.selected}:hover {
          background-color: unset;
        }
      }

      ${focusVisible} {
        .${RcToggleButtonClasses.label} {
          ${plainIconButtonFocusStyle({ radius: "sm" })}
        }
      }
    `};
  `;
};

// src/components/Buttons/ToggleButton/ToggleButton.tsx
var _RcToggleButton = forwardRef536((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcToggleButton" });
  const {
    classes: classesProp,
    children: children2,
    size,
    variant,
    symbol,
    IconProps,
    ...rest
  } = props;
  const innerRef = useRef56(null);
  const buttonRef = useForkRef2(ref2, innerRef);
  const classes = useMemo21(() => combineClasses(RcToggleButtonClasses, classesProp), [classesProp]);
  useLayoutEffect14(() => {
    removeClassName(innerRef, "Mui-selected");
  });
  return /* @__PURE__ */ React600.createElement(ToggleButton_default, {
    ...rest,
    ref: buttonRef,
    innerRef: buttonRef,
    classes
  }, symbol && /* @__PURE__ */ React600.createElement(RcIcon, {
    symbol,
    size: "inherit",
    ...IconProps
  }), children2);
});
var RcToggleButton = styled_components_default(withTooltip(_RcToggleButton))`
  ${ToggleButtonStyle}
`;
RcToggleButton.defaultProps = {
  disableRipple: true,
  size: "medium",
  variant: "standard"
};
RcToggleButton.displayName = "RcToggleButton";

// src/components/Buttons/ToggleButtonGroup/ToggleButtonGroup.tsx
import React602, { forwardRef as forwardRef538, useMemo as useMemo22 } from "react";

// node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js
var import_react_is10 = __toModule(require_react_is2());
var import_prop_types115 = __toModule(require_prop_types());
import {
  Children as Children13,
  cloneElement as cloneElement26,
  createElement as createElement115,
  forwardRef as forwardRef537,
  isValidElement as isValidElement17
} from "react";

// node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js
function isValueSelected(value, candidate) {
  if (candidate === void 0 || value === void 0) {
    return false;
  }
  if (Array.isArray(candidate)) {
    return candidate.indexOf(value) >= 0;
  }
  return value === candidate;
}

// node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js
var styles146 = function styles147(theme) {
  return {
    root: {
      display: "inline-flex",
      borderRadius: theme.shape.borderRadius
    },
    vertical: {
      flexDirection: "column"
    },
    grouped: {},
    groupedHorizontal: {
      "&:not(:first-child)": {
        marginLeft: -1,
        borderLeft: "1px solid transparent",
        borderTopLeftRadius: 0,
        borderBottomLeftRadius: 0
      },
      "&:not(:last-child)": {
        borderTopRightRadius: 0,
        borderBottomRightRadius: 0
      }
    },
    groupedVertical: {
      "&:not(:first-child)": {
        marginTop: -1,
        borderTop: "1px solid transparent",
        borderTopLeftRadius: 0,
        borderTopRightRadius: 0
      },
      "&:not(:last-child)": {
        borderBottomLeftRadius: 0,
        borderBottomRightRadius: 0
      }
    }
  };
};
var ToggleButtonGroup = /* @__PURE__ */ forwardRef537(function ToggleButton3(props, ref2) {
  var children2 = props.children, classes = props.classes, className = props.className, _props$exclusive = props.exclusive, exclusive = _props$exclusive === void 0 ? false : _props$exclusive, onChange = props.onChange, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, value = props.value, other = _objectWithoutProperties(props, ["children", "classes", "className", "exclusive", "onChange", "orientation", "size", "value"]);
  var handleChange = function handleChange2(event, buttonValue) {
    if (!onChange) {
      return;
    }
    var index4 = value && value.indexOf(buttonValue);
    var newValue;
    if (value && index4 >= 0) {
      newValue = value.slice();
      newValue.splice(index4, 1);
    } else {
      newValue = value ? value.concat(buttonValue) : [buttonValue];
    }
    onChange(event, newValue);
  };
  var handleExclusiveChange = function handleExclusiveChange2(event, buttonValue) {
    if (!onChange) {
      return;
    }
    onChange(event, value === buttonValue ? null : buttonValue);
  };
  return /* @__PURE__ */ createElement115("div", _extends({
    role: "group",
    className: clsx_m_default(classes.root, className, orientation === "vertical" && classes.vertical),
    ref: ref2
  }, other), Children13.map(children2, function(child) {
    if (!/* @__PURE__ */ isValidElement17(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is10.isFragment)(child)) {
        console.error(["Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return /* @__PURE__ */ cloneElement26(child, {
      className: clsx_m_default(classes.grouped, classes["grouped".concat(capitalize(orientation))], child.props.className),
      onChange: exclusive ? handleExclusiveChange : handleChange,
      selected: child.props.selected === void 0 ? isValueSelected(child.props.value, value) : child.props.selected,
      size: child.props.size || size
    });
  }));
});
true ? ToggleButtonGroup.propTypes = {
  children: import_prop_types115.default.node,
  classes: import_prop_types115.default.object,
  className: import_prop_types115.default.string,
  exclusive: import_prop_types115.default.bool,
  onChange: import_prop_types115.default.func,
  orientation: import_prop_types115.default.oneOf(["horizontal", "vertical"]),
  size: import_prop_types115.default.oneOf(["large", "medium", "small"]),
  value: import_prop_types115.default.any
} : void 0;
var ToggleButtonGroup_default = withStyles_default2(styles146, {
  name: "MuiToggleButtonGroup"
})(ToggleButtonGroup);

// src/components/Buttons/ToggleButtonGroup/utils/ToggleButtonGroupUtils.ts
var RcToggleButtonGroupClasses = RcClasses(["groupedHorizontal", "groupedVertical"], "RcToggleButtonGroup");
var toggleButtonBetweenClassName = `${RcToggleButton}.${RcToggleButtonClasses.selected} + ${RcToggleButton}.${RcToggleButtonClasses.selected}`;

// src/components/Buttons/ToggleButtonGroup/styles/boxStyle.tsx
var boxStyle = ({
  size,
  orientation
}) => {
  const { inner: inner2, outer, area } = RcToggleButtonSpace[size];
  const isHorizontal2 = orientation !== "vertical";
  const radiusValue = radius3("round");
  const startPadding = spacing2(area + inner2 - 0.25);
  const endPadding = spacing2(area + inner2);
  const outerPadding = spacing2(area + outer);
  return css2`
    background-color: ${palette22("neutral", "elevation")};
    box-shadow: ${shadows4("1")};
    border-radius: ${radius3("round")};

    ${RcToggleButton} {
      ${isHorizontal2 ? css2`
            padding-left: ${startPadding};
            margin-left: 1px;
            padding-right: ${endPadding};
          ` : css2`
            padding-top: ${startPadding};
            margin-top: 1px;
            padding-bottom: ${endPadding};
          `};
    }

    ${RcToggleButton}:first-child {
      ${isHorizontal2 ? css2`
            border-top-left-radius: ${radiusValue};
            border-bottom-left-radius: ${radiusValue};
            padding-left: ${outerPadding};
            margin-left: 0px;
          ` : css2`
            border-top-left-radius: ${radiusValue};
            border-top-right-radius: ${radiusValue};
            padding-top: ${outerPadding};
            margin-top: 0px;
          `};
    }

    ${RcToggleButton}:last-child {
      ${isHorizontal2 ? css2`
            border-top-right-radius: ${radiusValue};
            border-bottom-right-radius: ${radiusValue};
            padding-right: ${outerPadding};
          ` : css2`
            border-bottom-left-radius: ${radiusValue};
            border-bottom-right-radius: ${radiusValue};
            padding-bottom: ${outerPadding};
          `};
    }
  `;
};

// src/components/Buttons/ToggleButtonGroup/styles/standardStyle.tsx
var standardStyle = ({
  orientation,
  size
}) => {
  const isHorizontal2 = orientation !== "vertical";
  const { inner: inner2, outer, area } = RcToggleButtonSpace[size];
  const margins = isHorizontal2 ? spacing2(inner2, inner2, inner2, inner2 + 0.25) : spacing2(inner2, inner2, inner2 + 0.25, inner2);
  const outerSpace = spacing2(outer);
  return css2`
    ${`${toggleButtonBetweenClassName},
  .${RcToggleButtonGroupClasses.groupedHorizontal},
  .${RcToggleButtonGroupClasses.groupedVertical}`} {
      margin: ${margins};
      padding: ${spacing2(area)};
      border: none;
      border-radius: ${radius3("sm")};

      ${isHorizontal2 ? css2`
            margin-top: 0;
            margin-bottom: 0;
          ` : css2`
            margin-left: 0;
            margin-right: 0;
          `};

      &:first-child {
        ${isHorizontal2 ? css2`
              margin-left: ${outerSpace};
            ` : css2`
              margin-top: ${outerSpace};
            `};
      }

      &:last-child {
        ${isHorizontal2 ? css2`
              margin-right: ${outerSpace};
            ` : css2`
              margin-bottom: ${outerSpace};
            `};
      }
    }
  `;
};

// src/components/Buttons/ToggleButtonGroup/styles/ToggleButtonGroupStyle.tsx
var dividerColor = palette22("neutral", "l02");
var ToggleButtonGroupStyle = (props) => {
  const { variant, size, orientation } = props;
  const isHorizontal2 = orientation !== "vertical";
  const { area, inner: inner2 } = RcToggleButtonSpace[size];
  const boxInnerPadding = spacing2(area + inner2 + 0.25);
  return css2`
    .${RcToggleButtonGroupClasses.groupedHorizontal}
      + .${RcToggleButtonGroupClasses.groupedHorizontal},
      .${RcToggleButtonGroupClasses.groupedVertical}
      + .${RcToggleButtonGroupClasses.groupedVertical} {
      ${RcIcon} {
        &:before {
          content: '';
          position: absolute;
          pointer-events: none;
          background: ${dividerColor};
          top: 0;
          left: 0;

          ${isHorizontal2 ? css2`
                height: 100%;
                width: 1px;
                transform: translateX(-${boxInnerPadding});
              ` : css2`
                height: 1px;
                width: 100%;
                transform: translateY(-${boxInnerPadding});
              `};
        }
      }
    }

    ${variant === "standard" && standardStyle};
    ${variant === "box" && boxStyle};
  `;
};

// src/components/Buttons/ToggleButtonGroup/ToggleButtonGroup.tsx
var _RcToggleButtonGroup = forwardRef538((inProps, ref2) => {
  const props = useThemeProps({
    props: inProps,
    name: "RcToggleButtonGroup"
  });
  const { classes: classesProp, children: children2, variant, size, ...rest } = props;
  const classes = useMemo22(() => combineClasses(RcToggleButtonGroupClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React602.createElement(ToggleButtonGroup_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2.map((x2, i2) => React602.cloneElement(x2, { key: `.${i2}`, size, variant })));
});
var RcToggleButtonGroup = styled_components_default(_RcToggleButtonGroup)`
  ${ToggleButtonGroupStyle}
`;
RcToggleButtonGroup.defaultProps = {
  size: "medium",
  variant: "standard"
};
RcToggleButtonGroup.displayName = "RcToggleButtonGroup";

// src/components/Card/Card/Card.tsx
import React603, { forwardRef as forwardRef539, useMemo as useMemo23, useState as useState27 } from "react";

// src/components/Card/Card/CardContext.ts
import { createContext as createContext11, useContext as useContext14 } from "react";
var RcCardContext = createContext11({
  setFocusVisible: () => {
  }
});
var useRcCardContext = () => useContext14(RcCardContext);

// src/components/Card/CardHoverActions/utils/CardHoverActionsUtils.ts
var RcCardHoverActionsClasses = RcClasses(["root", "visible"], "RcCardHoverActions");

// src/components/Card/Card/utils/CardUtils.ts
var RcCardClasses = RcClasses(["focusVisible", "selected"], "RcCard");

// src/components/Card/Card/styles/CardStyles.tsx
var CardStyle = (props) => {
  const { variant, square } = props;
  const isOutline = variant === "outlined";
  return css2`
    position: relative;
    background-color: ${palette22("neutral", "elevation")};

    ${isOutline && css2`
      border: 1px solid ${palette22("neutral", "l02")};
      border-radius: ${!square && radius3("xl")};

      &.${RcCardClasses.focusVisible}, &.${RcCardClasses.selected} {
        border-color: ${isOutline && palette22("interactive", "f01")};
      }

      &:not(:hover):not(:focus-within) .${RcCardHoverActionsClasses.root} {
        &:not(.${RcCardHoverActionsClasses.visible}) {
          opacity: ${isOutline && 0};
        }
      }
    `}
  `;
};

// src/components/Card/Card/Card.tsx
var _RcCard = forwardRef539((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCard" });
  const {
    classes: classesProp,
    className: classNameProp,
    selected,
    focusVisible: focusVisibleProp,
    ...rest
  } = props;
  const [focusVisible2, setFocusVisible] = useState27(false);
  const classes = useMemo23(() => combineClasses(omit3(RcCardClasses, ["selected", "focusVisible"]), classesProp), [classesProp]);
  const className = clsx_m_default(classNameProp, {
    [RcCardClasses.focusVisible]: focusVisibleProp || focusVisible2,
    [RcCardClasses.selected]: selected
  });
  return /* @__PURE__ */ React603.createElement(RcCardContext.Provider, {
    value: { focusVisible: focusVisible2, setFocusVisible }
  }, /* @__PURE__ */ React603.createElement(Card_default, {
    ...rest,
    className,
    ref: ref2,
    classes
  }));
});
var RcCard = styled_components_default(_RcCard)`
  ${CardStyle}
`;
RcCard.displayName = "RcCard";
RcCard.defaultProps = {};

// src/components/Card/CardActionArea/CardActionArea.tsx
import React604, { forwardRef as forwardRef540, useMemo as useMemo24 } from "react";

// src/components/Card/CardActionArea/utils/CardActionAreaUtils.ts
var RcCardActionAreaClasses = RcClasses(["root", "focusHighlight", "focusVisible", "disableRipple"], "RcCardActionArea");
var RcCardActionAreaRippleClasses = RcClasses(["root", "rippleVisible"], "RcCardActionAreaTouchRipple");

// src/components/Card/CardActionArea/styles/CardActionAreaStyle.tsx
var rippleAnimation = ({
  theme
}) => keyframes`
  0% {
    transform: scale(0);
    opacity: ${theme.opacity["08"]};
  }
  100% {
    transform: scale(1);
    opacity: ${theme.opacity["24"]};
  }
`;
var CardActionAreaStyle = () => {
  return css2`
      &.${RcCardActionAreaClasses.focusVisible}
        .${RcCardActionAreaClasses.focusHighlight} {
        opacity: 0;
      }

      .${RcCardActionAreaRippleClasses.root} {
        color: ${palette22("action", "grayLight")};
      }

      .${RcCardActionAreaRippleClasses.rippleVisible} {
        opacity: ${opacity3("24")};
        animation-name: ${rippleAnimation};
      }

      &.${RcCardActionAreaClasses.disableRipple}:active {
        background-color: ${palette22("action", "grayLight", 0.24)};
      }
    `;
};

// src/components/Card/CardActionArea/CardActionArea.tsx
var _RcCardActionArea = forwardRef540((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCardActionArea" });
  const {
    className: classNameProp,
    classes: classesProp,
    TouchRippleProps: TouchRipplePropsProp,
    onFocusVisible,
    onBlur,
    disableRipple,
    disableTouchRipple,
    ...rest
  } = useThemeProps({ props, name: "MuiButtonBase" });
  const { setFocusVisible } = useRcCardContext();
  const events = useMemo24(() => combineProps({
    onFocusVisible: () => setFocusVisible(true),
    onBlur: () => setFocusVisible(false)
  }, {
    onFocusVisible,
    onBlur
  }), [onBlur, onFocusVisible, setFocusVisible]);
  const classes = useMemo24(() => combineClasses(omit3(RcCardActionAreaClasses, ["disableRipple"]), classesProp), [classesProp]);
  const className = clsx_m_default(classNameProp, {
    [RcCardActionAreaClasses.disableRipple]: disableRipple || disableTouchRipple
  });
  const TouchRippleProps = useMemo24(() => combineProps({ classes: RcCardActionAreaRippleClasses }, TouchRipplePropsProp), [TouchRipplePropsProp]);
  return /* @__PURE__ */ React604.createElement(CardActionArea_default, {
    ...rest,
    ...events,
    ref: ref2,
    className,
    classes,
    TouchRippleProps,
    disableRipple,
    disableTouchRipple
  });
});
var RcCardActionArea = overridableStyled(_RcCardActionArea)`
  ${CardActionAreaStyle}
`;
RcCardActionArea.defaultProps = {};
RcCardActionArea.displayName = "RcCardActionArea";

// src/components/Card/CardMedia/CardMedia.tsx
import React605, { forwardRef as forwardRef541, useMemo as useMemo25 } from "react";

// src/components/Card/CardMedia/styles/CardMediaStyle.tsx
var CardMediaStyle = () => {
  return css2``;
};

// src/components/Card/CardMedia/utils/CardMediaUtils.ts
var RcCardMediaClasses = RcClasses(["root"], "RcCardMedia");

// src/components/Card/CardMedia/CardMedia.tsx
var _RcCardMedia = forwardRef541((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCardMedia" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo25(() => combineClasses(RcCardMediaClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React605.createElement(CardMedia_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcCardMedia = overridableStyled(_RcCardMedia)`
  ${CardMediaStyle}
`;
RcCardMedia.defaultProps = {};
RcCardMedia.displayName = "RcCardMedia";

// src/components/Card/CardContent/CardContent.tsx
import React606, { forwardRef as forwardRef542, useMemo as useMemo26 } from "react";

// src/components/Card/CardContent/styles/CardContentStyle.tsx
var CardContentStyle = () => {
  return css2`
    padding: ${spacing2(4)};
  `;
};

// src/components/Card/CardContent/utils/CardContentUtils.ts
var RcCardContentClasses = RcClasses(["root"], "RcCardContent");

// src/components/Card/CardContent/CardContent.tsx
var _RcCardContent = forwardRef542((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCardContent" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo26(() => combineClasses(RcCardContentClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React606.createElement(CardContent_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcCardContent = styled_components_default(_RcCardContent)`
  ${CardContentStyle}
`;
RcCardContent.defaultProps = {};
RcCardContent.displayName = "RcCardContent";

// src/components/Card/CardHeader/CardHeader.tsx
import React607, { forwardRef as forwardRef543, useMemo as useMemo27 } from "react";

// src/components/Card/CardHeader/styles/CardHeaderStyle.tsx
var CardHeaderStyle = () => {
  return css2``;
};

// src/components/Card/CardHeader/utils/CardHeaderUtils.ts
var RcCardHeaderClasses = RcClasses([], "RcCardHeader");

// src/components/Card/CardHeader/CardHeader.tsx
var _RcCardHeader = forwardRef543((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCardHeader" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo27(() => combineClasses(RcCardHeaderClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React607.createElement(CardHeader_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcCardHeader = overridableStyled(_RcCardHeader)`
  ${CardHeaderStyle}
`;
RcCardHeader.defaultProps = {};
RcCardHeader.displayName = "RcCardHeader";

// src/components/Card/CardActions/CardActions.tsx
import React608, { forwardRef as forwardRef544, useMemo as useMemo28 } from "react";

// src/components/Card/CardActions/styles/CardActionsStyle.tsx
var CardActionsStyle = () => {
  return css2`
    position: relative;
    padding: ${spacing2(0, 4, 4, 4)};
    z-index: 2;
  `;
};

// src/components/Card/CardActions/utils/CardActionsUtils.ts
var RcCardActionsClasses = RcClasses([], "RcCardActions");

// src/components/Card/CardActions/CardActions.tsx
var _RcCardActions = forwardRef544((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCardActions" });
  const { classes: classesProp, ...rest } = props;
  const classes = useMemo28(() => combineClasses(RcCardActionsClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React608.createElement(CardActions_default, {
    ...rest,
    ref: ref2,
    classes
  });
});
var RcCardActions = styled_components_default(_RcCardActions)`
  ${CardActionsStyle}
`;
RcCardActions.defaultProps = {};
RcCardActions.displayName = "RcCardActions";

// src/components/Card/CardHoverActions/CardHoverActions.tsx
import React609, { forwardRef as forwardRef545, useMemo as useMemo29 } from "react";

// src/components/Card/CardHoverActions/styles/CardHoverActionsStyle.tsx
var hoverTransitionEasing = `cubic-bezier(0.25, 0.8, 0.25, 1)`;
var hoverTransition = ({ theme }) => theme.transitions.create(["opacity"], {
  easing: hoverTransitionEasing,
  duration: theme.transitions.duration.standard
});
var CardHoverActionsStyle = () => {
  return css2`
    position: absolute;
    right: 0;
    top: 0;
    padding: ${spacing2(4)};
    transition: ${hoverTransition};
  `;
};

// src/components/Card/CardHoverActions/CardHoverActions.tsx
var _RcCardHoverActions = forwardRef545((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCardHoverActions" });
  const { className: classNameProp, visible, ...rest } = props;
  const className = useMemo29(() => clsx_m_default(classNameProp, RcCardHoverActionsClasses.root, {
    [RcCardHoverActionsClasses.visible]: visible
  }), [classNameProp, visible]);
  return /* @__PURE__ */ React609.createElement("div", {
    ...rest,
    ref: ref2,
    className
  });
});
var RcCardHoverActions = styled_components_default(_RcCardHoverActions)`
  ${CardHoverActionsStyle}
`;
RcCardHoverActions.defaultProps = {};
RcCardHoverActions.displayName = "RcCardHoverActions";

// src/components/Card/CardSelectionArea/CardSelectionArea.tsx
import React610, { forwardRef as forwardRef546, useMemo as useMemo30 } from "react";

// src/components/Card/CardSelectionArea/utils/CardSelectionAreaUtils.ts
var RcCardSelectionAreaClasses = RcClasses(["root", "checked", "iconOuterCircle", "iconInnerCircle", "icon"], "RcCardSelectionArea");

// src/components/Card/CardSelectionArea/styles/CardSelectionAreaStyle.tsx
var CardSelectionAreaStyle = () => {
  const innerCircleSize = RcIconButtonSizes.small;
  return css2`
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 0;

    ${nonTouchHoverMedia} {
      &&:hover {
        background-color: ${setOpacity(palette22("action", "grayLight"), "08")};
      }
    }

    .${RcCardSelectionAreaClasses.iconOuterCircle} {
      position: absolute;
      right: 0;
      top: 0;
      margin: ${spacing2(2)};
      border-radius: ${radius3("circle")};
      padding: ${spacing2(1)};
      background-color: ${palette22("neutral", "b01")};
      box-shadow: ${shadows4("1")};

      .${RcCardSelectionAreaClasses.iconInnerCircle} {
        box-sizing: border-box;
        display: flex;
        align-items: center;
        justify-content: center;
        height: ${px2(innerCircleSize)};
        width: ${px2(innerCircleSize)};
        border-radius: ${radius3("circle")};
        border: 1px solid ${palette22("interactive", "f01")};
        background-color: ${palette22("neutral", "b01")};
      }
    }

    &.${RcCardSelectionAreaClasses.checked}
      .${RcCardSelectionAreaClasses.iconInnerCircle} {
      height: ${px2(innerCircleSize)};
      width: ${px2(innerCircleSize)};
      border: none;
      background-color: ${palette22("interactive", "f01")};
    }
  `;
};

// src/components/Card/CardSelectionArea/CardSelectionArea.tsx
var SelectionIcon = ({ checked }) => {
  const { iconOuterCircle, iconInnerCircle, icon } = RcCardSelectionAreaClasses;
  return /* @__PURE__ */ React610.createElement("div", {
    className: iconOuterCircle
  }, /* @__PURE__ */ React610.createElement("div", {
    className: iconInnerCircle
  }, checked && /* @__PURE__ */ React610.createElement(RcIcon, {
    className: icon,
    symbol: Check_default,
    size: "small",
    color: "neutral.f01"
  })));
};
var _RcCardSelectionArea = forwardRef546((inProps, ref2) => {
  const props = useThemeProps({
    props: inProps,
    name: "RcCardSelectionArea"
  });
  const { classes: classesProp, onFocusVisible, onBlur, ...rest } = props;
  const { setFocusVisible } = useRcCardContext();
  const events = useMemo30(() => combineProps({
    onFocusVisible: () => setFocusVisible(true),
    onBlur: () => setFocusVisible(false)
  }, {
    onFocusVisible,
    onBlur
  }), [onBlur, onFocusVisible, setFocusVisible]);
  const classes = useMemo30(() => omit3(combineClasses(RcCardSelectionAreaClasses, classesProp), [
    "iconInnerCircle",
    "iconOuterCircle",
    "icon"
  ]), [classesProp]);
  return /* @__PURE__ */ React610.createElement(Checkbox_default, {
    ...rest,
    ...events,
    ref: ref2,
    classes,
    icon: /* @__PURE__ */ React610.createElement(SelectionIcon, null),
    checkedIcon: /* @__PURE__ */ React610.createElement(SelectionIcon, {
      checked: true
    }),
    disableRipple: true
  });
});
var RcCardSelectionArea = styled_components_default(_RcCardSelectionArea)`
  ${CardSelectionAreaStyle}
`;
RcCardSelectionArea.defaultProps = {};
RcCardSelectionArea.displayName = "RcCardSelectionArea";

// src/components/Chip/Chip.tsx
import React612, {
  forwardRef as forwardRef548,
  useMemo as useMemo31
} from "react";

// src/components/Forms/TextField/styles/ClearIconButton.tsx
import React611, { forwardRef as forwardRef547 } from "react";
var _ClearIconButton = forwardRef547(({ onMouseDown, ...rest }, ref2) => {
  return /* @__PURE__ */ React611.createElement(RcIconButton, {
    ref: ref2,
    type: "button",
    "aria-hidden": true,
    variant: "plain",
    symbol: DeleteCircle_default,
    tabIndex: -1,
    onMouseDown: (e2) => {
      e2.preventDefault();
      onMouseDown?.(e2);
    },
    ...rest
  });
});
var ClearIconButton = styled_components_default(_ClearIconButton)``;

// src/components/Forms/TextField/utils/OutlineTextFieldUtils.ts
var RcOutlineTextFieldInputClasses = RcClasses(["input", "root", "focused", "disabled", "error"], "RcOutlineTextFieldInput");
var RcOutlineTextFieldSpaces = {
  small: {
    outside: 3,
    inside: 2,
    y: 1
  },
  medium: {
    outside: 4,
    inside: 3,
    insideLeft: 4,
    y: 2
  },
  large: {
    outside: 4,
    inside: 3,
    insideLeft: 4,
    y: 3
  }
};
var RcOutlineTextFieldLabelMargins = {
  small: 5,
  medium: 5.5,
  large: 6
};
var RcOutlineTextFieldHeights = {
  small: 32,
  medium: 40,
  large: 48
};
var RcOutlineTextFieldFontStyles = {
  small: "body1",
  medium: "subheading1",
  large: "subheading1"
};
var RcOutlineTextFieldIconSizes = {
  small: "small",
  medium: "medium",
  large: "medium"
};

// src/components/Forms/TextField/utils/TextFieldUtils.ts
var RcTextFieldClasses = RcClasses(["root"], "RcTextField");
var RcTextFieldInputClasses = RcClasses(["root", "underline", "error", "focused", "disabled", "input"], "RcTextFieldInput");
var RcTextFieldInputLabelClasses = RcClasses(["root", "error", "focused", "disabled"], "RcTextFieldInputLabel");
var RcTextFieldFormHelperTextClasses = RcClasses(["root", "error", "disabled"], "RcTextFieldFormHelperText");
var belowIconButtonSpacing = (spaceNum) => {
  const themeFn = ({ clearBtn }) => {
    if (clearBtn) {
      return css2`
        *:not(input) + ${RcIconButton} {
          margin-left: ${spaceNum};
        }
      `;
    }
    return css2`
      ${RcIconButton} {
        margin-left: ${spaceNum};
      }
    `;
  };
  return themeFn;
};

// src/components/Forms/TextField/styles/OutlineTextFieldStyle.tsx
var OutlineTextFieldStyle = ({
  radius: radius4,
  size,
  color: colorProp,
  multiline
}) => {
  const height2 = px2(RcOutlineTextFieldHeights[size]);
  const { inside, outside, insideLeft, y: y2 } = RcOutlineTextFieldSpaces[size];
  const labelMargin = RcOutlineTextFieldLabelMargins[size];
  const typographyToken = RcOutlineTextFieldFontStyles[size];
  const currRadius = radius3(radius4);
  const borderColor2 = getParsePaletteColor(colorProp, palette22("neutral", "l03"));
  const focusBorderColor = getParsePaletteColor(colorProp, palette22("interactive", "f01"));
  return css2`
    .${RcOutlineTextFieldInputClasses.input} {
      ${typography4(typographyToken)};
    }

    ${belowIconButtonSpacing(spacing2(inside))};

    * + .${RcOutlineTextFieldInputClasses.input} {
      margin-left: ${spacing2(insideLeft || inside)};
    }

    &.${RcTextFieldClasses.root} {
      label + .${RcOutlineTextFieldInputClasses.root} {
        margin-top: ${spacing2(labelMargin)};
      }
    }

    .${RcOutlineTextFieldInputClasses.root} {
      -webkit-tap-highlight-color: transparent;
      min-height: ${height2};
      background: ${palette22("neutral", "b01")};
      padding: ${spacing2(multiline ? y2 : 0, outside)};
      border-radius: ${currRadius};

      &:before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        border-radius: ${currRadius};
        transition: none;
        border-bottom: none !important;
        pointer-events: none;
        ${fakeBorder({ color: borderColor2 })};
      }

      &:not(.${RcOutlineTextFieldInputClasses.focused}):not(.${RcOutlineTextFieldInputClasses.disabled}):hover {
        background: ${palette22("neutral", "b02")};
      }
    }

    .${RcOutlineTextFieldInputClasses.focused} {
      &:before {
        ${fakeBorder({ color: focusBorderColor })};
      }
    }

    .${RcOutlineTextFieldInputClasses.error} {
      &:before {
        ${fakeBorder({ color: palette22("danger", "f02") })};
      }
    }

    .${RcOutlineTextFieldInputClasses.disabled} {
      background: ${palette22("neutral", "b03")};
      &:before {
        ${fakeBorder({ color: palette22("disabled", "f02") })};
      }
    }
  `;
};

// src/components/Forms/TextField/styles/TextFieldStyle.tsx
var idleColor = palette22("neutral", "f04");
var errorTextColor = palette22("danger", "f02");
var errorColor = palette22("danger", "f02");
var textColor2 = palette22("neutral", "f06");
var disabledColor = palette22("disabled", "f02");
var placeholderColor = palette22("neutral", "f03");
var RcDefaultTextFieldWidth = "168px";
var focusWithNotDisabled = `.${RcTextFieldInputClasses.root}:hover:not(.${RcTextFieldInputClasses.disabled})`;
var TextFieldInputHoverFocusStyle = css2`
  ${ClearIconButton} {
    display: inline-flex;
  }
`;
var clearBtnInactiveStyle = css2`
  ${nonTouchHoverMedia} {
    ${focusWithNotDisabled} {
      ${TextFieldInputHoverFocusStyle}
    }
  }

  .${RcTextFieldInputClasses.focused} {
    ${TextFieldInputHoverFocusStyle}
  }
`;
var TextFieldStyle = (props) => {
  const {
    value,
    variant,
    fullWidth,
    clearBtn,
    size,
    textVariant,
    gutterBottom,
    align,
    color: colorProp
  } = props;
  const showClean = isFilled2({ value });
  const color2 = getParsePaletteColor(colorProp, palette22("interactive", "f01"));
  const labelRootColor = getParsePaletteColor(colorProp, idleColor);
  const underlineColor = getParsePaletteColor(colorProp, palette22("neutral", "f02"));
  const underlineFocusColor = getParsePaletteColor(colorProp, palette22("neutral", "f06"));
  return css2`
    ${belowIconButtonSpacing(spacing2(3))};

    width: ${!fullWidth && RcDefaultTextFieldWidth};

    ${gutterBottom && css2`
      &.${RcTextFieldClasses.root} {
        margin: 0 0 ${spacing2(4)} 0;
      }
    `};

    .${RcTextFieldInputLabelClasses.root} {
      ${typography4("caption2")};
      color: ${labelRootColor};
      transform: scale(1);
    }

    .${RcTextFieldInputLabelClasses.focused} {
      color: ${color2};
    }

    .${RcTextFieldInputClasses.root} {
      color: ${textColor2};

      ${ClearIconButton} {
        display: none;
      }
    }

    ${showClean && clearBtnInactiveStyle};

    .${RcTextFieldInputClasses.input} {
      ${typography4(variant === "borderLess" ? textVariant : "subheading1")};
      text-align: ${align};

      ::placeholder {
        color: ${placeholderColor};
        opacity: 1;
      }

      ${clearBtn && align && align !== "left" && css2`
        width: calc(100% - ${px2(RcIconButtonSizes[size])});
      `};
    }

    .${RcTextFieldInputClasses.underline} {
      &:before {
        border-bottom-color: ${underlineColor};
      }

      ${nonTouchHoverMedia} {
        &:hover:not(.${RcTextFieldInputClasses.disabled}) {
          &:before {
            border-bottom-color: ${underlineFocusColor};
          }
        }
      }

      &:after {
        border-bottom-color: ${color2};
      }
    }

    .${RcTextFieldInputClasses.error} {
      &:after {
        border-bottom-color: ${errorColor};
      }
    }

    .${RcTextFieldInputClasses.disabled} {
      color: ${disabledColor};
      // * safari need that in disabled input
      -webkit-text-fill-color: ${disabledColor};
      ::placeholder {
        color: ${disabledColor};
      }
      &:before {
        border-bottom-style: solid;
        border-bottom-color: ${disabledColor};
      }
      &:after {
        border-bottom-style: none;
      }
    }

    .${RcTextFieldFormHelperTextClasses.root} {
      ${typography4("caption1")};
      color: ${idleColor};
    }

    .${RcTextFieldFormHelperTextClasses.error},
      .${RcTextFieldInputLabelClasses.error} {
      color: ${errorTextColor};
    }

    .${RcTextFieldFormHelperTextClasses.disabled},
      .${RcTextFieldInputLabelClasses.disabled} {
      color: ${disabledColor};
    }

    /* clears the 'X' from Internet Explorer */
    input[type='search']::-ms-clear,
    input[type='search']::-ms-reveal {
      display: none;
      width: 0;
      height: 0;
    }

    /* clears the 'X' from Chrome */
    input[type='search']::-webkit-search-decoration,
    input[type='search']::-webkit-search-cancel-button,
    input[type='search']::-webkit-search-results-button,
    input[type='search']::-webkit-search-results-decoration {
      display: none;
    }

    ${variant === "outline" && OutlineTextFieldStyle}
  `;
};

// src/components/Chip/utils/ChipUtils.ts
var RcChipClasses = RcClasses(["avatar", "disabled", "deleteIcon", "focused"], "RcChip");

// src/components/Chip/styles/ChipStyle.tsx
var defaultBgColor = palette22("action", "grayDark");
var errorBgColor = palette22("danger", "f02");
function fakePseudoRoundBorder(addOptions) {
  return fakeBorder({ pseudo: true, radius: "round", ...addOptions });
}
var ChipStyle = (props) => {
  const { isError: isError2, error: error4 = isError2, color: colorProp } = props;
  const color2 = getParsePaletteColor(colorProp, focusVisibleColor);
  return css2`
    height: 28px;
    box-sizing: border-box;
    padding: ${spacing2(0.5)};
    background-color: ${palette22("neutral", "b03")};
    color: ${textColor2};
    position: relative;
    border-radius: ${radius3("round")};
    ${ellipsis};

    ${typography4("body1")};
    ${fakePseudoRoundBorder()};

    &.${RcChipClasses.focused}, ${focusVisible} {
      ${fakePseudoRoundBorder({ color: color2 })};

      background-color: ${setOpacity(error4 ? errorBgColor : defaultBgColor, "08")};
    }

    ${nonTouchHoverMedia} {
      &:hover {
        background-color: ${setOpacity(defaultBgColor, "12")};
      }
    }

    &.${RcChipClasses.focused}, &:focus {
      background-color: ${setOpacity(defaultBgColor, "16")};
    }

    &:active {
      background-color: ${setOpacity(defaultBgColor, "24")};
    }

    &.${RcChipClasses.disabled} {
      color: ${disabledColor};
      opacity: 1;
    }

    ${error4 && css2`
      &:not(.${RcChipClasses.disabled}) {
        color: ${palette22("danger", "f02")};
        ${fakePseudoRoundBorder({ color: palette22("danger", "f02") })};

        background-color: ${palette22("danger", "b01")};

        ${nonTouchHoverMedia} {
          &:hover {
            background-color: ${setOpacity(errorBgColor, "08")};
          }
        }

        &:focus {
          background-color: ${setOpacity(errorBgColor, "16")};
        }

        &:active {
          background-color: ${setOpacity(errorBgColor, "24")};
        }
      }
    `};

    .${RcChipClasses.avatar} {
      color: ${palette22("neutral", "b01")};
      margin-left: 0px;
      margin-right: -4px;

      span {
        width: auto;
        height: auto;
      }
    }
  `;
};

// src/components/Chip/Chip.tsx
var _RcChip = forwardRef548((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcChip" });
  const {
    Avatar: AvatarProp,
    deleteTooltip,
    deleteAutomationId,
    isError: isError2,
    classes: classesProp,
    avatar: avatarProp = AvatarProp,
    error: error4 = isError2,
    id: id3,
    label: label3,
    disabled: disabled3,
    deleteIcon: deleteIconProp,
    deleteIconProps,
    tabIndex,
    focused,
    color: color2,
    className,
    ...rest
  } = props;
  const combinedClasses = useMemo31(() => combineClasses(RcChipClasses, classesProp), [classesProp]);
  const classes = useMemo31(() => omit3(combinedClasses, ["focused"]), [combinedClasses]);
  const deleteIcon = useMemo31(() => {
    return deleteIconProp ? React612.cloneElement(deleteIconProp, {
      tabIndex: -1,
      ...deleteIconProps
    }) : /* @__PURE__ */ React612.createElement(RcIconButton, {
      tabIndex: -1,
      disabled: disabled3,
      variant: "plain",
      size: "medium",
      title: deleteTooltip,
      color: error4 ? "danger.f02" : void 0,
      "data-test-automation-id": deleteAutomationId,
      symbol: DeleteCircle_default,
      ...deleteIconProps
    });
  }, [
    deleteIconProp,
    deleteIconProps,
    disabled3,
    deleteTooltip,
    error4,
    deleteAutomationId
  ]);
  const avatar3 = useMemo31(() => {
    if (avatarProp) {
      if (React612.isValidElement(avatarProp) && isRcElement(avatarProp, ["RcAvatar"]) && avatarProp.props.size === "medium") {
        return React612.cloneElement(avatarProp, {
          size: "xxsmall"
        });
      }
      return avatarProp;
    }
    return void 0;
  }, [avatarProp]);
  return /* @__PURE__ */ React612.createElement(Chip_default, {
    ref: ref2,
    id: id3,
    tabIndex: disabled3 ? -1 : tabIndex,
    label: label3,
    disabled: disabled3,
    classes,
    className: clsx_m_default(className, focused ? combinedClasses.focused : void 0),
    avatar: avatar3,
    deleteIcon,
    "data-test-automation-class": "selected-item",
    "data-test-automation-value": id3 ? id3 : label3,
    "data-is-error": error4,
    ...rest
  });
});
var RcChip = styled_components_default(_RcChip)`
  ${ChipStyle}
`;
RcChip.defaultProps = {
  tabIndex: 0,
  clickable: false
};
RcChip.displayName = "RcChip";

// src/components/DetachedWindow/DetachedWindow.tsx
import React614, {
  forwardRef as forwardRef549,
  memo as memo415,
  useEffect as useEffect43,
  useImperativeHandle as useImperativeHandle10,
  useMemo as useMemo32,
  useRef as useRef58,
  useState as useState28
} from "react";
import ReactDOM15 from "react-dom";

// src/components/DetachedWindow/DetachedWindowStylesProvider.tsx
import React613, { useEffect as useEffect42, useRef as useRef57 } from "react";

// src/components/DetachedWindow/utils/JssDomRendererFactory.ts
var jssInst = createJss(jssPreset());
var JssDomRendererConstructor = jssInst.options.Renderer;
function warning4(message) {
  if (true) {
    throw new Error(message);
  }
}
function JssDomRendererFactory(window2, sheets2) {
  const { document: document2 } = window2;
  const getHead4 = () => document2.head;
  const findHigherSheet2 = (registry, options) => {
    for (let i2 = 0; i2 < registry.length; i2++) {
      const sheet = registry[i2];
      if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
        return sheet;
      }
    }
    return null;
  };
  const findHighestSheet2 = (registry, options) => {
    for (let i2 = registry.length - 1; i2 >= 0; i2--) {
      const sheet = registry[i2];
      if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
        return sheet;
      }
    }
    return null;
  };
  const findPrevNode2 = (options) => {
    const { registry } = sheets2;
    if (registry.length > 0) {
      let sheet = findHigherSheet2(registry, options);
      if (sheet && sheet.renderer) {
        return {
          parent: sheet.renderer.element.parentNode,
          node: sheet.renderer.element
        };
      }
      sheet = findHighestSheet2(registry, options);
      if (sheet && sheet.renderer) {
        return {
          parent: sheet.renderer.element.parentNode,
          node: sheet.renderer.element.nextSibling
        };
      }
    }
    const { insertionPoint } = options;
    if (insertionPoint && typeof insertionPoint === "string") {
      const comment = findCommentNode2(insertionPoint);
      if (comment) {
        return {
          parent: comment.parentNode,
          node: comment.nextSibling
        };
      }
      warning4(`[JSS] Insertion point "${insertionPoint}" not found.`);
    }
    return false;
  };
  function findCommentNode2(text) {
    const head = getHead4();
    for (let i2 = 0; i2 < head.childNodes.length; i2++) {
      const node4 = head.childNodes[i2];
      if (node4.nodeType === 8 && node4.nodeValue?.trim() === text) {
        return node4;
      }
    }
    return null;
  }
  const insertStyle2 = (style3, options) => {
    const { insertionPoint } = options;
    const nextNode = findPrevNode2(options);
    if (nextNode !== false && nextNode.parent) {
      nextNode.parent.insertBefore(style3, nextNode.node);
      return;
    }
    if (typeof insertionPoint !== "string" && insertionPoint && typeof insertionPoint.nodeType === "number") {
      const insertionPointElement = insertionPoint;
      const { parentNode } = insertionPointElement;
      if (parentNode)
        parentNode.insertBefore(style3, insertionPointElement.nextSibling);
      else
        warning4("[JSS] Insertion point is not in the DOM.");
      return;
    }
    getHead4().appendChild(style3);
  };
  const createStyle3 = () => {
    const el2 = document2.createElement("style");
    el2.textContent = "\n";
    return el2;
  };
  const getNonce2 = () => {
    const node4 = document2.querySelector('meta[property="csp-nonce"]');
    return node4 ? node4.getAttribute("content") : null;
  };
  return class ExternalJssDomRenderer extends JssDomRendererConstructor {
    element;
    sheet;
    constructor(sheet) {
      super();
      this.sheet = sheet;
      if (sheet) {
        sheets2.add(sheet);
      }
      this.element = sheet?.options.element || createStyle3();
      this.element.setAttribute("data-jss", "");
      if (sheet?.options.media) {
        this.element.setAttribute("media", sheet.options.media);
      }
      if (sheet?.options.meta) {
        this.element.setAttribute("data-meta", sheet.options.meta);
      }
      const nonce = getNonce2();
      if (nonce)
        this.element.setAttribute("nonce", nonce);
    }
    attach() {
      if (this.element.parentNode || !this.sheet)
        return;
      insertStyle2(this.element, this.sheet.options);
    }
  };
}
function buildJssFromWindow(targetWindow, options) {
  const sheetsRegistry = new SheetsRegistry();
  return createJss({
    ...jssPreset(),
    ...options,
    sheetsRegistry,
    Renderer: JssDomRendererFactory(targetWindow, sheetsRegistry)
  });
}

// src/components/DetachedWindow/utils/DetachedWindowUtils.ts
var MUI_INSERTION_POINT = "mui-insertion-point";
function addCommentInHeader(newWindow) {
  const fragment = document.createDocumentFragment();
  const comment = newWindow.document.createComment(MUI_INSERTION_POINT);
  fragment.appendChild(comment);
  newWindow.document.head.appendChild(fragment);
}

// src/components/DetachedWindow/utils/openExternalWindow.ts
var DetachedWindowRefMaps = new Map();
var openExternalWindow = ({
  url = "",
  name,
  specs
}) => {
  let newWindow = null;
  for (const [key] of DetachedWindowRefMaps) {
    const result = key.current?.window?.open(url, name, specs);
    if (result) {
      newWindow = result;
      break;
    }
  }
  if (!newWindow) {
    newWindow = window.open(url, name, specs);
    if (!newWindow) {
      return null;
    }
  }
  const body = newWindow.document?.body;
  if (!body)
    return null;
  return newWindow;
};

// src/components/DetachedWindow/DetachedWindowStylesProvider.tsx
var RcDetachedWindowStylesProvider = (props) => {
  const { externalWindow, jssInsertionPoint, children: children2 } = props;
  const sheetsManagerRef = useRef57(new Map());
  const jssCache = useRef57();
  const sheetCache = useRef57();
  useEffect42(() => () => {
    jssCache.current = void 0;
    sheetCache.current = void 0;
  }, []);
  if (!jssCache.current) {
    jssCache.current = buildJssFromWindow(externalWindow, {
      insertionPoint: jssInsertionPoint
    });
  }
  if (!sheetCache.current) {
    sheetCache.current = Ze.masterSheet.reconstructWithOptions({ target: externalWindow.document.head }, false);
  }
  return /* @__PURE__ */ React613.createElement(StyleSheetManager, {
    sheet: sheetCache.current
  }, /* @__PURE__ */ React613.createElement(StylesContext.Consumer, null, (options) => /* @__PURE__ */ React613.createElement(StylesProvider, {
    ...options,
    jss: jssCache.current,
    sheetsManager: sheetsManagerRef.current
  }, children2)));
};

// src/components/DetachedWindow/styles/DetachedWindowStyle.tsx
var GlobalStyle = createGlobalStyle`
  body {
    background-color:${palette22("neutral", "elevation")};
    margin: 0;
    padding-right: 0 !important;
    background: ${palette22("neutral", "b03")};
    padding: 0;
    font-family: Lato, Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
`;

// src/components/DetachedWindow/DetachedWindow.tsx
var RcDetachedWindow = memo415(forwardRef549((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDetachedWindow" });
  const {
    children: childrenProp,
    onBeforeunload,
    onUnload,
    onload,
    title,
    url,
    name,
    specs,
    replace,
    open,
    onOpen,
    getWindow: getWindow2,
    keep
  } = props;
  const [externalWindow, setExternalWindow] = useState28();
  const isCloseByWindowExitRef = useRef58(false);
  const innerRef = useRef58(null);
  const instanceRef = useForkRef(ref2, innerRef);
  const beforeMainUnload = useEventCallback2(() => {
    if (externalWindow) {
      closeWindow(externalWindow);
    }
  });
  const closeWindow = useEventCallback2((externalWindow2, isState = true) => {
    window.removeEventListener("beforeunload", beforeMainUnload);
    if (!isCloseByWindowExitRef.current)
      externalWindow2.close();
    isCloseByWindowExitRef.current = false;
    if (isState) {
      setExternalWindow(void 0);
    }
  });
  const openWindow = useEventCallback2(() => {
    const newWindow = getWindow2 ? getWindow2({ url, name, specs, replace, title }) : openExternalWindow(props);
    if (!newWindow) {
      logInDev({
        component: "RcDetachedWindow",
        message: "Please check your window instance, that `window.open` should not trigger by another window"
      });
      return;
    }
    if (title)
      newWindow.document.title = title;
    addCommentInHeader(newWindow);
    if (onload)
      newWindow.onload = onload;
    if (onUnload)
      newWindow.addEventListener("unload", onUnload);
    newWindow.addEventListener("beforeunload", (e2) => {
      isCloseByWindowExitRef.current = true;
      onBeforeunload?.(e2);
    });
    onOpen?.(newWindow);
    setExternalWindow(newWindow);
    window.addEventListener("beforeunload", beforeMainUnload);
    return newWindow;
  });
  useEffect43(() => {
    DetachedWindowRefMaps.set(innerRef, true);
    let newWindow;
    if (open) {
      newWindow = openWindow();
    } else if (externalWindow) {
      closeWindow(externalWindow);
    }
    return () => {
      DetachedWindowRefMaps.delete(innerRef);
      if (open && newWindow) {
        closeWindow(newWindow, false);
      }
    };
  }, [open]);
  useImperativeHandle10(instanceRef, () => ({
    window: externalWindow
  }), [externalWindow]);
  const children2 = useMemo32(() => {
    if (!externalWindow?.document.body)
      return null;
    return /* @__PURE__ */ React614.createElement(RcDetachedWindowStylesProvider, {
      jssInsertionPoint: MUI_INSERTION_POINT,
      externalWindow
    }, /* @__PURE__ */ React614.createElement(RcPortalWindowContext.Provider, {
      value: {
        externalWindow,
        document: externalWindow?.document || document
      }
    }, /* @__PURE__ */ React614.createElement(GlobalStyle, null), childrenProp));
  }, [childrenProp, externalWindow]);
  if (!open && keep)
    return childrenProp;
  if (externalWindow) {
    return ReactDOM15.createPortal(children2, externalWindow.document.body);
  }
  return null;
}));
RcDetachedWindow.displayName = "RcDetachedWindow";

// src/components/Dialer/DialDelete/DialDelete.tsx
import React615 from "react";

// src/components/Dialer/utils/DialerContext.ts
import { createContext as createContext12, useContext as useContext15 } from "react";
var RcDialerContext = createContext12({});
var useRcDialerContext = () => useContext15(RcDialerContext);

// src/components/Dialer/DialDelete/DialDelete.tsx
var holdTime = 1e3;
var RcDialDelete = (inProps) => {
  const props = useThemeProps({ props: inProps, name: "RcDialDelete" });
  const { onDelete, onClear, children: children2 } = props;
  const { onClearRef, onDeleteRef } = useRcDialerContext();
  const handleClear = (e2, reason) => {
    onClear?.(e2, reason);
    onClearRef?.current?.(e2, reason);
  };
  const handleDelete = (e2, reason) => {
    onDelete?.(e2, reason);
    onDeleteRef?.current?.(e2, reason);
  };
  const { ref: ref2, ...events } = useLongPress({ onTap: handleDelete, onPress: handleClear }, children2.props, { delay: holdTime });
  const forkEleRef = useForkRef2(children2.props.ref, ref2);
  return React615.cloneElement(children2, {
    ref: forkEleRef,
    ...events
  });
};

// src/components/Dialer/DialPad/DialPad.tsx
import React617, {
  forwardRef as forwardRef550,
  useEffect as useEffect45,
  useImperativeHandle as useImperativeHandle11,
  useRef as useRef61
} from "react";

// src/components/VisuallyHidden/VisuallyHidden.tsx
var RcVisuallyHidden = styled_components_default.span`
  ${visuallyHiddenStyles}
`;
RcVisuallyHidden.displayName = "RcVisuallyHidden";

// src/components/Dialer/DialPadButton/DialPadButton.tsx
import React616 from "react";

// src/components/Dialer/DialPadButton/styles/StyledDialPadButton.tsx
var itemScale = `27.59%`;
var buttonWrapperStyle = css2`
  && {
    width: ${itemScale};
    height: 0;
  }

  padding-top: ${itemScale};

  ${RcIcon} {
    position: absolute;
    top: 0;
    left: 0;
    svg {
      height: 100%;
      width: 100%;
      path:first-child {
        fill: ${palette22("neutral", "f06")};
      }
      path:nth-child(2) {
        fill: ${palette22("neutral", "f04")};
      }
    }
  }
`;

// src/components/Dialer/DialPadButton/DialPadButton.tsx
var _DialPadButton = (props) => {
  const { value, longPressValue, longPressDelay, onKeyEffect, ...rest } = props;
  const isPressEvent = typeof longPressDelay === "number" && typeof longPressValue === "string";
  const { ref: ref2, ...events } = useLongPress({
    onTap: (e2, reason) => {
      onKeyEffect(value, reason);
    },
    onPress: isPressEvent ? (e2, reason) => {
      onKeyEffect(longPressValue, reason);
    } : void 0
  }, rest, { delay: longPressDelay });
  return /* @__PURE__ */ React616.createElement(RcIconButton, {
    ref: ref2,
    variant: "round",
    stretchIcon: true,
    ...rest,
    ...events
  });
};
var DialPadButton = styled_components_default(_DialPadButton)`
  ${buttonWrapperStyle}
`;
DialPadButton.displayName = "DialPadButton";

// src/components/Dialer/DialPad/styles/StyledDialPad.tsx
var keypadContainerStyle = css2`
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
`;

// src/components/Dialer/DialPad/utils/DialPadUtils.ts
var DIALER_PAD_ICONS = [
  [__default2, "1", ""],
  [__default3, "2", "A B C"],
  [__default4, "3", "D E F"],
  [__default5, "4", "G H I"],
  [__default6, "5", "J K L"],
  [__default7, "6", "M N O"],
  [__default8, "7", "P Q R S"],
  [__default9, "8", "T U V"],
  [__default10, "9", "W X Y Z"],
  [Asterisk_default, "*", ""],
  [__default, "0", "+"],
  [Hash_default, "#", ""]
];
var DIALER_PAD_PLUS = "+";
var ACCEPTABLE_KEYS = [
  ...DIALER_PAD_ICONS.map(([, value]) => value),
  DIALER_PAD_PLUS
];

// src/components/Dialer/DialPad/utils/useDialKeyboard.ts
import { useRef as useRef59 } from "react";
var useDialKeyboard = ({
  onKeyDown: onKeyDownArg,
  onKeyUp: onKeyUpArg
} = {}) => {
  const control = useRef59(null);
  const keyBufferRef = useRef59([]);
  const onKeyDown = useEventCallback2((e2) => {
    onKeyDownArg?.(e2);
    const key = e2.key;
    if (!ACCEPTABLE_KEYS.includes(key))
      return;
    e2.preventDefault();
    e2.stopPropagation();
    const buffer = keyBufferRef.current;
    if (!buffer.includes(key)) {
      keyBufferRef.current = [...buffer, key];
      control.current?.handleKeyboardEffect(key, false);
    }
  });
  const onKeyUp = useEventCallback2((e2) => {
    onKeyUpArg?.(e2);
    const key = e2.key;
    if (!ACCEPTABLE_KEYS.includes(key))
      return;
    e2.preventDefault();
    e2.stopPropagation();
    keyBufferRef.current = keyBufferRef.current.filter((bufferedKey) => bufferedKey !== key);
    control.current?.handleKeyboardEffect(key, true);
  });
  return { onKeyDown, onKeyUp, control };
};

// src/components/Dialer/DialPad/utils/useKeyAudio.ts
import { useEffect as useEffect44, useRef as useRef60 } from "react";
var useKeyAudio = ({ volume, muted, sounds }) => {
  const audio = useAudio();
  const lastPlayRef = useRef60();
  useEffect44(() => {
    audio.volume = volume;
    audio.muted = muted;
  }, [muted, volume]);
  const play = async (src) => {
    const lastPlay = lastPlayRef.current;
    if (lastPlay)
      await lastPlay;
    audio.currentTime = 0;
    audio.src = src;
    lastPlayRef.current = audio.play().catch((reason) => logInDev({ component: "RcDialerPad", message: reason }));
  };
  const playKeyAudio = (key) => {
    if (!sounds)
      return false;
    const playTarget = key === DIALER_PAD_PLUS ? "0" : key;
    const sound = sounds[playTarget];
    if (sound) {
      return play(sound);
    }
    return false;
  };
  return playKeyAudio;
};

// src/components/Dialer/DialPad/DialPad.tsx
var DEBOUNCE_TIME = 30;
var _RcDialPad = forwardRef550((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDialPad" });
  const {
    sounds,
    volume,
    muted,
    classes,
    onChange: onChangeProp,
    longPressDelay,
    action: action3,
    persistBgTime,
    control,
    getDialPadButtonProps,
    ...divProps
  } = props;
  const containerRef = useRef61(null);
  const hiddenRef = useRef61(null);
  const keyTimerMapRef = useRef61({});
  const forkRef = useForkRef2(containerRef, ref2);
  const { onInsertRef, dialPadActionRef } = useRcDialerContext();
  const focusedIndexRef = useRef61(0);
  const { focusIndex, getItemProps, moveFocusedId } = useOnlyOneFocusable({
    focusedIndexRef,
    containerRef
  });
  const dialButtonKey = `${moveFocusedId}-dial-button`;
  const { onKeyFocusedIndexHandle } = useKeyboardMoveFocus({
    options: DIALER_PAD_ICONS,
    focusedIndexRef,
    infinite: true,
    columns: 3,
    onFocusedIndexChange: (event, toIndex) => {
      focusedIndexRef.current = toIndex;
      focusIndex(toIndex);
      event.preventDefault();
    }
  });
  const play = useKeyAudio({
    volume,
    muted,
    sounds
  });
  const playAudio = useEventCallback2((value) => {
    const key = value === DIALER_PAD_PLUS ? "0" : value;
    const keyButtonElm = containerRef.current?.querySelector(`[${dialButtonKey}="${key}"]`);
    if (keyButtonElm) {
      const oldTimer = keyTimerMapRef.current[key];
      if (oldTimer)
        clearTimeout(oldTimer);
      keyButtonElm.classList.add(RcIconButtonClasses.persistBg);
      keyTimerMapRef.current[key] = window.setTimeout(() => {
        keyButtonElm.classList.remove(RcIconButtonClasses.persistBg);
        delete keyTimerMapRef.current[key];
      }, persistBgTime);
    }
    return play(value);
  });
  const handleChange = (value, reason) => {
    playAudio(value);
    onInsertRef?.current?.(value, reason);
    onChangeProp?.(value, reason);
  };
  const handleKeyboardEffect = useDebounce((value, isKeyup) => {
    if (isKeyup) {
      handleChange(value, "keyboard");
      const toIndex = ACCEPTABLE_KEYS.findIndex((x2) => x2 === value);
      focusedIndexRef.current = toIndex;
      if (document.activeElement?.getAttribute(dialButtonKey) !== null) {
        hiddenRef.current?.focus();
      }
    }
  }, DEBOUNCE_TIME);
  const handleKeyEffect = useEventCallback2((value, reason) => {
    handleChange(value, reason);
  });
  const forkActionRef = useForkRef2(dialPadActionRef, action3);
  useImperativeHandle11(forkActionRef, () => ({ playAudio }), [playAudio]);
  useImperativeHandle11(control, () => ({ handleKeyboardEffect }), [
    handleKeyboardEffect
  ]);
  useEffect45(() => () => {
    for (const timer of Object.values(keyTimerMapRef.current)) {
      clearTimeout(timer);
    }
  }, []);
  return /* @__PURE__ */ React617.createElement("div", {
    ref: forkRef,
    ...divProps
  }, /* @__PURE__ */ React617.createElement(RcVisuallyHidden, {
    ref: hiddenRef,
    tabIndex: -1
  }), DIALER_PAD_ICONS.map(([symbol, key, additionLabel], index4) => {
    const ariaLabelArr = additionLabel ? [key, additionLabel] : [key];
    return /* @__PURE__ */ React617.createElement(DialPadButton, {
      classes,
      symbol,
      key,
      value: key,
      onKeyEffect: handleKeyEffect,
      ...getItemProps(index4),
      "aria-label": ariaLabelArr.join(","),
      onKeyDown: onKeyFocusedIndexHandle,
      ...{ [dialButtonKey]: key },
      ...getDialPadButtonProps?.(key),
      ...key === "0" ? {
        longPressValue: DIALER_PAD_PLUS,
        longPressDelay
      } : {}
    });
  }));
});
var RcDialPad = styled_components_default(_RcDialPad)`
  ${keypadContainerStyle}
`;
RcDialPad.defaultProps = {
  persistBgTime: 200,
  volume: 1,
  muted: false,
  longPressDelay: 1e3
};
RcDialPad.displayName = "RcDialPad";

// src/components/Dialer/DialPad/assets/RcDialerPadSounds.json
var _3 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAACDysA+AAAAACIxnH8BHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAg8rAPgEAAAAQY/YRET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAg8rAPgIAAAAxnIFhCT+MbWrc/6wBAWTZ+Evw/ho7cMnGPSs7KM691xaACcDCt6An5xY4vn60/ee7fBDIvv/9pZ8gk+id3DlOjvqoG+/D8DixatJ5EVoVJMsuEvC4WKpMFeTlGAbTZLjf/b/H/V84AAtAkn7IHXvGwhEAAAAAjGQUAKDdmUfKcebS+Cx8d/sjEx4ckz89PHzBcaaA/fezjK56847A1lpG4bYebN+NhOn8/BWzzf+66osgima3VfNafB2OEcC1Qcp41hgXIRjiZTh5f29T9932YITrxIrLEFABXiXkPg7fg/zSlkp9KN5gRk0SYHx8HAiAJNkOAAAAAAAIMJIBAAAAACBo8oWYvhsXG2CcmgP7r6PBSAAAAAAAABhIS0bC2tdV5IciAKrG3OaLfQ6MflwUo13ornCmM0//NGSB6JCYFwihFoABAF4l5D4OP9cPqavUxUtk1CQB9hFwACTJTgAAAAAAgDEGAAAAAACmcVrww9p29vcM+8dXAfavtWQrAQAAAAAAIObBmuBGzrth/h+4CgCqxr72edYiQBWucPNrjK1ljeSjV79qN+8GvcqCVQG+JSTM6QfcL11fpfLYtSM5OXw9RLM4PbPUwOBG1wAAIElTqkYBAgCAAmC8TTIAKEUS1+hmf+jDEfbfSGC/j1YMjvfU/9RKgffRWqP1cr8O2VSv6750EGOtNeHxfz2X/+b3DmrjN5k2ACU6cFC4/05eBx0Utk7UjumHWPcY/t/x2LANN5MZr+L++nDSsL759s5Ejf34338fGuv33PnRjwQ+fPzffx8f9c23P7pnxovH9w/NCdswM5kRtOLxfY/Qw2SiNbZ+pXP4QPnB1r+T10EZ//4b676MM8+0tiACPoTj+bsdpC/9b074kd0fR3Vl+vTs5OSk7IzFnT3hEuPpjSZNtU04/tCPWLws7VF9OKIZpmkhOI5XM8aV8/P7Q8355/v+UDPnL/b9Ifb5i33+Ifb5i8fnH+JyftUPY1zO54dKBiDMtvalbUaofdlUxPRYaIdIdMZAfxR/kVqI9CUqVk77G1bPsMZZ3uiv4fv1YHD5FFuc5vs/7fpXa7jxOM7uT4eHT9HkpzXc/Le4v0Wt/yDuPoSDy2dG7X90eLiG79eajeUzbHE67H+16/v1cOO36N6PDn/WxerweRX4jR+8d5oqh1949or9K+K33nnLLbeopqdPn36mDSXp6J57feR2//6hYNPp1LnJ3zlU0aMfv735vz3U4KMfP2v+78wZfIKmYn3+d+YsPrqp6MIhtYtPUG3657+jffvjn/qch8PhEMJNb+/O+tje7t+fL4x3f/zju36+nT7z9Aqd797yzlv2UsqnvvT/vnSmL3rr7/497ziOnD71hWc/s4JIdm+5ZYyCy6XTp5dqxG/v3p06bG/35w8FN502Vffzv6Nd9gQV+PrrcDw861sOAA4O";
var _5 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAAB0Nx8FAAAAALH2CDABHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAdDcfBQEAAADtBChfET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAdDcfBQIAAAB90D1rDDpdT59ucP8Z/9ABAaTZln09D/JG7sabbYw8/3w7bAMkwcd7qbhiUI+pv/9pfRIZbvhutwvREnt/XRVOxPzgbye2O4+g9wDsBfs+4S5v9bPxrca9rX6ZJznncX+UNb59K+H4u5ectvX3bjdOX5w59ox/HbyCr8E1T/z3UAT/7Pi7Jf1ds66v/byiSjQmXCJ9yFsikxOro+c/77GT3/X/P3BOWgr0DfuRcO8b/8tDMVPtPpV82Q4AvJyz3/yQxKnzzfPGcM+Y5h8A7hbOFWmnb8AeyqVaWWg3XobuFMIjYfEc1bXHS0siGVXw2/3QxqmfWgEAmhVE3OV7Jaa29JUUWxOHZkeGLWcvv/zyF3mRF7zI5RPO/xUAgJiff/75VQAAAhzJGAAgaioLI//Z9+P9Pm5idsVuN30wlEIAO70fOaTn1iBS/Z92QWlxTYNgZu/P//dxPp1Px9P1cn88P78n/zG9eL4+19M6fCIYUkUB9SsW7GunNmyCn9abCQT6ZqvY6WD56pdRfllZHvc2AgwYEi4AXiUk3UXiVpx/NlcV7/OLovbIsPcAAAAAFAAIEGKMAgAAAH96PoD93xMAAEXUJXptF+XSVp7Eqstrl3bdSlEEEBSDE7E83tFLDJoAwH3VCdb3j/g0bV13ZNjZNstz+0TC92XyoxbxfTViEkjBAgweJeT1VcILMf/bXlX0fYmiZmTYewAAAAAAAAGOYxQAAAB4cxcSYP96VgAAKEaTbep+MOvLLAY3RsPsoNvNCVEAQBFxjXboxp5vuRpRIFVBcQSlMln0lAbTgh4vYl2mLq3QjARRuGDHwBr8rkIcRIACfhVE+e02imO+VPFQ43w9Miw5gmu7Q+Lbt0YF377x3jcAAGLrHmCMAONUJWMA4CbJYrIrUflM2lgD7LPRgpm9Luo9n3EBODixMlodb4P/ZdEVRl0xMcss+Xz2+F7HtQ31OP3/4vZE6Go7/k/2f7J/8/6N91+/f/0m++X9ZwoAlQMcZO8gBw5y0EH7smbNmjVr1vzJevXLivkQ8ydd9/KTNkx0lFHQ48+HI/bAM1ZWs+VnvXt1a3bW0/s+a/mMZ325NU+dPOtdn7Xm6qdXf7l3Xb36rC+++zlnnHHG0885Y/nUqTPOODl5/+/jk5Pj8fjheNybZrftx92+tl08zGOF1QgHDjpwYMtBBw5aBw7KbDlo30HhoE1YGd5zExv5/F5ixutCEUVpnG/qfpqiti12j/fcfd7wqMThSPPNvpvbxk44xuHOSDju3LxtLDzcublrJMaRkZEY48hIVI/Rhj7//PPPP//888/P559//vnnn3/++SIVhFMAeYWNT9pWluxDKmm7j+TOc98cqtIZ5qqog/y72c49TV3+64am1vZPyuHz4/FxPp72j4fxND4cxg0tPhzGNS0+zMfT+PB4OPyBW+XKZPeWMQoku2MUQOPUR5U53g4hsN1f0m05P72irudPPXN6aempZ545c8XpL3zpS2eefuZ3fveXnnnmS//v937p2V/6f//f7/2yL/3O//f//e4vfen//X//35c9+3f+3//3e5/9zJd+9+/9smee+cLv/rIzT5/+wrPPXFra/9TpecJ2CG30gfHuj+9Ohze9/Z237LnpB37wO95yyw/8PX/PD/17fugP/sF/9+/5we+85e3vfOetbrnllltu2TM6umfPaDZN02wqZTlLwWTJhb8zfzgc7t+/f//+/X//97///e9/p0+fPn369DPPPPPMM88888wzzzzzhS89+5lnnnnmmTNPnz79zOnT//vf//53//79+/fnD4fD4XCY8/M5FxYWAAlOZQEODg==";
var _7 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAACJxMsaAAAAACFJmsEBHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAicTLGgEAAABPCsGtET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAicTLGgIAAACZ4j2hCjw0kHFs1v/hAQG02dZbNRRjB27ZOF306aN423sHYAbA3m/F9B77seH07DLtuImrer2eviFt53d7fezPsHfy7W8HLhCA8QD0AadL8COW8k9oXLVuq38pZg0gcQDudX3y+PYt2mDGLnCDg4ArJeygyTb/iNPZ0IMGY0somiUkuONr4zZ8WKnYmmwq6jK8fP5v/Oa/+Y/4od/8R9zoT+5+HABAcvW0bdu2bZsAAADGGAUATHfGRD/bmMJ/g4v9z7QwIjBN0wTT9xG7oYGCYd6+naYDQXALnlbj5Xm5P/7/z3U3bq6fz/N2Puwv96/5cDRfA+oAF1m1qDnRtBGaaX/+PPEEJ+vwNkvSqCAAPiUk5Spxo+e/8bdKvc+vhPoeAAAAOGKWAAAAAUIkBQAAAH55EQCwv4x89xQAAAAAAAAAAABAMRokC322aZex8iBG3Vxe1Xh4KAoAAIAiuGRhOzz/V4DheE1HryekjVUs9cuchYRHHaUtUhnZdEBQIgAeJeT1LuHWz3/bX5XqWymhvgcAAAAOcQAARohRAAAA4MtLTQBc70cAIOJubEpF1bezwVQWMbkx7qvHfWteoAAAACiCk+nHnrLXl4sMBwAAAAAAwCCCUTRLKZNGMQUK1YytQOyVq+0qESmFRASeJQTh8Q+9Tb+wSo/9yp7H0mUwz6mu9zrBPLevAABJuo+QAB4EAgCMAAgQsjLJAEDrZhE4VbUy3jm/26M/xbgBwP71TGlDq/7qXRj/f1+crh0ppRBUYjXsqiga8rodl2dj3vut37/roIPg/2QHgf9AAoAF7uSVlQmo293ENmgADD14tB9PGjZN2Bu2m5kJ5cmJhKfj8f0k9m9+dMeLxwbmLOFW/vBZXrQ1wkQFQ08mCv7w/w9sk0EgRhsmN14ej0c203Ercj85aZ1Bfvm9g0Lh/mshGQUAXmRDG37XwPPBrduQ4U8Qr9On+9O+67YxzULced+4cdWf1LY1puC7H7FftjyZxYcjShYfjoz4ocY3zs+Lv2N4Na7+Oj8/j7lU51u7svj7g8Xvh31+/hBXJn+oXVn8rV2qn3/Y578xe85/P8QVn51f/dZ2fmv5sliN90MlA+A7gzGhFvu9kfMKdCiq+qJm0tH1P7YJq7VXrPL72rZ6L5yYbZS7tdWe2/Wv5zNvnKG7XnvjF1usirsPz+P08s9zbGV8+JBrQ+7E/PRH+tF6b/vG0E3Wzi1st8cPZpuwIB1BdNdrb555Z4dtW6lWI43BpG27/mi7LfZjbnB4KzrJfxHvVs/ok/ih9E7wT7z/4/bO2ur4tKjtpR+t98Xa/5N4v74aOx+PPxC/nk+xxXN79tC8f/utcs18SedpFpdLS0003p318xDSeDsrt/v/m6fx7pS3Q2i3P77X3/79X1Oko4pZOt3ku7fspSr3n9aj0THk9Jlnt0U3vXNvcn56Bdq+ZS/v0//3e1d13/6D93Zt/e9/x3HF/jN9/be/M3fyW//flw/YfPutVNNnzvRtvv2ducVTX1pFDPdkzfz0Ehru2aMyb/dDm876+XZ/nsa7s/5nWh/tsj8ttVj++fp4+PPrQHUEDg4=";
var _9 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAACKbKcmAAAAAN6zHmMBHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAimynJgEAAABXp6toET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAimynJgIAAAAK7cXqDD5Y5XBs/x///w8BAaTZ3HOl8NrTgbfc6XNPT/jHkyyacwAgCcAg5vLF3IO04PfZSiFg0oc5zKEadaTmnuPk3SK9m67/Hz+M4mgE9AXzzfPnc+wPLP3460Pd/9B8LlCm3t0dLE7POK3t99/JOH1x7nTGvw6iCX2TqbhINnJ4/VOvZvL/jGnedfMtS6XnXP2df2eoxdNn+aMd52ZmX/xyDyzTFpoVRPz1i2/Dp1WfsdXZamIZXj7/N37z3/xH/NBv/iNu9CfbJwEAvCMAAAXASAtICgDTpjmRtGxeJnu50vqJmcYCADA82hcAvC/6w/V0PJxPx91+1Wceqmlz//0/79f1dL6cV0N9BhlclrOpKbNkUBNiyvKiLMqizPYak1UkBgAAAADg8/XXXwe0+/rrr79+V2Gtk+Xl5eXl97q8momHL+dzX38LD4e3w9vz7f79t7/35xXzh/kigzSDdTd79/bu3buz07t3706n01l/djoePnrC119/23//hYWFKW3hQhRPnjq5IgAeJeTlTeJFzP/GR3X+m0iG9wAAAADLYwEAAIAAIcYAAACAX14EAMBf//IGAABAxWgwWeizVbuMlScx6ubyqsbDQ1EAAAAAAEBQUr+9hv6PIgAAAAAAEAXFDTU0I+dPwzZOh7S9Zj8xF/eXQlowhQoA/iRU5E3Ci5j/bR/V+beSCcF7AAAAgOURAAAAIMAYAQAAAODLS00AQO1bCgAAoCLqxqRUVH07GPZlEZMb47563LfmBQoAAAAAACCoTLunnFNEAQAAAAAwrAV6xpvbfJVsOD82+1MxSViSiMEFnhVE4eUTPps+W3Ue08pWk3gZxjyn2ux1Gua5fQUAWOYAACRjjFMNyQCAr20oVfW4uZ1LvjejP9m4AQDcf84MANnp2pDylKegYoum67qmyqI1xhgbs2qwGrwvr9/le17Pxzq5ijHGGCMiIsbYO3c8isfjMTIAAFfPH+aWGFvb10EH4f47WRv2wv03QhvAXhv4/6+DAu6/eayDMr9/I1qaNX+YW7T9+YlEHmLdI6HW2N////EJD5OJ1jaER0bCZvlZZ7V7mCPnZG+nr3hzO6Fq5alW5U1OnXFGe//5f+t5rz3HOhwJNHvye77cmmR4R+ccASI8GGHN4uP/f2jQAYIe7tyZUDwemxgRY4zQk5mJxgrYviPNugW/fyfLcCDcAp6EQ8P+9KjIN1wZmuwTzmf69LnlYOe2Mc3C8PrvjH/0zdnJTNSanEz7cGTkah893tW2yZimSW0Xc6X6+Qez5HK+H4KR8xczfB6zz0f1/RAXZp+fn8fwjSvnvx/4pj/s86tf57+nz+03hju7wuTsO7t2mWf69LmzaR8JM50U37ltT7hO9k9KjExPltO+c3MWf2uX/OGHy/npsvj7Q22upH1+9YcxfI7zz39jhs8/7POrLH4/1C5V2fnVz2MQJAV4F/hY+IHb/AclU1SXohgv+21l3SR+GR/8GbkGRCGsWkHpmt43amfDL+ISrtVi5/9r+P7YclsE3Zhte+PX4jfR/um/OI/V9m3Jz2nebYaTlfBiwj0bfkWToeE+/rUnbcj/5e//2vH+kP7Op3fmGvJP6OVW/Wv1n5/ww13ySnBRrK2KP6zxCqXsfj2Tfz3Gzot9eWTI/I9v+dEp1p1e4VqusN/GWa6wOEo6Maqt17X4j5nctN7bbk/XNtaf8cuMEMxku8eW27y2tLEeWm4DZ8O17OfUK3OFjx45zp94q63ZWvM74GhEO+S71l9CoxW/w7W5aIKhD+LhKXZ7+kBc0Y056X70R9o9ttTG41/EO8H9JjRWxcnXmb7NH/h7bk01feaZNpEo5vipM/X+TbfspZhahySVxb//+yi027tTriI39flPf4eUU+1iefyWg2MEAA4O";
var _10 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAACMCx80AAAAABSEACwBHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAjAsfNAEAAACe3diTET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAjAsfNAIAAAAfzUHJCj5OsWtqrP+MAQGE2fqlgVBemoEnG+PN5R939PYRUDAAPt44xbCrPTma4tv3Wc/LvLyJvDdW9Ir4kQLn/jwdoxNtHd3MRoJ1GPQFx5lglzf6t4ciqXVfycs8bQKI8EG3PPn2nG1u3+oqi6UWvJBYzc6nvrXBKbwU1M0/HK7t+Ix+ZEcGVcuNqx7y1/8/daeb64xmLfJABhol5O2r5Aud8qurIln5Y8OWwe6zf8Nv+k2/4bM/+7Of+MTHH38cAEDMf/jhhx8AAJgUkJQCANF1t7b8P98x0749YmqSw58fCWD48vZp8jeaN6DfeC5C5geDHLcZbKvs5+/d1CRsPVge7p9bfJz7W3a6/x7niQBQAOs40Y1Tdi4wfvedg9+nt4t/JD4w3utfhWrbKgxrq2ptBeKL+bl5/87ykpKSsNwyVvQJn3Df1RwMAB4l5KeLX9Bifi5dFa+OQ9Mjw5IDAKQJdSS0GSoKgAUKAGCMAQAAAKTrWFhStSrhETULoP/3Btns1b6ytzgCoAhBWraLc1HhSAEIzUNttpRZp5Tw7oxFe6F267ONcvZu8sdj3CRvxc+EDVIBHiXkl6vfKfbnpVZx1SPDkgTmudcYB4AFAAABRjIKAAAAcEZw9O77Y957tYzH+ElVgP7ri0ni37fD6eEqAgAiwVszVZdPJY7grihPSmf3/u3mx+ZT/g02xZwiRU+lB9PMw8kZjdCsLsCNAF4lJJStyICII3ymai6KyMiw5ICgu7u7e+3atSFplk7PAAAQTwEQsiQpACDEzeR9zOj84ej7vQBwOpyMl/F63DyqaI2IiLGxqAa/TWWHs/N+Ox9/yHYMYByPR3YaCSPj/vX7Nx44CP7nAfw7GUCYNeu3XweMuGliv9yZ0XjnaBrxcXI6YlBPSGRkrYc8to/StCdEmm7Nn287RkiLWO21AkX7fV5jOjKZ7+Pehgr+Y8O5b8eAda6KIpvFea3pyXP7ZXjztl3hmmaG6ekP3ZgCdffo8W7bTvX9ULuS7XJ+9XMNwkpzOd8P5PeD85PZWpIUQG9s9YIZHEZXDBENGRFrQLr+/+P7wZSLP9FOm9IqkpNhW/J0WrXVxFvrQ3h5nA4KyeHfKN39+bPNx+Nf4o/Wx6K72qo/NO9tt6P9B/zwr+g+Pu2+/Z3jyHJJh0TB5f7TTRrv3vVRhXE65e3+/XlyUx9VNN7eneXt/v0QzmE7HGj84cezvL0dyE153f/fR+L64x/PclmjZHRUmT71hVVEf88YslzSoxvv3It6/Du/+2xiuEeVO/mt/+/Lt/XffqtscXoF0X/7rXKLz790JjHck3XHp9vE7jtvpSqeOrPJh6Pk9Kln2qIbt+yllEtNlIxm8fypM33R7p4srpd0PhzN4vlTp1v97qyfhwONP/x4Nr7dn6dx6ufh/oHGu7O8vc2HdnvXz7f78zTenbr8O4WPv/u3SeWsP4sezVrQvt3ep93x8NvOxPs1AA4O";
var _11 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAADiL9EHAAAAADf5nsMBHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAA4i/RBwEAAACPUfTcET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAA4i/RBwIAAADRxk18CzRZR5hqc8T/XgEBjNnyw/OnPnbglm28Kbkpzg2gBGDQLks91hH64NEb89RKhIF5GEP3v3k2esf7OeQ/ypI6AewFxyXhUyzlD3yjse8b/0sx6678QVlQpy/aNr+9k5N0/N/vta3f6nrz+67AO/E3zz1Fm4I/YrWDhzF8aaUAsXJgOQ+9ZzqqU1XEP/+RzvbkWSuTt33Ff04G5A3zrRFCLM2f8MrXf/qRf5RaZFDxQ9g74+J0eVIiXIipx9QYWCyeW3fifLp6ptXLm96Rp0/aUgfzHddbaH9zbzxvayJlIgA6JeTYIfHKb/2OFUpV1GWoj/6tf9u/7Tf7TZ/9+H4ax6unFgBIrkN2bdu27a5tEwAAMI4xAIBGzVi469ZXafZEWFMmY/y/anEYhgQ7PR5n/j8e3t7e/qPz22k6zAvzcDi3j6M0693187mvWit5M62Or981Lyb7/joHwEowBDcIraKOB0Lnp8xY1KIJ+djQe1vhKmu+ggIgAB4l5ObVL0i9P69+VSqZg5YkcHd3d8cCgCYnRQAAAIAAYxQAAABT7nZHI+jvs/PrW38fANi/jasADYYAAAAAAAAAQO3lfX/mFY4AAIi4Wjsu5n19rAEyIaXEuqd/Wzv5Mbb0C5s9XGXhJgAeNeSm3S8IfZ+XX5WqOrPRkgTez35WAQBoclIEAAAAGGMMAAAAUN7gbp3cFQhnv+Uj/d+qALD/Z1wXaDAAAAAAAAAAALNf7re3U6YqAgAgom5tny1X+QQoXYRINiThFY4jxgmzE0d7TpeRVmgFMJSrwgAAnhVE3Clhrjc3g0oVfsZ3LE0O1kdlyVzfbSyWNAg4BQBI8trRkEAQBIALMACMYCUZBQDxbbPHnHjuBz5UrAKAxyO7cOeFq4te3tJxf+a/53xWrvfrsXYTjahiYrU4vC6bED6R/KwiGquQTCnkiQCLAxxktbEy40Amf+CRP+jHrCke2TReRya9jids2N+PbOuf/zeaFqdaHjLLK1sYFsurPU7/fJCNxvtJm5Enx9j5dTH/STfleu8x+UCImTet36pWcIADAF5jI4d97RvhOZg5ioxXnFfizm1j4eGuXWMxxpGR8PQ0299vE9h9pufluhFA2yZq27qc78pi5ycWOz8thrdtyUsKAKJhK016CT8d4Wyd2b2vK5NM04Hmr6xT+T+aq41377z2DKzZSIrt3GI8/tXa+M3HH1qXx2H6EL4f7T+Eg8t/T62c3/jxvT7c7V2f4aZTTpT3a5dNtG1/KkJuh5Cwvc2HVIf782Ftb/fnq97+/ehQ29v/7h/q8O//7ofb2/8+mq/t/v/mwzr8+9E85dv/PhLIt/sheLs/T6OfG413/Sy7vesD4927PtzdH886d/vjH8+68Ycf3+u72x//eNZ3tz/+8ez09ocf3zsdb39876wbb398r+/G2x/P+m68nfWdG2+nDBurrRRZ2mXTh4rPDGj701LbvxNWbW/3D7W93Z8Pa3u7f6jc7t8/VB3uH8I6/B2tk0PVXlggX7fzLQcODg==";
var _12 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAABiIZRJAAAAACp8LFkBHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAYiGUSQEAAABRsbVnET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAYiGUSQIAAACV9JeIC0FKtGhq/wz/zgEBhNnkUz1H154OvOU2/zjUgZ8PtWjOcTgAI1jtlHGty7pnza39nZTn6MMc5jDtl+OF8O+8vOPV9/wY7B3h5uwa1ATUAd2tnqM59m+BG1Pbbyo5u3w3UZinYf/V8N66pVN13FA9wbR16Tyfp09pvrWPBrbR8K7kz89OFO/tNGKeftd97f+tTlLKUw0nABol5IOrZFtT/u336l0UacTLoP3MZ/+m3/TZn/3Zn/3Exx9//HEAgGUOAEABEGAcYwAAEN3GnhTLYRI55yDzfvvwz8afJmAYBgyP9gWAmx2f29VpeH39noftrLaSD7a3z/ZwfX3ft/vlvBrqO8jgspxNTZklg4rbFPMsz/Isjz+enToGqggAAD5ffx0AxkRrSJt1pJQbOmGw1WkvOdQGiJOtpDxib+upzTz1j2ncoVNUrlIBJB4l5Oe7X5C+P6+v6iUtJAnM8fFxAADLYwEAAIAAYxQAAABAGFEm7ieVEdcm43S3mgUA+P3fAgBxeG0/xVkcQQEAAABACe0z/7cfFAAAAAAAMDCexeeGbuzvf2tMJ+Zau1NZCbeIGKQEHiXk55tfEDF/Xj+qc6khSeByjWuMAwBYHgEAAADGGAUAAKC4ePPvY7Gt9d5bxqP+sGYBAGpfCwAQ/62yvgcXQQEAAAAQVJ7dpjqniAIAAAAAAAVI3DFLxFHPdev/O9S/6mZL/hApyeEDIp4lRPzll/nMDUN1Hn4UrUmcHLVolKB77dq1IanF0hIAwDLrb/+feZ4BYIwxQlZBMgBYxFkfo7HbjK+s+3shAOD0ISZvUfWjKeOjOgMDMq0z6D9jWTy2i6awImKMzYqqqqoiWmNszIqbGY/i8XhsIgAABx2U+f0b/53soIMC99/J9sC/EQC0gf95exncfydjHRTuvz0cdFDGdPv27ZGr115WQsj9/cPxyNCeHvQwuZnoePz4w8cnMQH0m29/9KM5Oh4/fDiefHj/uO2Pdtzcze3UOYOwQUXj1JPVZzgRHsmEWTY8CAMsTj583ERAQ+thMpmIb7uzY3crvKH8aePM+++/8cBBYeb++y+gAD504+zN+xCW2cZQxOeFcF5rerJ/f9p3du0KkzPD9PSHbvSnCWNS2/bafeaJXW2bjGmaaBdz8f0hWu3K+T7znR/2+Yvx/WHM5Xz7/MV7uv+5s5PikRKGO7t2VX8Y4/2wz5/z4Ycx+/y0q98faoN9fn4eA+efT+Y7xvlVNQOgFHvKIBa3ujsDRKOM+PcfaElxO2lskLrv4M6Jr39GrgEYigZP3v6DWEH//m+d+BHlGmd03v21qH1M5+nx1ADpV2vjnnACg9kKHjdYM5zI93+xn1ML6rYj9ssHdRm7xifV5P33XW2/9aLAPTNA9yG8iP3km+IPYv84z4L4BzGF396EkT6IAVv8/0U7MQre2hbPrYICtbN8/MF8CDd+ixCk/WNLbdxIv8Tdn2MDgPRndfmMvx+Nf7UibbgnCxYN3/6D3zG3eOpLz16BAMqlJT256Z3vHEeWS7UFKPc/80yb2H37rcYoADwdVYqnfud3P9uX7I7JYkh23/7OvbzH/+f/e642JKFcgmRUMY//3//3XL5kd08WA99++zv3Jo9/53d/2QodwFjLt9/+zr2yZr7UtACmvj9P490f3/VRBXOow9shtHHqGIBzDt++zuF4uE8ADg4=";
var _13 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAAAj1thEAAAAAG6Exb8BHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAI9bYRAEAAADmsWEqET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAI9bYRAIAAADes0kGCj1Hn2RkuP9PAQGM2calEaK8NAMNSdePb+1/3t4dd4cBYDgAkY4wT+XsL/LJ16Lvp9y23bbgIhbhzr+m7rZ/Ce2fqQ8vBwYAhAHlmSuP2Ii/pBCKENsoftnLPAUAx83vRp7xFgCs21Du+a73bLh3TXD31L5CaDyFkp7kOhrLaBGxMcJVPJD59+T67R3KJgJaJSTYTaQDcvkM1SgrfTC0DPXRb/rsg2k8/fzf+P/9iHfcuAIASNLn9u9fnpxMZwEAAIAARzIGACBqKp8avlTbHE52snjS7HTWsQH6/tDEQvlFPl4UMzO77B+v5Wf7rc6L7/2wXa03+8N9/RzOx/Lze9+uEYDKQIOh2VCxuPJYuP0YEE/IUBH2iWIcpK9g6XhF8TXGGvP2buHbtxwoAQAeJeRvd++PNX6lSlzHlCwMiSkAFigAEGCESAAAOP1jg/7fGwCA4UU0Wb/7+h9fv18vEOBJxRkBAJwr28W5qHCkAFCMqx7v3hlb6UD305QptWtWks63HABiSscJEsMQVAnyy0ICPiUkHxc/I5MrVdE6npJHhokpAAAAgADJGAUA4OKloP/rDgAAcMMNL+JF53YNvyHQn+K+LQoAANW3VGt/FuIIIADdXqQXuCVu3x1893rsDqbZ3a315uvku50aklGae6iCextQAB4lVOnNL9g4vHbHcNd1Z4ENS46m0UF3d3fQvfbW7hDNEgAA8RQAIZtkBAAg/vYd7zRX3Sw52d8WgNPhpG3Hqb0MKVlFIyJiYtbcVpWdzY7b9bz/IdsdADjg4XCYFQD//f938t5BB8G/ERD8tgNhOmv+MPe479w0TRP15OaemRkDE2NvjicfEsPMzI1H2swynrRPjhEutEFfMBkmlfu+r9i25OpZ5Rb849/J4aAtM/F+P6g1eJtGWAD+Y8P2t2MY6/QRRTaL8+pRp0+fOyvDm7ft0spo25e3+oF2f7/btlN9P4yB8xcD5lVbW5IUwBWMkoMZj7+6sXhvq0lzagjdxZiwqdbLv9bsQYz8icpzO94/xm6LWr9N//o7zUMOpMNhXt/++MezflbBOWxv9+fLxqnPANzocx7+jtYy4PbHb68OhyIgt0NhvHt31mUVAbm93Z8nu72blQA8SVNc7n/mdBPJVAJAsnvLXtli/zNnNhFAOV/So7f+7g+9laqYNy3H5eMvfelMYvvttxqjGAsyVczxM1860xeNjqYYeLK7ZxRPn3rmzCYCsLWOkt1b9srieqm2YMr50n0x/vDje2e5qsDY3v730byNU98BNk6nfr79+9F8CHMAbHr37pTzcCgyzu1woPHu3VkfWQBQh7dD2fj4q11ezvp8qaSchfJqs+YXsA6fCBcADg4=";
var _14 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAABQ3o5GAAAAACUPBlcBHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAUN6ORgEAAAAskylcET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAUN6ORgIAAADQHCLbCzhcSpRlZZf/GAEBjNn6LeFTjB24pPfj3r2jeLMOgCQAtAggFvMby/VF2AmHXPe73/31CXXF/+MRTA19cFq/PnRxRAScBc0lF89jKb+HNxsjv+yXLNZx7W+gLGhOX5jrv73dSXjy3Uvm9q21P/6+KyB+2rBBO5TJfNP+9nnJ7j6snUfzkm+fwqezUxabqzZPvyM5k6fftdX9is/7v3YEAJwN5a0RR7G0f8LLdpjeeVbMgNJ8P6zZN/eYR2eXjQj/G2OyX/PR4rj3T9FZ51CXZ7LheVUbe6eurnX+6P6/E+/fvXV8+0wfkhMBWiUk3SFicL/S748KJUOLvAyOn/+hH3rHjdh95t/6TZ/9+D4AQHIdst/d39/f32/bBAAABAgxCgDgX9EzUrNJwhSfawQ8Nj288PgTYB9XO+vtv5+/vz9mfjtNB4JwP7yv1fP6fw/G2+u8Wc6m4TicZsvN8TGoP+Pv6+DwCED7Wu4qXhjUiqSQ6hRj9VPIbwukowQMAF4lJB6r39bDb69KfTXeiVDFFADQ5KQUAAAAwBgDAIDrvzED7L9RyyINhgAAAAAAAAAAAAC44SaZXn34+q6Lg8xGnVXuAAAiqtZOg74+LYEArJHKkqxf/veqn1ltvP9uCeGKJIYFXiUkHru/1sOvj0p9G2/ZyGIKAGhyUgQAAAAYYxQAgKpqAOz/GdcFGgwAAAAAAAAAAAAAACOpZ5eylGCagGUYsvNKlwgAIKJqbd/sV/kEAlAKqnfNusa+4E8V/74mlqv8xEGAggF+FSTg4R2YHj4fVXrYjDVycjQNdXpmRVk8O9eCBQBAkt5YGxIIAgFcAADAeJJRAEgikjoZ6n5EopP/7PAM8HgkPnNeqgwE9ZaCab69X8Lr073sb9snFQHEZM1st2o21WnvoLDXxspgr9pkZDaNgxprC38gjaz5ySInORkGrbsWQl+GECQsOiMrs2DCc6its6oUoAAl4hoAHmTD6Ms7aOHDT0cJtSrOa50Yw/C8f9ljPT2bhnF8q/nsg0D9TM93S+/oAzUBkmOEeI4RIikAqE0emKfijS/X9rbbPtCpKMteQULcSmy3p1vywi6u9f83aLekfZvGlm/vyWKU7I5RgA9vutd34w8/nnVueveu79z08Zc/uqnKH13t8jsrKH+C8vLHX35ntcsfXe3yR1dw+OGHH3744Ycffvjhhx9++OHHwyc6HDdgYWHh7yws/J2/83f+zt/5O39nqX/ncDgc3u4fDofD4XA4HA5/5+/8nb/zd/7O35nz84WFP8+5sLDw9dfnvw5Adh2ePfzwww8//PDDDz+8vLy8KeXl5eVP8PgrKC8vLy8//PDDDz/c0gcADg4=";
var _15 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAABwncJuAAAAAO8QcZMBHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAcJ3CbgEAAACo/1bgET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAcJ3CbgIAAADrgeKcCTufZmD+/7sBAYTZ5FMDo2u1B95y/fgwVv/5CXNzeAMg0VCv75qoz6ZpjN/fDKoZvX23O5SwO+9DenwHM//JqLfbbjIAOhUkxVUkALH8+qya4sNNsAzjeCMe/Ybf9Jv9pice3N/f3wcAWD4AAACAAGMMAMD3tPRosHgdzQ77x6DsNAxDTcc5MAH08PotnwDgce2y++qwPPlX54/XftYWybqYcrA83F//72n53CDHw2dZJYMKalJWVnVVF3kMRk/Fr3OnJvo6KTepV/zJ7ebx7Us9Ze7KtDu5v3lerLFhFWEJvEAF/iRU7nffA778tlSvddT1QUwBAJZHAQAAgABjFADA9f9OAHD2+yIAAAAAN7zs3//5F6/u+ziiZHmdGQcAAAAAReTXfD+vNiEAAAAAAIBhXqWv/N6tEHpx/knz++Vcenu7S6Qg6aEAPiXk7jc/HdP8tVTn26i3gpgCACyPBQAAAAKMpAAA9oUqAPDXvwMAAACAMNEKexRaLR1XczU0l+xQrEcFAAAAAJRUXqdU/1AAAAAAAIBUgR1ltksdxhyCgLYNSl+XhmEAnhVE+uIbuE9+f1XvzVeM6bM4Sfzz+Bln/Pj77wAA70AAAKMEGCErSTIA+I78Fd4qK5qpqKNl1cAd/cUiANTv8gCARDZYbBf/bJU3gyazou4hlW1dl3ly28yG9bd9Hc1u00VRd1X3EIIrgIh5yMx2+3ZkzRp+/0524CD33+hAxm8yABAY7AUms4L7r3VQG//+S9NZs7bH3U1sw8TzCPH4vjcMPZnMeDqPxw8nR9hw8+0dz+PjP/99fMRw882PfuRVtbx6ZcsvBjt23nksAbPl//47sk3m3LmZUIzHD0fxNQ85J53/Pi6uqXXWdrftNPugzPPff+PeQcGYbLUhDwDehEPKywWkmt9+07q3+FwAUT1xJA5vjlWm7p4VLRnu3PzAhyROJ3NlYLhrqd195uB5FYS2VduQnPWVxb4/xD5/zvfDD3Hl/MXvhx/iyvlV88MPrpxffT+MceX8fD+MaSUDMNOT544pmCBa11NJ9ZqqT2OEpWPl04pR/yIm/zHZi/ld/h//PImTn9bm4szi/+a19Ee8jyrN/ca+LQCkD+aDWGn+mfdbhGrfrn+JAbsvur95LX7Ynq0JrPFvqf2PxvsP+H6tGVw+o//NczX3fyl/f0x29517k7U+/8KzfQDJjVvGKBLmp1fMH8J+9+7du7O8Hd7u3w9tnN7enWXU4W0+JLjHX236t4eqXXZnebtwqKLyx1/B5G8PVfTox1/t94fD4UA2Tu/enXIe7t+/fyC7/eHH9055u/+//310QP09t+y1J+vmT33pS2c2+S7Rf/vf/XvecRx5/IXf/bufvQJd+9t/zw99x3Hu8e/+3V/27Lboxjt/8A9+x9ziqd/53V+2iujf9M533moMWe5/6swVNUqGu3vGKKa8f//+/RDj7d27sy63t/uHSh79+FnzfzvnOvzw7Levc2QBDg4=";
var _16 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAAC0fMFwAAAAAKxAgE8BHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAAtHzBcAEAAACRnqZfET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAAtHzBcAIAAAAbCNR+Cjxd9Wln9f+eAQFM2cLZuAQfeeBNP+6f/H/ebqcWYAJpmcF5xBCcPs+4tqyuWDzpRPc0IetsJ/2dz4fqsQ2XMBswb7gnwRdcDeHZuIJ8w0/qwzcbD/Pd91Kb5/pxUNb49u6E4/+93Gnb/u2djNNvz53O+NfBXuWHqDbYFB8tfBV+/lu0o/+hcNmdaWsvKU3Lo0sdW9tKaWV0/R06F+/+PdfkBAAaJVT9TQTBxCHXjuGpL97JAhtaBsbT3/w3/xu/+f/v//ebv+MqKjgAknT//uXJyXTOAAAMFCykZBQAACGyCnOI82MaW8XzrKSHIf9HVYV+PTRNivyUj6OIDWdm8839ezvOdL7aHObLy2RtPTxPV15fc7r/XtfD54cffvjhWYBvX+cAoLjl66+//vrrr7/++nyjjsNPJelwdHR0dMxNe/aM2zNud3T27qz0pUyjsMLtcP/v/L8f/fvR/bf//Xv//tv8/fu/55DaIt5Y6UfMTv1x9nb2djqd+lPfOZdZaIjJ1MLXX3/99buvv/66VjZGzB5+8mRWBF4lJN53v8PKZs9KFN5BnyTAPjoCBwAFAAKMZBQAAAAAgCmWVF5pbVvpwvW/wD/eQFvJSFhum9d1rYqgvPiqyQocKQCwkrRupv/1Tq7N1Nn8iTyvkojK41oaa7P/Lp2XO5WU1arqABJ+AD4lJN8X3z8ms1WR6IfGhpIEGBwcBAAAAIBkjAEAAAAKQWSIbRSkC5Yo7GfL8PUgai9MUiu+Wu+fZa6A6krK57SOokjYwgRbUzykxqwrOUxt+4qHPPK9kB4jfR8Zj138FnaEonDBAgCeJSTS1Wt4Okl3R/Pwo9/LAhtM5tujIRanz86tLDVLSw3quq5ftmLSr/ec5xQxApQAwQ1JMgAo3PEifL3T7px8vHfa0//z/n2KruS6tVJ83OT8//yQgTxmBRJChFkErrE7YiDMmrX991/sHdQGCsD/ydg7KID/EQcOCvfff/8dSw+TyUQbct+Px5MPRyfYkc6dO2cyrIDGqXc/61lnBOIoPOjceceOkQy45Xc/61lnrfQcF4MdO92s88gA+f7+4Z8PHz5I6Mmdb380cxnAuTcfPhybhF3ud9Za9/5zonbbns6aNX+Y7fbteeuggzL8+2+kTcBvAL5jA/a32/Cto6DIpnE+vrNrLBxHdu0aqZPnzqYlDkdGrn9gT4xxePO2sTgy1e8PtfMXc35+HgPhDnzHOP98fH/4wVzJy/n5/WEMrpyffmgjOApg0RoMNaPv0vFD7GbhtGsmhQt7P+2dmNSY1m1BfSkbWuanh21ZG+7/Yo3VVkFprB1Ph8Ph8PBnffXfMh+Pxw/Xw8GggPbtKg5vbbX/v6fn59Pj4yfivl3wl//zGgTc8n/e6K/h/Z/n5+FNt+S6+VNnrtC5BGOt3f7w41neDoewkHU4hBjv3nvXRxWAevv3f/Nlt3dnfefcdOrn21PPnNlEMpVSJqN7bhmjlPufOXNFbcu61qPdH/jB7/jMmU89c7opdn/g7/l73nGvLAZb7n/qS7/72W1ouOeWvcaMjo5mFXP8hS996dkrdJBpOnrT22+1VxaX+0+fXlqq61rnw5vefqu9stjUdV0vnT79v/my2x9+fO/dqXPI7f5Tz5xuWp6Ojo6Ojo6mCq7D2/35QxHMTae306m9ycLCgqjs0RXYoV1Y0Mapww/n29cBDg4=";
var _17 = "data:audio/ogg;base64,T2dnUwACAAAAAAAAAADa7NUXAAAAAGqqJRIBHgF2b3JiaXMAAAAAAUSsAAAAAAAAMKkDAAAAAAC4AU9nZ1MAAAAAAAAAAAAA2uzVFwEAAACtgpoiET3////////////////////VA3ZvcmJpcy0AAABYaXBoLk9yZyBsaWJWb3JiaXMgSSAyMDEwMTEwMSAoU2NoYXVmZW51Z2dldCkAAAAAAQV2b3JiaXMrQkNWAQAIAAAAMUwgxYDQkFUAABAAAGAkKQ6TZkkppZShKHmYlEhJKaWUxTCJmJSJxRhjjDHGGGOMMcYYY4wgNGQVAAAEAIAoCY6j5klqzjlnGCeOcqA5aU44pyAHilHgOQnC9SZjbqa0pmtuziklCA1ZBQAAAgBASCGFFFJIIYUUYoghhhhiiCGHHHLIIaeccgoqqKCCCjLIIINMMumkk0466aijjjrqKLTQQgsttNJKTDHVVmOuvQZdfHPOOeecc84555xzzglCQ1YBACAAAARCBhlkEEIIIYUUUogppphyCjLIgNCQVQAAIACAAAAAAEeRFEmxFMuxHM3RJE/yLFETNdEzRVNUTVVVVVV1XVd2Zdd2ddd2fVmYhVu4fVm4hVvYhV33hWEYhmEYhmEYhmH4fd/3fd/3fSA0ZBUAIAEAoCM5luMpoiIaouI5ogOEhqwCAGQAAAQAIAmSIimSo0mmZmquaZu2aKu2bcuyLMuyDISGrAIAAAEABAAAAAAAoGmapmmapmmapmmapmmapmmapmmaZlmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVlAaMgqAEACAEDHcRzHcSRFUiTHciwHCA1ZBQDIAAAIAEBSLMVyNEdzNMdzPMdzPEd0RMmUTM30TA8IDVkFAAACAAgAAAAAAEAxHMVxHMnRJE9SLdNyNVdzPddzTdd1XVdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVgdCQVQAABAAAIZ1mlmqACDOQYSA0ZBUAgAAAABihCEMMCA1ZBQAABAAAiKHkIJrQmvPNOQ6a5aCpFJvTwYlUmye5qZibc84555xszhnjnHPOKcqZxaCZ0JpzzkkMmqWgmdCac855EpsHranSmnPOGeecDsYZYZxzzmnSmgep2Vibc85Z0JrmqLkUm3POiZSbJ7W5VJtzzjnnnHPOOeecc86pXpzOwTnhnHPOidqba7kJXZxzzvlknO7NCeGcc84555xzzjnnnHPOCUJDVgEAQAAABGHYGMadgiB9jgZiFCGmIZMedI8Ok6AxyCmkHo2ORkqpg1BSGSeldILQkFUAACAAAIQQUkghhRRSSCGFFFJIIYYYYoghp5xyCiqopJKKKsoos8wyyyyzzDLLrMPOOuuwwxBDDDG00kosNdVWY4215p5zrjlIa6W11lorpZRSSimlIDRkFQAAAgBAIGSQQQYZhRRSSCGGmHLKKaegggoIDVkFAAACAAgAAADwJM8RHdERHdERHdERHdERHc/xHFESJVESJdEyLVMzPVVUVVd2bVmXddu3hV3Ydd/Xfd/XjV8XhmVZlmVZlmVZlmVZlmVZlmUJQkNWAQAgAAAAQgghhBRSSCGFlGKMMcecg05CCYHQkFUAACAAgAAAAABHcRTHkRzJkSRLsiRN0izN8jRP8zTRE0VRNE1TFV3RFXXTFmVTNl3TNWXTVWXVdmXZtmVbt31Ztn3f933f933f933f933f13UgNGQVACABAKAjOZIiKZIiOY7jSJIEhIasAgBkAAAEAKAojuI4jiNJkiRZkiZ5lmeJmqmZnumpogqEhqwCAAABAAQAAAAAAKBoiqeYiqeIiueIjiiJlmmJmqq5omzKruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6QGjIKgBAAgBAR3IkR3IkRVIkRXIkBwgNWQUAyAAACADAMRxDUiTHsixN8zRP8zTREz3RMz1VdEUXCA1ZBQAAAgAIAAAAAADAkAxLsRzN0SRRUi3VUjXVUi1VVD1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVXVNE3TNIHQkJUAABkAAOjFCCGEEJKjlloQvlfKOSg1914xZhTE3nulmEGOcvCZYko5KLWnzjGliJFcWyuRIsRhDjpVTimoQefWSQgtB0JDVgQAUQAAAEKIMcQYYoxByCBEjDEIGYSIMQYhg9BBCCWFlDIIIZWQUsQYg9BBySCElEJJGZSQUkilAACAAAcAgAALodCQFQFAnAAAgpBziDEIFWMQOgipdBBSqhiDkDknJXMOSiglpRBKShVjEDLnJGTOSQklpBRKSamDkFIopaVQSmoppRhTSi12EFIKpaQUSmkptRRbSi3GijEImXNSMuekhFJaCqWkljknpYOQUgehlJJSa6Wk1jLnpHTQSekglFJSaamU1FooJbWSUmslldZaazGm1mIMpaQUSmmtpNRiaim21lqsFWMQMuekZM5JCaWkFEpJLXNOSgchlc5BKSWV1kpJqWXOSekglNJBKKWk0lpJpbVQSkslpdZCKa211mJMqbUaSkmtpNRaSam11FqtrbUYOwgphVJaCqW0llqKMaUWYyiltZJSayWl1lprtbbWYgyltFRSaa2k1FpqrcbWWqyppRhTazG21mqNMcYcY805pRRjainG1FqMLbYcY6w1dxBSCqWkFkpJLbUUY2otxlBKaiWV1kpJLbbWakytxRpKaa2k1FpJqbXWWo2ttRpTSjGm1mpMqcUYY8y1tRhzai3G1lqsqbUYY6w1xxhrLQAAYMABACDAhDJQaMhKACAKAAAxBiHGnDMIKcUYhMYgpRiDECnFmHMQIqUYcw5CxphzEErJGHMOQikdhBJKSamDEEopKRUAAFDgAAAQYIOmxOIAhYasBABCAgAYhJRizDnnIJSSUoSQUow55xyEUlKKEFKKMeecg1BKSpVSTDHmHIRSUmqpUkoxxpyDUEpKqWWMMeYchBBKSam1jDHGnIMQQikptdY55xx0EkpJpaXYOuecgxBKKSWl1lrnHIQQSkmlpdZi65yDEEIpJaXUWoshhFJKSSWllmKLMYRSSiklpZRaizGWVFJKqaXWYouxxlJKSiml1lqLMcaaUmqptdZijLHGWlNKqbXWWosxxlprAQAABw4AAAFG0ElGlUXYaMKFB6DQkBUBQBQAAGAMYgwxhpxzEDIIkXMMQgchcs5J6aRkUkJpIaVMSkglpBY556R0UjIpoaVQUiYlpFRaKQAA7MABAOzAQig0ZCUAkAcAACGkFGOMMYaUUooxxhxDSinFGGOMKaUYY4wx55RSjDHGmHOMMcYcc845xhhjzDnnHGPMMeecc44xxpxzzjnHHHPOOeecY84555xzzgkAACpwAAAIsFFkc4KRoEJDVgIAqQAAhDFKMeYchFIahRhzzjkIpTRIMeaccxBKqRhzzjkIpZRSMeaccxBKKSVzzjkIIZSSUuaccxBCKCWlzjkIIYRSSkqdcxBCKKGUlEIIpZRSUkqphRBKKaWUVFoqpZSSUkqptVZKKSWllFpqrQAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAwBiDkEEGIWMQQgghhBBCCAkAABhwAAAIMKEMFBqyEgBIBQAADFKKMQelpBQpxZhzEEpJKVKKMecglJJSxZhzEEpJqbWKMecglJJSa51zEEpJqbUYO+cglJJSazGGEEpJqbUYYwwhlJJSazHWWkpJqbUYa8y1lJJSazHWWmtKrbUYa60155RaazHWWnPOBQAgNDgAgB3YsDrCSdFYYKEhKwGAPAAASCnGGGOMMaUUY4wxxphSijHGGGOMMcYYY4wxphhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMeYYY4wxxhhjzDnGGGOMOeYcY4wxxpxzTgAAUIEDAECAjSKbE4wEFRqyEgAIBwAAjGHMOecglJBKo5RzEEIoJZVWGqWcgxJCKSm1ljknJaVSUmottsw5KSmVklJrLXYSUmotpdZirLGDkFJrqbUWY40dhFJaii3GGnPtIJSSWmsxxlprKKWl2GKssdaaQymptRZjrTXnXFJqLcZaa82155JSazHGWmutuafWYqyx1lxz7z21FmONteace84FAJg8OABAJdg4w0rSWeFocKEhKwGA3AAARinGnHMOQgghhBBCCJVSjDnnHIQQQgghhBAqpRhzzjkIIYQQQgghZIw55xx0EEIIIYQQQsgYc845CCGEEEIIIYTQOecchBBCCCGEUEIppXPOOQchhBBCCCGEUErnHIQQQgghhBJKKKWUzjkIIYQQQgilhFJKKSGEEEIIIYQSSimllFI6CCGEEEIIpZRSSimlhBBCCCGEEEoppZRSSgkhhBBCCCGUUkoppZQSQgghhBJKKaWUUkopJYQQQgihlFJKKaWUUkoIIYRSSimllFJKKaWUEEIoIZRSSimllFJKKSGEEkoopZRSSimllFJCCCWUUkoppZRSSimlhBBCKKWUUkoppZRSSgkhlFJKKaWUUkoppZRSAADQgQMAQIARlRZipxlXHoEjChkmoEJDVgIA4QAAACGUUkoppZRSaiSllFJKKaWUUiMlpZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKpZRSSimllFJKKaWUUkoppZRSSimlAKjLDAfA6AkbZ1hJOiscDS40ZCUAkBYAABjDmGOOQSehlJRaa5iCUELopKTSSmyxNUpBCCGEUlJKrbXWMuiolJJKSq3FFmOMmYNSUiolpdRijLHWDkJKLbUWW4ux5lprB6GklFqLLcZaa669g5BKa63lGGOwOefaQSgptdhijDXXWnsOqbQWY4y19lxrzTmIUlKKMdYac80199xLSq3FmmuuNQefcxCmpdhqjTXnnHsQOvjUWo255h500EHnHnRKrdZaa849ByF88Lm1WGvNNefegw86CN9qqzXnXGvvPfeeg24x1lxz0MEHIXzwQbgYa8859xyEDjr4HgwAyI1wAEBcMJKQOsuw0ogbT8AQgRQasgoAiAEAIIxBBiGElFJKKaWUYoopxhhjjDHGGGOMMcYYY4wxxgQAACY4AAAEWMGuzNKqjeKmTvKiDwKf0BGbkSGXUjGTE0GP1FCLlWCHVnCDF4CFhqwEAMgAABCIseZac44QlNZi7blUSjlqseeUIYKctJxLyQxBTlprLWTIKCcxthQyhBS02lrplFKMYquxdIwxSanFlkrnIAAAAIIAAAMRMhMIFECBgQwAOEBIkAIACgsMHcNFQEAuIaPAoHBMOCedNgAAQYjMEImIxSAxoRooKqYDgMUFhnwAyNDYSLu4gC4DXNDFXQdCCEIQglgcQAEJODjhhife8IQbnKBTVOogAAAAAAAQAOABACDZACKimZnj6PD4AAkRGSEpMTlBSVEJAAAAAAAgAPgAAEhWgIhoZuY4Ojw+QEJERkhKTE5QUlQCAAAAAAAAAACAgIAAAAAAAEAAAACAgE9nZ1MABNcZAAAAAAAA2uzVFwIAAADu/EL/CzVbS6Bibab/RgEBVNnQl0aAfmMPvOWnD4ex+ocDcwNQHACPlnE9zfXy/3/HIjbccAVs5a1uMnn44hj5H3VzZTNEAYVL4zLqY39g2ViaL7/I5bvz4WcElKl3d8vi2bm0Ln/7QePJt+d0+8ZoXrQacMIGVzODf4i+ufY9KMUk32ebEU7d2CgqU+ogeH7x01rRjpvlzH77yz1w/qwAVAnpfeNKmBfpbzC10/X/xJ2LCYUzud/YuW1M8w8SOHgD0yF7bnS246h8zMcOP4oen8J6On2miYapYj5PeoL++Qq9+/0/OM/HcwIAWiUk9U2kIH3y+KwuB9FTYRnq7rOfeLAdx7f+xm/+m//mP/QWAMDyAQAAAAQIMQoAIFYXW4vRiATfu7uqpedE7DT9ZaMPCfD0ZhgAcP///5/f93Oehqfte9x+PtfNvMvFls04XK62l/dtILND2tz/v+ftfDrutqvlbBr0TV3k0eX9119bh2dBSYOyWGM2SQ/yackRnmtwvhxHSHHqOIoaAB4lVF5374N9kmJ1LgqTkCTA4OAgAMDyCAAAAIAxCgAAAECkIUPsiHSCSaAAHlktAlD7UAEAWik0SdRwGW+2OougAACAoIy5vS5DRAEAAAAAGIvL6+7PrLanzF1/3UYEgg4AHiVUXnfv1ychV+eDKExCkgB3192BBWB5HAAAABBgjAIAAACA0/y09vZJcciOLcHp2yMB+NX/RAKAFyapFdfneF8+ayuKAAAAgr3J6na7qwAAAAAAAGDo+Tkv3ElrHuZv/6dZW1QlLFXGiqWLAH4VRPriH6xO+rWyhxqjGHFyMJ9Z8VA9O2cGcnqmpQAA7wAAQAFQxpOMAoAy1sVy6jdi0meQ3xgA7DevHgAwhlRP2+tlPZ/H93G9nLe5A6qYrBkMuq7v6/u5ux86qyk4YmO0grsrxtgB3JK9csZK7H/0nykgWfBvfCvyef8+19ZGRn6d/X9+NcaYe4yRmyZGxJMdX5yQ4Hxc6nzmHb87xX4ECZagBQAeZIPgxwesO8tv5rM0P3ElCOfVd8L4zq6xyHDXnjDU1vj80sPBFmiv/fnz72jaNtG2bVvb8xdfzs/L+USqAl5SQiQFAM8i4gjeYUP7kO8Pu5r+y5FvJqyj6y6Mv0OlVzPAZ1M/CPjPv98VumuP40b3ofX+dPjT3rzxA++4VzYd3TMmK2WaTXHYFAq7CUFVAXU4VNX2dgirXlpaquf7n3rm9NL+Z770pTNPf+F3/+4vnfnUF373lz379FNf+NKzzzz91BeefebS0ulnzlyql06fvn84HO7fP9R2OBwKWe18Zodbh4ePbqq4J2iq8sc/nU6n0+l0Op3e3p1Op7d3Z6fT6d270+n07t270+n08VfwBI+//Akef/nhhx9++ESHx6/bffv666+//vrPS11YWPjz31nq54e6sHCoCwsLX3/99dftwLcADg4=";
var RcDialerPadSounds_default = {
  "0": _3,
  "1": _5,
  "2": _7,
  "3": _9,
  "4": _10,
  "5": _11,
  "6": _12,
  "7": _13,
  "8": _14,
  "9": _15,
  "*": _16,
  "#": _17
};

// src/components/Dialer/DialTextField/DialTextField.tsx
import React619, {
  forwardRef as forwardRef552,
  useImperativeHandle as useImperativeHandle12,
  useLayoutEffect as useLayoutEffect16,
  useMemo as useMemo34,
  useRef as useRef64
} from "react";

// src/components/Forms/TextField/TextField.tsx
import React618, {
  forwardRef as forwardRef551,
  useEffect as useEffect46,
  useLayoutEffect as useLayoutEffect15,
  useMemo as useMemo33,
  useRef as useRef62,
  useState as useState29
} from "react";

// src/components/Forms/Form/Form/FormContext.ts
import { createContext as createContext13, useContext as useContext16 } from "react";
var RcFormContext = createContext13(new Map());
var useRcFormContext = () => useContext16(RcFormContext);

// src/components/Forms/TextField/TextField.tsx
var combineOutlineClasses = combineClasses(RcTextFieldInputClasses, RcOutlineTextFieldInputClasses);
var _RcTextField = forwardRef551((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTextField" });
  const {
    classes: classesProp,
    InputLabelProps: InputLabelPropsProp,
    FormHelperTextProps: FormHelperTextPropsProp,
    value: valueProp,
    focusOnMount,
    selectOnMount,
    clearAriaLabel,
    autoFocus: autoFocusProp = focusOnMount,
    InputProps: InputPropsProp,
    error: error4,
    helperText,
    defaultValue,
    inputRef: inputRefProp,
    autoSelect = selectOnMount,
    autoFocusDelay,
    clearLabel,
    clearButtonProps,
    clearBtn,
    validate,
    onChange,
    onBlur,
    onFocus,
    onClear,
    id: id3,
    variant,
    radius: radius4,
    size,
    align,
    textVariant,
    gutterBottom,
    color: color2,
    ...rest
  } = props;
  const formContext = useRcFormContext();
  const innerRef = useRef62();
  const inputRef = useForkRef2(inputRefProp, innerRef);
  const [validateMessage, setValidateMessage] = useState29("");
  const runValidate = useEventCallback2((value = valueProp) => {
    let validateMessage2 = false;
    if (validate) {
      validateMessage2 = validate(value);
      setValidateMessage(validateMessage2 !== false ? validateMessage2 : "");
    }
    return validateMessage2;
  });
  const handleClear = useEventCallback2((event) => {
    const fakeEvent = { target: { value: "" } };
    onClear?.(event);
    onChange?.(fakeEvent);
    setValidateMessage("");
  });
  const endAdornment = useMemo33(() => {
    const getCleanButton = () => {
      const iconTitle = clearLabel || clearButtonProps?.title;
      const combineClearProps = combineProps({
        TooltipProps: {
          tooltipForceHide: !iconTitle
        },
        onClick: handleClear,
        size: RcOutlineTextFieldIconSizes[size]
      }, clearButtonProps);
      return /* @__PURE__ */ React618.createElement(ClearIconButton, {
        title: iconTitle,
        "aria-label": clearAriaLabel || iconTitle,
        symbol: DeleteCircle_default,
        ...combineClearProps
      });
    };
    if (InputPropsProp?.endAdornment) {
      if (clearBtn) {
        return /* @__PURE__ */ React618.createElement(React618.Fragment, null, getCleanButton(), InputPropsProp.endAdornment);
      }
      return InputPropsProp.endAdornment;
    }
    return clearBtn ? getCleanButton() : void 0;
  }, [
    InputPropsProp,
    clearAriaLabel,
    clearBtn,
    clearButtonProps,
    clearLabel,
    handleClear,
    size
  ]);
  const events = useMemo33(() => combineProps({
    onBlur: () => {
      runValidate();
    },
    onFocus: () => {
      if (validateMessage !== "") {
        setValidateMessage("");
      }
    }
  }, {
    onBlur,
    onFocus
  }), [onBlur, onFocus, runValidate, validateMessage]);
  const classes = useMemo33(() => combineClasses(RcTextFieldClasses, classesProp), [classesProp]);
  const InputProps = useMemo33(() => {
    const curr = {
      outline: combineOutlineClasses,
      borderLess: void 0,
      standard: void 0
    }[variant];
    return combineProps({
      classes: curr || RcTextFieldInputClasses,
      disableUnderline: ["outline", "borderLess", "inline"].includes(variant)
    }, {
      ...InputPropsProp,
      endAdornment
    });
  }, [InputPropsProp, endAdornment, variant]);
  const FormHelperTextProps = useMemo33(() => combineProps({ classes: RcTextFieldFormHelperTextClasses }, FormHelperTextPropsProp), [FormHelperTextPropsProp]);
  const InputLabelProps = useMemo33(() => combineProps({ classes: RcTextFieldInputLabelClasses, shrink: true }, InputLabelPropsProp), [InputLabelPropsProp]);
  useLayoutEffect15(() => {
    const inputElm = innerRef.current;
    const autoFocus = autoFocusProp || InputPropsProp?.autoFocus;
    let timerId = null;
    if (autoSelect && inputElm?.value) {
      inputElm.select();
    } else {
      const focus2 = () => inputElm?.focus();
      if (autoFocus) {
        if (autoFocusDelay) {
          timerId = setTimeout(focus2, autoFocusDelay);
        } else {
          focus2();
        }
      }
    }
    return () => {
      if (timerId)
        clearTimeout(timerId);
      if (inputElm) {
        clearReactReferencesInNode(inputElm);
      }
    };
  }, []);
  useEffect46(() => {
    if (id3)
      formContext.set(id3, { validate: () => runValidate() });
    return () => {
      if (id3)
        formContext.delete(id3);
    };
  }, []);
  return /* @__PURE__ */ React618.createElement(TextField_default, {
    ...rest,
    ...events,
    id: id3,
    value: valueProp,
    onChange,
    defaultValue,
    error: validate ? !!validateMessage : error4,
    helperText: validateMessage || helperText,
    classes,
    FormHelperTextProps,
    InputLabelProps,
    InputProps,
    inputRef,
    ref: ref2
  });
});
var RcTextField = styled_components_default(withDeprecatedCheck(_RcTextField, [
  {
    prop: "focusOnMount",
    time: "2021-4",
    comment: `please use \`autoFocus\` to replace that`
  },
  {
    prop: "selectOnMount",
    time: "2021-4",
    comment: `please use \`autoSelect\` to replace that`
  },
  {
    prop: "clearLabel",
    time: "2021-4",
    comment: `clear button label, please use \`clearButtonProps\` with \`title\` replace that`
  },
  {
    prop: "clearAriaLabel",
    time: "2021-4",
    comment: `clear button aria-label, use \`clearButtonProps\` with \`aria-label\` replace that`
  }
], "RcTextField"))`
  ${TextFieldStyle}
`;
RcTextField.defaultProps = {
  clearBtn: true,
  variant: "standard",
  radius: "lg",
  size: "medium",
  textVariant: "subheading1"
};
RcTextField.displayName = "RcTextField";

// src/components/Dialer/DialTextField/styles/DialTextFieldStyle.tsx
var DialTextFieldStyle = () => {
  return css2``;
};

// src/components/Dialer/DialTextField/utils/DialTextFieldUtils.ts
var RcDialTextFieldClasses = RcClasses([], "RcDialTextField");
var RcDialTextFieldInputClasses = RcClasses([], "RcDialTextFieldInput");

// src/components/Dialer/DialTextField/utils/getDialPadValueOnlyRegex.ts
function getDialPadValueOnlyRegex() {
  return /[1234567890*+#]+/g;
}

// src/components/Dialer/DialTextField/utils/useFixedEndSelection.ts
import { useRef as useRef63 } from "react";
var useFixedEndSelection = () => {
  const ref2 = useRef63(null);
  const keypadModeFixedAtLatest = useEventCallback2(() => {
    const { position: position4, isSelectRange } = getSelectionPosition(ref2);
    const value = ref2.current?.value || "";
    if (isSelectRange || position4.start < value.length) {
      const targetPosition = value.length;
      setSelectionPosition(ref2, {
        start: targetPosition,
        end: targetPosition,
        scrollIntoView: true
      });
    }
  });
  const onKeyDown = (e2) => {
    if ([
      "ArrowUp",
      "ArrowLeft",
      "ArrowRight",
      "ArrowDown",
      "PageUp",
      "PageDown",
      "Home",
      "End"
    ].includes(e2.key)) {
      e2.preventDefault();
      e2.stopPropagation();
    }
    keypadModeFixedAtLatest();
  };
  return {
    ref: ref2,
    onFocus: keypadModeFixedAtLatest,
    onClick: keypadModeFixedAtLatest,
    onKeyDown
  };
};

// src/components/Dialer/DialTextField/DialTextField.tsx
var _RcDialTextField = forwardRef552((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDialTextField" });
  const {
    children: children2,
    value,
    onChange,
    onEmit,
    onKeyPress,
    onKeyDown,
    onKeyUp,
    inputRef: inputRefProp,
    inputProps: inputPropsProp,
    InputProps: InputPropsProp,
    onlyAllowKeypadValue,
    keypadMode,
    ...rest
  } = props;
  const dialerContext = useRcDialerContext();
  const {
    ref: inputRef,
    onFocus: onKeypadModeFocus,
    onKeyDown: onKeypadModeKeyDown,
    onClick: onKeypadModeClick
  } = useFixedEndSelection();
  const forkContextRef = useForkRef2(dialerContext.inputRef, inputRef);
  const forkInputRef = useForkRef2(inputRefProp, forkContextRef);
  const scrollToPositionRef = useRef64();
  const isNotTriggerRefocusRef = useRef64(false);
  const maxLength = keypadMode ? void 0 : inputPropsProp?.maxLength;
  const checkNotReFocus = useEventCallback2((reason, isFocus) => {
    const elm = inputRef.current;
    const isInputFocus = isFocus ?? document.activeElement === elm;
    if (reason !== "click" && !isInputFocus) {
      isNotTriggerRefocusRef.current = true;
    }
  });
  useImperativeHandle12(dialerContext.onClearRef, () => (e2, reason) => {
    if (reason !== "keyboard") {
      checkNotReFocus(reason);
    }
    scrollToPositionRef.current = 0;
    onChange?.("");
  }, [checkNotReFocus, onChange]);
  useImperativeHandle12(dialerContext.onDeleteRef, () => (e2, reason) => {
    const elm = inputRef.current;
    if (elm && value?.length) {
      const isFocus = document.activeElement === elm;
      let toPosition;
      let toValue2;
      if (isFocus) {
        const { position: position4, isSelectRange } = getSelectionPosition(inputRef);
        if (isSelectRange) {
          toPosition = position4.start;
          toValue2 = value.slice(0, position4.start) + value.slice(position4.end);
        } else if (position4.start > 0) {
          toPosition = position4.start - 1;
          toValue2 = value.slice(0, toPosition) + value.slice(position4.end);
        }
      } else {
        toPosition = value.length - 1;
        toValue2 = value.slice(0, -1);
      }
      if (toValue2 !== void 0) {
        if (!(reason === "keyboard" && toValue2 === "")) {
          checkNotReFocus(reason);
        }
        scrollToPositionRef.current = toPosition;
        onChange?.(toValue2);
      }
    }
  }, [checkNotReFocus, inputRef, onChange, value]);
  useImperativeHandle12(dialerContext.onInsertRef, () => (addValue, reason) => {
    const elm = inputRef.current;
    if (elm) {
      const isFocus = document.activeElement === elm;
      let toPosition;
      let toValue2;
      if (!isFocus || keypadMode) {
        toValue2 = value + addValue;
        toPosition = toValue2.length;
      } else {
        const { position: position4 } = getSelectionPosition(inputRef);
        toValue2 = value.slice(0, position4.start) + addValue + value.slice(position4.end);
        toPosition = position4.start + 1;
      }
      if (maxLength === void 0 || maxLength !== void 0 && toValue2.length <= maxLength) {
        checkNotReFocus(reason, isFocus);
        scrollToPositionRef.current = toPosition;
        onChange?.(toValue2);
        onEmit?.(addValue, reason);
      }
    }
  }, [
    checkNotReFocus,
    inputRef,
    keypadMode,
    maxLength,
    onChange,
    onEmit,
    value
  ]);
  useLayoutEffect16(() => {
    const scrollToPosition = scrollToPositionRef.current;
    if (!isNotTriggerRefocusRef.current && scrollToPosition !== void 0) {
      setSelectionPosition(inputRef, {
        start: scrollToPosition,
        end: scrollToPosition,
        scrollIntoView: true
      });
    }
    scrollToPositionRef.current = void 0;
    isNotTriggerRefocusRef.current = false;
  });
  const events = useKeyDownOnce(ACCEPTABLE_KEYS, {
    onKeyDown: (e2) => {
      dialerContext.dialPadActionRef?.current?.playAudio(e2.key);
      if (keypadMode) {
        if (["Delete", "Backspace"].includes(e2.key)) {
          e2.preventDefault();
          e2.stopPropagation();
        }
        onKeypadModeKeyDown(e2);
      }
      onKeyDown?.(e2);
    },
    onKeyUp
  });
  const handleChange = useEventCallback2((e2) => {
    const currValue = e2.target.value;
    if (onlyAllowKeypadValue) {
      const filterValue = (currValue.match(getDialPadValueOnlyRegex()) || []).join("");
      if (filterValue === value)
        return;
      const newValue = filterValue.slice(-1);
      if (newValue !== "") {
        onEmit?.(newValue, "keyboard");
      }
      onChange(filterValue);
      return;
    }
    onChange(currValue);
  });
  const handleKeyPress = useEventCallback2((e2) => {
    onKeyPress?.(e2);
    if (onlyAllowKeypadValue) {
      const isMatch = getDialPadValueOnlyRegex().test(e2.key);
      if (!isMatch) {
        e2.preventDefault();
        e2.stopPropagation();
      }
    }
  });
  const InputProps = useMemo34(() => combineProps({
    onFocus: keypadMode ? onKeypadModeFocus : void 0,
    onClick: keypadMode ? onKeypadModeClick : void 0,
    onKeyPress: handleKeyPress,
    onChange: handleChange,
    onKeyDown: events.onKeyDown,
    onKeyUp: events.onKeyUp
  }, InputPropsProp), [
    InputPropsProp,
    events.onKeyDown,
    events.onKeyUp,
    handleChange,
    handleKeyPress,
    keypadMode,
    onKeypadModeClick,
    onKeypadModeFocus
  ]);
  const inputProps = useMemo34(() => ({ ...inputPropsProp, maxLength }), [inputPropsProp, maxLength]);
  return /* @__PURE__ */ React619.createElement(RcTextField, {
    ref: ref2,
    inputRef: forkInputRef,
    clearBtn: false,
    value,
    variant: "borderLess",
    inputProps,
    InputProps,
    autoComplete: "off",
    ...rest
  }, children2);
});
var RcDialTextField = styled_components_default(_RcDialTextField)`
  ${DialTextFieldStyle}
`;
RcDialTextField.defaultProps = {
  inputProps: {
    maxLength: 30
  },
  textVariant: "headline1"
};
RcDialTextField.displayName = "RcDialTextField";

// src/components/Dialer/Dialer.tsx
import React620, { useRef as useRef65 } from "react";
var RcDialer = ({ children: children2 }) => {
  const dialPadActionRef = useRef65(null);
  const onInsertRef = useRef65(null);
  const inputRef = useRef65(null);
  const onDeleteRef = useRef65(null);
  const onClearRef = useRef65(null);
  return /* @__PURE__ */ React620.createElement(RcDialerContext.Provider, {
    value: {
      dialPadActionRef,
      onInsertRef,
      onDeleteRef,
      inputRef,
      onClearRef
    }
  }, /* @__PURE__ */ React620.createElement(React620.Fragment, null, children2));
};
RcDialer.defaultProps = {};
RcDialer.displayName = "RcDialer";

// src/components/Dialog/Dialog.tsx
import React623, { forwardRef as forwardRef553, useMemo as useMemo36 } from "react";

// src/components/PortalHost/Connectable/ThrottleScheduler.ts
var ThrottleScheduler = class {
  _lastTask = null;
  _timeoutID;
  schedule(task) {
    if (!this._timeoutID) {
      this._timeoutID = window.setTimeout(() => {
        this._lastTask();
        this._reset();
      });
    }
    this._lastTask = task;
  }
  clear() {
    window.clearTimeout(this._timeoutID);
    this._reset();
  }
  _reset() {
    this._lastTask = null;
    this._timeoutID = void 0;
  }
};

// src/components/PortalHost/Connectable/types.ts
var ConnectSymbol = Symbol("connect");

// src/components/PortalHost/Connectable/Connectable.ts
var Connectable = class {
  constructor(scheduler) {
    this.scheduler = scheduler;
  }
  _connector = null;
  get _isConnected() {
    return Boolean(this._connector);
  }
  [ConnectSymbol](connector) {
    if (this._isConnected) {
      throw Error("Only one connector is allowed to connect!");
    }
    this._connector = connector;
    this.onConnected();
    return () => {
      this.onDisconnected();
    };
  }
  onConnected() {
  }
  onDisconnected() {
    this.scheduler?.clear();
    this._connector = null;
  }
  emit(value) {
    if (!this._isConnected)
      return;
    const task = () => {
      this._connector?.(value);
    };
    if (this.scheduler) {
      this.scheduler.schedule(task);
    } else {
      task();
    }
  }
};

// src/components/PortalHost/PortalHost.tsx
import React622, { useEffect as useEffect48, useRef as useRef66, useState as useState30 } from "react";

// src/components/PortalHost/context/PortalIDContext.ts
import { createContext as createContext14 } from "react";
var PortalIDContext = createContext14(void 0);
var PortalIDProvider = PortalIDContext.Provider;

// src/components/PortalHost/context/PortalManagerContext.ts
import { createContext as createContext15 } from "react";
var PortalManagerContext = createContext15(void 0);
var PortalManagerProvider = PortalManagerContext.Provider;

// src/components/PortalHost/PortalRenderer.tsx
import React621, { useEffect as useEffect47, useMemo as useMemo35 } from "react";
var RcPortalRenderer = ({
  portalDescriptor
}) => {
  const {
    Component: Component7,
    props: _props,
    onMounted,
    onUnmounted,
    onClose,
    open,
    id: id3
  } = portalDescriptor;
  useEffect47(() => {
    onMounted();
    return () => onUnmounted();
  }, []);
  const element2 = useMemo35(() => {
    const props = { ..._props, onClose, open };
    return /* @__PURE__ */ React621.createElement(Component7, {
      ...props
    });
  }, [_props, open]);
  return /* @__PURE__ */ React621.createElement(PortalIDProvider, {
    value: id3
  }, element2);
};
RcPortalRenderer.displayName = "RcPortalRenderer";

// src/components/PortalHost/PortalHost.tsx
var RcPortalHost = ({ manager }) => {
  const [portals, setPortals] = useState30([]);
  const managerRef = useRef66(manager);
  useEffect48(() => {
    const disconnectHandler = managerRef.current[ConnectSymbol]((portalDescriptors) => {
      setPortals(portalDescriptors);
    });
    return disconnectHandler;
  }, []);
  return /* @__PURE__ */ React622.createElement(PortalManagerProvider, {
    value: managerRef.current
  }, portals.map((portal) => /* @__PURE__ */ React622.createElement(RcPortalRenderer, {
    key: portal.id,
    portalDescriptor: portal
  })));
};
RcPortalHost.displayName = "RcPortalHost";

// src/components/PortalHost/PortalManager/PortalStore.ts
var PortalStore = class extends Connectable {
  _portalMap = new Map();
  _batchMode = false;
  get size() {
    return this._portalMap.size;
  }
  get lastPortal() {
    let lastPortal;
    for (const portal of this.portals) {
      lastPortal = portal;
    }
    return lastPortal;
  }
  get portals() {
    return this._portalMap.values();
  }
  addOrUpdate(portal) {
    this._portalMap.set(portal.id, portal);
    if (!this._batchMode)
      this._emitChanges();
  }
  delete(id3) {
    this._portalMap.delete(id3);
    if (!this._batchMode)
      this._emitChanges();
  }
  clear() {
    this._portalMap.clear();
    if (!this._batchMode)
      this._emitChanges();
  }
  has(id3) {
    return this._portalMap.has(id3);
  }
  get(id3) {
    return this._portalMap.get(id3);
  }
  batch(handle) {
    this._batchMode = true;
    try {
      handle(this);
    } finally {
      this._batchMode = false;
      this._emitChanges();
    }
  }
  forceEmit() {
    this._emitChanges();
  }
  _emitChanges() {
    this.emit([...this.portals]);
  }
};

// src/components/PortalHost/PortalManager/types.ts
var UnmountSymbol = Symbol("UmountPortal");

// src/components/PortalHost/PortalManager/utils.ts
var createPromise = () => {
  let resolvePromise = null;
  const promise = new Promise((resolve) => {
    resolvePromise = resolve;
  });
  return [promise, resolvePromise];
};
var UniqIdUtil = class {
  _currentNumber = 0;
  get() {
    return String(this._currentNumber++);
  }
};

// src/components/PortalHost/PortalManager/PortalManager.ts
var PortalManager = class extends Connectable {
  constructor(scheduler = new ThrottleScheduler()) {
    super(scheduler);
    this.portalStore[ConnectSymbol]((portals) => this.emit(portals));
  }
  portalStore = new PortalStore();
  _feedbackMap = new Map();
  _uniqIdUtils = new UniqIdUtil();
  open(Component7, options = {}) {
    const { id: _id, props, data } = options;
    const id3 = _id ?? this._uniqIdUtils.get();
    const currPortal = this.portalStore.get(id3);
    if (currPortal?.open) {
      logInDev({
        component: "RcPortalHost",
        message: `open the portal with id('${id3}') failed, this portal is already open`
      });
      return currPortal.portalController;
    }
    const portalDescriptor = this.createPortalDescriptor({
      Component: Component7,
      id: id3,
      props,
      data
    });
    if (currPortal) {
      currPortal.portalController.onClosed.then(() => {
        this._openPortal(portalDescriptor);
      });
    } else {
      this._openPortal(portalDescriptor);
    }
    return portalDescriptor.portalController;
  }
  closeAll() {
    this.portalStore.batch((store) => {
      for (const portal of this.portalStore.portals) {
        store.addOrUpdate({ ...portal, open: false });
      }
    });
  }
  getTop() {
    return this.portalStore.lastPortal?.portalController;
  }
  getByID(id3) {
    return this.portalStore.get(id3)?.portalController;
  }
  isOpened(id3) {
    const portal = this.portalStore.get(id3);
    return Boolean(portal?.open);
  }
  isTop(id3) {
    return this.portalStore.lastPortal?.id === id3;
  }
  closeByID(id3, feedback) {
    const portal = this.portalStore.get(id3);
    if (!portal?.open) {
      logInDev({
        component: "RcPortalHost",
        message: "close portal failed, this portal is already closed"
      });
      return;
    }
    this._feedbackMap.set(portal.id, feedback);
    this.portalStore.addOrUpdate({ ...portal, open: false });
  }
  [UnmountSymbol](id3) {
    const portal = this.portalStore.get(id3);
    if (!portal) {
      logInDev({
        component: "RcPortalHost",
        message: "unmount portal failed, this portal is already unmount"
      });
      return;
    }
    this.portalStore.delete(portal.id);
  }
  updatePropsByID(id3, propsOrHandler) {
    const portal = this.portalStore.get(id3);
    if (!portal?.open) {
      logInDev({
        component: "RcPortalHost",
        message: "update props failed, this portal is already closed"
      });
      return;
    }
    const props = (() => {
      if (typeof propsOrHandler === "function") {
        return propsOrHandler(portal.props);
      }
      return propsOrHandler;
    })();
    this.portalStore.addOrUpdate({ ...portal, props });
  }
  onConnected() {
    super.onConnected();
    this.portalStore.forceEmit();
  }
  onDisconnected() {
    super.onDisconnected();
    this.portalStore.clear();
    this._feedbackMap.clear();
  }
  _openPortal(portal) {
    this.portalStore.addOrUpdate(portal);
  }
  createPortalDescriptor({
    props,
    data,
    Component: Component7,
    id: id3
  }) {
    const [onOpened, resolveOnOpened] = createPromise();
    const [onClosed, resolveOnClosed] = createPromise();
    const isTop = () => this.isTop(id3);
    const isOpened = () => this.isOpened(id3);
    const portalController = {
      id: id3,
      onOpened,
      onClosed,
      close: (feedback) => {
        this.closeByID(id3, feedback);
      },
      updateProps: (propsOrHandler) => {
        this.updatePropsByID(id3, propsOrHandler);
      },
      data,
      get isOpened() {
        return isOpened();
      },
      get isTop() {
        return isTop();
      }
    };
    const portalDescriptor = {
      id: id3,
      Component: Component7,
      onMounted: () => {
        resolveOnOpened();
      },
      onUnmounted: () => {
        const feedback = this._feedbackMap.get(id3);
        resolveOnClosed(feedback);
      },
      props,
      onClose: (feedback) => {
        this.closeByID(id3, feedback);
      },
      open: true,
      portalController
    };
    return portalDescriptor;
  }
};

// src/components/PortalHost/utils/usePortalManagerWithID.ts
import { useContext as useContext17 } from "react";
var usePortalManagerWithID = () => {
  const manager = useContext17(PortalManagerContext);
  const id3 = useContext17(PortalIDContext);
  if (manager && id3 !== void 0) {
    return { manager, id: id3 };
  }
  return void 0;
};

// src/components/PortalHost/utils/useUnmountPortalHandler.ts
var useUnmountPortalHandler = (handler) => {
  const managerWithID = usePortalManagerWithID();
  const handleExited = useEventCallback2((node4) => {
    handler?.(node4);
    if (managerWithID) {
      const { manager, id: id3 } = managerWithID;
      manager[UnmountSymbol](id3);
    }
  });
  return handleExited;
};

// src/components/Dialog/utils/DialogContext.ts
import { createContext as createContext16, useContext as useContext18 } from "react";
var RcDialogContext = createContext16({});
var useRcDialogContext = () => useContext18(RcDialogContext);
var useDialogDefaultProps = ({
  theme,
  ...props
}) => {
  const context = useRcDialogContext();
  const { size = context.size || "medium" } = props;
  return {
    ...props,
    size
  };
};

// src/components/Dialog/utils/DialogUtils.ts
var RcDialogClasses = RcClasses(["paper", "root", "paperFullScreen"], "RcDialog");
var RcDialogMaxWidths = {
  xsmall: "272px",
  small: null,
  medium: null,
  large: null,
  fullScreen: null
};

// src/components/Dialog/styles/DialogStyle.tsx
var DialogStyle = (props) => {
  const { size } = props;
  return css2`
    .${RcDialogClasses.paper} {
      max-width: ${RcDialogMaxWidths[size]};
    }
  `;
};

// src/components/Dialog/Dialog.tsx
var _RcDialog = forwardRef553((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDialog" });
  const {
    classes: classesProp,
    size = "medium",
    maxWidth: maxWidthProp,
    fullWidth = true,
    childrenSize,
    children: children2,
    TransitionProps: TransitionPropsProp,
    ...rest
  } = props;
  const classes = useMemo36(() => combineClasses(RcDialogClasses, classesProp), [classesProp]);
  const { externalWindow } = useRcPortalWindowContext();
  const maxWidth2 = useMemo36(() => {
    if (maxWidthProp)
      return maxWidthProp;
    switch (size) {
      case "fullScreen":
      case "xsmall":
        return false;
      case "large":
        return "md";
      case "medium":
        return "sm";
      case "small":
      default:
        return "xs";
    }
  }, [maxWidthProp, size]);
  const contextValue = useMemo36(() => ({ size: childrenSize }), [childrenSize]);
  const onExited = useUnmountPortalHandler(TransitionPropsProp?.onExited);
  const TransitionProps4 = {
    role: "presentation",
    ...TransitionPropsProp,
    onExited
  };
  return /* @__PURE__ */ React623.createElement(Dialog_default, {
    ref: ref2,
    fullWidth,
    container: externalWindow?.document.body,
    maxWidth: maxWidth2,
    fullScreen: size === "fullScreen" ? true : void 0,
    classes,
    TransitionProps: TransitionProps4,
    ...rest
  }, /* @__PURE__ */ React623.createElement(RcDialogContext.Provider, {
    value: contextValue
  }, children2));
});
var RcDialog = styled_components_default(withDeprecatedCheck(_RcDialog, [
  {
    prop: "size",
    time: "2021-11",
    comment: `
   * please use \`maxWidth\` and \`fullScreen\` directly
   *
   * - 'fullScreen' => false
   * - 'large' => \`md\`
   * - 'medium' => \`sm\`
   * - 'small' => \`xs\`
   * - 'xsmall' => no longer exist, should custom by yourself
   */`
  }
], "RcDialog"))`
  ${DialogStyle}
`;
RcDialog.defaultProps = {};
RcDialog.displayName = "RcDialog";

// src/components/Dialog/DialogActions/DialogActions.tsx
import React624, { forwardRef as forwardRef554, useMemo as useMemo37 } from "react";

// src/components/Dialog/DialogContent/utils/DialogContentUtils.ts
var RcDialogContentClasses = RcClasses(["dividers"], "RcDialogContent");
var getRcDialogContentSpacings = (isDividers) => {
  const spacings = {
    small: isDividers ? [3, 4] : [0, 4, 1],
    medium: isDividers ? [3, 6] : [0, 6, 3]
  };
  return spacings;
};

// src/components/Dialog/DialogActions/utils/DialogActionsUtils.ts
var RcDialogActionsClasses = RcClasses([], "RcDialogActions");
var RcDialogActionsSizes = {
  small: [4],
  medium: [3, 6, 6]
};

// src/components/Dialog/DialogActions/styles/DialogActionsStyle.tsx
var itemSpace = spacing2(2);
var DialogActionsStyle = (props) => {
  const { size, reverse, direction, disableSpacing } = props;
  const isVertical = direction === "vertical";
  const columnDirection = reverse ? "column-reverse" : "column";
  const rowDirection = reverse ? "row-reverse" : "row";
  return css2`
    padding: ${spacing2(...RcDialogActionsSizes[size])};
    flex-direction: ${isVertical ? columnDirection : rowDirection};

    ${size === "medium" && css2`
      .${RcDialogContentClasses.dividers} + && {
        padding-top: ${spacing2(5)};
      }
    `}

    ${!disableSpacing && css2`
      > * + * {
        ${isVertical ? css2`
              ${reverse ? css2`
                    margin-bottom: ${itemSpace};
                  ` : css2`
                    margin-top: ${itemSpace};
                  `}
            ` : css2`
              ${reverse ? css2`
                    margin-right: ${itemSpace};
                  ` : css2`
                    margin-left: ${itemSpace};
                  `}
            `};
      }
    `};
  `;
};

// src/components/Dialog/DialogActions/DialogActions.tsx
var _RcDialogActions = forwardRef554((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDialogActions" });
  const { classes: classesProp, size, children: children2, reverse, ...rest } = props;
  const classes = useMemo37(() => combineClasses(RcDialogActionsClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React624.createElement(DialogActions_default, {
    ...rest,
    ref: ref2,
    classes,
    disableSpacing: true
  }, children2);
});
var RcDialogActions = styled_components_default(_RcDialogActions).attrs((props) => {
  const toProps = useDialogDefaultProps(props);
  const direction = toProps.direction ?? (toProps.size === "small" ? "vertical" : "horizontal");
  const reverse = toProps.reverse ?? direction === "vertical";
  return {
    ...toProps,
    direction,
    reverse
  };
})`
  ${DialogActionsStyle}
`;
RcDialogActions.defaultProps = {};
RcDialogActions.displayName = "RcDialogActions";

// src/components/Dialog/DialogContent/DialogContent.tsx
import React625, { forwardRef as forwardRef555, useMemo as useMemo38 } from "react";

// src/components/Dialog/DialogContent/styles/DialogContentStyle.tsx
var DialogContentStyle = (props) => {
  const { size, dividers } = props;
  return css2`
    padding: ${spacing2(...getRcDialogContentSpacings(dividers)[size])};

    &.${RcDialogContentClasses.dividers} {
      border-color: ${palette22("neutral", "l02")};
    }
  `;
};

// src/components/Dialog/DialogContent/DialogContent.tsx
var _RcDialogContent = forwardRef555((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDialogContent" });
  const { classes: classesProp, children: children2, size, ...rest } = props;
  const classes = useMemo38(() => combineClasses(RcDialogContentClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React625.createElement(DialogContent_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcDialogContent = styled_components_default(_RcDialogContent).attrs(useDialogDefaultProps)`
  ${DialogContentStyle}
`;
RcDialogContent.defaultProps = {};
RcDialogContent.displayName = "RcDialogContent";

// src/components/Dialog/DialogContentText/DialogContentText.tsx
import React626, { forwardRef as forwardRef556, useMemo as useMemo39 } from "react";

// src/components/Typography/utils/TypographyUtils.ts
var MuiDefaultColor = [
  "initial",
  "inherit",
  "primary",
  "secondary",
  "textPrimary",
  "textSecondary",
  "error"
];
var RcCustomTypographyVariant = {
  display4: "h1",
  display3: "h2",
  display2: "h3",
  display1: "h4",
  headline1: "h5",
  headline2: "h5",
  title2: "h6",
  title1: "h6",
  subheading2: "h6",
  subheading1: "h6",
  body2: "p",
  body1: "p",
  caption2: "p",
  caption1: "p",
  inherit: "p"
};
var RcCustomTypographyWeight = {
  normal: 400,
  bold: 700
};

// src/components/Typography/styles/StyledTypography.tsx
var TypographyStyle = ({
  variant,
  color: color2,
  weight
}) => {
  const colorResult = !MuiDefaultColor.includes(color2) ? getParsePaletteColor(color2, null, false) : "";
  return css2`
    ${typography4(variant)};
    font-weight: ${weight && RcCustomTypographyWeight[weight]};
    color: ${colorResult};
  `;
};

// src/components/Dialog/DialogContentText/styles/DialogContentTextStyle.tsx
var DialogContentTextStyle = ({ gutterBottom }) => {
  return css2`
    margin-bottom: ${gutterBottom === false && 0};
  `;
};

// src/components/Dialog/DialogContentText/utils/DialogContentTextUtils.ts
var RcDialogContentTextClasses = RcClasses([], "RcDialogContentText");

// src/components/Dialog/DialogContentText/DialogContentText.tsx
var _RcDialogContentText = forwardRef556((inProps, ref2) => {
  const props = useThemeProps({
    props: inProps,
    name: "RcDialogContentText"
  });
  const {
    color: colorProp,
    component: componentProp,
    classes: classesProp,
    variant,
    weight,
    size,
    children: children2,
    ...rest
  } = props;
  const component = componentProp || RcCustomTypographyVariant[variant];
  const classes = useMemo39(() => combineClasses(RcDialogContentTextClasses, classesProp), [classesProp]);
  const color2 = useMemo39(() => MuiDefaultColor.includes(colorProp) ? colorProp : void 0, [colorProp]);
  return /* @__PURE__ */ React626.createElement(DialogContentText_default, {
    "data-variant": variant,
    "data-color": color2,
    color: color2,
    ref: ref2,
    classes,
    component,
    ...rest
  }, children2);
});
var RcDialogContentText = styled_components_default(_RcDialogContentText).attrs((props) => {
  const toProps = useDialogDefaultProps(props);
  return {
    variant: toProps.size === "small" ? "caption1" : "body1",
    color: "neutral.f04",
    ...toProps
  };
})`
  ${DialogContentTextStyle}
  ${TypographyStyle}
`;
RcDialogContentText.defaultProps = {};
RcDialogContentText.displayName = "RcDialogContentText";

// src/components/Dialog/DialogTitle/DialogTitle.tsx
import React628, { forwardRef as forwardRef558, useMemo as useMemo41 } from "react";

// src/components/Typography/Typography.tsx
import React627, { forwardRef as forwardRef557, useMemo as useMemo40 } from "react";
var _RcTypography = forwardRef557((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTypography" });
  const {
    variant,
    color: colorProp,
    component: componentProp,
    weight,
    ...rest
  } = props;
  const component = componentProp || RcCustomTypographyVariant[variant];
  const color2 = useMemo40(() => MuiDefaultColor.includes(colorProp) ? colorProp : void 0, [colorProp]);
  return /* @__PURE__ */ React627.createElement(Typography_default, {
    "data-variant": variant,
    "data-color": typeof colorProp === "string" ? colorProp : void 0,
    ref: ref2,
    color: color2,
    variant: "inherit",
    component,
    ...rest
  });
});
var RcTypography = styled_components_default(withTooltip(_RcTypography))`
  ${TypographyStyle}
`;
RcTypography.defaultProps = {
  variant: "body1",
  color: "initial"
};
RcTypography.displayName = "RcTypography";

// src/components/Dialog/DialogTitle/utils/DialogTitleUtils.ts
var RcDialogTitleClasses = RcClasses([], "RcDialogTitle");
var RcDialogTitleSpacings = {
  small: [4],
  medium: [4, 6]
};
var RcDialogTitleTypographyVariant = {
  small: "subheading2",
  medium: "title2"
};

// src/components/Dialog/DialogTitle/styles/DialogTitleStyle.tsx
var DialogTitleStyle = (props) => {
  const { size, space: spaceProp, display } = props;
  const paddingValue = spaceProp !== void 0 ? spaceProp instanceof Array ? spaceProp : [spaceProp] : RcDialogTitleSpacings[size];
  return css2`
    color: ${palette22("neutral", "f06")};

    padding: ${spacing2(...paddingValue)};

    display: ${display};
  `;
};

// src/components/Dialog/DialogTitle/DialogTitle.tsx
var _RcDialogTitle = forwardRef558((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDialogTitle" });
  const {
    classes: classesProp,
    display,
    space: space2,
    children: children2,
    disableTypography,
    size,
    ...rest
  } = props;
  const classes = useMemo41(() => combineClasses(RcDialogTitleClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React628.createElement(DialogTitle_default, {
    ...rest,
    disableTypography: true,
    ref: ref2,
    classes
  }, disableTypography ? children2 : /* @__PURE__ */ React628.createElement(RcTypography, {
    variant: RcDialogTitleTypographyVariant[size],
    component: "h2"
  }, children2));
});
var RcDialogTitle = styled_components_default(_RcDialogTitle).attrs(useDialogDefaultProps)`
  ${DialogTitleStyle}
`;
RcDialogTitle.defaultProps = {};
RcDialogTitle.displayName = "RcDialogTitle";

// src/components/DnD/DragDropContext/DragDropContext.tsx
import React633 from "react";

// node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js
import React632, { useLayoutEffect as useLayoutEffect18, useEffect as useEffect51, useRef as useRef70, useState as useState32, useContext as useContext23 } from "react";

// node_modules/@babel/runtime/helpers/esm/objectSpread2.js
function ownKeys(object3, enumerableOnly) {
  var keys3 = Object.keys(object3);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object3);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object3, sym).enumerable;
      });
    }
    keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread2(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    if (i2 % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}

// node_modules/redux/es/redux.js
var $$observable = function() {
  return typeof Symbol === "function" && Symbol.observable || "@@observable";
}();
var randomString = function randomString2() {
  return Math.random().toString(36).substring(7).split("").join(".");
};
var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};
function isPlainObject3(obj) {
  if (typeof obj !== "object" || obj === null)
    return false;
  var proto = obj;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(obj) === proto;
}
function miniKindOf(val) {
  if (val === void 0)
    return "undefined";
  if (val === null)
    return "null";
  var type3 = typeof val;
  switch (type3) {
    case "boolean":
    case "string":
    case "number":
    case "symbol":
    case "function": {
      return type3;
    }
  }
  if (Array.isArray(val))
    return "array";
  if (isDate(val))
    return "date";
  if (isError(val))
    return "error";
  var constructorName = ctorName(val);
  switch (constructorName) {
    case "Symbol":
    case "Promise":
    case "WeakMap":
    case "WeakSet":
    case "Map":
    case "Set":
      return constructorName;
  }
  return type3.slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function ctorName(val) {
  return typeof val.constructor === "function" ? val.constructor.name : null;
}
function isError(val) {
  return val instanceof Error || typeof val.message === "string" && val.constructor && typeof val.constructor.stackTraceLimit === "number";
}
function isDate(val) {
  if (val instanceof Date)
    return true;
  return typeof val.toDateString === "function" && typeof val.getDate === "function" && typeof val.setDate === "function";
}
function kindOf(val) {
  var typeOfVal = typeof val;
  if (true) {
    typeOfVal = miniKindOf(val);
  }
  return typeOfVal;
}
function createStore(reducer2, preloadedState, enhancer) {
  var _ref23;
  if (typeof preloadedState === "function" && typeof enhancer === "function" || typeof enhancer === "function" && typeof arguments[3] === "function") {
    throw new Error(false ? formatProdErrorMessage(0) : "It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");
  }
  if (typeof preloadedState === "function" && typeof enhancer === "undefined") {
    enhancer = preloadedState;
    preloadedState = void 0;
  }
  if (typeof enhancer !== "undefined") {
    if (typeof enhancer !== "function") {
      throw new Error(false ? formatProdErrorMessage(1) : "Expected the enhancer to be a function. Instead, received: '" + kindOf(enhancer) + "'");
    }
    return enhancer(createStore)(reducer2, preloadedState);
  }
  if (typeof reducer2 !== "function") {
    throw new Error(false ? formatProdErrorMessage(2) : "Expected the root reducer to be a function. Instead, received: '" + kindOf(reducer2) + "'");
  }
  var currentReducer = reducer2;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  function getState() {
    if (isDispatching) {
      throw new Error(false ? formatProdErrorMessage(3) : "You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
    }
    return currentState;
  }
  function subscribe2(listener) {
    if (typeof listener !== "function") {
      throw new Error(false ? formatProdErrorMessage(4) : "Expected the listener to be a function. Instead, received: '" + kindOf(listener) + "'");
    }
    if (isDispatching) {
      throw new Error(false ? formatProdErrorMessage(5) : "You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");
    }
    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }
      if (isDispatching) {
        throw new Error(false ? formatProdErrorMessage(6) : "You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");
      }
      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index4 = nextListeners.indexOf(listener);
      nextListeners.splice(index4, 1);
      currentListeners = null;
    };
  }
  function dispatch(action3) {
    if (!isPlainObject3(action3)) {
      throw new Error(false ? formatProdErrorMessage(7) : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(action3) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    }
    if (typeof action3.type === "undefined") {
      throw new Error(false ? formatProdErrorMessage(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    }
    if (isDispatching) {
      throw new Error(false ? formatProdErrorMessage(9) : "Reducers may not dispatch actions.");
    }
    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action3);
    } finally {
      isDispatching = false;
    }
    var listeners = currentListeners = nextListeners;
    for (var i2 = 0; i2 < listeners.length; i2++) {
      var listener = listeners[i2];
      listener();
    }
    return action3;
  }
  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== "function") {
      throw new Error(false ? formatProdErrorMessage(10) : "Expected the nextReducer to be a function. Instead, received: '" + kindOf(nextReducer));
    }
    currentReducer = nextReducer;
    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  function observable() {
    var _ref6;
    var outerSubscribe = subscribe2;
    return _ref6 = {
      subscribe: function subscribe3(observer) {
        if (typeof observer !== "object" || observer === null) {
          throw new Error(false ? formatProdErrorMessage(11) : "Expected the observer to be an object. Instead, received: '" + kindOf(observer) + "'");
        }
        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }
        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe
        };
      }
    }, _ref6[$$observable] = function() {
      return this;
    }, _ref6;
  }
  dispatch({
    type: ActionTypes.INIT
  });
  return _ref23 = {
    dispatch,
    subscribe: subscribe2,
    getState,
    replaceReducer
  }, _ref23[$$observable] = observable, _ref23;
}
function warning5(message) {
  if (typeof console !== "undefined" && typeof console.error === "function") {
    console.error(message);
  }
  try {
    throw new Error(message);
  } catch (e2) {
  }
}
function bindActionCreator(actionCreator, dispatch) {
  return function() {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === "function") {
    return bindActionCreator(actionCreators, dispatch);
  }
  if (typeof actionCreators !== "object" || actionCreators === null) {
    throw new Error(false ? formatProdErrorMessage(16) : "bindActionCreators expected an object or a function, but instead received: '" + kindOf(actionCreators) + `'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?`);
  }
  var boundActionCreators = {};
  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === "function") {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}
function compose2() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }
  if (funcs.length === 0) {
    return function(arg) {
      return arg;
    };
  }
  if (funcs.length === 1) {
    return funcs[0];
  }
  return funcs.reduce(function(a2, b2) {
    return function() {
      return a2(b2.apply(void 0, arguments));
    };
  });
}
function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }
  return function(createStore3) {
    return function() {
      var store = createStore3.apply(void 0, arguments);
      var _dispatch = function dispatch() {
        throw new Error(false ? formatProdErrorMessage(15) : "Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.");
      };
      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function(middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose2.apply(void 0, chain)(store.dispatch);
      return _objectSpread2(_objectSpread2({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}
function isCrushed() {
}
if (typeof isCrushed.name === "string" && isCrushed.name !== "isCrushed") {
  warning5('You are currently using minified code outside of NODE_ENV === "production". This means that you are running a slower development build of Redux. You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) to ensure you have the correct code for your production build.');
}

// node_modules/react-redux/es/components/Provider.js
var import_prop_types116 = __toModule(require_prop_types());
import React630, { useMemo as useMemo42 } from "react";

// node_modules/react-redux/es/components/Context.js
import React629 from "react";
var ReactReduxContext = /* @__PURE__ */ React629.createContext(null);
if (true) {
  ReactReduxContext.displayName = "ReactRedux";
}

// node_modules/react-redux/es/utils/batch.js
function defaultNoopBatch(callback) {
  callback();
}
var batch = defaultNoopBatch;
var setBatch = function setBatch2(newBatch) {
  return batch = newBatch;
};
var getBatch = function getBatch2() {
  return batch;
};

// node_modules/react-redux/es/utils/Subscription.js
function createListenerCollection() {
  var batch2 = getBatch();
  var first = null;
  var last2 = null;
  return {
    clear: function clear() {
      first = null;
      last2 = null;
    },
    notify: function notify2() {
      batch2(function() {
        var listener = first;
        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },
    get: function get4() {
      var listeners = [];
      var listener = first;
      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }
      return listeners;
    },
    subscribe: function subscribe2(callback) {
      var isSubscribed = true;
      var listener = last2 = {
        callback,
        next: null,
        prev: last2
      };
      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }
      return function unsubscribe() {
        if (!isSubscribed || first === null)
          return;
        isSubscribed = false;
        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last2 = listener.prev;
        }
        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }
  };
}
var nullListeners = {
  notify: function notify() {
  },
  get: function get3() {
    return [];
  }
};
function createSubscription(store, parentSub) {
  var unsubscribe;
  var listeners = nullListeners;
  function addNestedSub(listener) {
    trySubscribe();
    return listeners.subscribe(listener);
  }
  function notifyNestedSubs() {
    listeners.notify();
  }
  function handleChangeWrapper() {
    if (subscription.onStateChange) {
      subscription.onStateChange();
    }
  }
  function isSubscribed() {
    return Boolean(unsubscribe);
  }
  function trySubscribe() {
    if (!unsubscribe) {
      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);
      listeners = createListenerCollection();
    }
  }
  function tryUnsubscribe() {
    if (unsubscribe) {
      unsubscribe();
      unsubscribe = void 0;
      listeners.clear();
      listeners = nullListeners;
    }
  }
  var subscription = {
    addNestedSub,
    notifyNestedSubs,
    handleChangeWrapper,
    isSubscribed,
    trySubscribe,
    tryUnsubscribe,
    getListeners: function getListeners() {
      return listeners;
    }
  };
  return subscription;
}

// node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js
import { useEffect as useEffect49, useLayoutEffect as useLayoutEffect17 } from "react";
var useIsomorphicLayoutEffect = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined" ? useLayoutEffect17 : useEffect49;

// node_modules/react-redux/es/components/Provider.js
function Provider(_ref6) {
  var store = _ref6.store, context = _ref6.context, children2 = _ref6.children;
  var contextValue = useMemo42(function() {
    var subscription = createSubscription(store);
    subscription.onStateChange = subscription.notifyNestedSubs;
    return {
      store,
      subscription
    };
  }, [store]);
  var previousState = useMemo42(function() {
    return store.getState();
  }, [store]);
  useIsomorphicLayoutEffect(function() {
    var subscription = contextValue.subscription;
    subscription.trySubscribe();
    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }
    return function() {
      subscription.tryUnsubscribe();
      subscription.onStateChange = null;
    };
  }, [contextValue, previousState]);
  var Context2 = context || ReactReduxContext;
  return /* @__PURE__ */ React630.createElement(Context2.Provider, {
    value: contextValue
  }, children2);
}
if (true) {
  Provider.propTypes = {
    store: import_prop_types116.default.shape({
      subscribe: import_prop_types116.default.func.isRequired,
      dispatch: import_prop_types116.default.func.isRequired,
      getState: import_prop_types116.default.func.isRequired
    }),
    context: import_prop_types116.default.object,
    children: import_prop_types116.default.any
  };
}
var Provider_default = Provider;

// node_modules/react-redux/es/components/connectAdvanced.js
var import_hoist_non_react_statics5 = __toModule(require_hoist_non_react_statics_cjs());
var import_react_is11 = __toModule(require_react_is2());
import React631, { useContext as useContext19, useMemo as useMemo43, useRef as useRef67, useReducer } from "react";
var _excluded = ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"];
var _excluded2 = ["reactReduxForwardedRef"];
var EMPTY_ARRAY = [];
var NO_SUBSCRIPTION_ARRAY = [null, null];
var stringifyComponent = function stringifyComponent2(Comp) {
  try {
    return JSON.stringify(Comp);
  } catch (err) {
    return String(Comp);
  }
};
function storeStateUpdatesReducer(state, action3) {
  var updateCount = state[1];
  return [action3.payload, updateCount + 1];
}
function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  useIsomorphicLayoutEffect(function() {
    return effectFunc.apply(void 0, effectArgs);
  }, dependencies);
}
function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {
  lastWrapperProps.current = wrapperProps;
  lastChildProps.current = actualChildProps;
  renderIsScheduled.current = false;
  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
}
function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {
  if (!shouldHandleStateChanges)
    return;
  var didUnsubscribe = false;
  var lastThrownError = null;
  var checkForUpdates = function checkForUpdates2() {
    if (didUnsubscribe) {
      return;
    }
    var latestStoreState = store.getState();
    var newChildProps, error4;
    try {
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e2) {
      error4 = e2;
      lastThrownError = e2;
    }
    if (!error4) {
      lastThrownError = null;
    }
    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true;
      forceComponentUpdateDispatch({
        type: "STORE_UPDATED",
        payload: {
          error: error4
        }
      });
    }
  };
  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe();
  checkForUpdates();
  var unsubscribeWrapper = function unsubscribeWrapper2() {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;
    if (lastThrownError) {
      throw lastThrownError;
    }
  };
  return unsubscribeWrapper;
}
var initStateUpdates = function initStateUpdates2() {
  return [null, 0];
};
function connectAdvanced(selectorFactory, _ref6) {
  if (_ref6 === void 0) {
    _ref6 = {};
  }
  var _ref23 = _ref6, _ref2$getDisplayName = _ref23.getDisplayName, getDisplayName2 = _ref2$getDisplayName === void 0 ? function(name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName, _ref2$methodName = _ref23.methodName, methodName = _ref2$methodName === void 0 ? "connectAdvanced" : _ref2$methodName, _ref2$renderCountProp = _ref23.renderCountProp, renderCountProp = _ref2$renderCountProp === void 0 ? void 0 : _ref2$renderCountProp, _ref2$shouldHandleSta = _ref23.shouldHandleStateChanges, shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta, _ref2$storeKey = _ref23.storeKey, storeKey = _ref2$storeKey === void 0 ? "store" : _ref2$storeKey, _ref2$withRef = _ref23.withRef, withRef = _ref2$withRef === void 0 ? false : _ref2$withRef, _ref2$forwardRef = _ref23.forwardRef, forwardRef646 = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef, _ref2$context = _ref23.context, context = _ref2$context === void 0 ? ReactReduxContext : _ref2$context, connectOptions = _objectWithoutPropertiesLoose(_ref23, _excluded);
  if (true) {
    if (renderCountProp !== void 0) {
      throw new Error("renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension");
    }
    if (withRef) {
      throw new Error("withRef is removed. To access the wrapped instance, use a ref on the connected component");
    }
    var customStoreWarningMessage = "To use a custom Redux store for specific components, create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect";
    if (storeKey !== "store") {
      throw new Error("storeKey has been removed and does not do anything. " + customStoreWarningMessage);
    }
  }
  var Context2 = context;
  return function wrapWithConnect(WrappedComponent) {
    if (!(0, import_react_is11.isValidElementType)(WrappedComponent)) {
      throw new Error("You must pass a component to the function returned by " + (methodName + ". Instead received " + stringifyComponent(WrappedComponent)));
    }
    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || "Component";
    var displayName2 = getDisplayName2(wrappedComponentName);
    var selectorFactoryOptions = _extends({}, connectOptions, {
      getDisplayName: getDisplayName2,
      methodName,
      renderCountProp,
      shouldHandleStateChanges,
      storeKey,
      displayName: displayName2,
      wrappedComponentName,
      WrappedComponent
    });
    var pure = connectOptions.pure;
    function createChildSelector(store) {
      return selectorFactory(store.dispatch, selectorFactoryOptions);
    }
    var usePureOnlyMemo = pure ? useMemo43 : function(callback) {
      return callback();
    };
    function ConnectFunction(props) {
      var _useMemo = useMemo43(function() {
        var reactReduxForwardedRef2 = props.reactReduxForwardedRef, wrapperProps2 = _objectWithoutPropertiesLoose(props, _excluded2);
        return [props.context, reactReduxForwardedRef2, wrapperProps2];
      }, [props]), propsContext = _useMemo[0], reactReduxForwardedRef = _useMemo[1], wrapperProps = _useMemo[2];
      var ContextToUse = useMemo43(function() {
        return propsContext && propsContext.Consumer && (0, import_react_is11.isContextConsumer)(/* @__PURE__ */ React631.createElement(propsContext.Consumer, null)) ? propsContext : Context2;
      }, [propsContext, Context2]);
      var contextValue = useContext19(ContextToUse);
      var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);
      if (!didStoreComeFromProps && !didStoreComeFromContext) {
        throw new Error('Could not find "store" in the context of ' + ('"' + displayName2 + '". Either wrap the root component in a <Provider>, ') + "or pass a custom React context provider to <Provider> and the corresponding " + ("React context consumer to " + displayName2 + " in connect options."));
      }
      var store = didStoreComeFromProps ? props.store : contextValue.store;
      var childPropsSelector = useMemo43(function() {
        return createChildSelector(store);
      }, [store]);
      var _useMemo2 = useMemo43(function() {
        if (!shouldHandleStateChanges)
          return NO_SUBSCRIPTION_ARRAY;
        var subscription2 = createSubscription(store, didStoreComeFromProps ? null : contextValue.subscription);
        var notifyNestedSubs2 = subscription2.notifyNestedSubs.bind(subscription2);
        return [subscription2, notifyNestedSubs2];
      }, [store, didStoreComeFromProps, contextValue]), subscription = _useMemo2[0], notifyNestedSubs = _useMemo2[1];
      var overriddenContextValue = useMemo43(function() {
        if (didStoreComeFromProps) {
          return contextValue;
        }
        return _extends({}, contextValue, {
          subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]);
      var _useReducer = useReducer(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates), _useReducer$ = _useReducer[0], previousStateUpdateResult = _useReducer$[0], forceComponentUpdateDispatch = _useReducer[1];
      if (previousStateUpdateResult && previousStateUpdateResult.error) {
        throw previousStateUpdateResult.error;
      }
      var lastChildProps = useRef67();
      var lastWrapperProps = useRef67(wrapperProps);
      var childPropsFromStoreUpdate = useRef67();
      var renderIsScheduled = useRef67(false);
      var actualChildProps = usePureOnlyMemo(function() {
        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
          return childPropsFromStoreUpdate.current;
        }
        return childPropsSelector(store.getState(), wrapperProps);
      }, [store, previousStateUpdateResult, wrapperProps]);
      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs]);
      useIsomorphicLayoutEffectWithArgs(subscribeUpdates, [shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch], [store, subscription, childPropsSelector]);
      var renderedWrappedComponent = useMemo43(function() {
        return /* @__PURE__ */ React631.createElement(WrappedComponent, _extends({}, actualChildProps, {
          ref: reactReduxForwardedRef
        }));
      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]);
      var renderedChild = useMemo43(function() {
        if (shouldHandleStateChanges) {
          return /* @__PURE__ */ React631.createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }
        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    }
    var Connect2 = pure ? React631.memo(ConnectFunction) : ConnectFunction;
    Connect2.WrappedComponent = WrappedComponent;
    Connect2.displayName = ConnectFunction.displayName = displayName2;
    if (forwardRef646) {
      var forwarded = React631.forwardRef(function forwardConnectRef(props, ref2) {
        return /* @__PURE__ */ React631.createElement(Connect2, _extends({}, props, {
          reactReduxForwardedRef: ref2
        }));
      });
      forwarded.displayName = displayName2;
      forwarded.WrappedComponent = WrappedComponent;
      return (0, import_hoist_non_react_statics5.default)(forwarded, WrappedComponent);
    }
    return (0, import_hoist_non_react_statics5.default)(Connect2, WrappedComponent);
  };
}

// node_modules/react-redux/es/utils/shallowEqual.js
function is2(x2, y2) {
  if (x2 === y2) {
    return x2 !== 0 || y2 !== 0 || 1 / x2 === 1 / y2;
  } else {
    return x2 !== x2 && y2 !== y2;
  }
}
function shallowEqual2(objA, objB) {
  if (is2(objA, objB))
    return true;
  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length)
    return false;
  for (var i2 = 0; i2 < keysA.length; i2++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i2]) || !is2(objA[keysA[i2]], objB[keysA[i2]])) {
      return false;
    }
  }
  return true;
}

// node_modules/react-redux/es/utils/bindActionCreators.js
function bindActionCreators2(actionCreators, dispatch) {
  var boundActionCreators = {};
  var _loop = function _loop2(key2) {
    var actionCreator = actionCreators[key2];
    if (typeof actionCreator === "function") {
      boundActionCreators[key2] = function() {
        return dispatch(actionCreator.apply(void 0, arguments));
      };
    }
  };
  for (var key in actionCreators) {
    _loop(key);
  }
  return boundActionCreators;
}

// node_modules/react-redux/es/utils/isPlainObject.js
function isPlainObject4(obj) {
  if (typeof obj !== "object" || obj === null)
    return false;
  var proto = Object.getPrototypeOf(obj);
  if (proto === null)
    return true;
  var baseProto = proto;
  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }
  return proto === baseProto;
}

// node_modules/react-redux/es/utils/warning.js
function warning6(message) {
  if (typeof console !== "undefined" && typeof console.error === "function") {
    console.error(message);
  }
  try {
    throw new Error(message);
  } catch (e2) {
  }
}

// node_modules/react-redux/es/utils/verifyPlainObject.js
function verifyPlainObject(value, displayName2, methodName) {
  if (!isPlainObject4(value)) {
    warning6(methodName + "() in " + displayName2 + " must return a plain object. Instead received " + value + ".");
  }
}

// node_modules/react-redux/es/connect/wrapMapToProps.js
function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);
    function constantSelector() {
      return constant;
    }
    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
}
function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== void 0 ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
}
function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref6) {
    var displayName2 = _ref6.displayName;
    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    };
    proxy.dependsOnOwnProps = true;
    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);
      if (typeof props === "function") {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }
      if (true)
        verifyPlainObject(props, displayName2, methodName);
      return props;
    };
    return proxy;
  };
}

// node_modules/react-redux/es/connect/mapDispatchToProps.js
function whenMapDispatchToPropsIsFunction(mapDispatchToProps2) {
  return typeof mapDispatchToProps2 === "function" ? wrapMapToPropsFunc(mapDispatchToProps2, "mapDispatchToProps") : void 0;
}
function whenMapDispatchToPropsIsMissing(mapDispatchToProps2) {
  return !mapDispatchToProps2 ? wrapMapToPropsConstant(function(dispatch) {
    return {
      dispatch
    };
  }) : void 0;
}
function whenMapDispatchToPropsIsObject(mapDispatchToProps2) {
  return mapDispatchToProps2 && typeof mapDispatchToProps2 === "object" ? wrapMapToPropsConstant(function(dispatch) {
    return bindActionCreators2(mapDispatchToProps2, dispatch);
  }) : void 0;
}
var mapDispatchToProps_default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

// node_modules/react-redux/es/connect/mapStateToProps.js
function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === "function" ? wrapMapToPropsFunc(mapStateToProps, "mapStateToProps") : void 0;
}
function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? wrapMapToPropsConstant(function() {
    return {};
  }) : void 0;
}
var mapStateToProps_default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

// node_modules/react-redux/es/connect/mergeProps.js
function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return _extends({}, ownProps, stateProps, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref6) {
    var displayName2 = _ref6.displayName, pure = _ref6.pure, areMergedPropsEqual = _ref6.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps))
          mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (true)
          verifyPlainObject(mergedProps, displayName2, "mergeProps");
      }
      return mergedProps;
    };
  };
}
function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === "function" ? wrapMergePropsFunc(mergeProps) : void 0;
}
function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function() {
    return defaultMergeProps;
  } : void 0;
}
var mergeProps_default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];

// node_modules/react-redux/es/connect/verifySubselectors.js
function verify(selector, methodName, displayName2) {
  if (!selector) {
    throw new Error("Unexpected value for " + methodName + " in " + displayName2 + ".");
  } else if (methodName === "mapStateToProps" || methodName === "mapDispatchToProps") {
    if (!Object.prototype.hasOwnProperty.call(selector, "dependsOnOwnProps")) {
      warning6("The selector for " + methodName + " of " + displayName2 + " did not specify a value for dependsOnOwnProps.");
    }
  }
}
function verifySubselectors(mapStateToProps, mapDispatchToProps2, mergeProps, displayName2) {
  verify(mapStateToProps, "mapStateToProps", displayName2);
  verify(mapDispatchToProps2, "mapDispatchToProps", displayName2);
  verify(mergeProps, "mergeProps", displayName2);
}

// node_modules/react-redux/es/connect/selectorFactory.js
var _excluded3 = ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"];
function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps2, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps2(dispatch, ownProps), ownProps);
  };
}
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps2, mergeProps, dispatch, _ref6) {
  var areStatesEqual = _ref6.areStatesEqual, areOwnPropsEqual = _ref6.areOwnPropsEqual, areStatePropsEqual = _ref6.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;
  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps2(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }
  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps2.dependsOnOwnProps)
      dispatchProps = mapDispatchToProps2(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }
  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps)
      stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps2.dependsOnOwnProps)
      dispatchProps = mapDispatchToProps2(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }
  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged)
      mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }
  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged)
      return handleNewPropsAndNewState();
    if (propsChanged)
      return handleNewProps();
    if (stateChanged)
      return handleNewState();
    return mergedProps;
  }
  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
}
function finalPropsSelectorFactory(dispatch, _ref23) {
  var initMapStateToProps = _ref23.initMapStateToProps, initMapDispatchToProps = _ref23.initMapDispatchToProps, initMergeProps = _ref23.initMergeProps, options = _objectWithoutPropertiesLoose(_ref23, _excluded3);
  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps2 = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);
  if (true) {
    verifySubselectors(mapStateToProps, mapDispatchToProps2, mergeProps, options.displayName);
  }
  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps2, mergeProps, dispatch, options);
}

// node_modules/react-redux/es/connect/connect.js
var _excluded4 = ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"];
function match(arg, factories, name) {
  for (var i2 = factories.length - 1; i2 >= 0; i2--) {
    var result = factories[i2](arg);
    if (result)
      return result;
  }
  return function(dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}
function strictEqual(a2, b2) {
  return a2 === b2;
}
function createConnect(_temp) {
  var _ref6 = _temp === void 0 ? {} : _temp, _ref$connectHOC = _ref6.connectHOC, connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC, _ref$mapStateToPropsF = _ref6.mapStateToPropsFactories, mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? mapStateToProps_default : _ref$mapStateToPropsF, _ref$mapDispatchToPro = _ref6.mapDispatchToPropsFactories, mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? mapDispatchToProps_default : _ref$mapDispatchToPro, _ref$mergePropsFactor = _ref6.mergePropsFactories, mergePropsFactories = _ref$mergePropsFactor === void 0 ? mergeProps_default : _ref$mergePropsFactor, _ref$selectorFactory = _ref6.selectorFactory, selectorFactory = _ref$selectorFactory === void 0 ? finalPropsSelectorFactory : _ref$selectorFactory;
  return function connect2(mapStateToProps, mapDispatchToProps2, mergeProps, _ref23) {
    if (_ref23 === void 0) {
      _ref23 = {};
    }
    var _ref32 = _ref23, _ref3$pure = _ref32.pure, pure = _ref3$pure === void 0 ? true : _ref3$pure, _ref3$areStatesEqual = _ref32.areStatesEqual, areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual, _ref3$areOwnPropsEqua = _ref32.areOwnPropsEqual, areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual2 : _ref3$areOwnPropsEqua, _ref3$areStatePropsEq = _ref32.areStatePropsEqual, areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual2 : _ref3$areStatePropsEq, _ref3$areMergedPropsE = _ref32.areMergedPropsEqual, areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual2 : _ref3$areMergedPropsE, extraOptions = _objectWithoutPropertiesLoose(_ref32, _excluded4);
    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, "mapStateToProps");
    var initMapDispatchToProps = match(mapDispatchToProps2, mapDispatchToPropsFactories, "mapDispatchToProps");
    var initMergeProps = match(mergeProps, mergePropsFactories, "mergeProps");
    return connectHOC(selectorFactory, _extends({
      methodName: "connect",
      getDisplayName: function getDisplayName2(name) {
        return "Connect(" + name + ")";
      },
      shouldHandleStateChanges: Boolean(mapStateToProps),
      initMapStateToProps,
      initMapDispatchToProps,
      initMergeProps,
      pure,
      areStatesEqual,
      areOwnPropsEqual,
      areStatePropsEqual,
      areMergedPropsEqual
    }, extraOptions));
  };
}
var connect_default = /* @__PURE__ */ createConnect();

// node_modules/react-redux/es/hooks/useStore.js
import { useContext as useContext21 } from "react";

// node_modules/react-redux/es/hooks/useReduxContext.js
import { useContext as useContext20 } from "react";

// node_modules/react-redux/es/hooks/useSelector.js
import { useReducer as useReducer2, useRef as useRef68, useMemo as useMemo44, useContext as useContext22, useDebugValue as useDebugValue3 } from "react";

// node_modules/react-redux/es/utils/reactBatchedUpdates.js
import { unstable_batchedUpdates } from "react-dom";

// node_modules/react-redux/es/index.js
setBatch(unstable_batchedUpdates);

// node_modules/use-memo-one/dist/use-memo-one.esm.js
import { useState as useState31, useRef as useRef69, useEffect as useEffect50 } from "react";
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i2 = 0; i2 < newInputs.length; i2++) {
    if (newInputs[i2] !== lastInputs[i2]) {
      return false;
    }
  }
  return true;
}
function useMemoOne(getResult, inputs) {
  var initial = useState31(function() {
    return {
      inputs,
      result: getResult()
    };
  })[0];
  var isFirstRun = useRef69(true);
  var committed = useRef69(initial);
  var useCache = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual(inputs, committed.current.inputs));
  var cache3 = useCache ? committed.current : {
    inputs,
    result: getResult()
  };
  useEffect50(function() {
    isFirstRun.current = false;
    committed.current = cache3;
  }, [cache3]);
  return cache3.result;
}
function useCallbackOne(callback, inputs) {
  return useMemoOne(function() {
    return callback;
  }, inputs);
}
var useMemo45 = useMemoOne;
var useCallback26 = useCallbackOne;

// node_modules/tiny-invariant/dist/tiny-invariant.esm.js
var isProduction2 = false;
var prefix2 = "Invariant failed";
function invariant(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction2) {
    throw new Error(prefix2);
  }
  var provided = typeof message === "function" ? message() : message;
  var value = provided ? prefix2 + ": " + provided : prefix2;
  throw new Error(value);
}

// node_modules/css-box-model/dist/css-box-model.esm.js
var getRect = function getRect2(_ref6) {
  var top2 = _ref6.top, right2 = _ref6.right, bottom2 = _ref6.bottom, left2 = _ref6.left;
  var width2 = right2 - left2;
  var height2 = bottom2 - top2;
  var rect = {
    top: top2,
    right: right2,
    bottom: bottom2,
    left: left2,
    width: width2,
    height: height2,
    x: left2,
    y: top2,
    center: {
      x: (right2 + left2) / 2,
      y: (bottom2 + top2) / 2
    }
  };
  return rect;
};
var expand = function expand2(target, expandBy) {
  return {
    top: target.top - expandBy.top,
    left: target.left - expandBy.left,
    bottom: target.bottom + expandBy.bottom,
    right: target.right + expandBy.right
  };
};
var shrink = function shrink2(target, shrinkBy) {
  return {
    top: target.top + shrinkBy.top,
    left: target.left + shrinkBy.left,
    bottom: target.bottom - shrinkBy.bottom,
    right: target.right - shrinkBy.right
  };
};
var shift2 = function shift3(target, shiftBy) {
  return {
    top: target.top + shiftBy.y,
    left: target.left + shiftBy.x,
    bottom: target.bottom + shiftBy.y,
    right: target.right + shiftBy.x
  };
};
var noSpacing = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};
var createBox = function createBox2(_ref23) {
  var borderBox = _ref23.borderBox, _ref2$margin = _ref23.margin, margin = _ref2$margin === void 0 ? noSpacing : _ref2$margin, _ref2$border = _ref23.border, border2 = _ref2$border === void 0 ? noSpacing : _ref2$border, _ref2$padding = _ref23.padding, padding = _ref2$padding === void 0 ? noSpacing : _ref2$padding;
  var marginBox = getRect(expand(borderBox, margin));
  var paddingBox = getRect(shrink(borderBox, border2));
  var contentBox = getRect(shrink(paddingBox, padding));
  return {
    marginBox,
    borderBox: getRect(borderBox),
    paddingBox,
    contentBox,
    margin,
    border: border2,
    padding
  };
};
var parse = function parse2(raw) {
  var value = raw.slice(0, -2);
  var suffix2 = raw.slice(-2);
  if (suffix2 !== "px") {
    return 0;
  }
  var result = Number(value);
  !!isNaN(result) ? true ? invariant(false, "Could not parse value [raw: " + raw + ", without suffix: " + value + "]") : invariant(false) : void 0;
  return result;
};
var getWindowScroll = function getWindowScroll2() {
  return {
    x: window.pageXOffset,
    y: window.pageYOffset
  };
};
var offset5 = function offset6(original, change) {
  var borderBox = original.borderBox, border2 = original.border, margin = original.margin, padding = original.padding;
  var shifted = shift2(borderBox, change);
  return createBox({
    borderBox: shifted,
    border: border2,
    margin,
    padding
  });
};
var withScroll = function withScroll2(original, scroll3) {
  if (scroll3 === void 0) {
    scroll3 = getWindowScroll();
  }
  return offset5(original, scroll3);
};
var calculateBox = function calculateBox2(borderBox, styles158) {
  var margin = {
    top: parse(styles158.marginTop),
    right: parse(styles158.marginRight),
    bottom: parse(styles158.marginBottom),
    left: parse(styles158.marginLeft)
  };
  var padding = {
    top: parse(styles158.paddingTop),
    right: parse(styles158.paddingRight),
    bottom: parse(styles158.paddingBottom),
    left: parse(styles158.paddingLeft)
  };
  var border2 = {
    top: parse(styles158.borderTopWidth),
    right: parse(styles158.borderRightWidth),
    bottom: parse(styles158.borderBottomWidth),
    left: parse(styles158.borderLeftWidth)
  };
  return createBox({
    borderBox,
    margin,
    padding,
    border: border2
  });
};
var getBox = function getBox2(el2) {
  var borderBox = el2.getBoundingClientRect();
  var styles158 = window.getComputedStyle(el2);
  return calculateBox(borderBox, styles158);
};

// node_modules/memoize-one/dist/memoize-one.esm.js
var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === "number" && value !== value;
};
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual2(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i2 = 0; i2 < newInputs.length; i2++) {
    if (!isEqual(newInputs[i2], lastInputs[i2])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual6) {
  if (isEqual6 === void 0) {
    isEqual6 = areInputsEqual2;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (calledOnce && lastThis === this && isEqual6(newArgs, lastArgs)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }
  return memoized;
}
var memoize_one_esm_default = memoizeOne;

// node_modules/raf-schd/dist/raf-schd.esm.js
var rafSchd = function rafSchd2(fn) {
  var lastArgs = [];
  var frameId = null;
  var wrapperFn = function wrapperFn2() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    lastArgs = args;
    if (frameId) {
      return;
    }
    frameId = requestAnimationFrame(function() {
      frameId = null;
      fn.apply(void 0, lastArgs);
    });
  };
  wrapperFn.cancel = function() {
    if (!frameId) {
      return;
    }
    cancelAnimationFrame(frameId);
    frameId = null;
  };
  return wrapperFn;
};
var raf_schd_esm_default = rafSchd;

// node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js
import ReactDOM16 from "react-dom";
var isProduction3 = false;
var spacesAndTabs = /[ \t]{2,}/g;
var lineStartWithSpaces = /^[ \t]*/gm;
var clean = function clean2(value) {
  return value.replace(spacesAndTabs, " ").replace(lineStartWithSpaces, "").trim();
};
var getDevMessage = function getDevMessage2(message) {
  return clean("\n  %creact-beautiful-dnd\n\n  %c" + clean(message) + "\n\n  %c\u{1F477}\u200D This is a development only message. It will be removed in production builds.\n");
};
var getFormattedMessage = function getFormattedMessage2(message) {
  return [getDevMessage(message), "color: #00C584; font-size: 1.2em; font-weight: bold;", "line-height: 1.5", "color: #723874;"];
};
var isDisabledFlag = "__react-beautiful-dnd-disable-dev-warnings";
function log(type3, message) {
  var _console;
  if (isProduction3) {
    return;
  }
  if (typeof window !== "undefined" && window[isDisabledFlag]) {
    return;
  }
  (_console = console)[type3].apply(_console, getFormattedMessage(message));
}
var warning7 = log.bind(null, "warn");
var error3 = log.bind(null, "error");
function noop2() {
}
function getOptions(shared2, fromBinding) {
  return _extends({}, shared2, {}, fromBinding);
}
function bindEvents(el2, bindings, sharedOptions) {
  var unbindings = bindings.map(function(binding) {
    var options = getOptions(sharedOptions, binding.options);
    el2.addEventListener(binding.eventName, binding.fn, options);
    return function unbind() {
      el2.removeEventListener(binding.eventName, binding.fn, options);
    };
  });
  return function unbindAll() {
    unbindings.forEach(function(unbind) {
      unbind();
    });
  };
}
var isProduction$1 = false;
var prefix3 = "Invariant failed";
function RbdInvariant(message) {
  this.message = message;
}
RbdInvariant.prototype.toString = function toString() {
  return this.message;
};
function invariant2(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction$1) {
    throw new RbdInvariant(prefix3);
  } else {
    throw new RbdInvariant(prefix3 + ": " + (message || ""));
  }
}
var ErrorBoundary = function(_React$Component) {
  _inheritsLoose(ErrorBoundary2, _React$Component);
  function ErrorBoundary2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.callbacks = null;
    _this.unbind = noop2;
    _this.onWindowError = function(event) {
      var callbacks = _this.getCallbacks();
      if (callbacks.isDragging()) {
        callbacks.tryAbort();
        true ? warning7("\n        An error was caught by our window 'error' event listener while a drag was occurring.\n        The active drag has been aborted.\n      ") : void 0;
      }
      var err = event.error;
      if (err instanceof RbdInvariant) {
        event.preventDefault();
        if (true) {
          error3(err.message);
        }
      }
    };
    _this.getCallbacks = function() {
      if (!_this.callbacks) {
        throw new Error("Unable to find AppCallbacks in <ErrorBoundary/>");
      }
      return _this.callbacks;
    };
    _this.setCallbacks = function(callbacks) {
      _this.callbacks = callbacks;
    };
    return _this;
  }
  var _proto = ErrorBoundary2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.unbind = bindEvents(window, [{
      eventName: "error",
      fn: this.onWindowError
    }]);
  };
  _proto.componentDidCatch = function componentDidCatch(err) {
    if (err instanceof RbdInvariant) {
      if (true) {
        error3(err.message);
      }
      this.setState({});
      return;
    }
    throw err;
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.unbind();
  };
  _proto.render = function render() {
    return this.props.children(this.setCallbacks);
  };
  return ErrorBoundary2;
}(React632.Component);
var dragHandleUsageInstructions = "\n  Press space bar to start a drag.\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\n  Some screen readers may require you to be in focus mode or to use your pass through key\n";
var position2 = function position3(index4) {
  return index4 + 1;
};
var onDragStart = function onDragStart2(start3) {
  return "\n  You have lifted an item in position " + position2(start3.source.index) + "\n";
};
var withLocation = function withLocation2(source, destination) {
  var isInHomeList = source.droppableId === destination.droppableId;
  var startPosition = position2(source.index);
  var endPosition = position2(destination.index);
  if (isInHomeList) {
    return "\n      You have moved the item from position " + startPosition + "\n      to position " + endPosition + "\n    ";
  }
  return "\n    You have moved the item from position " + startPosition + "\n    in list " + source.droppableId + "\n    to list " + destination.droppableId + "\n    in position " + endPosition + "\n  ";
};
var withCombine = function withCombine2(id3, source, combine2) {
  var inHomeList = source.droppableId === combine2.droppableId;
  if (inHomeList) {
    return "\n      The item " + id3 + "\n      has been combined with " + combine2.draggableId;
  }
  return "\n      The item " + id3 + "\n      in list " + source.droppableId + "\n      has been combined with " + combine2.draggableId + "\n      in list " + combine2.droppableId + "\n    ";
};
var onDragUpdate = function onDragUpdate2(update4) {
  var location = update4.destination;
  if (location) {
    return withLocation(update4.source, location);
  }
  var combine2 = update4.combine;
  if (combine2) {
    return withCombine(update4.draggableId, update4.source, combine2);
  }
  return "You are over an area that cannot be dropped on";
};
var returnedToStart = function returnedToStart2(source) {
  return "\n  The item has returned to its starting position\n  of " + position2(source.index) + "\n";
};
var onDragEnd = function onDragEnd2(result) {
  if (result.reason === "CANCEL") {
    return "\n      Movement cancelled.\n      " + returnedToStart(result.source) + "\n    ";
  }
  var location = result.destination;
  var combine2 = result.combine;
  if (location) {
    return "\n      You have dropped the item.\n      " + withLocation(result.source, location) + "\n    ";
  }
  if (combine2) {
    return "\n      You have dropped the item.\n      " + withCombine(result.draggableId, result.source, combine2) + "\n    ";
  }
  return "\n    The item has been dropped while not over a drop area.\n    " + returnedToStart(result.source) + "\n  ";
};
var preset = {
  dragHandleUsageInstructions,
  onDragStart,
  onDragUpdate,
  onDragEnd
};
var origin = {
  x: 0,
  y: 0
};
var add = function add2(point1, point2) {
  return {
    x: point1.x + point2.x,
    y: point1.y + point2.y
  };
};
var subtract = function subtract2(point1, point2) {
  return {
    x: point1.x - point2.x,
    y: point1.y - point2.y
  };
};
var isEqual2 = function isEqual3(point1, point2) {
  return point1.x === point2.x && point1.y === point2.y;
};
var negate = function negate2(point) {
  return {
    x: point.x !== 0 ? -point.x : 0,
    y: point.y !== 0 ? -point.y : 0
  };
};
var patch = function patch2(line, value, otherValue) {
  var _ref6;
  if (otherValue === void 0) {
    otherValue = 0;
  }
  return _ref6 = {}, _ref6[line] = value, _ref6[line === "x" ? "y" : "x"] = otherValue, _ref6;
};
var distance = function distance2(point1, point2) {
  return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));
};
var closest = function closest2(target, points) {
  return Math.min.apply(Math, points.map(function(point) {
    return distance(target, point);
  }));
};
var apply = function apply2(fn) {
  return function(point) {
    return {
      x: fn(point.x),
      y: fn(point.y)
    };
  };
};
var executeClip = function(frame, subject) {
  var result = getRect({
    top: Math.max(subject.top, frame.top),
    right: Math.min(subject.right, frame.right),
    bottom: Math.min(subject.bottom, frame.bottom),
    left: Math.max(subject.left, frame.left)
  });
  if (result.width <= 0 || result.height <= 0) {
    return null;
  }
  return result;
};
var offsetByPosition = function offsetByPosition2(spacing4, point) {
  return {
    top: spacing4.top + point.y,
    left: spacing4.left + point.x,
    bottom: spacing4.bottom + point.y,
    right: spacing4.right + point.x
  };
};
var getCorners = function getCorners2(spacing4) {
  return [{
    x: spacing4.left,
    y: spacing4.top
  }, {
    x: spacing4.right,
    y: spacing4.top
  }, {
    x: spacing4.left,
    y: spacing4.bottom
  }, {
    x: spacing4.right,
    y: spacing4.bottom
  }];
};
var noSpacing2 = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};
var scroll = function scroll2(target, frame) {
  if (!frame) {
    return target;
  }
  return offsetByPosition(target, frame.scroll.diff.displacement);
};
var increase = function increase2(target, axis, withPlaceholder) {
  if (withPlaceholder && withPlaceholder.increasedBy) {
    var _extends22;
    return _extends({}, target, (_extends22 = {}, _extends22[axis.end] = target[axis.end] + withPlaceholder.increasedBy[axis.line], _extends22));
  }
  return target;
};
var clip = function clip2(target, frame) {
  if (frame && frame.shouldClipSubject) {
    return executeClip(frame.pageMarginBox, target);
  }
  return getRect(target);
};
var getSubject = function(_ref6) {
  var page = _ref6.page, withPlaceholder = _ref6.withPlaceholder, axis = _ref6.axis, frame = _ref6.frame;
  var scrolled = scroll(page.marginBox, frame);
  var increased = increase(scrolled, axis, withPlaceholder);
  var clipped = clip(increased, frame);
  return {
    page,
    withPlaceholder,
    active: clipped
  };
};
var scrollDroppable = function(droppable2, newScroll) {
  !droppable2.frame ? true ? invariant2(false) : invariant2(false) : void 0;
  var scrollable = droppable2.frame;
  var scrollDiff = subtract(newScroll, scrollable.scroll.initial);
  var scrollDisplacement = negate(scrollDiff);
  var frame = _extends({}, scrollable, {
    scroll: {
      initial: scrollable.scroll.initial,
      current: newScroll,
      diff: {
        value: scrollDiff,
        displacement: scrollDisplacement
      },
      max: scrollable.scroll.max
    }
  });
  var subject = getSubject({
    page: droppable2.subject.page,
    withPlaceholder: droppable2.subject.withPlaceholder,
    axis: droppable2.axis,
    frame
  });
  var result = _extends({}, droppable2, {
    frame,
    subject
  });
  return result;
};
function isInteger(value) {
  if (Number.isInteger) {
    return Number.isInteger(value);
  }
  return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
}
function values4(map2) {
  if (Object.values) {
    return Object.values(map2);
  }
  return Object.keys(map2).map(function(key) {
    return map2[key];
  });
}
function findIndex2(list, predicate) {
  if (list.findIndex) {
    return list.findIndex(predicate);
  }
  for (var i2 = 0; i2 < list.length; i2++) {
    if (predicate(list[i2])) {
      return i2;
    }
  }
  return -1;
}
function find2(list, predicate) {
  if (list.find) {
    return list.find(predicate);
  }
  var index4 = findIndex2(list, predicate);
  if (index4 !== -1) {
    return list[index4];
  }
  return void 0;
}
function toArray(list) {
  return Array.prototype.slice.call(list);
}
var toDroppableMap = memoize_one_esm_default(function(droppables) {
  return droppables.reduce(function(previous, current) {
    previous[current.descriptor.id] = current;
    return previous;
  }, {});
});
var toDraggableMap = memoize_one_esm_default(function(draggables) {
  return draggables.reduce(function(previous, current) {
    previous[current.descriptor.id] = current;
    return previous;
  }, {});
});
var toDroppableList = memoize_one_esm_default(function(droppables) {
  return values4(droppables);
});
var toDraggableList = memoize_one_esm_default(function(draggables) {
  return values4(draggables);
});
var getDraggablesInsideDroppable = memoize_one_esm_default(function(droppableId, draggables) {
  var result = toDraggableList(draggables).filter(function(draggable2) {
    return droppableId === draggable2.descriptor.droppableId;
  }).sort(function(a2, b2) {
    return a2.descriptor.index - b2.descriptor.index;
  });
  return result;
});
function tryGetDestination(impact) {
  if (impact.at && impact.at.type === "REORDER") {
    return impact.at.destination;
  }
  return null;
}
function tryGetCombine(impact) {
  if (impact.at && impact.at.type === "COMBINE") {
    return impact.at.combine;
  }
  return null;
}
var removeDraggableFromList = memoize_one_esm_default(function(remove2, list) {
  return list.filter(function(item) {
    return item.descriptor.id !== remove2.descriptor.id;
  });
});
var moveToNextCombine = function(_ref6) {
  var isMovingForward = _ref6.isMovingForward, draggable2 = _ref6.draggable, destination = _ref6.destination, insideDestination = _ref6.insideDestination, previousImpact = _ref6.previousImpact;
  if (!destination.isCombineEnabled) {
    return null;
  }
  var location = tryGetDestination(previousImpact);
  if (!location) {
    return null;
  }
  function getImpact(target) {
    var at2 = {
      type: "COMBINE",
      combine: {
        draggableId: target,
        droppableId: destination.descriptor.id
      }
    };
    return _extends({}, previousImpact, {
      at: at2
    });
  }
  var all = previousImpact.displaced.all;
  var closestId = all.length ? all[0] : null;
  if (isMovingForward) {
    return closestId ? getImpact(closestId) : null;
  }
  var withoutDraggable = removeDraggableFromList(draggable2, insideDestination);
  if (!closestId) {
    if (!withoutDraggable.length) {
      return null;
    }
    var last2 = withoutDraggable[withoutDraggable.length - 1];
    return getImpact(last2.descriptor.id);
  }
  var indexOfClosest = findIndex2(withoutDraggable, function(d2) {
    return d2.descriptor.id === closestId;
  });
  !(indexOfClosest !== -1) ? true ? invariant2(false, "Could not find displaced item in set") : invariant2(false) : void 0;
  var proposedIndex = indexOfClosest - 1;
  if (proposedIndex < 0) {
    return null;
  }
  var before = withoutDraggable[proposedIndex];
  return getImpact(before.descriptor.id);
};
var isHomeOf = function(draggable2, destination) {
  return draggable2.descriptor.droppableId === destination.descriptor.id;
};
var noDisplacedBy = {
  point: origin,
  value: 0
};
var emptyGroups = {
  invisible: {},
  visible: {},
  all: []
};
var noImpact = {
  displaced: emptyGroups,
  displacedBy: noDisplacedBy,
  at: null
};
var isWithin = function(lowerBound, upperBound) {
  return function(value) {
    return lowerBound <= value && value <= upperBound;
  };
};
var isPartiallyVisibleThroughFrame = function(frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function(subject) {
    var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
    if (isContained) {
      return true;
    }
    var isPartiallyVisibleVertically = isWithinVertical(subject.top) || isWithinVertical(subject.bottom);
    var isPartiallyVisibleHorizontally = isWithinHorizontal(subject.left) || isWithinHorizontal(subject.right);
    var isPartiallyContained = isPartiallyVisibleVertically && isPartiallyVisibleHorizontally;
    if (isPartiallyContained) {
      return true;
    }
    var isBiggerVertically = subject.top < frame.top && subject.bottom > frame.bottom;
    var isBiggerHorizontally = subject.left < frame.left && subject.right > frame.right;
    var isTargetBiggerThanFrame = isBiggerVertically && isBiggerHorizontally;
    if (isTargetBiggerThanFrame) {
      return true;
    }
    var isTargetBiggerOnOneAxis = isBiggerVertically && isPartiallyVisibleHorizontally || isBiggerHorizontally && isPartiallyVisibleVertically;
    return isTargetBiggerOnOneAxis;
  };
};
var isTotallyVisibleThroughFrame = function(frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function(subject) {
    var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
    return isContained;
  };
};
var vertical = {
  direction: "vertical",
  line: "y",
  crossAxisLine: "x",
  start: "top",
  end: "bottom",
  size: "height",
  crossAxisStart: "left",
  crossAxisEnd: "right",
  crossAxisSize: "width"
};
var horizontal = {
  direction: "horizontal",
  line: "x",
  crossAxisLine: "y",
  start: "left",
  end: "right",
  size: "width",
  crossAxisStart: "top",
  crossAxisEnd: "bottom",
  crossAxisSize: "height"
};
var isTotallyVisibleThroughFrameOnAxis = function(axis) {
  return function(frame) {
    var isWithinVertical = isWithin(frame.top, frame.bottom);
    var isWithinHorizontal = isWithin(frame.left, frame.right);
    return function(subject) {
      if (axis === vertical) {
        return isWithinVertical(subject.top) && isWithinVertical(subject.bottom);
      }
      return isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
    };
  };
};
var getDroppableDisplaced = function getDroppableDisplaced2(target, destination) {
  var displacement = destination.frame ? destination.frame.scroll.diff.displacement : origin;
  return offsetByPosition(target, displacement);
};
var isVisibleInDroppable = function isVisibleInDroppable2(target, destination, isVisibleThroughFrameFn) {
  if (!destination.subject.active) {
    return false;
  }
  return isVisibleThroughFrameFn(destination.subject.active)(target);
};
var isVisibleInViewport = function isVisibleInViewport2(target, viewport, isVisibleThroughFrameFn) {
  return isVisibleThroughFrameFn(viewport)(target);
};
var isVisible = function isVisible2(_ref6) {
  var toBeDisplaced = _ref6.target, destination = _ref6.destination, viewport = _ref6.viewport, withDroppableDisplacement2 = _ref6.withDroppableDisplacement, isVisibleThroughFrameFn = _ref6.isVisibleThroughFrameFn;
  var displacedTarget = withDroppableDisplacement2 ? getDroppableDisplaced(toBeDisplaced, destination) : toBeDisplaced;
  return isVisibleInDroppable(displacedTarget, destination, isVisibleThroughFrameFn) && isVisibleInViewport(displacedTarget, viewport, isVisibleThroughFrameFn);
};
var isPartiallyVisible = function isPartiallyVisible2(args) {
  return isVisible(_extends({}, args, {
    isVisibleThroughFrameFn: isPartiallyVisibleThroughFrame
  }));
};
var isTotallyVisible = function isTotallyVisible2(args) {
  return isVisible(_extends({}, args, {
    isVisibleThroughFrameFn: isTotallyVisibleThroughFrame
  }));
};
var isTotallyVisibleOnAxis = function isTotallyVisibleOnAxis2(args) {
  return isVisible(_extends({}, args, {
    isVisibleThroughFrameFn: isTotallyVisibleThroughFrameOnAxis(args.destination.axis)
  }));
};
var getShouldAnimate = function getShouldAnimate2(id3, last2, forceShouldAnimate) {
  if (typeof forceShouldAnimate === "boolean") {
    return forceShouldAnimate;
  }
  if (!last2) {
    return true;
  }
  var invisible = last2.invisible, visible = last2.visible;
  if (invisible[id3]) {
    return false;
  }
  var previous = visible[id3];
  return previous ? previous.shouldAnimate : true;
};
function getTarget(draggable2, displacedBy) {
  var marginBox = draggable2.page.marginBox;
  var expandBy = {
    top: displacedBy.point.y,
    right: 0,
    bottom: 0,
    left: displacedBy.point.x
  };
  return getRect(expand(marginBox, expandBy));
}
function getDisplacementGroups(_ref6) {
  var afterDragging = _ref6.afterDragging, destination = _ref6.destination, displacedBy = _ref6.displacedBy, viewport = _ref6.viewport, forceShouldAnimate = _ref6.forceShouldAnimate, last2 = _ref6.last;
  return afterDragging.reduce(function process2(groups, draggable2) {
    var target = getTarget(draggable2, displacedBy);
    var id3 = draggable2.descriptor.id;
    groups.all.push(id3);
    var isVisible3 = isPartiallyVisible({
      target,
      destination,
      viewport,
      withDroppableDisplacement: true
    });
    if (!isVisible3) {
      groups.invisible[draggable2.descriptor.id] = true;
      return groups;
    }
    var shouldAnimate = getShouldAnimate(id3, last2, forceShouldAnimate);
    var displacement = {
      draggableId: id3,
      shouldAnimate
    };
    groups.visible[id3] = displacement;
    return groups;
  }, {
    all: [],
    visible: {},
    invisible: {}
  });
}
function getIndexOfLastItem(draggables, options) {
  if (!draggables.length) {
    return 0;
  }
  var indexOfLastItem = draggables[draggables.length - 1].descriptor.index;
  return options.inHomeList ? indexOfLastItem : indexOfLastItem + 1;
}
function goAtEnd(_ref6) {
  var insideDestination = _ref6.insideDestination, inHomeList = _ref6.inHomeList, displacedBy = _ref6.displacedBy, destination = _ref6.destination;
  var newIndex = getIndexOfLastItem(insideDestination, {
    inHomeList
  });
  return {
    displaced: emptyGroups,
    displacedBy,
    at: {
      type: "REORDER",
      destination: {
        droppableId: destination.descriptor.id,
        index: newIndex
      }
    }
  };
}
function calculateReorderImpact(_ref23) {
  var draggable2 = _ref23.draggable, insideDestination = _ref23.insideDestination, destination = _ref23.destination, viewport = _ref23.viewport, displacedBy = _ref23.displacedBy, last2 = _ref23.last, index4 = _ref23.index, forceShouldAnimate = _ref23.forceShouldAnimate;
  var inHomeList = isHomeOf(draggable2, destination);
  if (index4 == null) {
    return goAtEnd({
      insideDestination,
      inHomeList,
      displacedBy,
      destination
    });
  }
  var match2 = find2(insideDestination, function(item) {
    return item.descriptor.index === index4;
  });
  if (!match2) {
    return goAtEnd({
      insideDestination,
      inHomeList,
      displacedBy,
      destination
    });
  }
  var withoutDragging = removeDraggableFromList(draggable2, insideDestination);
  var sliceFrom = insideDestination.indexOf(match2);
  var impacted = withoutDragging.slice(sliceFrom);
  var displaced = getDisplacementGroups({
    afterDragging: impacted,
    destination,
    displacedBy,
    last: last2,
    viewport: viewport.frame,
    forceShouldAnimate
  });
  return {
    displaced,
    displacedBy,
    at: {
      type: "REORDER",
      destination: {
        droppableId: destination.descriptor.id,
        index: index4
      }
    }
  };
}
function didStartAfterCritical(draggableId, afterCritical) {
  return Boolean(afterCritical.effected[draggableId]);
}
var fromCombine = function(_ref6) {
  var isMovingForward = _ref6.isMovingForward, destination = _ref6.destination, draggables = _ref6.draggables, combine2 = _ref6.combine, afterCritical = _ref6.afterCritical;
  if (!destination.isCombineEnabled) {
    return null;
  }
  var combineId = combine2.draggableId;
  var combineWith = draggables[combineId];
  var combineWithIndex = combineWith.descriptor.index;
  var didCombineWithStartAfterCritical = didStartAfterCritical(combineId, afterCritical);
  if (didCombineWithStartAfterCritical) {
    if (isMovingForward) {
      return combineWithIndex;
    }
    return combineWithIndex - 1;
  }
  if (isMovingForward) {
    return combineWithIndex + 1;
  }
  return combineWithIndex;
};
var fromReorder = function(_ref6) {
  var isMovingForward = _ref6.isMovingForward, isInHomeList = _ref6.isInHomeList, insideDestination = _ref6.insideDestination, location = _ref6.location;
  if (!insideDestination.length) {
    return null;
  }
  var currentIndex = location.index;
  var proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;
  var firstIndex = insideDestination[0].descriptor.index;
  var lastIndex = insideDestination[insideDestination.length - 1].descriptor.index;
  var upperBound = isInHomeList ? lastIndex : lastIndex + 1;
  if (proposedIndex < firstIndex) {
    return null;
  }
  if (proposedIndex > upperBound) {
    return null;
  }
  return proposedIndex;
};
var moveToNextIndex = function(_ref6) {
  var isMovingForward = _ref6.isMovingForward, isInHomeList = _ref6.isInHomeList, draggable2 = _ref6.draggable, draggables = _ref6.draggables, destination = _ref6.destination, insideDestination = _ref6.insideDestination, previousImpact = _ref6.previousImpact, viewport = _ref6.viewport, afterCritical = _ref6.afterCritical;
  var wasAt = previousImpact.at;
  !wasAt ? true ? invariant2(false, "Cannot move in direction without previous impact location") : invariant2(false) : void 0;
  if (wasAt.type === "REORDER") {
    var _newIndex = fromReorder({
      isMovingForward,
      isInHomeList,
      location: wasAt.destination,
      insideDestination
    });
    if (_newIndex == null) {
      return null;
    }
    return calculateReorderImpact({
      draggable: draggable2,
      insideDestination,
      destination,
      viewport,
      last: previousImpact.displaced,
      displacedBy: previousImpact.displacedBy,
      index: _newIndex
    });
  }
  var newIndex = fromCombine({
    isMovingForward,
    destination,
    displaced: previousImpact.displaced,
    draggables,
    combine: wasAt.combine,
    afterCritical
  });
  if (newIndex == null) {
    return null;
  }
  return calculateReorderImpact({
    draggable: draggable2,
    insideDestination,
    destination,
    viewport,
    last: previousImpact.displaced,
    displacedBy: previousImpact.displacedBy,
    index: newIndex
  });
};
var getCombinedItemDisplacement = function(_ref6) {
  var displaced = _ref6.displaced, afterCritical = _ref6.afterCritical, combineWith = _ref6.combineWith, displacedBy = _ref6.displacedBy;
  var isDisplaced = Boolean(displaced.visible[combineWith] || displaced.invisible[combineWith]);
  if (didStartAfterCritical(combineWith, afterCritical)) {
    return isDisplaced ? origin : negate(displacedBy.point);
  }
  return isDisplaced ? displacedBy.point : origin;
};
var whenCombining = function(_ref6) {
  var afterCritical = _ref6.afterCritical, impact = _ref6.impact, draggables = _ref6.draggables;
  var combine2 = tryGetCombine(impact);
  !combine2 ? true ? invariant2(false) : invariant2(false) : void 0;
  var combineWith = combine2.draggableId;
  var center = draggables[combineWith].page.borderBox.center;
  var displaceBy = getCombinedItemDisplacement({
    displaced: impact.displaced,
    afterCritical,
    combineWith,
    displacedBy: impact.displacedBy
  });
  return add(center, displaceBy);
};
var distanceFromStartToBorderBoxCenter = function distanceFromStartToBorderBoxCenter2(axis, box) {
  return box.margin[axis.start] + box.borderBox[axis.size] / 2;
};
var distanceFromEndToBorderBoxCenter = function distanceFromEndToBorderBoxCenter2(axis, box) {
  return box.margin[axis.end] + box.borderBox[axis.size] / 2;
};
var getCrossAxisBorderBoxCenter = function getCrossAxisBorderBoxCenter2(axis, target, isMoving) {
  return target[axis.crossAxisStart] + isMoving.margin[axis.crossAxisStart] + isMoving.borderBox[axis.crossAxisSize] / 2;
};
var goAfter = function goAfter2(_ref6) {
  var axis = _ref6.axis, moveRelativeTo = _ref6.moveRelativeTo, isMoving = _ref6.isMoving;
  return patch(axis.line, moveRelativeTo.marginBox[axis.end] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));
};
var goBefore = function goBefore2(_ref23) {
  var axis = _ref23.axis, moveRelativeTo = _ref23.moveRelativeTo, isMoving = _ref23.isMoving;
  return patch(axis.line, moveRelativeTo.marginBox[axis.start] - distanceFromEndToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));
};
var goIntoStart = function goIntoStart2(_ref32) {
  var axis = _ref32.axis, moveInto = _ref32.moveInto, isMoving = _ref32.isMoving;
  return patch(axis.line, moveInto.contentBox[axis.start] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveInto.contentBox, isMoving));
};
var whenReordering = function(_ref6) {
  var impact = _ref6.impact, draggable2 = _ref6.draggable, draggables = _ref6.draggables, droppable2 = _ref6.droppable, afterCritical = _ref6.afterCritical;
  var insideDestination = getDraggablesInsideDroppable(droppable2.descriptor.id, draggables);
  var draggablePage = draggable2.page;
  var axis = droppable2.axis;
  if (!insideDestination.length) {
    return goIntoStart({
      axis,
      moveInto: droppable2.page,
      isMoving: draggablePage
    });
  }
  var displaced = impact.displaced, displacedBy = impact.displacedBy;
  var closestAfter = displaced.all[0];
  if (closestAfter) {
    var closest3 = draggables[closestAfter];
    if (didStartAfterCritical(closestAfter, afterCritical)) {
      return goBefore({
        axis,
        moveRelativeTo: closest3.page,
        isMoving: draggablePage
      });
    }
    var withDisplacement = offset5(closest3.page, displacedBy.point);
    return goBefore({
      axis,
      moveRelativeTo: withDisplacement,
      isMoving: draggablePage
    });
  }
  var last2 = insideDestination[insideDestination.length - 1];
  if (last2.descriptor.id === draggable2.descriptor.id) {
    return draggablePage.borderBox.center;
  }
  if (didStartAfterCritical(last2.descriptor.id, afterCritical)) {
    var page = offset5(last2.page, negate(afterCritical.displacedBy.point));
    return goAfter({
      axis,
      moveRelativeTo: page,
      isMoving: draggablePage
    });
  }
  return goAfter({
    axis,
    moveRelativeTo: last2.page,
    isMoving: draggablePage
  });
};
var withDroppableDisplacement = function(droppable2, point) {
  var frame = droppable2.frame;
  if (!frame) {
    return point;
  }
  return add(point, frame.scroll.diff.displacement);
};
var getResultWithoutDroppableDisplacement = function getResultWithoutDroppableDisplacement2(_ref6) {
  var impact = _ref6.impact, draggable2 = _ref6.draggable, droppable2 = _ref6.droppable, draggables = _ref6.draggables, afterCritical = _ref6.afterCritical;
  var original = draggable2.page.borderBox.center;
  var at2 = impact.at;
  if (!droppable2) {
    return original;
  }
  if (!at2) {
    return original;
  }
  if (at2.type === "REORDER") {
    return whenReordering({
      impact,
      draggable: draggable2,
      draggables,
      droppable: droppable2,
      afterCritical
    });
  }
  return whenCombining({
    impact,
    draggables,
    afterCritical
  });
};
var getPageBorderBoxCenterFromImpact = function(args) {
  var withoutDisplacement = getResultWithoutDroppableDisplacement(args);
  var droppable2 = args.droppable;
  var withDisplacement = droppable2 ? withDroppableDisplacement(droppable2, withoutDisplacement) : withoutDisplacement;
  return withDisplacement;
};
var scrollViewport = function(viewport, newScroll) {
  var diff = subtract(newScroll, viewport.scroll.initial);
  var displacement = negate(diff);
  var frame = getRect({
    top: newScroll.y,
    bottom: newScroll.y + viewport.frame.height,
    left: newScroll.x,
    right: newScroll.x + viewport.frame.width
  });
  var updated = {
    frame,
    scroll: {
      initial: viewport.scroll.initial,
      max: viewport.scroll.max,
      current: newScroll,
      diff: {
        value: diff,
        displacement
      }
    }
  };
  return updated;
};
function getDraggables(ids, draggables) {
  return ids.map(function(id3) {
    return draggables[id3];
  });
}
function tryGetVisible(id3, groups) {
  for (var i2 = 0; i2 < groups.length; i2++) {
    var displacement = groups[i2].visible[id3];
    if (displacement) {
      return displacement;
    }
  }
  return null;
}
var speculativelyIncrease = function(_ref6) {
  var impact = _ref6.impact, viewport = _ref6.viewport, destination = _ref6.destination, draggables = _ref6.draggables, maxScrollChange = _ref6.maxScrollChange;
  var scrolledViewport = scrollViewport(viewport, add(viewport.scroll.current, maxScrollChange));
  var scrolledDroppable = destination.frame ? scrollDroppable(destination, add(destination.frame.scroll.current, maxScrollChange)) : destination;
  var last2 = impact.displaced;
  var withViewportScroll = getDisplacementGroups({
    afterDragging: getDraggables(last2.all, draggables),
    destination,
    displacedBy: impact.displacedBy,
    viewport: scrolledViewport.frame,
    last: last2,
    forceShouldAnimate: false
  });
  var withDroppableScroll2 = getDisplacementGroups({
    afterDragging: getDraggables(last2.all, draggables),
    destination: scrolledDroppable,
    displacedBy: impact.displacedBy,
    viewport: viewport.frame,
    last: last2,
    forceShouldAnimate: false
  });
  var invisible = {};
  var visible = {};
  var groups = [last2, withViewportScroll, withDroppableScroll2];
  last2.all.forEach(function(id3) {
    var displacement = tryGetVisible(id3, groups);
    if (displacement) {
      visible[id3] = displacement;
      return;
    }
    invisible[id3] = true;
  });
  var newImpact = _extends({}, impact, {
    displaced: {
      all: last2.all,
      invisible,
      visible
    }
  });
  return newImpact;
};
var withViewportDisplacement = function(viewport, point) {
  return add(viewport.scroll.diff.displacement, point);
};
var getClientFromPageBorderBoxCenter = function(_ref6) {
  var pageBorderBoxCenter = _ref6.pageBorderBoxCenter, draggable2 = _ref6.draggable, viewport = _ref6.viewport;
  var withoutPageScrollChange = withViewportDisplacement(viewport, pageBorderBoxCenter);
  var offset7 = subtract(withoutPageScrollChange, draggable2.page.borderBox.center);
  return add(draggable2.client.borderBox.center, offset7);
};
var isTotallyVisibleInNewLocation = function(_ref6) {
  var draggable2 = _ref6.draggable, destination = _ref6.destination, newPageBorderBoxCenter = _ref6.newPageBorderBoxCenter, viewport = _ref6.viewport, withDroppableDisplacement2 = _ref6.withDroppableDisplacement, _ref$onlyOnMainAxis = _ref6.onlyOnMainAxis, onlyOnMainAxis = _ref$onlyOnMainAxis === void 0 ? false : _ref$onlyOnMainAxis;
  var changeNeeded = subtract(newPageBorderBoxCenter, draggable2.page.borderBox.center);
  var shifted = offsetByPosition(draggable2.page.borderBox, changeNeeded);
  var args = {
    target: shifted,
    destination,
    withDroppableDisplacement: withDroppableDisplacement2,
    viewport
  };
  return onlyOnMainAxis ? isTotallyVisibleOnAxis(args) : isTotallyVisible(args);
};
var moveToNextPlace = function(_ref6) {
  var isMovingForward = _ref6.isMovingForward, draggable2 = _ref6.draggable, destination = _ref6.destination, draggables = _ref6.draggables, previousImpact = _ref6.previousImpact, viewport = _ref6.viewport, previousPageBorderBoxCenter = _ref6.previousPageBorderBoxCenter, previousClientSelection = _ref6.previousClientSelection, afterCritical = _ref6.afterCritical;
  if (!destination.isEnabled) {
    return null;
  }
  var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
  var isInHomeList = isHomeOf(draggable2, destination);
  var impact = moveToNextCombine({
    isMovingForward,
    draggable: draggable2,
    destination,
    insideDestination,
    previousImpact
  }) || moveToNextIndex({
    isMovingForward,
    isInHomeList,
    draggable: draggable2,
    draggables,
    destination,
    insideDestination,
    previousImpact,
    viewport,
    afterCritical
  });
  if (!impact) {
    return null;
  }
  var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
    impact,
    draggable: draggable2,
    droppable: destination,
    draggables,
    afterCritical
  });
  var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
    draggable: draggable2,
    destination,
    newPageBorderBoxCenter: pageBorderBoxCenter,
    viewport: viewport.frame,
    withDroppableDisplacement: false,
    onlyOnMainAxis: true
  });
  if (isVisibleInNewLocation) {
    var clientSelection = getClientFromPageBorderBoxCenter({
      pageBorderBoxCenter,
      draggable: draggable2,
      viewport
    });
    return {
      clientSelection,
      impact,
      scrollJumpRequest: null
    };
  }
  var distance3 = subtract(pageBorderBoxCenter, previousPageBorderBoxCenter);
  var cautious = speculativelyIncrease({
    impact,
    viewport,
    destination,
    draggables,
    maxScrollChange: distance3
  });
  return {
    clientSelection: previousClientSelection,
    impact: cautious,
    scrollJumpRequest: distance3
  };
};
var getKnownActive = function getKnownActive2(droppable2) {
  var rect = droppable2.subject.active;
  !rect ? true ? invariant2(false, "Cannot get clipped area from droppable") : invariant2(false) : void 0;
  return rect;
};
var getBestCrossAxisDroppable = function(_ref6) {
  var isMovingForward = _ref6.isMovingForward, pageBorderBoxCenter = _ref6.pageBorderBoxCenter, source = _ref6.source, droppables = _ref6.droppables, viewport = _ref6.viewport;
  var active = source.subject.active;
  if (!active) {
    return null;
  }
  var axis = source.axis;
  var isBetweenSourceClipped = isWithin(active[axis.start], active[axis.end]);
  var candidates = toDroppableList(droppables).filter(function(droppable2) {
    return droppable2 !== source;
  }).filter(function(droppable2) {
    return droppable2.isEnabled;
  }).filter(function(droppable2) {
    return Boolean(droppable2.subject.active);
  }).filter(function(droppable2) {
    return isPartiallyVisibleThroughFrame(viewport.frame)(getKnownActive(droppable2));
  }).filter(function(droppable2) {
    var activeOfTarget = getKnownActive(droppable2);
    if (isMovingForward) {
      return active[axis.crossAxisEnd] < activeOfTarget[axis.crossAxisEnd];
    }
    return activeOfTarget[axis.crossAxisStart] < active[axis.crossAxisStart];
  }).filter(function(droppable2) {
    var activeOfTarget = getKnownActive(droppable2);
    var isBetweenDestinationClipped = isWithin(activeOfTarget[axis.start], activeOfTarget[axis.end]);
    return isBetweenSourceClipped(activeOfTarget[axis.start]) || isBetweenSourceClipped(activeOfTarget[axis.end]) || isBetweenDestinationClipped(active[axis.start]) || isBetweenDestinationClipped(active[axis.end]);
  }).sort(function(a2, b2) {
    var first = getKnownActive(a2)[axis.crossAxisStart];
    var second = getKnownActive(b2)[axis.crossAxisStart];
    if (isMovingForward) {
      return first - second;
    }
    return second - first;
  }).filter(function(droppable2, index4, array) {
    return getKnownActive(droppable2)[axis.crossAxisStart] === getKnownActive(array[0])[axis.crossAxisStart];
  });
  if (!candidates.length) {
    return null;
  }
  if (candidates.length === 1) {
    return candidates[0];
  }
  var contains = candidates.filter(function(droppable2) {
    var isWithinDroppable = isWithin(getKnownActive(droppable2)[axis.start], getKnownActive(droppable2)[axis.end]);
    return isWithinDroppable(pageBorderBoxCenter[axis.line]);
  });
  if (contains.length === 1) {
    return contains[0];
  }
  if (contains.length > 1) {
    return contains.sort(function(a2, b2) {
      return getKnownActive(a2)[axis.start] - getKnownActive(b2)[axis.start];
    })[0];
  }
  return candidates.sort(function(a2, b2) {
    var first = closest(pageBorderBoxCenter, getCorners(getKnownActive(a2)));
    var second = closest(pageBorderBoxCenter, getCorners(getKnownActive(b2)));
    if (first !== second) {
      return first - second;
    }
    return getKnownActive(a2)[axis.start] - getKnownActive(b2)[axis.start];
  })[0];
};
var getCurrentPageBorderBoxCenter = function getCurrentPageBorderBoxCenter2(draggable2, afterCritical) {
  var original = draggable2.page.borderBox.center;
  return didStartAfterCritical(draggable2.descriptor.id, afterCritical) ? subtract(original, afterCritical.displacedBy.point) : original;
};
var getCurrentPageBorderBox = function getCurrentPageBorderBox2(draggable2, afterCritical) {
  var original = draggable2.page.borderBox;
  return didStartAfterCritical(draggable2.descriptor.id, afterCritical) ? offsetByPosition(original, negate(afterCritical.displacedBy.point)) : original;
};
var getClosestDraggable = function(_ref6) {
  var pageBorderBoxCenter = _ref6.pageBorderBoxCenter, viewport = _ref6.viewport, destination = _ref6.destination, insideDestination = _ref6.insideDestination, afterCritical = _ref6.afterCritical;
  var sorted = insideDestination.filter(function(draggable2) {
    return isTotallyVisible({
      target: getCurrentPageBorderBox(draggable2, afterCritical),
      destination,
      viewport: viewport.frame,
      withDroppableDisplacement: true
    });
  }).sort(function(a2, b2) {
    var distanceToA = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(a2, afterCritical)));
    var distanceToB = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(b2, afterCritical)));
    if (distanceToA < distanceToB) {
      return -1;
    }
    if (distanceToB < distanceToA) {
      return 1;
    }
    return a2.descriptor.index - b2.descriptor.index;
  });
  return sorted[0] || null;
};
var getDisplacedBy = memoize_one_esm_default(function getDisplacedBy2(axis, displaceBy) {
  var displacement = displaceBy[axis.line];
  return {
    value: displacement,
    point: patch(axis.line, displacement)
  };
});
var getRequiredGrowthForPlaceholder = function getRequiredGrowthForPlaceholder2(droppable2, placeholderSize, draggables) {
  var axis = droppable2.axis;
  if (droppable2.descriptor.mode === "virtual") {
    return patch(axis.line, placeholderSize[axis.line]);
  }
  var availableSpace = droppable2.subject.page.contentBox[axis.size];
  var insideDroppable = getDraggablesInsideDroppable(droppable2.descriptor.id, draggables);
  var spaceUsed = insideDroppable.reduce(function(sum, dimension) {
    return sum + dimension.client.marginBox[axis.size];
  }, 0);
  var requiredSpace = spaceUsed + placeholderSize[axis.line];
  var needsToGrowBy = requiredSpace - availableSpace;
  if (needsToGrowBy <= 0) {
    return null;
  }
  return patch(axis.line, needsToGrowBy);
};
var withMaxScroll = function withMaxScroll2(frame, max2) {
  return _extends({}, frame, {
    scroll: _extends({}, frame.scroll, {
      max: max2
    })
  });
};
var addPlaceholder = function addPlaceholder2(droppable2, draggable2, draggables) {
  var frame = droppable2.frame;
  !!isHomeOf(draggable2, droppable2) ? true ? invariant2(false, "Should not add placeholder space to home list") : invariant2(false) : void 0;
  !!droppable2.subject.withPlaceholder ? true ? invariant2(false, "Cannot add placeholder size to a subject when it already has one") : invariant2(false) : void 0;
  var placeholderSize = getDisplacedBy(droppable2.axis, draggable2.displaceBy).point;
  var requiredGrowth = getRequiredGrowthForPlaceholder(droppable2, placeholderSize, draggables);
  var added = {
    placeholderSize,
    increasedBy: requiredGrowth,
    oldFrameMaxScroll: droppable2.frame ? droppable2.frame.scroll.max : null
  };
  if (!frame) {
    var _subject = getSubject({
      page: droppable2.subject.page,
      withPlaceholder: added,
      axis: droppable2.axis,
      frame: droppable2.frame
    });
    return _extends({}, droppable2, {
      subject: _subject
    });
  }
  var maxScroll = requiredGrowth ? add(frame.scroll.max, requiredGrowth) : frame.scroll.max;
  var newFrame = withMaxScroll(frame, maxScroll);
  var subject = getSubject({
    page: droppable2.subject.page,
    withPlaceholder: added,
    axis: droppable2.axis,
    frame: newFrame
  });
  return _extends({}, droppable2, {
    subject,
    frame: newFrame
  });
};
var removePlaceholder = function removePlaceholder2(droppable2) {
  var added = droppable2.subject.withPlaceholder;
  !added ? true ? invariant2(false, "Cannot remove placeholder form subject when there was none") : invariant2(false) : void 0;
  var frame = droppable2.frame;
  if (!frame) {
    var _subject2 = getSubject({
      page: droppable2.subject.page,
      axis: droppable2.axis,
      frame: null,
      withPlaceholder: null
    });
    return _extends({}, droppable2, {
      subject: _subject2
    });
  }
  var oldMaxScroll = added.oldFrameMaxScroll;
  !oldMaxScroll ? true ? invariant2(false, "Expected droppable with frame to have old max frame scroll when removing placeholder") : invariant2(false) : void 0;
  var newFrame = withMaxScroll(frame, oldMaxScroll);
  var subject = getSubject({
    page: droppable2.subject.page,
    axis: droppable2.axis,
    frame: newFrame,
    withPlaceholder: null
  });
  return _extends({}, droppable2, {
    subject,
    frame: newFrame
  });
};
var moveToNewDroppable = function(_ref6) {
  var previousPageBorderBoxCenter = _ref6.previousPageBorderBoxCenter, moveRelativeTo = _ref6.moveRelativeTo, insideDestination = _ref6.insideDestination, draggable2 = _ref6.draggable, draggables = _ref6.draggables, destination = _ref6.destination, viewport = _ref6.viewport, afterCritical = _ref6.afterCritical;
  if (!moveRelativeTo) {
    if (insideDestination.length) {
      return null;
    }
    var proposed = {
      displaced: emptyGroups,
      displacedBy: noDisplacedBy,
      at: {
        type: "REORDER",
        destination: {
          droppableId: destination.descriptor.id,
          index: 0
        }
      }
    };
    var proposedPageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
      impact: proposed,
      draggable: draggable2,
      droppable: destination,
      draggables,
      afterCritical
    });
    var withPlaceholder = isHomeOf(draggable2, destination) ? destination : addPlaceholder(destination, draggable2, draggables);
    var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
      draggable: draggable2,
      destination: withPlaceholder,
      newPageBorderBoxCenter: proposedPageBorderBoxCenter,
      viewport: viewport.frame,
      withDroppableDisplacement: false,
      onlyOnMainAxis: true
    });
    return isVisibleInNewLocation ? proposed : null;
  }
  var isGoingBeforeTarget = Boolean(previousPageBorderBoxCenter[destination.axis.line] <= moveRelativeTo.page.borderBox.center[destination.axis.line]);
  var proposedIndex = function() {
    var relativeTo = moveRelativeTo.descriptor.index;
    if (moveRelativeTo.descriptor.id === draggable2.descriptor.id) {
      return relativeTo;
    }
    if (isGoingBeforeTarget) {
      return relativeTo;
    }
    return relativeTo + 1;
  }();
  var displacedBy = getDisplacedBy(destination.axis, draggable2.displaceBy);
  return calculateReorderImpact({
    draggable: draggable2,
    insideDestination,
    destination,
    viewport,
    displacedBy,
    last: emptyGroups,
    index: proposedIndex
  });
};
var moveCrossAxis = function(_ref6) {
  var isMovingForward = _ref6.isMovingForward, previousPageBorderBoxCenter = _ref6.previousPageBorderBoxCenter, draggable2 = _ref6.draggable, isOver = _ref6.isOver, draggables = _ref6.draggables, droppables = _ref6.droppables, viewport = _ref6.viewport, afterCritical = _ref6.afterCritical;
  var destination = getBestCrossAxisDroppable({
    isMovingForward,
    pageBorderBoxCenter: previousPageBorderBoxCenter,
    source: isOver,
    droppables,
    viewport
  });
  if (!destination) {
    return null;
  }
  var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
  var moveRelativeTo = getClosestDraggable({
    pageBorderBoxCenter: previousPageBorderBoxCenter,
    viewport,
    destination,
    insideDestination,
    afterCritical
  });
  var impact = moveToNewDroppable({
    previousPageBorderBoxCenter,
    destination,
    draggable: draggable2,
    draggables,
    moveRelativeTo,
    insideDestination,
    viewport,
    afterCritical
  });
  if (!impact) {
    return null;
  }
  var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
    impact,
    draggable: draggable2,
    droppable: destination,
    draggables,
    afterCritical
  });
  var clientSelection = getClientFromPageBorderBoxCenter({
    pageBorderBoxCenter,
    draggable: draggable2,
    viewport
  });
  return {
    clientSelection,
    impact,
    scrollJumpRequest: null
  };
};
var whatIsDraggedOver = function(impact) {
  var at2 = impact.at;
  if (!at2) {
    return null;
  }
  if (at2.type === "REORDER") {
    return at2.destination.droppableId;
  }
  return at2.combine.droppableId;
};
var getDroppableOver = function getDroppableOver2(impact, droppables) {
  var id3 = whatIsDraggedOver(impact);
  return id3 ? droppables[id3] : null;
};
var moveInDirection = function(_ref6) {
  var state = _ref6.state, type3 = _ref6.type;
  var isActuallyOver = getDroppableOver(state.impact, state.dimensions.droppables);
  var isMainAxisMovementAllowed = Boolean(isActuallyOver);
  var home2 = state.dimensions.droppables[state.critical.droppable.id];
  var isOver = isActuallyOver || home2;
  var direction = isOver.axis.direction;
  var isMovingOnMainAxis = direction === "vertical" && (type3 === "MOVE_UP" || type3 === "MOVE_DOWN") || direction === "horizontal" && (type3 === "MOVE_LEFT" || type3 === "MOVE_RIGHT");
  if (isMovingOnMainAxis && !isMainAxisMovementAllowed) {
    return null;
  }
  var isMovingForward = type3 === "MOVE_DOWN" || type3 === "MOVE_RIGHT";
  var draggable2 = state.dimensions.draggables[state.critical.draggable.id];
  var previousPageBorderBoxCenter = state.current.page.borderBoxCenter;
  var _state$dimensions = state.dimensions, draggables = _state$dimensions.draggables, droppables = _state$dimensions.droppables;
  return isMovingOnMainAxis ? moveToNextPlace({
    isMovingForward,
    previousPageBorderBoxCenter,
    draggable: draggable2,
    destination: isOver,
    draggables,
    viewport: state.viewport,
    previousClientSelection: state.current.client.selection,
    previousImpact: state.impact,
    afterCritical: state.afterCritical
  }) : moveCrossAxis({
    isMovingForward,
    previousPageBorderBoxCenter,
    draggable: draggable2,
    isOver,
    draggables,
    droppables,
    viewport: state.viewport,
    afterCritical: state.afterCritical
  });
};
function isMovementAllowed(state) {
  return state.phase === "DRAGGING" || state.phase === "COLLECTING";
}
function isPositionInFrame(frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function run(point) {
    return isWithinVertical(point.y) && isWithinHorizontal(point.x);
  };
}
function getHasOverlap(first, second) {
  return first.left < second.right && first.right > second.left && first.top < second.bottom && first.bottom > second.top;
}
function getFurthestAway(_ref6) {
  var pageBorderBox = _ref6.pageBorderBox, draggable2 = _ref6.draggable, candidates = _ref6.candidates;
  var startCenter = draggable2.page.borderBox.center;
  var sorted = candidates.map(function(candidate) {
    var axis = candidate.axis;
    var target = patch(candidate.axis.line, pageBorderBox.center[axis.line], candidate.page.borderBox.center[axis.crossAxisLine]);
    return {
      id: candidate.descriptor.id,
      distance: distance(startCenter, target)
    };
  }).sort(function(a2, b2) {
    return b2.distance - a2.distance;
  });
  return sorted[0] ? sorted[0].id : null;
}
function getDroppableOver$1(_ref23) {
  var pageBorderBox = _ref23.pageBorderBox, draggable2 = _ref23.draggable, droppables = _ref23.droppables;
  var candidates = toDroppableList(droppables).filter(function(item) {
    if (!item.isEnabled) {
      return false;
    }
    var active = item.subject.active;
    if (!active) {
      return false;
    }
    if (!getHasOverlap(pageBorderBox, active)) {
      return false;
    }
    if (isPositionInFrame(active)(pageBorderBox.center)) {
      return true;
    }
    var axis = item.axis;
    var childCenter = active.center[axis.crossAxisLine];
    var crossAxisStart = pageBorderBox[axis.crossAxisStart];
    var crossAxisEnd = pageBorderBox[axis.crossAxisEnd];
    var isContained = isWithin(active[axis.crossAxisStart], active[axis.crossAxisEnd]);
    var isStartContained = isContained(crossAxisStart);
    var isEndContained = isContained(crossAxisEnd);
    if (!isStartContained && !isEndContained) {
      return true;
    }
    if (isStartContained) {
      return crossAxisStart < childCenter;
    }
    return crossAxisEnd > childCenter;
  });
  if (!candidates.length) {
    return null;
  }
  if (candidates.length === 1) {
    return candidates[0].descriptor.id;
  }
  return getFurthestAway({
    pageBorderBox,
    draggable: draggable2,
    candidates
  });
}
var offsetRectByPosition = function offsetRectByPosition2(rect, point) {
  return getRect(offsetByPosition(rect, point));
};
var withDroppableScroll = function(droppable2, area) {
  var frame = droppable2.frame;
  if (!frame) {
    return area;
  }
  return offsetRectByPosition(area, frame.scroll.diff.value);
};
function getIsDisplaced(_ref6) {
  var displaced = _ref6.displaced, id3 = _ref6.id;
  return Boolean(displaced.visible[id3] || displaced.invisible[id3]);
}
function atIndex(_ref6) {
  var draggable2 = _ref6.draggable, closest3 = _ref6.closest, inHomeList = _ref6.inHomeList;
  if (!closest3) {
    return null;
  }
  if (!inHomeList) {
    return closest3.descriptor.index;
  }
  if (closest3.descriptor.index > draggable2.descriptor.index) {
    return closest3.descriptor.index - 1;
  }
  return closest3.descriptor.index;
}
var getReorderImpact = function(_ref23) {
  var targetRect = _ref23.pageBorderBoxWithDroppableScroll, draggable2 = _ref23.draggable, destination = _ref23.destination, insideDestination = _ref23.insideDestination, last2 = _ref23.last, viewport = _ref23.viewport, afterCritical = _ref23.afterCritical;
  var axis = destination.axis;
  var displacedBy = getDisplacedBy(destination.axis, draggable2.displaceBy);
  var displacement = displacedBy.value;
  var targetStart = targetRect[axis.start];
  var targetEnd = targetRect[axis.end];
  var withoutDragging = removeDraggableFromList(draggable2, insideDestination);
  var closest3 = find2(withoutDragging, function(child) {
    var id3 = child.descriptor.id;
    var childCenter = child.page.borderBox.center[axis.line];
    var didStartAfterCritical$1 = didStartAfterCritical(id3, afterCritical);
    var isDisplaced = getIsDisplaced({
      displaced: last2,
      id: id3
    });
    if (didStartAfterCritical$1) {
      if (isDisplaced) {
        return targetEnd <= childCenter;
      }
      return targetStart < childCenter - displacement;
    }
    if (isDisplaced) {
      return targetEnd <= childCenter + displacement;
    }
    return targetStart < childCenter;
  });
  var newIndex = atIndex({
    draggable: draggable2,
    closest: closest3,
    inHomeList: isHomeOf(draggable2, destination)
  });
  return calculateReorderImpact({
    draggable: draggable2,
    insideDestination,
    destination,
    viewport,
    last: last2,
    displacedBy,
    index: newIndex
  });
};
var combineThresholdDivisor = 4;
var getCombineImpact = function(_ref6) {
  var draggable2 = _ref6.draggable, targetRect = _ref6.pageBorderBoxWithDroppableScroll, previousImpact = _ref6.previousImpact, destination = _ref6.destination, insideDestination = _ref6.insideDestination, afterCritical = _ref6.afterCritical;
  if (!destination.isCombineEnabled) {
    return null;
  }
  var axis = destination.axis;
  var displacedBy = getDisplacedBy(destination.axis, draggable2.displaceBy);
  var displacement = displacedBy.value;
  var targetStart = targetRect[axis.start];
  var targetEnd = targetRect[axis.end];
  var withoutDragging = removeDraggableFromList(draggable2, insideDestination);
  var combineWith = find2(withoutDragging, function(child) {
    var id3 = child.descriptor.id;
    var childRect = child.page.borderBox;
    var childSize = childRect[axis.size];
    var threshold = childSize / combineThresholdDivisor;
    var didStartAfterCritical$1 = didStartAfterCritical(id3, afterCritical);
    var isDisplaced = getIsDisplaced({
      displaced: previousImpact.displaced,
      id: id3
    });
    if (didStartAfterCritical$1) {
      if (isDisplaced) {
        return targetEnd > childRect[axis.start] + threshold && targetEnd < childRect[axis.end] - threshold;
      }
      return targetStart > childRect[axis.start] - displacement + threshold && targetStart < childRect[axis.end] - displacement - threshold;
    }
    if (isDisplaced) {
      return targetEnd > childRect[axis.start] + displacement + threshold && targetEnd < childRect[axis.end] + displacement - threshold;
    }
    return targetStart > childRect[axis.start] + threshold && targetStart < childRect[axis.end] - threshold;
  });
  if (!combineWith) {
    return null;
  }
  var impact = {
    displacedBy,
    displaced: previousImpact.displaced,
    at: {
      type: "COMBINE",
      combine: {
        draggableId: combineWith.descriptor.id,
        droppableId: destination.descriptor.id
      }
    }
  };
  return impact;
};
var getDragImpact = function(_ref6) {
  var pageOffset = _ref6.pageOffset, draggable2 = _ref6.draggable, draggables = _ref6.draggables, droppables = _ref6.droppables, previousImpact = _ref6.previousImpact, viewport = _ref6.viewport, afterCritical = _ref6.afterCritical;
  var pageBorderBox = offsetRectByPosition(draggable2.page.borderBox, pageOffset);
  var destinationId = getDroppableOver$1({
    pageBorderBox,
    draggable: draggable2,
    droppables
  });
  if (!destinationId) {
    return noImpact;
  }
  var destination = droppables[destinationId];
  var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
  var pageBorderBoxWithDroppableScroll = withDroppableScroll(destination, pageBorderBox);
  return getCombineImpact({
    pageBorderBoxWithDroppableScroll,
    draggable: draggable2,
    previousImpact,
    destination,
    insideDestination,
    afterCritical
  }) || getReorderImpact({
    pageBorderBoxWithDroppableScroll,
    draggable: draggable2,
    destination,
    insideDestination,
    last: previousImpact.displaced,
    viewport,
    afterCritical
  });
};
var patchDroppableMap = function(droppables, updated) {
  var _extends22;
  return _extends({}, droppables, (_extends22 = {}, _extends22[updated.descriptor.id] = updated, _extends22));
};
var clearUnusedPlaceholder = function clearUnusedPlaceholder2(_ref6) {
  var previousImpact = _ref6.previousImpact, impact = _ref6.impact, droppables = _ref6.droppables;
  var last2 = whatIsDraggedOver(previousImpact);
  var now2 = whatIsDraggedOver(impact);
  if (!last2) {
    return droppables;
  }
  if (last2 === now2) {
    return droppables;
  }
  var lastDroppable = droppables[last2];
  if (!lastDroppable.subject.withPlaceholder) {
    return droppables;
  }
  var updated = removePlaceholder(lastDroppable);
  return patchDroppableMap(droppables, updated);
};
var recomputePlaceholders = function(_ref23) {
  var draggable2 = _ref23.draggable, draggables = _ref23.draggables, droppables = _ref23.droppables, previousImpact = _ref23.previousImpact, impact = _ref23.impact;
  var cleaned = clearUnusedPlaceholder({
    previousImpact,
    impact,
    droppables
  });
  var isOver = whatIsDraggedOver(impact);
  if (!isOver) {
    return cleaned;
  }
  var droppable2 = droppables[isOver];
  if (isHomeOf(draggable2, droppable2)) {
    return cleaned;
  }
  if (droppable2.subject.withPlaceholder) {
    return cleaned;
  }
  var patched = addPlaceholder(droppable2, draggable2, draggables);
  return patchDroppableMap(cleaned, patched);
};
var update3 = function(_ref6) {
  var state = _ref6.state, forcedClientSelection = _ref6.clientSelection, forcedDimensions = _ref6.dimensions, forcedViewport = _ref6.viewport, forcedImpact = _ref6.impact, scrollJumpRequest = _ref6.scrollJumpRequest;
  var viewport = forcedViewport || state.viewport;
  var dimensions = forcedDimensions || state.dimensions;
  var clientSelection = forcedClientSelection || state.current.client.selection;
  var offset7 = subtract(clientSelection, state.initial.client.selection);
  var client = {
    offset: offset7,
    selection: clientSelection,
    borderBoxCenter: add(state.initial.client.borderBoxCenter, offset7)
  };
  var page = {
    selection: add(client.selection, viewport.scroll.current),
    borderBoxCenter: add(client.borderBoxCenter, viewport.scroll.current),
    offset: add(client.offset, viewport.scroll.diff.value)
  };
  var current = {
    client,
    page
  };
  if (state.phase === "COLLECTING") {
    return _extends({
      phase: "COLLECTING"
    }, state, {
      dimensions,
      viewport,
      current
    });
  }
  var draggable2 = dimensions.draggables[state.critical.draggable.id];
  var newImpact = forcedImpact || getDragImpact({
    pageOffset: page.offset,
    draggable: draggable2,
    draggables: dimensions.draggables,
    droppables: dimensions.droppables,
    previousImpact: state.impact,
    viewport,
    afterCritical: state.afterCritical
  });
  var withUpdatedPlaceholders = recomputePlaceholders({
    draggable: draggable2,
    impact: newImpact,
    previousImpact: state.impact,
    draggables: dimensions.draggables,
    droppables: dimensions.droppables
  });
  var result = _extends({}, state, {
    current,
    dimensions: {
      draggables: dimensions.draggables,
      droppables: withUpdatedPlaceholders
    },
    impact: newImpact,
    viewport,
    scrollJumpRequest: scrollJumpRequest || null,
    forceShouldAnimate: scrollJumpRequest ? false : null
  });
  return result;
};
function getDraggables$1(ids, draggables) {
  return ids.map(function(id3) {
    return draggables[id3];
  });
}
var recompute = function(_ref6) {
  var impact = _ref6.impact, viewport = _ref6.viewport, draggables = _ref6.draggables, destination = _ref6.destination, forceShouldAnimate = _ref6.forceShouldAnimate;
  var last2 = impact.displaced;
  var afterDragging = getDraggables$1(last2.all, draggables);
  var displaced = getDisplacementGroups({
    afterDragging,
    destination,
    displacedBy: impact.displacedBy,
    viewport: viewport.frame,
    forceShouldAnimate,
    last: last2
  });
  return _extends({}, impact, {
    displaced
  });
};
var getClientBorderBoxCenter = function(_ref6) {
  var impact = _ref6.impact, draggable2 = _ref6.draggable, droppable2 = _ref6.droppable, draggables = _ref6.draggables, viewport = _ref6.viewport, afterCritical = _ref6.afterCritical;
  var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
    impact,
    draggable: draggable2,
    draggables,
    droppable: droppable2,
    afterCritical
  });
  return getClientFromPageBorderBoxCenter({
    pageBorderBoxCenter,
    draggable: draggable2,
    viewport
  });
};
var refreshSnap = function(_ref6) {
  var state = _ref6.state, forcedDimensions = _ref6.dimensions, forcedViewport = _ref6.viewport;
  !(state.movementMode === "SNAP") ? true ? invariant2(false) : invariant2(false) : void 0;
  var needsVisibilityCheck = state.impact;
  var viewport = forcedViewport || state.viewport;
  var dimensions = forcedDimensions || state.dimensions;
  var draggables = dimensions.draggables, droppables = dimensions.droppables;
  var draggable2 = draggables[state.critical.draggable.id];
  var isOver = whatIsDraggedOver(needsVisibilityCheck);
  !isOver ? true ? invariant2(false, "Must be over a destination in SNAP movement mode") : invariant2(false) : void 0;
  var destination = droppables[isOver];
  var impact = recompute({
    impact: needsVisibilityCheck,
    viewport,
    destination,
    draggables
  });
  var clientSelection = getClientBorderBoxCenter({
    impact,
    draggable: draggable2,
    droppable: destination,
    draggables,
    viewport,
    afterCritical: state.afterCritical
  });
  return update3({
    impact,
    clientSelection,
    state,
    dimensions,
    viewport
  });
};
var getHomeLocation = function(descriptor) {
  return {
    index: descriptor.index,
    droppableId: descriptor.droppableId
  };
};
var getLiftEffect = function(_ref6) {
  var draggable2 = _ref6.draggable, home2 = _ref6.home, draggables = _ref6.draggables, viewport = _ref6.viewport;
  var displacedBy = getDisplacedBy(home2.axis, draggable2.displaceBy);
  var insideHome = getDraggablesInsideDroppable(home2.descriptor.id, draggables);
  var rawIndex = insideHome.indexOf(draggable2);
  !(rawIndex !== -1) ? true ? invariant2(false, "Expected draggable to be inside home list") : invariant2(false) : void 0;
  var afterDragging = insideHome.slice(rawIndex + 1);
  var effected = afterDragging.reduce(function(previous, item) {
    previous[item.descriptor.id] = true;
    return previous;
  }, {});
  var afterCritical = {
    inVirtualList: home2.descriptor.mode === "virtual",
    displacedBy,
    effected
  };
  var displaced = getDisplacementGroups({
    afterDragging,
    destination: home2,
    displacedBy,
    last: null,
    viewport: viewport.frame,
    forceShouldAnimate: false
  });
  var impact = {
    displaced,
    displacedBy,
    at: {
      type: "REORDER",
      destination: getHomeLocation(draggable2.descriptor)
    }
  };
  return {
    impact,
    afterCritical
  };
};
var patchDimensionMap = function(dimensions, updated) {
  return {
    draggables: dimensions.draggables,
    droppables: patchDroppableMap(dimensions.droppables, updated)
  };
};
var start = function start2(key) {
  if (true) {
    {
      return;
    }
  }
};
var finish = function finish2(key) {
  if (true) {
    {
      return;
    }
  }
};
var offsetDraggable = function(_ref6) {
  var draggable2 = _ref6.draggable, offset$1 = _ref6.offset, initialWindowScroll = _ref6.initialWindowScroll;
  var client = offset5(draggable2.client, offset$1);
  var page = withScroll(client, initialWindowScroll);
  var moved = _extends({}, draggable2, {
    placeholder: _extends({}, draggable2.placeholder, {
      client
    }),
    client,
    page
  });
  return moved;
};
var getFrame = function(droppable2) {
  var frame = droppable2.frame;
  !frame ? true ? invariant2(false, "Expected Droppable to have a frame") : invariant2(false) : void 0;
  return frame;
};
var adjustAdditionsForScrollChanges = function(_ref6) {
  var additions = _ref6.additions, updatedDroppables = _ref6.updatedDroppables, viewport = _ref6.viewport;
  var windowScrollChange = viewport.scroll.diff.value;
  return additions.map(function(draggable2) {
    var droppableId = draggable2.descriptor.droppableId;
    var modified = updatedDroppables[droppableId];
    var frame = getFrame(modified);
    var droppableScrollChange = frame.scroll.diff.value;
    var totalChange = add(windowScrollChange, droppableScrollChange);
    var moved = offsetDraggable({
      draggable: draggable2,
      offset: totalChange,
      initialWindowScroll: viewport.scroll.initial
    });
    return moved;
  });
};
var publishWhileDraggingInVirtual = function(_ref6) {
  var state = _ref6.state, published = _ref6.published;
  start();
  var withScrollChange = published.modified.map(function(update4) {
    var existing = state.dimensions.droppables[update4.droppableId];
    var scrolled = scrollDroppable(existing, update4.scroll);
    return scrolled;
  });
  var droppables = _extends({}, state.dimensions.droppables, {}, toDroppableMap(withScrollChange));
  var updatedAdditions = toDraggableMap(adjustAdditionsForScrollChanges({
    additions: published.additions,
    updatedDroppables: droppables,
    viewport: state.viewport
  }));
  var draggables = _extends({}, state.dimensions.draggables, {}, updatedAdditions);
  published.removals.forEach(function(id3) {
    delete draggables[id3];
  });
  var dimensions = {
    droppables,
    draggables
  };
  var wasOverId = whatIsDraggedOver(state.impact);
  var wasOver = wasOverId ? dimensions.droppables[wasOverId] : null;
  var draggable2 = dimensions.draggables[state.critical.draggable.id];
  var home2 = dimensions.droppables[state.critical.droppable.id];
  var _getLiftEffect = getLiftEffect({
    draggable: draggable2,
    home: home2,
    draggables,
    viewport: state.viewport
  }), onLiftImpact = _getLiftEffect.impact, afterCritical = _getLiftEffect.afterCritical;
  var previousImpact = wasOver && wasOver.isCombineEnabled ? state.impact : onLiftImpact;
  var impact = getDragImpact({
    pageOffset: state.current.page.offset,
    draggable: dimensions.draggables[state.critical.draggable.id],
    draggables: dimensions.draggables,
    droppables: dimensions.droppables,
    previousImpact,
    viewport: state.viewport,
    afterCritical
  });
  finish();
  var draggingState = _extends({
    phase: "DRAGGING"
  }, state, {
    phase: "DRAGGING",
    impact,
    onLiftImpact,
    dimensions,
    afterCritical,
    forceShouldAnimate: false
  });
  if (state.phase === "COLLECTING") {
    return draggingState;
  }
  var dropPending3 = _extends({
    phase: "DROP_PENDING"
  }, draggingState, {
    phase: "DROP_PENDING",
    reason: state.reason,
    isWaiting: false
  });
  return dropPending3;
};
var isSnapping = function isSnapping2(state) {
  return state.movementMode === "SNAP";
};
var postDroppableChange = function postDroppableChange2(state, updated, isEnabledChanging) {
  var dimensions = patchDimensionMap(state.dimensions, updated);
  if (!isSnapping(state) || isEnabledChanging) {
    return update3({
      state,
      dimensions
    });
  }
  return refreshSnap({
    state,
    dimensions
  });
};
function removeScrollJumpRequest(state) {
  if (state.isDragging && state.movementMode === "SNAP") {
    return _extends({
      phase: "DRAGGING"
    }, state, {
      scrollJumpRequest: null
    });
  }
  return state;
}
var idle = {
  phase: "IDLE",
  completed: null,
  shouldFlush: false
};
var reducer = function(state, action3) {
  if (state === void 0) {
    state = idle;
  }
  if (action3.type === "FLUSH") {
    return _extends({}, idle, {
      shouldFlush: true
    });
  }
  if (action3.type === "INITIAL_PUBLISH") {
    !(state.phase === "IDLE") ? true ? invariant2(false, "INITIAL_PUBLISH must come after a IDLE phase") : invariant2(false) : void 0;
    var _action$payload = action3.payload, critical = _action$payload.critical, clientSelection = _action$payload.clientSelection, viewport = _action$payload.viewport, dimensions = _action$payload.dimensions, movementMode = _action$payload.movementMode;
    var draggable2 = dimensions.draggables[critical.draggable.id];
    var home2 = dimensions.droppables[critical.droppable.id];
    var client = {
      selection: clientSelection,
      borderBoxCenter: draggable2.client.borderBox.center,
      offset: origin
    };
    var initial = {
      client,
      page: {
        selection: add(client.selection, viewport.scroll.initial),
        borderBoxCenter: add(client.selection, viewport.scroll.initial),
        offset: add(client.selection, viewport.scroll.diff.value)
      }
    };
    var isWindowScrollAllowed = toDroppableList(dimensions.droppables).every(function(item) {
      return !item.isFixedOnPage;
    });
    var _getLiftEffect = getLiftEffect({
      draggable: draggable2,
      home: home2,
      draggables: dimensions.draggables,
      viewport
    }), impact = _getLiftEffect.impact, afterCritical = _getLiftEffect.afterCritical;
    var result = {
      phase: "DRAGGING",
      isDragging: true,
      critical,
      movementMode,
      dimensions,
      initial,
      current: initial,
      isWindowScrollAllowed,
      impact,
      afterCritical,
      onLiftImpact: impact,
      viewport,
      scrollJumpRequest: null,
      forceShouldAnimate: null
    };
    return result;
  }
  if (action3.type === "COLLECTION_STARTING") {
    if (state.phase === "COLLECTING" || state.phase === "DROP_PENDING") {
      return state;
    }
    !(state.phase === "DRAGGING") ? true ? invariant2(false, "Collection cannot start from phase " + state.phase) : invariant2(false) : void 0;
    var _result = _extends({
      phase: "COLLECTING"
    }, state, {
      phase: "COLLECTING"
    });
    return _result;
  }
  if (action3.type === "PUBLISH_WHILE_DRAGGING") {
    !(state.phase === "COLLECTING" || state.phase === "DROP_PENDING") ? true ? invariant2(false, "Unexpected " + action3.type + " received in phase " + state.phase) : invariant2(false) : void 0;
    return publishWhileDraggingInVirtual({
      state,
      published: action3.payload
    });
  }
  if (action3.type === "MOVE") {
    if (state.phase === "DROP_PENDING") {
      return state;
    }
    !isMovementAllowed(state) ? true ? invariant2(false, action3.type + " not permitted in phase " + state.phase) : invariant2(false) : void 0;
    var _clientSelection = action3.payload.client;
    if (isEqual2(_clientSelection, state.current.client.selection)) {
      return state;
    }
    return update3({
      state,
      clientSelection: _clientSelection,
      impact: isSnapping(state) ? state.impact : null
    });
  }
  if (action3.type === "UPDATE_DROPPABLE_SCROLL") {
    if (state.phase === "DROP_PENDING") {
      return removeScrollJumpRequest(state);
    }
    if (state.phase === "COLLECTING") {
      return removeScrollJumpRequest(state);
    }
    !isMovementAllowed(state) ? true ? invariant2(false, action3.type + " not permitted in phase " + state.phase) : invariant2(false) : void 0;
    var _action$payload2 = action3.payload, id3 = _action$payload2.id, newScroll = _action$payload2.newScroll;
    var target = state.dimensions.droppables[id3];
    if (!target) {
      return state;
    }
    var scrolled = scrollDroppable(target, newScroll);
    return postDroppableChange(state, scrolled, false);
  }
  if (action3.type === "UPDATE_DROPPABLE_IS_ENABLED") {
    if (state.phase === "DROP_PENDING") {
      return state;
    }
    !isMovementAllowed(state) ? true ? invariant2(false, "Attempting to move in an unsupported phase " + state.phase) : invariant2(false) : void 0;
    var _action$payload3 = action3.payload, _id = _action$payload3.id, isEnabled = _action$payload3.isEnabled;
    var _target = state.dimensions.droppables[_id];
    !_target ? true ? invariant2(false, "Cannot find Droppable[id: " + _id + "] to toggle its enabled state") : invariant2(false) : void 0;
    !(_target.isEnabled !== isEnabled) ? true ? invariant2(false, "Trying to set droppable isEnabled to " + String(isEnabled) + "\n      but it is already " + String(_target.isEnabled)) : invariant2(false) : void 0;
    var updated = _extends({}, _target, {
      isEnabled
    });
    return postDroppableChange(state, updated, true);
  }
  if (action3.type === "UPDATE_DROPPABLE_IS_COMBINE_ENABLED") {
    if (state.phase === "DROP_PENDING") {
      return state;
    }
    !isMovementAllowed(state) ? true ? invariant2(false, "Attempting to move in an unsupported phase " + state.phase) : invariant2(false) : void 0;
    var _action$payload4 = action3.payload, _id2 = _action$payload4.id, isCombineEnabled = _action$payload4.isCombineEnabled;
    var _target2 = state.dimensions.droppables[_id2];
    !_target2 ? true ? invariant2(false, "Cannot find Droppable[id: " + _id2 + "] to toggle its isCombineEnabled state") : invariant2(false) : void 0;
    !(_target2.isCombineEnabled !== isCombineEnabled) ? true ? invariant2(false, "Trying to set droppable isCombineEnabled to " + String(isCombineEnabled) + "\n      but it is already " + String(_target2.isCombineEnabled)) : invariant2(false) : void 0;
    var _updated = _extends({}, _target2, {
      isCombineEnabled
    });
    return postDroppableChange(state, _updated, true);
  }
  if (action3.type === "MOVE_BY_WINDOW_SCROLL") {
    if (state.phase === "DROP_PENDING" || state.phase === "DROP_ANIMATING") {
      return state;
    }
    !isMovementAllowed(state) ? true ? invariant2(false, "Cannot move by window in phase " + state.phase) : invariant2(false) : void 0;
    !state.isWindowScrollAllowed ? true ? invariant2(false, "Window scrolling is currently not supported for fixed lists") : invariant2(false) : void 0;
    var _newScroll = action3.payload.newScroll;
    if (isEqual2(state.viewport.scroll.current, _newScroll)) {
      return removeScrollJumpRequest(state);
    }
    var _viewport = scrollViewport(state.viewport, _newScroll);
    if (isSnapping(state)) {
      return refreshSnap({
        state,
        viewport: _viewport
      });
    }
    return update3({
      state,
      viewport: _viewport
    });
  }
  if (action3.type === "UPDATE_VIEWPORT_MAX_SCROLL") {
    if (!isMovementAllowed(state)) {
      return state;
    }
    var maxScroll = action3.payload.maxScroll;
    if (isEqual2(maxScroll, state.viewport.scroll.max)) {
      return state;
    }
    var withMaxScroll3 = _extends({}, state.viewport, {
      scroll: _extends({}, state.viewport.scroll, {
        max: maxScroll
      })
    });
    return _extends({
      phase: "DRAGGING"
    }, state, {
      viewport: withMaxScroll3
    });
  }
  if (action3.type === "MOVE_UP" || action3.type === "MOVE_DOWN" || action3.type === "MOVE_LEFT" || action3.type === "MOVE_RIGHT") {
    if (state.phase === "COLLECTING" || state.phase === "DROP_PENDING") {
      return state;
    }
    !(state.phase === "DRAGGING") ? true ? invariant2(false, action3.type + " received while not in DRAGGING phase") : invariant2(false) : void 0;
    var _result2 = moveInDirection({
      state,
      type: action3.type
    });
    if (!_result2) {
      return state;
    }
    return update3({
      state,
      impact: _result2.impact,
      clientSelection: _result2.clientSelection,
      scrollJumpRequest: _result2.scrollJumpRequest
    });
  }
  if (action3.type === "DROP_PENDING") {
    var reason = action3.payload.reason;
    !(state.phase === "COLLECTING") ? true ? invariant2(false, "Can only move into the DROP_PENDING phase from the COLLECTING phase") : invariant2(false) : void 0;
    var newState = _extends({
      phase: "DROP_PENDING"
    }, state, {
      phase: "DROP_PENDING",
      isWaiting: true,
      reason
    });
    return newState;
  }
  if (action3.type === "DROP_ANIMATE") {
    var _action$payload5 = action3.payload, completed = _action$payload5.completed, dropDuration = _action$payload5.dropDuration, newHomeClientOffset = _action$payload5.newHomeClientOffset;
    !(state.phase === "DRAGGING" || state.phase === "DROP_PENDING") ? true ? invariant2(false, "Cannot animate drop from phase " + state.phase) : invariant2(false) : void 0;
    var _result3 = {
      phase: "DROP_ANIMATING",
      completed,
      dropDuration,
      newHomeClientOffset,
      dimensions: state.dimensions
    };
    return _result3;
  }
  if (action3.type === "DROP_COMPLETE") {
    var _completed = action3.payload.completed;
    return {
      phase: "IDLE",
      completed: _completed,
      shouldFlush: false
    };
  }
  return state;
};
var beforeInitialCapture = function beforeInitialCapture2(args) {
  return {
    type: "BEFORE_INITIAL_CAPTURE",
    payload: args
  };
};
var lift = function lift2(args) {
  return {
    type: "LIFT",
    payload: args
  };
};
var initialPublish = function initialPublish2(args) {
  return {
    type: "INITIAL_PUBLISH",
    payload: args
  };
};
var publishWhileDragging = function publishWhileDragging2(args) {
  return {
    type: "PUBLISH_WHILE_DRAGGING",
    payload: args
  };
};
var collectionStarting = function collectionStarting2() {
  return {
    type: "COLLECTION_STARTING",
    payload: null
  };
};
var updateDroppableScroll = function updateDroppableScroll2(args) {
  return {
    type: "UPDATE_DROPPABLE_SCROLL",
    payload: args
  };
};
var updateDroppableIsEnabled = function updateDroppableIsEnabled2(args) {
  return {
    type: "UPDATE_DROPPABLE_IS_ENABLED",
    payload: args
  };
};
var updateDroppableIsCombineEnabled = function updateDroppableIsCombineEnabled2(args) {
  return {
    type: "UPDATE_DROPPABLE_IS_COMBINE_ENABLED",
    payload: args
  };
};
var move = function move2(args) {
  return {
    type: "MOVE",
    payload: args
  };
};
var moveByWindowScroll = function moveByWindowScroll2(args) {
  return {
    type: "MOVE_BY_WINDOW_SCROLL",
    payload: args
  };
};
var updateViewportMaxScroll = function updateViewportMaxScroll2(args) {
  return {
    type: "UPDATE_VIEWPORT_MAX_SCROLL",
    payload: args
  };
};
var moveUp = function moveUp2() {
  return {
    type: "MOVE_UP",
    payload: null
  };
};
var moveDown = function moveDown2() {
  return {
    type: "MOVE_DOWN",
    payload: null
  };
};
var moveRight = function moveRight2() {
  return {
    type: "MOVE_RIGHT",
    payload: null
  };
};
var moveLeft = function moveLeft2() {
  return {
    type: "MOVE_LEFT",
    payload: null
  };
};
var flush = function flush2() {
  return {
    type: "FLUSH",
    payload: null
  };
};
var animateDrop = function animateDrop2(args) {
  return {
    type: "DROP_ANIMATE",
    payload: args
  };
};
var completeDrop = function completeDrop2(args) {
  return {
    type: "DROP_COMPLETE",
    payload: args
  };
};
var drop = function drop2(args) {
  return {
    type: "DROP",
    payload: args
  };
};
var dropPending = function dropPending2(args) {
  return {
    type: "DROP_PENDING",
    payload: args
  };
};
var dropAnimationFinished = function dropAnimationFinished2() {
  return {
    type: "DROP_ANIMATION_FINISHED",
    payload: null
  };
};
function checkIndexes(insideDestination) {
  if (insideDestination.length <= 1) {
    return;
  }
  var indexes = insideDestination.map(function(d2) {
    return d2.descriptor.index;
  });
  var errors = {};
  for (var i2 = 1; i2 < indexes.length; i2++) {
    var current = indexes[i2];
    var previous = indexes[i2 - 1];
    if (current !== previous + 1) {
      errors[current] = true;
    }
  }
  if (!Object.keys(errors).length) {
    return;
  }
  var formatted = indexes.map(function(index4) {
    var hasError = Boolean(errors[index4]);
    return hasError ? "[\u{1F525}" + index4 + "]" : "" + index4;
  }).join(", ");
  true ? warning7("\n    Detected non-consecutive <Draggable /> indexes.\n\n    (This can cause unexpected bugs)\n\n    " + formatted + "\n  ") : void 0;
}
function validateDimensions(critical, dimensions) {
  if (true) {
    var insideDestination = getDraggablesInsideDroppable(critical.droppable.id, dimensions.draggables);
    checkIndexes(insideDestination);
  }
}
var lift$1 = function(marshal) {
  return function(_ref6) {
    var getState = _ref6.getState, dispatch = _ref6.dispatch;
    return function(next) {
      return function(action3) {
        if (action3.type !== "LIFT") {
          next(action3);
          return;
        }
        var _action$payload = action3.payload, id3 = _action$payload.id, clientSelection = _action$payload.clientSelection, movementMode = _action$payload.movementMode;
        var initial = getState();
        if (initial.phase === "DROP_ANIMATING") {
          dispatch(completeDrop({
            completed: initial.completed
          }));
        }
        !(getState().phase === "IDLE") ? true ? invariant2(false, "Unexpected phase to start a drag") : invariant2(false) : void 0;
        dispatch(flush());
        dispatch(beforeInitialCapture({
          draggableId: id3,
          movementMode
        }));
        var scrollOptions = {
          shouldPublishImmediately: movementMode === "SNAP"
        };
        var request = {
          draggableId: id3,
          scrollOptions
        };
        var _marshal$startPublish = marshal.startPublishing(request), critical = _marshal$startPublish.critical, dimensions = _marshal$startPublish.dimensions, viewport = _marshal$startPublish.viewport;
        validateDimensions(critical, dimensions);
        dispatch(initialPublish({
          critical,
          dimensions,
          clientSelection,
          movementMode,
          viewport
        }));
      };
    };
  };
};
var style2 = function(marshal) {
  return function() {
    return function(next) {
      return function(action3) {
        if (action3.type === "INITIAL_PUBLISH") {
          marshal.dragging();
        }
        if (action3.type === "DROP_ANIMATE") {
          marshal.dropping(action3.payload.completed.result.reason);
        }
        if (action3.type === "FLUSH" || action3.type === "DROP_COMPLETE") {
          marshal.resting();
        }
        next(action3);
      };
    };
  };
};
var curves = {
  outOfTheWay: "cubic-bezier(0.2, 0, 0, 1)",
  drop: "cubic-bezier(.2,1,.1,1)"
};
var combine = {
  opacity: {
    drop: 0,
    combining: 0.7
  },
  scale: {
    drop: 0.75
  }
};
var timings = {
  outOfTheWay: 0.2,
  minDropTime: 0.33,
  maxDropTime: 0.55
};
var outOfTheWayTiming = timings.outOfTheWay + "s " + curves.outOfTheWay;
var transitions = {
  fluid: "opacity " + outOfTheWayTiming,
  snap: "transform " + outOfTheWayTiming + ", opacity " + outOfTheWayTiming,
  drop: function drop3(duration5) {
    var timing = duration5 + "s " + curves.drop;
    return "transform " + timing + ", opacity " + timing;
  },
  outOfTheWay: "transform " + outOfTheWayTiming,
  placeholder: "height " + outOfTheWayTiming + ", width " + outOfTheWayTiming + ", margin " + outOfTheWayTiming
};
var moveTo = function moveTo2(offset7) {
  return isEqual2(offset7, origin) ? null : "translate(" + offset7.x + "px, " + offset7.y + "px)";
};
var transforms = {
  moveTo,
  drop: function drop4(offset7, isCombining) {
    var translate = moveTo(offset7);
    if (!translate) {
      return null;
    }
    if (!isCombining) {
      return translate;
    }
    return translate + " scale(" + combine.scale.drop + ")";
  }
};
var minDropTime = timings.minDropTime;
var maxDropTime = timings.maxDropTime;
var dropTimeRange = maxDropTime - minDropTime;
var maxDropTimeAtDistance = 1500;
var cancelDropModifier = 0.6;
var getDropDuration = function(_ref6) {
  var current = _ref6.current, destination = _ref6.destination, reason = _ref6.reason;
  var distance$1 = distance(current, destination);
  if (distance$1 <= 0) {
    return minDropTime;
  }
  if (distance$1 >= maxDropTimeAtDistance) {
    return maxDropTime;
  }
  var percentage = distance$1 / maxDropTimeAtDistance;
  var duration5 = minDropTime + dropTimeRange * percentage;
  var withDuration = reason === "CANCEL" ? duration5 * cancelDropModifier : duration5;
  return Number(withDuration.toFixed(2));
};
var getNewHomeClientOffset = function(_ref6) {
  var impact = _ref6.impact, draggable2 = _ref6.draggable, dimensions = _ref6.dimensions, viewport = _ref6.viewport, afterCritical = _ref6.afterCritical;
  var draggables = dimensions.draggables, droppables = dimensions.droppables;
  var droppableId = whatIsDraggedOver(impact);
  var destination = droppableId ? droppables[droppableId] : null;
  var home2 = droppables[draggable2.descriptor.droppableId];
  var newClientCenter = getClientBorderBoxCenter({
    impact,
    draggable: draggable2,
    draggables,
    afterCritical,
    droppable: destination || home2,
    viewport
  });
  var offset7 = subtract(newClientCenter, draggable2.client.borderBox.center);
  return offset7;
};
var getDropImpact = function(_ref6) {
  var draggables = _ref6.draggables, reason = _ref6.reason, lastImpact = _ref6.lastImpact, home2 = _ref6.home, viewport = _ref6.viewport, onLiftImpact = _ref6.onLiftImpact;
  if (!lastImpact.at || reason !== "DROP") {
    var recomputedHomeImpact = recompute({
      draggables,
      impact: onLiftImpact,
      destination: home2,
      viewport,
      forceShouldAnimate: true
    });
    return {
      impact: recomputedHomeImpact,
      didDropInsideDroppable: false
    };
  }
  if (lastImpact.at.type === "REORDER") {
    return {
      impact: lastImpact,
      didDropInsideDroppable: true
    };
  }
  var withoutMovement = _extends({}, lastImpact, {
    displaced: emptyGroups
  });
  return {
    impact: withoutMovement,
    didDropInsideDroppable: true
  };
};
var drop$1 = function(_ref6) {
  var getState = _ref6.getState, dispatch = _ref6.dispatch;
  return function(next) {
    return function(action3) {
      if (action3.type !== "DROP") {
        next(action3);
        return;
      }
      var state = getState();
      var reason = action3.payload.reason;
      if (state.phase === "COLLECTING") {
        dispatch(dropPending({
          reason
        }));
        return;
      }
      if (state.phase === "IDLE") {
        return;
      }
      var isWaitingForDrop = state.phase === "DROP_PENDING" && state.isWaiting;
      !!isWaitingForDrop ? true ? invariant2(false, "A DROP action occurred while DROP_PENDING and still waiting") : invariant2(false) : void 0;
      !(state.phase === "DRAGGING" || state.phase === "DROP_PENDING") ? true ? invariant2(false, "Cannot drop in phase: " + state.phase) : invariant2(false) : void 0;
      var critical = state.critical;
      var dimensions = state.dimensions;
      var draggable2 = dimensions.draggables[state.critical.draggable.id];
      var _getDropImpact = getDropImpact({
        reason,
        lastImpact: state.impact,
        afterCritical: state.afterCritical,
        onLiftImpact: state.onLiftImpact,
        home: state.dimensions.droppables[state.critical.droppable.id],
        viewport: state.viewport,
        draggables: state.dimensions.draggables
      }), impact = _getDropImpact.impact, didDropInsideDroppable = _getDropImpact.didDropInsideDroppable;
      var destination = didDropInsideDroppable ? tryGetDestination(impact) : null;
      var combine2 = didDropInsideDroppable ? tryGetCombine(impact) : null;
      var source = {
        index: critical.draggable.index,
        droppableId: critical.droppable.id
      };
      var result = {
        draggableId: draggable2.descriptor.id,
        type: draggable2.descriptor.type,
        source,
        reason,
        mode: state.movementMode,
        destination,
        combine: combine2
      };
      var newHomeClientOffset = getNewHomeClientOffset({
        impact,
        draggable: draggable2,
        dimensions,
        viewport: state.viewport,
        afterCritical: state.afterCritical
      });
      var completed = {
        critical: state.critical,
        afterCritical: state.afterCritical,
        result,
        impact
      };
      var isAnimationRequired = !isEqual2(state.current.client.offset, newHomeClientOffset) || Boolean(result.combine);
      if (!isAnimationRequired) {
        dispatch(completeDrop({
          completed
        }));
        return;
      }
      var dropDuration = getDropDuration({
        current: state.current.client.offset,
        destination: newHomeClientOffset,
        reason
      });
      var args = {
        newHomeClientOffset,
        dropDuration,
        completed
      };
      dispatch(animateDrop(args));
    };
  };
};
var getWindowScroll3 = function() {
  return {
    x: window.pageXOffset,
    y: window.pageYOffset
  };
};
function getWindowScrollBinding(update4) {
  return {
    eventName: "scroll",
    options: {
      passive: true,
      capture: false
    },
    fn: function fn(event) {
      if (event.target !== window && event.target !== window.document) {
        return;
      }
      update4();
    }
  };
}
function getScrollListener(_ref6) {
  var onWindowScroll = _ref6.onWindowScroll;
  function updateScroll() {
    onWindowScroll(getWindowScroll3());
  }
  var scheduled = raf_schd_esm_default(updateScroll);
  var binding = getWindowScrollBinding(scheduled);
  var unbind = noop2;
  function isActive() {
    return unbind !== noop2;
  }
  function start3() {
    !!isActive() ? true ? invariant2(false, "Cannot start scroll listener when already active") : invariant2(false) : void 0;
    unbind = bindEvents(window, [binding]);
  }
  function stop() {
    !isActive() ? true ? invariant2(false, "Cannot stop scroll listener when not active") : invariant2(false) : void 0;
    scheduled.cancel();
    unbind();
    unbind = noop2;
  }
  return {
    start: start3,
    stop,
    isActive
  };
}
var shouldEnd = function shouldEnd2(action3) {
  return action3.type === "DROP_COMPLETE" || action3.type === "DROP_ANIMATE" || action3.type === "FLUSH";
};
var scrollListener = function(store) {
  var listener = getScrollListener({
    onWindowScroll: function onWindowScroll(newScroll) {
      store.dispatch(moveByWindowScroll({
        newScroll
      }));
    }
  });
  return function(next) {
    return function(action3) {
      if (!listener.isActive() && action3.type === "INITIAL_PUBLISH") {
        listener.start();
      }
      if (listener.isActive() && shouldEnd(action3)) {
        listener.stop();
      }
      next(action3);
    };
  };
};
var getExpiringAnnounce = function(announce) {
  var wasCalled = false;
  var isExpired = false;
  var timeoutId = setTimeout(function() {
    isExpired = true;
  });
  var result = function result2(message) {
    if (wasCalled) {
      true ? warning7("Announcement already made. Not making a second announcement") : void 0;
      return;
    }
    if (isExpired) {
      true ? warning7("\n        Announcements cannot be made asynchronously.\n        Default message has already been announced.\n      ") : void 0;
      return;
    }
    wasCalled = true;
    announce(message);
    clearTimeout(timeoutId);
  };
  result.wasCalled = function() {
    return wasCalled;
  };
  return result;
};
var getAsyncMarshal = function() {
  var entries = [];
  var execute3 = function execute4(timerId) {
    var index4 = findIndex2(entries, function(item) {
      return item.timerId === timerId;
    });
    !(index4 !== -1) ? true ? invariant2(false, "Could not find timer") : invariant2(false) : void 0;
    var _entries$splice = entries.splice(index4, 1), entry = _entries$splice[0];
    entry.callback();
  };
  var add3 = function add4(fn) {
    var timerId = setTimeout(function() {
      return execute3(timerId);
    });
    var entry = {
      timerId,
      callback: fn
    };
    entries.push(entry);
  };
  var flush3 = function flush4() {
    if (!entries.length) {
      return;
    }
    var shallow = [].concat(entries);
    entries.length = 0;
    shallow.forEach(function(entry) {
      clearTimeout(entry.timerId);
      entry.callback();
    });
  };
  return {
    add: add3,
    flush: flush3
  };
};
var areLocationsEqual = function areLocationsEqual2(first, second) {
  if (first == null && second == null) {
    return true;
  }
  if (first == null || second == null) {
    return false;
  }
  return first.droppableId === second.droppableId && first.index === second.index;
};
var isCombineEqual = function isCombineEqual2(first, second) {
  if (first == null && second == null) {
    return true;
  }
  if (first == null || second == null) {
    return false;
  }
  return first.draggableId === second.draggableId && first.droppableId === second.droppableId;
};
var isCriticalEqual = function isCriticalEqual2(first, second) {
  if (first === second) {
    return true;
  }
  var isDraggableEqual = first.draggable.id === second.draggable.id && first.draggable.droppableId === second.draggable.droppableId && first.draggable.type === second.draggable.type && first.draggable.index === second.draggable.index;
  var isDroppableEqual = first.droppable.id === second.droppable.id && first.droppable.type === second.droppable.type;
  return isDraggableEqual && isDroppableEqual;
};
var withTimings = function withTimings2(key, fn) {
  start();
  fn();
  finish();
};
var getDragStart = function getDragStart2(critical, mode) {
  return {
    draggableId: critical.draggable.id,
    type: critical.droppable.type,
    source: {
      droppableId: critical.droppable.id,
      index: critical.draggable.index
    },
    mode
  };
};
var execute = function execute2(responder, data, announce, getDefaultMessage) {
  if (!responder) {
    announce(getDefaultMessage(data));
    return;
  }
  var willExpire = getExpiringAnnounce(announce);
  var provided = {
    announce: willExpire
  };
  responder(data, provided);
  if (!willExpire.wasCalled()) {
    announce(getDefaultMessage(data));
  }
};
var getPublisher = function(getResponders, announce) {
  var asyncMarshal = getAsyncMarshal();
  var dragging = null;
  var beforeCapture = function beforeCapture2(draggableId, mode) {
    !!dragging ? true ? invariant2(false, "Cannot fire onBeforeCapture as a drag start has already been published") : invariant2(false) : void 0;
    withTimings("onBeforeCapture", function() {
      var fn = getResponders().onBeforeCapture;
      if (fn) {
        var before = {
          draggableId,
          mode
        };
        fn(before);
      }
    });
  };
  var beforeStart = function beforeStart2(critical, mode) {
    !!dragging ? true ? invariant2(false, "Cannot fire onBeforeDragStart as a drag start has already been published") : invariant2(false) : void 0;
    withTimings("onBeforeDragStart", function() {
      var fn = getResponders().onBeforeDragStart;
      if (fn) {
        fn(getDragStart(critical, mode));
      }
    });
  };
  var start3 = function start4(critical, mode) {
    !!dragging ? true ? invariant2(false, "Cannot fire onBeforeDragStart as a drag start has already been published") : invariant2(false) : void 0;
    var data = getDragStart(critical, mode);
    dragging = {
      mode,
      lastCritical: critical,
      lastLocation: data.source,
      lastCombine: null
    };
    asyncMarshal.add(function() {
      withTimings("onDragStart", function() {
        return execute(getResponders().onDragStart, data, announce, preset.onDragStart);
      });
    });
  };
  var update4 = function update5(critical, impact) {
    var location = tryGetDestination(impact);
    var combine2 = tryGetCombine(impact);
    !dragging ? true ? invariant2(false, "Cannot fire onDragMove when onDragStart has not been called") : invariant2(false) : void 0;
    var hasCriticalChanged = !isCriticalEqual(critical, dragging.lastCritical);
    if (hasCriticalChanged) {
      dragging.lastCritical = critical;
    }
    var hasLocationChanged = !areLocationsEqual(dragging.lastLocation, location);
    if (hasLocationChanged) {
      dragging.lastLocation = location;
    }
    var hasGroupingChanged = !isCombineEqual(dragging.lastCombine, combine2);
    if (hasGroupingChanged) {
      dragging.lastCombine = combine2;
    }
    if (!hasCriticalChanged && !hasLocationChanged && !hasGroupingChanged) {
      return;
    }
    var data = _extends({}, getDragStart(critical, dragging.mode), {
      combine: combine2,
      destination: location
    });
    asyncMarshal.add(function() {
      withTimings("onDragUpdate", function() {
        return execute(getResponders().onDragUpdate, data, announce, preset.onDragUpdate);
      });
    });
  };
  var flush3 = function flush4() {
    !dragging ? true ? invariant2(false, "Can only flush responders while dragging") : invariant2(false) : void 0;
    asyncMarshal.flush();
  };
  var drop5 = function drop6(result) {
    !dragging ? true ? invariant2(false, "Cannot fire onDragEnd when there is no matching onDragStart") : invariant2(false) : void 0;
    dragging = null;
    withTimings("onDragEnd", function() {
      return execute(getResponders().onDragEnd, result, announce, preset.onDragEnd);
    });
  };
  var abort = function abort2() {
    if (!dragging) {
      return;
    }
    var result = _extends({}, getDragStart(dragging.lastCritical, dragging.mode), {
      combine: null,
      destination: null,
      reason: "CANCEL"
    });
    drop5(result);
  };
  return {
    beforeCapture,
    beforeStart,
    start: start3,
    update: update4,
    flush: flush3,
    drop: drop5,
    abort
  };
};
var responders = function(getResponders, announce) {
  var publisher = getPublisher(getResponders, announce);
  return function(store) {
    return function(next) {
      return function(action3) {
        if (action3.type === "BEFORE_INITIAL_CAPTURE") {
          publisher.beforeCapture(action3.payload.draggableId, action3.payload.movementMode);
          return;
        }
        if (action3.type === "INITIAL_PUBLISH") {
          var critical = action3.payload.critical;
          publisher.beforeStart(critical, action3.payload.movementMode);
          next(action3);
          publisher.start(critical, action3.payload.movementMode);
          return;
        }
        if (action3.type === "DROP_COMPLETE") {
          var result = action3.payload.completed.result;
          publisher.flush();
          next(action3);
          publisher.drop(result);
          return;
        }
        next(action3);
        if (action3.type === "FLUSH") {
          publisher.abort();
          return;
        }
        var state = store.getState();
        if (state.phase === "DRAGGING") {
          publisher.update(state.critical, state.impact);
        }
      };
    };
  };
};
var dropAnimationFinish = function(store) {
  return function(next) {
    return function(action3) {
      if (action3.type !== "DROP_ANIMATION_FINISHED") {
        next(action3);
        return;
      }
      var state = store.getState();
      !(state.phase === "DROP_ANIMATING") ? true ? invariant2(false, "Cannot finish a drop animating when no drop is occurring") : invariant2(false) : void 0;
      store.dispatch(completeDrop({
        completed: state.completed
      }));
    };
  };
};
var dropAnimationFlushOnScroll = function(store) {
  var unbind = null;
  var frameId = null;
  function clear() {
    if (frameId) {
      cancelAnimationFrame(frameId);
      frameId = null;
    }
    if (unbind) {
      unbind();
      unbind = null;
    }
  }
  return function(next) {
    return function(action3) {
      if (action3.type === "FLUSH" || action3.type === "DROP_COMPLETE" || action3.type === "DROP_ANIMATION_FINISHED") {
        clear();
      }
      next(action3);
      if (action3.type !== "DROP_ANIMATE") {
        return;
      }
      var binding = {
        eventName: "scroll",
        options: {
          capture: true,
          passive: false,
          once: true
        },
        fn: function flushDropAnimation() {
          var state = store.getState();
          if (state.phase === "DROP_ANIMATING") {
            store.dispatch(dropAnimationFinished());
          }
        }
      };
      frameId = requestAnimationFrame(function() {
        frameId = null;
        unbind = bindEvents(window, [binding]);
      });
    };
  };
};
var dimensionMarshalStopper = function(marshal) {
  return function() {
    return function(next) {
      return function(action3) {
        if (action3.type === "DROP_COMPLETE" || action3.type === "FLUSH" || action3.type === "DROP_ANIMATE") {
          marshal.stopPublishing();
        }
        next(action3);
      };
    };
  };
};
var focus = function(marshal) {
  var isWatching = false;
  return function() {
    return function(next) {
      return function(action3) {
        if (action3.type === "INITIAL_PUBLISH") {
          isWatching = true;
          marshal.tryRecordFocus(action3.payload.critical.draggable.id);
          next(action3);
          marshal.tryRestoreFocusRecorded();
          return;
        }
        next(action3);
        if (!isWatching) {
          return;
        }
        if (action3.type === "FLUSH") {
          isWatching = false;
          marshal.tryRestoreFocusRecorded();
          return;
        }
        if (action3.type === "DROP_COMPLETE") {
          isWatching = false;
          var result = action3.payload.completed.result;
          if (result.combine) {
            marshal.tryShiftRecord(result.draggableId, result.combine.draggableId);
          }
          marshal.tryRestoreFocusRecorded();
        }
      };
    };
  };
};
var shouldStop = function shouldStop2(action3) {
  return action3.type === "DROP_COMPLETE" || action3.type === "DROP_ANIMATE" || action3.type === "FLUSH";
};
var autoScroll = function(autoScroller) {
  return function(store) {
    return function(next) {
      return function(action3) {
        if (shouldStop(action3)) {
          autoScroller.stop();
          next(action3);
          return;
        }
        if (action3.type === "INITIAL_PUBLISH") {
          next(action3);
          var state = store.getState();
          !(state.phase === "DRAGGING") ? true ? invariant2(false, "Expected phase to be DRAGGING after INITIAL_PUBLISH") : invariant2(false) : void 0;
          autoScroller.start(state);
          return;
        }
        next(action3);
        autoScroller.scroll(store.getState());
      };
    };
  };
};
var pendingDrop = function(store) {
  return function(next) {
    return function(action3) {
      next(action3);
      if (action3.type !== "PUBLISH_WHILE_DRAGGING") {
        return;
      }
      var postActionState = store.getState();
      if (postActionState.phase !== "DROP_PENDING") {
        return;
      }
      if (postActionState.isWaiting) {
        return;
      }
      store.dispatch(drop({
        reason: postActionState.reason
      }));
    };
  };
};
var composeEnhancers = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({
  name: "react-beautiful-dnd"
}) : compose2;
var createStore2 = function(_ref6) {
  var dimensionMarshal = _ref6.dimensionMarshal, focusMarshal = _ref6.focusMarshal, styleMarshal = _ref6.styleMarshal, getResponders = _ref6.getResponders, announce = _ref6.announce, autoScroller = _ref6.autoScroller;
  return createStore(reducer, composeEnhancers(applyMiddleware(style2(styleMarshal), dimensionMarshalStopper(dimensionMarshal), lift$1(dimensionMarshal), drop$1, dropAnimationFinish, dropAnimationFlushOnScroll, pendingDrop, autoScroll(autoScroller), scrollListener, focus(focusMarshal), responders(getResponders, announce))));
};
var clean$1 = function clean3() {
  return {
    additions: {},
    removals: {},
    modified: {}
  };
};
function createPublisher(_ref6) {
  var registry = _ref6.registry, callbacks = _ref6.callbacks;
  var staging = clean$1();
  var frameId = null;
  var collect = function collect2() {
    if (frameId) {
      return;
    }
    callbacks.collectionStarting();
    frameId = requestAnimationFrame(function() {
      frameId = null;
      start();
      var _staging = staging, additions = _staging.additions, removals = _staging.removals, modified = _staging.modified;
      var added = Object.keys(additions).map(function(id3) {
        return registry.draggable.getById(id3).getDimension(origin);
      }).sort(function(a2, b2) {
        return a2.descriptor.index - b2.descriptor.index;
      });
      var updated = Object.keys(modified).map(function(id3) {
        var entry = registry.droppable.getById(id3);
        var scroll3 = entry.callbacks.getScrollWhileDragging();
        return {
          droppableId: id3,
          scroll: scroll3
        };
      });
      var result = {
        additions: added,
        removals: Object.keys(removals),
        modified: updated
      };
      staging = clean$1();
      finish();
      callbacks.publish(result);
    });
  };
  var add3 = function add4(entry) {
    var id3 = entry.descriptor.id;
    staging.additions[id3] = entry;
    staging.modified[entry.descriptor.droppableId] = true;
    if (staging.removals[id3]) {
      delete staging.removals[id3];
    }
    collect();
  };
  var remove2 = function remove3(entry) {
    var descriptor = entry.descriptor;
    staging.removals[descriptor.id] = true;
    staging.modified[descriptor.droppableId] = true;
    if (staging.additions[descriptor.id]) {
      delete staging.additions[descriptor.id];
    }
    collect();
  };
  var stop = function stop2() {
    if (!frameId) {
      return;
    }
    cancelAnimationFrame(frameId);
    frameId = null;
    staging = clean$1();
  };
  return {
    add: add3,
    remove: remove2,
    stop
  };
}
var getMaxScroll = function(_ref6) {
  var scrollHeight = _ref6.scrollHeight, scrollWidth = _ref6.scrollWidth, height2 = _ref6.height, width2 = _ref6.width;
  var maxScroll = subtract({
    x: scrollWidth,
    y: scrollHeight
  }, {
    x: width2,
    y: height2
  });
  var adjustedMaxScroll = {
    x: Math.max(0, maxScroll.x),
    y: Math.max(0, maxScroll.y)
  };
  return adjustedMaxScroll;
};
var getDocumentElement = function() {
  var doc = document.documentElement;
  !doc ? true ? invariant2(false, "Cannot find document.documentElement") : invariant2(false) : void 0;
  return doc;
};
var getMaxWindowScroll = function() {
  var doc = getDocumentElement();
  var maxScroll = getMaxScroll({
    scrollHeight: doc.scrollHeight,
    scrollWidth: doc.scrollWidth,
    width: doc.clientWidth,
    height: doc.clientHeight
  });
  return maxScroll;
};
var getViewport = function() {
  var scroll3 = getWindowScroll3();
  var maxScroll = getMaxWindowScroll();
  var top2 = scroll3.y;
  var left2 = scroll3.x;
  var doc = getDocumentElement();
  var width2 = doc.clientWidth;
  var height2 = doc.clientHeight;
  var right2 = left2 + width2;
  var bottom2 = top2 + height2;
  var frame = getRect({
    top: top2,
    left: left2,
    right: right2,
    bottom: bottom2
  });
  var viewport = {
    frame,
    scroll: {
      initial: scroll3,
      current: scroll3,
      max: maxScroll,
      diff: {
        value: origin,
        displacement: origin
      }
    }
  };
  return viewport;
};
var getInitialPublish = function(_ref6) {
  var critical = _ref6.critical, scrollOptions = _ref6.scrollOptions, registry = _ref6.registry;
  start();
  var viewport = getViewport();
  var windowScroll = viewport.scroll.current;
  var home2 = critical.droppable;
  var droppables = registry.droppable.getAllByType(home2.type).map(function(entry) {
    return entry.callbacks.getDimensionAndWatchScroll(windowScroll, scrollOptions);
  });
  var draggables = registry.draggable.getAllByType(critical.draggable.type).map(function(entry) {
    return entry.getDimension(windowScroll);
  });
  var dimensions = {
    draggables: toDraggableMap(draggables),
    droppables: toDroppableMap(droppables)
  };
  finish();
  var result = {
    dimensions,
    critical,
    viewport
  };
  return result;
};
function shouldPublishUpdate(registry, dragging, entry) {
  if (entry.descriptor.id === dragging.id) {
    return false;
  }
  if (entry.descriptor.type !== dragging.type) {
    return false;
  }
  var home2 = registry.droppable.getById(entry.descriptor.droppableId);
  if (home2.descriptor.mode !== "virtual") {
    true ? warning7("\n      You are attempting to add or remove a Draggable [id: " + entry.descriptor.id + "]\n      while a drag is occurring. This is only supported for virtual lists.\n\n      See https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/patterns/virtual-lists.md\n    ") : void 0;
    return false;
  }
  return true;
}
var createDimensionMarshal = function(registry, callbacks) {
  var collection = null;
  var publisher = createPublisher({
    callbacks: {
      publish: callbacks.publishWhileDragging,
      collectionStarting: callbacks.collectionStarting
    },
    registry
  });
  var updateDroppableIsEnabled3 = function updateDroppableIsEnabled4(id3, isEnabled) {
    !registry.droppable.exists(id3) ? true ? invariant2(false, "Cannot update is enabled flag of Droppable " + id3 + " as it is not registered") : invariant2(false) : void 0;
    if (!collection) {
      return;
    }
    callbacks.updateDroppableIsEnabled({
      id: id3,
      isEnabled
    });
  };
  var updateDroppableIsCombineEnabled3 = function updateDroppableIsCombineEnabled4(id3, isCombineEnabled) {
    if (!collection) {
      return;
    }
    !registry.droppable.exists(id3) ? true ? invariant2(false, "Cannot update isCombineEnabled flag of Droppable " + id3 + " as it is not registered") : invariant2(false) : void 0;
    callbacks.updateDroppableIsCombineEnabled({
      id: id3,
      isCombineEnabled
    });
  };
  var updateDroppableScroll3 = function updateDroppableScroll4(id3, newScroll) {
    if (!collection) {
      return;
    }
    !registry.droppable.exists(id3) ? true ? invariant2(false, "Cannot update the scroll on Droppable " + id3 + " as it is not registered") : invariant2(false) : void 0;
    callbacks.updateDroppableScroll({
      id: id3,
      newScroll
    });
  };
  var scrollDroppable2 = function scrollDroppable3(id3, change) {
    if (!collection) {
      return;
    }
    registry.droppable.getById(id3).callbacks.scroll(change);
  };
  var stopPublishing = function stopPublishing2() {
    if (!collection) {
      return;
    }
    publisher.stop();
    var home2 = collection.critical.droppable;
    registry.droppable.getAllByType(home2.type).forEach(function(entry) {
      return entry.callbacks.dragStopped();
    });
    collection.unsubscribe();
    collection = null;
  };
  var subscriber = function subscriber2(event) {
    !collection ? true ? invariant2(false, "Should only be subscribed when a collection is occurring") : invariant2(false) : void 0;
    var dragging = collection.critical.draggable;
    if (event.type === "ADDITION") {
      if (shouldPublishUpdate(registry, dragging, event.value)) {
        publisher.add(event.value);
      }
    }
    if (event.type === "REMOVAL") {
      if (shouldPublishUpdate(registry, dragging, event.value)) {
        publisher.remove(event.value);
      }
    }
  };
  var startPublishing = function startPublishing2(request) {
    !!collection ? true ? invariant2(false, "Cannot start capturing critical dimensions as there is already a collection") : invariant2(false) : void 0;
    var entry = registry.draggable.getById(request.draggableId);
    var home2 = registry.droppable.getById(entry.descriptor.droppableId);
    var critical = {
      draggable: entry.descriptor,
      droppable: home2.descriptor
    };
    var unsubscribe = registry.subscribe(subscriber);
    collection = {
      critical,
      unsubscribe
    };
    return getInitialPublish({
      critical,
      registry,
      scrollOptions: request.scrollOptions
    });
  };
  var marshal = {
    updateDroppableIsEnabled: updateDroppableIsEnabled3,
    updateDroppableIsCombineEnabled: updateDroppableIsCombineEnabled3,
    scrollDroppable: scrollDroppable2,
    updateDroppableScroll: updateDroppableScroll3,
    startPublishing,
    stopPublishing
  };
  return marshal;
};
var canStartDrag = function(state, id3) {
  if (state.phase === "IDLE") {
    return true;
  }
  if (state.phase !== "DROP_ANIMATING") {
    return false;
  }
  if (state.completed.result.draggableId === id3) {
    return false;
  }
  return state.completed.result.reason === "DROP";
};
var scrollWindow = function(change) {
  window.scrollBy(change.x, change.y);
};
var getScrollableDroppables = memoize_one_esm_default(function(droppables) {
  return toDroppableList(droppables).filter(function(droppable2) {
    if (!droppable2.isEnabled) {
      return false;
    }
    if (!droppable2.frame) {
      return false;
    }
    return true;
  });
});
var getScrollableDroppableOver = function getScrollableDroppableOver2(target, droppables) {
  var maybe = find2(getScrollableDroppables(droppables), function(droppable2) {
    !droppable2.frame ? true ? invariant2(false, "Invalid result") : invariant2(false) : void 0;
    return isPositionInFrame(droppable2.frame.pageMarginBox)(target);
  });
  return maybe;
};
var getBestScrollableDroppable = function(_ref6) {
  var center = _ref6.center, destination = _ref6.destination, droppables = _ref6.droppables;
  if (destination) {
    var _dimension = droppables[destination];
    if (!_dimension.frame) {
      return null;
    }
    return _dimension;
  }
  var dimension = getScrollableDroppableOver(center, droppables);
  return dimension;
};
var config = {
  startFromPercentage: 0.25,
  maxScrollAtPercentage: 0.05,
  maxPixelScroll: 28,
  ease: function ease(percentage) {
    return Math.pow(percentage, 2);
  },
  durationDampening: {
    stopDampeningAt: 1200,
    accelerateAt: 360
  }
};
var getDistanceThresholds = function(container, axis) {
  var startScrollingFrom = container[axis.size] * config.startFromPercentage;
  var maxScrollValueAt = container[axis.size] * config.maxScrollAtPercentage;
  var thresholds = {
    startScrollingFrom,
    maxScrollValueAt
  };
  return thresholds;
};
var getPercentage = function(_ref6) {
  var startOfRange = _ref6.startOfRange, endOfRange = _ref6.endOfRange, current = _ref6.current;
  var range = endOfRange - startOfRange;
  if (range === 0) {
    true ? warning7("\n      Detected distance range of 0 in the fluid auto scroller\n      This is unexpected and would cause a divide by 0 issue.\n      Not allowing an auto scroll\n    ") : void 0;
    return 0;
  }
  var currentInRange = current - startOfRange;
  var percentage = currentInRange / range;
  return percentage;
};
var minScroll = 1;
var getValueFromDistance = function(distanceToEdge, thresholds) {
  if (distanceToEdge > thresholds.startScrollingFrom) {
    return 0;
  }
  if (distanceToEdge <= thresholds.maxScrollValueAt) {
    return config.maxPixelScroll;
  }
  if (distanceToEdge === thresholds.startScrollingFrom) {
    return minScroll;
  }
  var percentageFromMaxScrollValueAt = getPercentage({
    startOfRange: thresholds.maxScrollValueAt,
    endOfRange: thresholds.startScrollingFrom,
    current: distanceToEdge
  });
  var percentageFromStartScrollingFrom = 1 - percentageFromMaxScrollValueAt;
  var scroll3 = config.maxPixelScroll * config.ease(percentageFromStartScrollingFrom);
  return Math.ceil(scroll3);
};
var accelerateAt = config.durationDampening.accelerateAt;
var stopAt = config.durationDampening.stopDampeningAt;
var dampenValueByTime = function(proposedScroll, dragStartTime) {
  var startOfRange = dragStartTime;
  var endOfRange = stopAt;
  var now2 = Date.now();
  var runTime = now2 - startOfRange;
  if (runTime >= stopAt) {
    return proposedScroll;
  }
  if (runTime < accelerateAt) {
    return minScroll;
  }
  var betweenAccelerateAtAndStopAtPercentage = getPercentage({
    startOfRange: accelerateAt,
    endOfRange,
    current: runTime
  });
  var scroll3 = proposedScroll * config.ease(betweenAccelerateAtAndStopAtPercentage);
  return Math.ceil(scroll3);
};
var getValue2 = function(_ref6) {
  var distanceToEdge = _ref6.distanceToEdge, thresholds = _ref6.thresholds, dragStartTime = _ref6.dragStartTime, shouldUseTimeDampening = _ref6.shouldUseTimeDampening;
  var scroll3 = getValueFromDistance(distanceToEdge, thresholds);
  if (scroll3 === 0) {
    return 0;
  }
  if (!shouldUseTimeDampening) {
    return scroll3;
  }
  return Math.max(dampenValueByTime(scroll3, dragStartTime), minScroll);
};
var getScrollOnAxis = function(_ref6) {
  var container = _ref6.container, distanceToEdges = _ref6.distanceToEdges, dragStartTime = _ref6.dragStartTime, axis = _ref6.axis, shouldUseTimeDampening = _ref6.shouldUseTimeDampening;
  var thresholds = getDistanceThresholds(container, axis);
  var isCloserToEnd = distanceToEdges[axis.end] < distanceToEdges[axis.start];
  if (isCloserToEnd) {
    return getValue2({
      distanceToEdge: distanceToEdges[axis.end],
      thresholds,
      dragStartTime,
      shouldUseTimeDampening
    });
  }
  return -1 * getValue2({
    distanceToEdge: distanceToEdges[axis.start],
    thresholds,
    dragStartTime,
    shouldUseTimeDampening
  });
};
var adjustForSizeLimits = function(_ref6) {
  var container = _ref6.container, subject = _ref6.subject, proposedScroll = _ref6.proposedScroll;
  var isTooBigVertically = subject.height > container.height;
  var isTooBigHorizontally = subject.width > container.width;
  if (!isTooBigHorizontally && !isTooBigVertically) {
    return proposedScroll;
  }
  if (isTooBigHorizontally && isTooBigVertically) {
    return null;
  }
  return {
    x: isTooBigHorizontally ? 0 : proposedScroll.x,
    y: isTooBigVertically ? 0 : proposedScroll.y
  };
};
var clean$2 = apply(function(value) {
  return value === 0 ? 0 : value;
});
var getScroll2 = function(_ref6) {
  var dragStartTime = _ref6.dragStartTime, container = _ref6.container, subject = _ref6.subject, center = _ref6.center, shouldUseTimeDampening = _ref6.shouldUseTimeDampening;
  var distanceToEdges = {
    top: center.y - container.top,
    right: container.right - center.x,
    bottom: container.bottom - center.y,
    left: center.x - container.left
  };
  var y2 = getScrollOnAxis({
    container,
    distanceToEdges,
    dragStartTime,
    axis: vertical,
    shouldUseTimeDampening
  });
  var x2 = getScrollOnAxis({
    container,
    distanceToEdges,
    dragStartTime,
    axis: horizontal,
    shouldUseTimeDampening
  });
  var required2 = clean$2({
    x: x2,
    y: y2
  });
  if (isEqual2(required2, origin)) {
    return null;
  }
  var limited = adjustForSizeLimits({
    container,
    subject,
    proposedScroll: required2
  });
  if (!limited) {
    return null;
  }
  return isEqual2(limited, origin) ? null : limited;
};
var smallestSigned = apply(function(value) {
  if (value === 0) {
    return 0;
  }
  return value > 0 ? 1 : -1;
});
var getOverlap = function() {
  var getRemainder = function getRemainder2(target, max2) {
    if (target < 0) {
      return target;
    }
    if (target > max2) {
      return target - max2;
    }
    return 0;
  };
  return function(_ref6) {
    var current = _ref6.current, max2 = _ref6.max, change = _ref6.change;
    var targetScroll = add(current, change);
    var overlap = {
      x: getRemainder(targetScroll.x, max2.x),
      y: getRemainder(targetScroll.y, max2.y)
    };
    if (isEqual2(overlap, origin)) {
      return null;
    }
    return overlap;
  };
}();
var canPartiallyScroll = function canPartiallyScroll2(_ref23) {
  var rawMax = _ref23.max, current = _ref23.current, change = _ref23.change;
  var max2 = {
    x: Math.max(current.x, rawMax.x),
    y: Math.max(current.y, rawMax.y)
  };
  var smallestChange = smallestSigned(change);
  var overlap = getOverlap({
    max: max2,
    current,
    change: smallestChange
  });
  if (!overlap) {
    return true;
  }
  if (smallestChange.x !== 0 && overlap.x === 0) {
    return true;
  }
  if (smallestChange.y !== 0 && overlap.y === 0) {
    return true;
  }
  return false;
};
var canScrollWindow = function canScrollWindow2(viewport, change) {
  return canPartiallyScroll({
    current: viewport.scroll.current,
    max: viewport.scroll.max,
    change
  });
};
var getWindowOverlap = function getWindowOverlap2(viewport, change) {
  if (!canScrollWindow(viewport, change)) {
    return null;
  }
  var max2 = viewport.scroll.max;
  var current = viewport.scroll.current;
  return getOverlap({
    current,
    max: max2,
    change
  });
};
var canScrollDroppable = function canScrollDroppable2(droppable2, change) {
  var frame = droppable2.frame;
  if (!frame) {
    return false;
  }
  return canPartiallyScroll({
    current: frame.scroll.current,
    max: frame.scroll.max,
    change
  });
};
var getDroppableOverlap = function getDroppableOverlap2(droppable2, change) {
  var frame = droppable2.frame;
  if (!frame) {
    return null;
  }
  if (!canScrollDroppable(droppable2, change)) {
    return null;
  }
  return getOverlap({
    current: frame.scroll.current,
    max: frame.scroll.max,
    change
  });
};
var getWindowScrollChange = function(_ref6) {
  var viewport = _ref6.viewport, subject = _ref6.subject, center = _ref6.center, dragStartTime = _ref6.dragStartTime, shouldUseTimeDampening = _ref6.shouldUseTimeDampening;
  var scroll3 = getScroll2({
    dragStartTime,
    container: viewport.frame,
    subject,
    center,
    shouldUseTimeDampening
  });
  return scroll3 && canScrollWindow(viewport, scroll3) ? scroll3 : null;
};
var getDroppableScrollChange = function(_ref6) {
  var droppable2 = _ref6.droppable, subject = _ref6.subject, center = _ref6.center, dragStartTime = _ref6.dragStartTime, shouldUseTimeDampening = _ref6.shouldUseTimeDampening;
  var frame = droppable2.frame;
  if (!frame) {
    return null;
  }
  var scroll3 = getScroll2({
    dragStartTime,
    container: frame.pageMarginBox,
    subject,
    center,
    shouldUseTimeDampening
  });
  return scroll3 && canScrollDroppable(droppable2, scroll3) ? scroll3 : null;
};
var scroll$1 = function(_ref6) {
  var state = _ref6.state, dragStartTime = _ref6.dragStartTime, shouldUseTimeDampening = _ref6.shouldUseTimeDampening, scrollWindow2 = _ref6.scrollWindow, scrollDroppable2 = _ref6.scrollDroppable;
  var center = state.current.page.borderBoxCenter;
  var draggable2 = state.dimensions.draggables[state.critical.draggable.id];
  var subject = draggable2.page.marginBox;
  if (state.isWindowScrollAllowed) {
    var viewport = state.viewport;
    var _change = getWindowScrollChange({
      dragStartTime,
      viewport,
      subject,
      center,
      shouldUseTimeDampening
    });
    if (_change) {
      scrollWindow2(_change);
      return;
    }
  }
  var droppable2 = getBestScrollableDroppable({
    center,
    destination: whatIsDraggedOver(state.impact),
    droppables: state.dimensions.droppables
  });
  if (!droppable2) {
    return;
  }
  var change = getDroppableScrollChange({
    dragStartTime,
    droppable: droppable2,
    subject,
    center,
    shouldUseTimeDampening
  });
  if (change) {
    scrollDroppable2(droppable2.descriptor.id, change);
  }
};
var createFluidScroller = function(_ref6) {
  var scrollWindow2 = _ref6.scrollWindow, scrollDroppable2 = _ref6.scrollDroppable;
  var scheduleWindowScroll = raf_schd_esm_default(scrollWindow2);
  var scheduleDroppableScroll = raf_schd_esm_default(scrollDroppable2);
  var dragging = null;
  var tryScroll = function tryScroll2(state) {
    !dragging ? true ? invariant2(false, "Cannot fluid scroll if not dragging") : invariant2(false) : void 0;
    var _dragging = dragging, shouldUseTimeDampening = _dragging.shouldUseTimeDampening, dragStartTime = _dragging.dragStartTime;
    scroll$1({
      state,
      scrollWindow: scheduleWindowScroll,
      scrollDroppable: scheduleDroppableScroll,
      dragStartTime,
      shouldUseTimeDampening
    });
  };
  var start$1 = function start$12(state) {
    start();
    !!dragging ? true ? invariant2(false, "Cannot start auto scrolling when already started") : invariant2(false) : void 0;
    var dragStartTime = Date.now();
    var wasScrollNeeded = false;
    var fakeScrollCallback = function fakeScrollCallback2() {
      wasScrollNeeded = true;
    };
    scroll$1({
      state,
      dragStartTime: 0,
      shouldUseTimeDampening: false,
      scrollWindow: fakeScrollCallback,
      scrollDroppable: fakeScrollCallback
    });
    dragging = {
      dragStartTime,
      shouldUseTimeDampening: wasScrollNeeded
    };
    finish();
    if (wasScrollNeeded) {
      tryScroll(state);
    }
  };
  var stop = function stop2() {
    if (!dragging) {
      return;
    }
    scheduleWindowScroll.cancel();
    scheduleDroppableScroll.cancel();
    dragging = null;
  };
  return {
    start: start$1,
    stop,
    scroll: tryScroll
  };
};
var createJumpScroller = function(_ref6) {
  var move3 = _ref6.move, scrollDroppable2 = _ref6.scrollDroppable, scrollWindow2 = _ref6.scrollWindow;
  var moveByOffset = function moveByOffset2(state, offset7) {
    var client = add(state.current.client.selection, offset7);
    move3({
      client
    });
  };
  var scrollDroppableAsMuchAsItCan = function scrollDroppableAsMuchAsItCan2(droppable2, change) {
    if (!canScrollDroppable(droppable2, change)) {
      return change;
    }
    var overlap = getDroppableOverlap(droppable2, change);
    if (!overlap) {
      scrollDroppable2(droppable2.descriptor.id, change);
      return null;
    }
    var whatTheDroppableCanScroll = subtract(change, overlap);
    scrollDroppable2(droppable2.descriptor.id, whatTheDroppableCanScroll);
    var remainder = subtract(change, whatTheDroppableCanScroll);
    return remainder;
  };
  var scrollWindowAsMuchAsItCan = function scrollWindowAsMuchAsItCan2(isWindowScrollAllowed, viewport, change) {
    if (!isWindowScrollAllowed) {
      return change;
    }
    if (!canScrollWindow(viewport, change)) {
      return change;
    }
    var overlap = getWindowOverlap(viewport, change);
    if (!overlap) {
      scrollWindow2(change);
      return null;
    }
    var whatTheWindowCanScroll = subtract(change, overlap);
    scrollWindow2(whatTheWindowCanScroll);
    var remainder = subtract(change, whatTheWindowCanScroll);
    return remainder;
  };
  var jumpScroller = function jumpScroller2(state) {
    var request = state.scrollJumpRequest;
    if (!request) {
      return;
    }
    var destination = whatIsDraggedOver(state.impact);
    !destination ? true ? invariant2(false, "Cannot perform a jump scroll when there is no destination") : invariant2(false) : void 0;
    var droppableRemainder = scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination], request);
    if (!droppableRemainder) {
      return;
    }
    var viewport = state.viewport;
    var windowRemainder = scrollWindowAsMuchAsItCan(state.isWindowScrollAllowed, viewport, droppableRemainder);
    if (!windowRemainder) {
      return;
    }
    moveByOffset(state, windowRemainder);
  };
  return jumpScroller;
};
var createAutoScroller = function(_ref6) {
  var scrollDroppable2 = _ref6.scrollDroppable, scrollWindow2 = _ref6.scrollWindow, move3 = _ref6.move;
  var fluidScroller = createFluidScroller({
    scrollWindow: scrollWindow2,
    scrollDroppable: scrollDroppable2
  });
  var jumpScroll = createJumpScroller({
    move: move3,
    scrollWindow: scrollWindow2,
    scrollDroppable: scrollDroppable2
  });
  var scroll3 = function scroll4(state) {
    if (state.phase !== "DRAGGING") {
      return;
    }
    if (state.movementMode === "FLUID") {
      fluidScroller.scroll(state);
      return;
    }
    if (!state.scrollJumpRequest) {
      return;
    }
    jumpScroll(state);
  };
  var scroller = {
    scroll: scroll3,
    start: fluidScroller.start,
    stop: fluidScroller.stop
  };
  return scroller;
};
var prefix$1 = "data-rbd";
var dragHandle = function() {
  var base = prefix$1 + "-drag-handle";
  return {
    base,
    draggableId: base + "-draggable-id",
    contextId: base + "-context-id"
  };
}();
var draggable = function() {
  var base = prefix$1 + "-draggable";
  return {
    base,
    contextId: base + "-context-id",
    id: base + "-id"
  };
}();
var droppable = function() {
  var base = prefix$1 + "-droppable";
  return {
    base,
    contextId: base + "-context-id",
    id: base + "-id"
  };
}();
var scrollContainer = {
  contextId: prefix$1 + "-scroll-container-context-id"
};
var makeGetSelector = function makeGetSelector2(context) {
  return function(attribute) {
    return "[" + attribute + '="' + context + '"]';
  };
};
var getStyles = function getStyles2(rules, property) {
  return rules.map(function(rule) {
    var value = rule.styles[property];
    if (!value) {
      return "";
    }
    return rule.selector + " { " + value + " }";
  }).join(" ");
};
var noPointerEvents = "pointer-events: none;";
var getStyles$1 = function(contextId) {
  var getSelector2 = makeGetSelector(contextId);
  var dragHandle$1 = function() {
    var grabCursor = "\n      cursor: -webkit-grab;\n      cursor: grab;\n    ";
    return {
      selector: getSelector2(dragHandle.contextId),
      styles: {
        always: "\n          -webkit-touch-callout: none;\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n          touch-action: manipulation;\n        ",
        resting: grabCursor,
        dragging: noPointerEvents,
        dropAnimating: grabCursor
      }
    };
  }();
  var draggable$1 = function() {
    var transition3 = "\n      transition: " + transitions.outOfTheWay + ";\n    ";
    return {
      selector: getSelector2(draggable.contextId),
      styles: {
        dragging: transition3,
        dropAnimating: transition3,
        userCancel: transition3
      }
    };
  }();
  var droppable$1 = {
    selector: getSelector2(droppable.contextId),
    styles: {
      always: "overflow-anchor: none;"
    }
  };
  var body = {
    selector: "body",
    styles: {
      dragging: "\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        overflow-anchor: none;\n      "
    }
  };
  var rules = [draggable$1, dragHandle$1, droppable$1, body];
  return {
    always: getStyles(rules, "always"),
    resting: getStyles(rules, "resting"),
    dragging: getStyles(rules, "dragging"),
    dropAnimating: getStyles(rules, "dropAnimating"),
    userCancel: getStyles(rules, "userCancel")
  };
};
var useIsomorphicLayoutEffect2 = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined" ? useLayoutEffect18 : useEffect51;
var getHead2 = function getHead3() {
  var head = document.querySelector("head");
  !head ? true ? invariant2(false, "Cannot find the head to append a style to") : invariant2(false) : void 0;
  return head;
};
var createStyleEl = function createStyleEl2(nonce) {
  var el2 = document.createElement("style");
  if (nonce) {
    el2.setAttribute("nonce", nonce);
  }
  el2.type = "text/css";
  return el2;
};
function useStyleMarshal(contextId, nonce) {
  var styles158 = useMemo45(function() {
    return getStyles$1(contextId);
  }, [contextId]);
  var alwaysRef = useRef70(null);
  var dynamicRef = useRef70(null);
  var setDynamicStyle = useCallback26(memoize_one_esm_default(function(proposed) {
    var el2 = dynamicRef.current;
    !el2 ? true ? invariant2(false, "Cannot set dynamic style element if it is not set") : invariant2(false) : void 0;
    el2.textContent = proposed;
  }), []);
  var setAlwaysStyle = useCallback26(function(proposed) {
    var el2 = alwaysRef.current;
    !el2 ? true ? invariant2(false, "Cannot set dynamic style element if it is not set") : invariant2(false) : void 0;
    el2.textContent = proposed;
  }, []);
  useIsomorphicLayoutEffect2(function() {
    !(!alwaysRef.current && !dynamicRef.current) ? true ? invariant2(false, "style elements already mounted") : invariant2(false) : void 0;
    var always2 = createStyleEl(nonce);
    var dynamic = createStyleEl(nonce);
    alwaysRef.current = always2;
    dynamicRef.current = dynamic;
    always2.setAttribute(prefix$1 + "-always", contextId);
    dynamic.setAttribute(prefix$1 + "-dynamic", contextId);
    getHead2().appendChild(always2);
    getHead2().appendChild(dynamic);
    setAlwaysStyle(styles158.always);
    setDynamicStyle(styles158.resting);
    return function() {
      var remove2 = function remove3(ref2) {
        var current = ref2.current;
        !current ? true ? invariant2(false, "Cannot unmount ref as it is not set") : invariant2(false) : void 0;
        getHead2().removeChild(current);
        ref2.current = null;
      };
      remove2(alwaysRef);
      remove2(dynamicRef);
    };
  }, [nonce, setAlwaysStyle, setDynamicStyle, styles158.always, styles158.resting, contextId]);
  var dragging = useCallback26(function() {
    return setDynamicStyle(styles158.dragging);
  }, [setDynamicStyle, styles158.dragging]);
  var dropping = useCallback26(function(reason) {
    if (reason === "DROP") {
      setDynamicStyle(styles158.dropAnimating);
      return;
    }
    setDynamicStyle(styles158.userCancel);
  }, [setDynamicStyle, styles158.dropAnimating, styles158.userCancel]);
  var resting = useCallback26(function() {
    if (!dynamicRef.current) {
      return;
    }
    setDynamicStyle(styles158.resting);
  }, [setDynamicStyle, styles158.resting]);
  var marshal = useMemo45(function() {
    return {
      dragging,
      dropping,
      resting
    };
  }, [dragging, dropping, resting]);
  return marshal;
}
var getWindowFromEl = function(el2) {
  return el2 && el2.ownerDocument ? el2.ownerDocument.defaultView : window;
};
function isHtmlElement(el2) {
  return el2 instanceof getWindowFromEl(el2).HTMLElement;
}
function findDragHandle(contextId, draggableId) {
  var selector = "[" + dragHandle.contextId + '="' + contextId + '"]';
  var possible = toArray(document.querySelectorAll(selector));
  if (!possible.length) {
    true ? warning7('Unable to find any drag handles in the context "' + contextId + '"') : void 0;
    return null;
  }
  var handle = find2(possible, function(el2) {
    return el2.getAttribute(dragHandle.draggableId) === draggableId;
  });
  if (!handle) {
    true ? warning7('Unable to find drag handle with id "' + draggableId + '" as no handle with a matching id was found') : void 0;
    return null;
  }
  if (!isHtmlElement(handle)) {
    true ? warning7("drag handle needs to be a HTMLElement") : void 0;
    return null;
  }
  return handle;
}
function useFocusMarshal(contextId) {
  var entriesRef = useRef70({});
  var recordRef = useRef70(null);
  var restoreFocusFrameRef = useRef70(null);
  var isMountedRef = useRef70(false);
  var register = useCallback26(function register2(id3, focus2) {
    var entry = {
      id: id3,
      focus: focus2
    };
    entriesRef.current[id3] = entry;
    return function unregister() {
      var entries = entriesRef.current;
      var current = entries[id3];
      if (current !== entry) {
        delete entries[id3];
      }
    };
  }, []);
  var tryGiveFocus = useCallback26(function tryGiveFocus2(tryGiveFocusTo) {
    var handle = findDragHandle(contextId, tryGiveFocusTo);
    if (handle && handle !== document.activeElement) {
      handle.focus();
    }
  }, [contextId]);
  var tryShiftRecord = useCallback26(function tryShiftRecord2(previous, redirectTo) {
    if (recordRef.current === previous) {
      recordRef.current = redirectTo;
    }
  }, []);
  var tryRestoreFocusRecorded = useCallback26(function tryRestoreFocusRecorded2() {
    if (restoreFocusFrameRef.current) {
      return;
    }
    if (!isMountedRef.current) {
      return;
    }
    restoreFocusFrameRef.current = requestAnimationFrame(function() {
      restoreFocusFrameRef.current = null;
      var record = recordRef.current;
      if (record) {
        tryGiveFocus(record);
      }
    });
  }, [tryGiveFocus]);
  var tryRecordFocus = useCallback26(function tryRecordFocus2(id3) {
    recordRef.current = null;
    var focused = document.activeElement;
    if (!focused) {
      return;
    }
    if (focused.getAttribute(dragHandle.draggableId) !== id3) {
      return;
    }
    recordRef.current = id3;
  }, []);
  useIsomorphicLayoutEffect2(function() {
    isMountedRef.current = true;
    return function clearFrameOnUnmount() {
      isMountedRef.current = false;
      var frameId = restoreFocusFrameRef.current;
      if (frameId) {
        cancelAnimationFrame(frameId);
      }
    };
  }, []);
  var marshal = useMemo45(function() {
    return {
      register,
      tryRecordFocus,
      tryRestoreFocusRecorded,
      tryShiftRecord
    };
  }, [register, tryRecordFocus, tryRestoreFocusRecorded, tryShiftRecord]);
  return marshal;
}
function createRegistry() {
  var entries = {
    draggables: {},
    droppables: {}
  };
  var subscribers = [];
  function subscribe2(cb) {
    subscribers.push(cb);
    return function unsubscribe() {
      var index4 = subscribers.indexOf(cb);
      if (index4 === -1) {
        return;
      }
      subscribers.splice(index4, 1);
    };
  }
  function notify2(event) {
    if (subscribers.length) {
      subscribers.forEach(function(cb) {
        return cb(event);
      });
    }
  }
  function findDraggableById(id3) {
    return entries.draggables[id3] || null;
  }
  function getDraggableById(id3) {
    var entry = findDraggableById(id3);
    !entry ? true ? invariant2(false, "Cannot find draggable entry with id [" + id3 + "]") : invariant2(false) : void 0;
    return entry;
  }
  var draggableAPI = {
    register: function register(entry) {
      entries.draggables[entry.descriptor.id] = entry;
      notify2({
        type: "ADDITION",
        value: entry
      });
    },
    update: function update4(entry, last2) {
      var current = entries.draggables[last2.descriptor.id];
      if (!current) {
        return;
      }
      if (current.uniqueId !== entry.uniqueId) {
        return;
      }
      delete entries.draggables[last2.descriptor.id];
      entries.draggables[entry.descriptor.id] = entry;
    },
    unregister: function unregister(entry) {
      var draggableId = entry.descriptor.id;
      var current = findDraggableById(draggableId);
      if (!current) {
        return;
      }
      if (entry.uniqueId !== current.uniqueId) {
        return;
      }
      delete entries.draggables[draggableId];
      notify2({
        type: "REMOVAL",
        value: entry
      });
    },
    getById: getDraggableById,
    findById: findDraggableById,
    exists: function exists(id3) {
      return Boolean(findDraggableById(id3));
    },
    getAllByType: function getAllByType(type3) {
      return values4(entries.draggables).filter(function(entry) {
        return entry.descriptor.type === type3;
      });
    }
  };
  function findDroppableById(id3) {
    return entries.droppables[id3] || null;
  }
  function getDroppableById(id3) {
    var entry = findDroppableById(id3);
    !entry ? true ? invariant2(false, "Cannot find droppable entry with id [" + id3 + "]") : invariant2(false) : void 0;
    return entry;
  }
  var droppableAPI = {
    register: function register(entry) {
      entries.droppables[entry.descriptor.id] = entry;
    },
    unregister: function unregister(entry) {
      var current = findDroppableById(entry.descriptor.id);
      if (!current) {
        return;
      }
      if (entry.uniqueId !== current.uniqueId) {
        return;
      }
      delete entries.droppables[entry.descriptor.id];
    },
    getById: getDroppableById,
    findById: findDroppableById,
    exists: function exists(id3) {
      return Boolean(findDroppableById(id3));
    },
    getAllByType: function getAllByType(type3) {
      return values4(entries.droppables).filter(function(entry) {
        return entry.descriptor.type === type3;
      });
    }
  };
  function clean4() {
    entries.draggables = {};
    entries.droppables = {};
    subscribers.length = 0;
  }
  return {
    draggable: draggableAPI,
    droppable: droppableAPI,
    subscribe: subscribe2,
    clean: clean4
  };
}
function useRegistry() {
  var registry = useMemo45(createRegistry, []);
  useEffect51(function() {
    return function unmount() {
      requestAnimationFrame(registry.clean);
    };
  }, [registry]);
  return registry;
}
var StoreContext = React632.createContext(null);
var getBodyElement = function() {
  var body = document.body;
  !body ? true ? invariant2(false, "Cannot find document.body") : invariant2(false) : void 0;
  return body;
};
var visuallyHidden = {
  position: "absolute",
  width: "1px",
  height: "1px",
  margin: "-1px",
  border: "0",
  padding: "0",
  overflow: "hidden",
  clip: "rect(0 0 0 0)",
  "clip-path": "inset(100%)"
};
var getId = function getId2(contextId) {
  return "rbd-announcement-" + contextId;
};
function useAnnouncer2(contextId) {
  var id3 = useMemo45(function() {
    return getId(contextId);
  }, [contextId]);
  var ref2 = useRef70(null);
  useEffect51(function setup() {
    var el2 = document.createElement("div");
    ref2.current = el2;
    el2.id = id3;
    el2.setAttribute("aria-live", "assertive");
    el2.setAttribute("aria-atomic", "true");
    _extends(el2.style, visuallyHidden);
    getBodyElement().appendChild(el2);
    return function cleanup() {
      setTimeout(function remove2() {
        var body = getBodyElement();
        if (body.contains(el2)) {
          body.removeChild(el2);
        }
        if (el2 === ref2.current) {
          ref2.current = null;
        }
      });
    };
  }, [id3]);
  var announce = useCallback26(function(message) {
    var el2 = ref2.current;
    if (el2) {
      el2.textContent = message;
      return;
    }
    true ? warning7('\n      A screen reader message was trying to be announced but it was unable to do so.\n      This can occur if you unmount your <DragDropContext /> in your onDragEnd.\n      Consider calling provided.announce() before the unmount so that the instruction will\n      not be lost for users relying on a screen reader.\n\n      Message not passed to screen reader:\n\n      "' + message + '"\n    ') : void 0;
  }, []);
  return announce;
}
var count = 0;
var defaults = {
  separator: "::"
};
function useUniqueId(prefix4, options) {
  if (options === void 0) {
    options = defaults;
  }
  return useMemo45(function() {
    return "" + prefix4 + options.separator + count++;
  }, [options.separator, prefix4]);
}
function getElementId(_ref6) {
  var contextId = _ref6.contextId, uniqueId4 = _ref6.uniqueId;
  return "rbd-hidden-text-" + contextId + "-" + uniqueId4;
}
function useHiddenTextElement(_ref23) {
  var contextId = _ref23.contextId, text = _ref23.text;
  var uniqueId4 = useUniqueId("hidden-text", {
    separator: "-"
  });
  var id3 = useMemo45(function() {
    return getElementId({
      contextId,
      uniqueId: uniqueId4
    });
  }, [uniqueId4, contextId]);
  useEffect51(function mount() {
    var el2 = document.createElement("div");
    el2.id = id3;
    el2.textContent = text;
    el2.style.display = "none";
    getBodyElement().appendChild(el2);
    return function unmount() {
      var body = getBodyElement();
      if (body.contains(el2)) {
        body.removeChild(el2);
      }
    };
  }, [id3, text]);
  return id3;
}
var AppContext = React632.createContext(null);
var peerDependencies = {
  react: "^16.8.5 || ^17.0.0",
  "react-dom": "^16.8.5 || ^17.0.0"
};
var semver = /(\d+)\.(\d+)\.(\d+)/;
var getVersion = function getVersion2(value) {
  var result = semver.exec(value);
  !(result != null) ? true ? invariant2(false, "Unable to parse React version " + value) : invariant2(false) : void 0;
  var major = Number(result[1]);
  var minor = Number(result[2]);
  var patch3 = Number(result[3]);
  return {
    major,
    minor,
    patch: patch3,
    raw: value
  };
};
var isSatisfied = function isSatisfied2(expected, actual) {
  if (actual.major > expected.major) {
    return true;
  }
  if (actual.major < expected.major) {
    return false;
  }
  if (actual.minor > expected.minor) {
    return true;
  }
  if (actual.minor < expected.minor) {
    return false;
  }
  return actual.patch >= expected.patch;
};
var checkReactVersion = function(peerDepValue, actualValue) {
  var peerDep = getVersion(peerDepValue);
  var actual = getVersion(actualValue);
  if (isSatisfied(peerDep, actual)) {
    return;
  }
  true ? warning7("\n    React version: [" + actual.raw + "]\n    does not satisfy expected peer dependency version: [" + peerDep.raw + "]\n\n    This can result in run time bugs, and even fatal crashes\n  ") : void 0;
};
var suffix = "\n  We expect a html5 doctype: <!doctype html>\n  This is to ensure consistent browser layout and measurement\n\n  More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/doctype.md\n";
var checkDoctype = function(doc) {
  var doctype = doc.doctype;
  if (!doctype) {
    true ? warning7("\n      No <!doctype html> found.\n\n      " + suffix + "\n    ") : void 0;
    return;
  }
  if (doctype.name.toLowerCase() !== "html") {
    true ? warning7("\n      Unexpected <!doctype> found: (" + doctype.name + ")\n\n      " + suffix + "\n    ") : void 0;
  }
  if (doctype.publicId !== "") {
    true ? warning7("\n      Unexpected <!doctype> publicId found: (" + doctype.publicId + ")\n      A html5 doctype does not have a publicId\n\n      " + suffix + "\n    ") : void 0;
  }
};
function useDev(useHook) {
  if (true) {
    useHook();
  }
}
function useDevSetupWarning(fn, inputs) {
  useDev(function() {
    useEffect51(function() {
      try {
        fn();
      } catch (e2) {
        error3("\n          A setup problem was encountered.\n\n          > " + e2.message + "\n        ");
      }
    }, inputs);
  });
}
function useStartupValidation() {
  useDevSetupWarning(function() {
    checkReactVersion(peerDependencies.react, React632.version);
    checkDoctype(document);
  }, []);
}
function usePrevious2(current) {
  var ref2 = useRef70(current);
  useEffect51(function() {
    ref2.current = current;
  });
  return ref2;
}
function create2() {
  var lock = null;
  function isClaimed() {
    return Boolean(lock);
  }
  function isActive(value) {
    return value === lock;
  }
  function claim(abandon) {
    !!lock ? true ? invariant2(false, "Cannot claim lock as it is already claimed") : invariant2(false) : void 0;
    var newLock = {
      abandon
    };
    lock = newLock;
    return newLock;
  }
  function release() {
    !lock ? true ? invariant2(false, "Cannot release lock when there is no lock") : invariant2(false) : void 0;
    lock = null;
  }
  function tryAbandon() {
    if (lock) {
      lock.abandon();
      release();
    }
  }
  return {
    isClaimed,
    isActive,
    claim,
    release,
    tryAbandon
  };
}
var tab3 = 9;
var enter = 13;
var escape2 = 27;
var space = 32;
var pageUp = 33;
var pageDown = 34;
var end = 35;
var home = 36;
var arrowLeft = 37;
var arrowUp = 38;
var arrowRight = 39;
var arrowDown = 40;
var _preventedKeys;
var preventedKeys = (_preventedKeys = {}, _preventedKeys[enter] = true, _preventedKeys[tab3] = true, _preventedKeys);
var preventStandardKeyEvents = function(event) {
  if (preventedKeys[event.keyCode]) {
    event.preventDefault();
  }
};
var supportedEventName = function() {
  var base = "visibilitychange";
  if (typeof document === "undefined") {
    return base;
  }
  var candidates = [base, "ms" + base, "webkit" + base, "moz" + base, "o" + base];
  var supported = find2(candidates, function(eventName) {
    return "on" + eventName in document;
  });
  return supported || base;
}();
var primaryButton = 0;
var sloppyClickThreshold = 5;
function isSloppyClickThresholdExceeded(original, current) {
  return Math.abs(current.x - original.x) >= sloppyClickThreshold || Math.abs(current.y - original.y) >= sloppyClickThreshold;
}
var idle$1 = {
  type: "IDLE"
};
function getCaptureBindings(_ref6) {
  var cancel = _ref6.cancel, completed = _ref6.completed, getPhase = _ref6.getPhase, setPhase = _ref6.setPhase;
  return [{
    eventName: "mousemove",
    fn: function fn(event) {
      var button2 = event.button, clientX = event.clientX, clientY = event.clientY;
      if (button2 !== primaryButton) {
        return;
      }
      var point = {
        x: clientX,
        y: clientY
      };
      var phase = getPhase();
      if (phase.type === "DRAGGING") {
        event.preventDefault();
        phase.actions.move(point);
        return;
      }
      !(phase.type === "PENDING") ? true ? invariant2(false, "Cannot be IDLE") : invariant2(false) : void 0;
      var pending = phase.point;
      if (!isSloppyClickThresholdExceeded(pending, point)) {
        return;
      }
      event.preventDefault();
      var actions = phase.actions.fluidLift(point);
      setPhase({
        type: "DRAGGING",
        actions
      });
    }
  }, {
    eventName: "mouseup",
    fn: function fn(event) {
      var phase = getPhase();
      if (phase.type !== "DRAGGING") {
        cancel();
        return;
      }
      event.preventDefault();
      phase.actions.drop({
        shouldBlockNextClick: true
      });
      completed();
    }
  }, {
    eventName: "mousedown",
    fn: function fn(event) {
      if (getPhase().type === "DRAGGING") {
        event.preventDefault();
      }
      cancel();
    }
  }, {
    eventName: "keydown",
    fn: function fn(event) {
      var phase = getPhase();
      if (phase.type === "PENDING") {
        cancel();
        return;
      }
      if (event.keyCode === escape2) {
        event.preventDefault();
        cancel();
        return;
      }
      preventStandardKeyEvents(event);
    }
  }, {
    eventName: "resize",
    fn: cancel
  }, {
    eventName: "scroll",
    options: {
      passive: true,
      capture: false
    },
    fn: function fn() {
      if (getPhase().type === "PENDING") {
        cancel();
      }
    }
  }, {
    eventName: "webkitmouseforcedown",
    fn: function fn(event) {
      var phase = getPhase();
      !(phase.type !== "IDLE") ? true ? invariant2(false, "Unexpected phase") : invariant2(false) : void 0;
      if (phase.actions.shouldRespectForcePress()) {
        cancel();
        return;
      }
      event.preventDefault();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}
function useMouseSensor(api) {
  var phaseRef = useRef70(idle$1);
  var unbindEventsRef = useRef70(noop2);
  var startCaptureBinding = useMemo45(function() {
    return {
      eventName: "mousedown",
      fn: function onMouseDown(event) {
        if (event.defaultPrevented) {
          return;
        }
        if (event.button !== primaryButton) {
          return;
        }
        if (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {
          return;
        }
        var draggableId = api.findClosestDraggableId(event);
        if (!draggableId) {
          return;
        }
        var actions = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });
        if (!actions) {
          return;
        }
        event.preventDefault();
        var point = {
          x: event.clientX,
          y: event.clientY
        };
        unbindEventsRef.current();
        startPendingDrag(actions, point);
      }
    };
  }, [api]);
  var preventForcePressBinding = useMemo45(function() {
    return {
      eventName: "webkitmouseforcewillbegin",
      fn: function fn(event) {
        if (event.defaultPrevented) {
          return;
        }
        var id3 = api.findClosestDraggableId(event);
        if (!id3) {
          return;
        }
        var options = api.findOptionsForDraggable(id3);
        if (!options) {
          return;
        }
        if (options.shouldRespectForcePress) {
          return;
        }
        if (!api.canGetLock(id3)) {
          return;
        }
        event.preventDefault();
      }
    };
  }, [api]);
  var listenForCapture = useCallback26(function listenForCapture2() {
    var options = {
      passive: false,
      capture: true
    };
    unbindEventsRef.current = bindEvents(window, [preventForcePressBinding, startCaptureBinding], options);
  }, [preventForcePressBinding, startCaptureBinding]);
  var stop = useCallback26(function() {
    var current = phaseRef.current;
    if (current.type === "IDLE") {
      return;
    }
    phaseRef.current = idle$1;
    unbindEventsRef.current();
    listenForCapture();
  }, [listenForCapture]);
  var cancel = useCallback26(function() {
    var phase = phaseRef.current;
    stop();
    if (phase.type === "DRAGGING") {
      phase.actions.cancel({
        shouldBlockNextClick: true
      });
    }
    if (phase.type === "PENDING") {
      phase.actions.abort();
    }
  }, [stop]);
  var bindCapturingEvents = useCallback26(function bindCapturingEvents2() {
    var options = {
      capture: true,
      passive: false
    };
    var bindings = getCaptureBindings({
      cancel,
      completed: stop,
      getPhase: function getPhase() {
        return phaseRef.current;
      },
      setPhase: function setPhase(phase) {
        phaseRef.current = phase;
      }
    });
    unbindEventsRef.current = bindEvents(window, bindings, options);
  }, [cancel, stop]);
  var startPendingDrag = useCallback26(function startPendingDrag2(actions, point) {
    !(phaseRef.current.type === "IDLE") ? true ? invariant2(false, "Expected to move from IDLE to PENDING drag") : invariant2(false) : void 0;
    phaseRef.current = {
      type: "PENDING",
      point,
      actions
    };
    bindCapturingEvents();
  }, [bindCapturingEvents]);
  useIsomorphicLayoutEffect2(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
    };
  }, [listenForCapture]);
}
var _scrollJumpKeys;
function noop$1() {
}
var scrollJumpKeys = (_scrollJumpKeys = {}, _scrollJumpKeys[pageDown] = true, _scrollJumpKeys[pageUp] = true, _scrollJumpKeys[home] = true, _scrollJumpKeys[end] = true, _scrollJumpKeys);
function getDraggingBindings(actions, stop) {
  function cancel() {
    stop();
    actions.cancel();
  }
  function drop5() {
    stop();
    actions.drop();
  }
  return [{
    eventName: "keydown",
    fn: function fn(event) {
      if (event.keyCode === escape2) {
        event.preventDefault();
        cancel();
        return;
      }
      if (event.keyCode === space) {
        event.preventDefault();
        drop5();
        return;
      }
      if (event.keyCode === arrowDown) {
        event.preventDefault();
        actions.moveDown();
        return;
      }
      if (event.keyCode === arrowUp) {
        event.preventDefault();
        actions.moveUp();
        return;
      }
      if (event.keyCode === arrowRight) {
        event.preventDefault();
        actions.moveRight();
        return;
      }
      if (event.keyCode === arrowLeft) {
        event.preventDefault();
        actions.moveLeft();
        return;
      }
      if (scrollJumpKeys[event.keyCode]) {
        event.preventDefault();
        return;
      }
      preventStandardKeyEvents(event);
    }
  }, {
    eventName: "mousedown",
    fn: cancel
  }, {
    eventName: "mouseup",
    fn: cancel
  }, {
    eventName: "click",
    fn: cancel
  }, {
    eventName: "touchstart",
    fn: cancel
  }, {
    eventName: "resize",
    fn: cancel
  }, {
    eventName: "wheel",
    fn: cancel,
    options: {
      passive: true
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}
function useKeyboardSensor(api) {
  var unbindEventsRef = useRef70(noop$1);
  var startCaptureBinding = useMemo45(function() {
    return {
      eventName: "keydown",
      fn: function onKeyDown(event) {
        if (event.defaultPrevented) {
          return;
        }
        if (event.keyCode !== space) {
          return;
        }
        var draggableId = api.findClosestDraggableId(event);
        if (!draggableId) {
          return;
        }
        var preDrag = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });
        if (!preDrag) {
          return;
        }
        event.preventDefault();
        var isCapturing = true;
        var actions = preDrag.snapLift();
        unbindEventsRef.current();
        function stop() {
          !isCapturing ? true ? invariant2(false, "Cannot stop capturing a keyboard drag when not capturing") : invariant2(false) : void 0;
          isCapturing = false;
          unbindEventsRef.current();
          listenForCapture();
        }
        unbindEventsRef.current = bindEvents(window, getDraggingBindings(actions, stop), {
          capture: true,
          passive: false
        });
      }
    };
  }, [api]);
  var listenForCapture = useCallback26(function tryStartCapture() {
    var options = {
      passive: false,
      capture: true
    };
    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);
  }, [startCaptureBinding]);
  useIsomorphicLayoutEffect2(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
    };
  }, [listenForCapture]);
}
var idle$2 = {
  type: "IDLE"
};
var timeForLongPress = 120;
var forcePressThreshold = 0.15;
function getWindowBindings(_ref6) {
  var cancel = _ref6.cancel, getPhase = _ref6.getPhase;
  return [{
    eventName: "orientationchange",
    fn: cancel
  }, {
    eventName: "resize",
    fn: cancel
  }, {
    eventName: "contextmenu",
    fn: function fn(event) {
      event.preventDefault();
    }
  }, {
    eventName: "keydown",
    fn: function fn(event) {
      if (getPhase().type !== "DRAGGING") {
        cancel();
        return;
      }
      if (event.keyCode === escape2) {
        event.preventDefault();
      }
      cancel();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}
function getHandleBindings(_ref23) {
  var cancel = _ref23.cancel, completed = _ref23.completed, getPhase = _ref23.getPhase;
  return [{
    eventName: "touchmove",
    options: {
      capture: false
    },
    fn: function fn(event) {
      var phase = getPhase();
      if (phase.type !== "DRAGGING") {
        cancel();
        return;
      }
      phase.hasMoved = true;
      var _event$touches$ = event.touches[0], clientX = _event$touches$.clientX, clientY = _event$touches$.clientY;
      var point = {
        x: clientX,
        y: clientY
      };
      event.preventDefault();
      phase.actions.move(point);
    }
  }, {
    eventName: "touchend",
    fn: function fn(event) {
      var phase = getPhase();
      if (phase.type !== "DRAGGING") {
        cancel();
        return;
      }
      event.preventDefault();
      phase.actions.drop({
        shouldBlockNextClick: true
      });
      completed();
    }
  }, {
    eventName: "touchcancel",
    fn: function fn(event) {
      if (getPhase().type !== "DRAGGING") {
        cancel();
        return;
      }
      event.preventDefault();
      cancel();
    }
  }, {
    eventName: "touchforcechange",
    fn: function fn(event) {
      var phase = getPhase();
      !(phase.type !== "IDLE") ? true ? invariant2(false) : invariant2(false) : void 0;
      var touch = event.touches[0];
      if (!touch) {
        return;
      }
      var isForcePress = touch.force >= forcePressThreshold;
      if (!isForcePress) {
        return;
      }
      var shouldRespect = phase.actions.shouldRespectForcePress();
      if (phase.type === "PENDING") {
        if (shouldRespect) {
          cancel();
        }
        return;
      }
      if (shouldRespect) {
        if (phase.hasMoved) {
          event.preventDefault();
          return;
        }
        cancel();
        return;
      }
      event.preventDefault();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}
function useTouchSensor(api) {
  var phaseRef = useRef70(idle$2);
  var unbindEventsRef = useRef70(noop2);
  var getPhase = useCallback26(function getPhase2() {
    return phaseRef.current;
  }, []);
  var setPhase = useCallback26(function setPhase2(phase) {
    phaseRef.current = phase;
  }, []);
  var startCaptureBinding = useMemo45(function() {
    return {
      eventName: "touchstart",
      fn: function onTouchStart(event) {
        if (event.defaultPrevented) {
          return;
        }
        var draggableId = api.findClosestDraggableId(event);
        if (!draggableId) {
          return;
        }
        var actions = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });
        if (!actions) {
          return;
        }
        var touch = event.touches[0];
        var clientX = touch.clientX, clientY = touch.clientY;
        var point = {
          x: clientX,
          y: clientY
        };
        unbindEventsRef.current();
        startPendingDrag(actions, point);
      }
    };
  }, [api]);
  var listenForCapture = useCallback26(function listenForCapture2() {
    var options = {
      capture: true,
      passive: false
    };
    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);
  }, [startCaptureBinding]);
  var stop = useCallback26(function() {
    var current = phaseRef.current;
    if (current.type === "IDLE") {
      return;
    }
    if (current.type === "PENDING") {
      clearTimeout(current.longPressTimerId);
    }
    setPhase(idle$2);
    unbindEventsRef.current();
    listenForCapture();
  }, [listenForCapture, setPhase]);
  var cancel = useCallback26(function() {
    var phase = phaseRef.current;
    stop();
    if (phase.type === "DRAGGING") {
      phase.actions.cancel({
        shouldBlockNextClick: true
      });
    }
    if (phase.type === "PENDING") {
      phase.actions.abort();
    }
  }, [stop]);
  var bindCapturingEvents = useCallback26(function bindCapturingEvents2() {
    var options = {
      capture: true,
      passive: false
    };
    var args = {
      cancel,
      completed: stop,
      getPhase
    };
    var unbindTarget = bindEvents(window, getHandleBindings(args), options);
    var unbindWindow = bindEvents(window, getWindowBindings(args), options);
    unbindEventsRef.current = function unbindAll() {
      unbindTarget();
      unbindWindow();
    };
  }, [cancel, getPhase, stop]);
  var startDragging = useCallback26(function startDragging2() {
    var phase = getPhase();
    !(phase.type === "PENDING") ? true ? invariant2(false, "Cannot start dragging from phase " + phase.type) : invariant2(false) : void 0;
    var actions = phase.actions.fluidLift(phase.point);
    setPhase({
      type: "DRAGGING",
      actions,
      hasMoved: false
    });
  }, [getPhase, setPhase]);
  var startPendingDrag = useCallback26(function startPendingDrag2(actions, point) {
    !(getPhase().type === "IDLE") ? true ? invariant2(false, "Expected to move from IDLE to PENDING drag") : invariant2(false) : void 0;
    var longPressTimerId = setTimeout(startDragging, timeForLongPress);
    setPhase({
      type: "PENDING",
      point,
      actions,
      longPressTimerId
    });
    bindCapturingEvents();
  }, [bindCapturingEvents, getPhase, setPhase, startDragging]);
  useIsomorphicLayoutEffect2(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
      var phase = getPhase();
      if (phase.type === "PENDING") {
        clearTimeout(phase.longPressTimerId);
        setPhase(idle$2);
      }
    };
  }, [getPhase, listenForCapture, setPhase]);
  useIsomorphicLayoutEffect2(function webkitHack() {
    var unbind = bindEvents(window, [{
      eventName: "touchmove",
      fn: function fn() {
      },
      options: {
        capture: false,
        passive: false
      }
    }]);
    return unbind;
  }, []);
}
function useValidateSensorHooks(sensorHooks) {
  useDev(function() {
    var previousRef = usePrevious2(sensorHooks);
    useDevSetupWarning(function() {
      !(previousRef.current.length === sensorHooks.length) ? true ? invariant2(false, "Cannot change the amount of sensor hooks after mounting") : invariant2(false) : void 0;
    });
  });
}
var interactiveTagNames = {
  input: true,
  button: true,
  textarea: true,
  select: true,
  option: true,
  optgroup: true,
  video: true,
  audio: true
};
function isAnInteractiveElement(parent, current) {
  if (current == null) {
    return false;
  }
  var hasAnInteractiveTag = Boolean(interactiveTagNames[current.tagName.toLowerCase()]);
  if (hasAnInteractiveTag) {
    return true;
  }
  var attribute = current.getAttribute("contenteditable");
  if (attribute === "true" || attribute === "") {
    return true;
  }
  if (current === parent) {
    return false;
  }
  return isAnInteractiveElement(parent, current.parentElement);
}
function isEventInInteractiveElement(draggable2, event) {
  var target = event.target;
  if (!isHtmlElement(target)) {
    return false;
  }
  return isAnInteractiveElement(draggable2, target);
}
var getBorderBoxCenterPosition = function(el2) {
  return getRect(el2.getBoundingClientRect()).center;
};
function isElement(el2) {
  return el2 instanceof getWindowFromEl(el2).Element;
}
var supportedMatchesName = function() {
  var base = "matches";
  if (typeof document === "undefined") {
    return base;
  }
  var candidates = [base, "msMatchesSelector", "webkitMatchesSelector"];
  var value = find2(candidates, function(name) {
    return name in Element.prototype;
  });
  return value || base;
}();
function closestPonyfill(el2, selector) {
  if (el2 == null) {
    return null;
  }
  if (el2[supportedMatchesName](selector)) {
    return el2;
  }
  return closestPonyfill(el2.parentElement, selector);
}
function closest$1(el2, selector) {
  if (el2.closest) {
    return el2.closest(selector);
  }
  return closestPonyfill(el2, selector);
}
function getSelector(contextId) {
  return "[" + dragHandle.contextId + '="' + contextId + '"]';
}
function findClosestDragHandleFromEvent(contextId, event) {
  var target = event.target;
  if (!isElement(target)) {
    true ? warning7("event.target must be a Element") : void 0;
    return null;
  }
  var selector = getSelector(contextId);
  var handle = closest$1(target, selector);
  if (!handle) {
    return null;
  }
  if (!isHtmlElement(handle)) {
    true ? warning7("drag handle must be a HTMLElement") : void 0;
    return null;
  }
  return handle;
}
function tryGetClosestDraggableIdFromEvent(contextId, event) {
  var handle = findClosestDragHandleFromEvent(contextId, event);
  if (!handle) {
    return null;
  }
  return handle.getAttribute(dragHandle.draggableId);
}
function findDraggable(contextId, draggableId) {
  var selector = "[" + draggable.contextId + '="' + contextId + '"]';
  var possible = toArray(document.querySelectorAll(selector));
  var draggable$1 = find2(possible, function(el2) {
    return el2.getAttribute(draggable.id) === draggableId;
  });
  if (!draggable$1) {
    return null;
  }
  if (!isHtmlElement(draggable$1)) {
    true ? warning7("Draggable element is not a HTMLElement") : void 0;
    return null;
  }
  return draggable$1;
}
function preventDefault(event) {
  event.preventDefault();
}
function _isActive(_ref6) {
  var expected = _ref6.expected, phase = _ref6.phase, isLockActive = _ref6.isLockActive, shouldWarn = _ref6.shouldWarn;
  if (!isLockActive()) {
    if (shouldWarn) {
      true ? warning7("\n        Cannot perform action.\n        The sensor no longer has an action lock.\n\n        Tips:\n\n        - Throw away your action handlers when forceStop() is called\n        - Check actions.isActive() if you really need to\n      ") : void 0;
    }
    return false;
  }
  if (expected !== phase) {
    if (shouldWarn) {
      true ? warning7("\n        Cannot perform action.\n        The actions you used belong to an outdated phase\n\n        Current phase: " + expected + "\n        You called an action from outdated phase: " + phase + "\n\n        Tips:\n\n        - Do not use preDragActions actions after calling preDragActions.lift()\n      ") : void 0;
    }
    return false;
  }
  return true;
}
function canStart(_ref23) {
  var lockAPI = _ref23.lockAPI, store = _ref23.store, registry = _ref23.registry, draggableId = _ref23.draggableId;
  if (lockAPI.isClaimed()) {
    return false;
  }
  var entry = registry.draggable.findById(draggableId);
  if (!entry) {
    true ? warning7("Unable to find draggable with id: " + draggableId) : void 0;
    return false;
  }
  if (!entry.options.isEnabled) {
    return false;
  }
  if (!canStartDrag(store.getState(), draggableId)) {
    return false;
  }
  return true;
}
function tryStart(_ref32) {
  var lockAPI = _ref32.lockAPI, contextId = _ref32.contextId, store = _ref32.store, registry = _ref32.registry, draggableId = _ref32.draggableId, forceSensorStop = _ref32.forceSensorStop, sourceEvent = _ref32.sourceEvent;
  var shouldStart = canStart({
    lockAPI,
    store,
    registry,
    draggableId
  });
  if (!shouldStart) {
    return null;
  }
  var entry = registry.draggable.getById(draggableId);
  var el2 = findDraggable(contextId, entry.descriptor.id);
  if (!el2) {
    true ? warning7("Unable to find draggable element with id: " + draggableId) : void 0;
    return null;
  }
  if (sourceEvent && !entry.options.canDragInteractiveElements && isEventInInteractiveElement(el2, sourceEvent)) {
    return null;
  }
  var lock = lockAPI.claim(forceSensorStop || noop2);
  var phase = "PRE_DRAG";
  function getShouldRespectForcePress() {
    return entry.options.shouldRespectForcePress;
  }
  function isLockActive() {
    return lockAPI.isActive(lock);
  }
  function tryDispatch(expected, getAction) {
    if (_isActive({
      expected,
      phase,
      isLockActive,
      shouldWarn: true
    })) {
      store.dispatch(getAction());
    }
  }
  var tryDispatchWhenDragging = tryDispatch.bind(null, "DRAGGING");
  function lift$12(args) {
    function completed() {
      lockAPI.release();
      phase = "COMPLETED";
    }
    if (phase !== "PRE_DRAG") {
      completed();
      !(phase === "PRE_DRAG") ? true ? invariant2(false, "Cannot lift in phase " + phase) : invariant2(false) : void 0;
    }
    store.dispatch(lift(args.liftActionArgs));
    phase = "DRAGGING";
    function finish3(reason, options) {
      if (options === void 0) {
        options = {
          shouldBlockNextClick: false
        };
      }
      args.cleanup();
      if (options.shouldBlockNextClick) {
        var unbind = bindEvents(window, [{
          eventName: "click",
          fn: preventDefault,
          options: {
            once: true,
            passive: false,
            capture: true
          }
        }]);
        setTimeout(unbind);
      }
      completed();
      store.dispatch(drop({
        reason
      }));
    }
    return _extends({
      isActive: function isActive() {
        return _isActive({
          expected: "DRAGGING",
          phase,
          isLockActive,
          shouldWarn: false
        });
      },
      shouldRespectForcePress: getShouldRespectForcePress,
      drop: function drop5(options) {
        return finish3("DROP", options);
      },
      cancel: function cancel(options) {
        return finish3("CANCEL", options);
      }
    }, args.actions);
  }
  function fluidLift(clientSelection) {
    var move$1 = raf_schd_esm_default(function(client) {
      tryDispatchWhenDragging(function() {
        return move({
          client
        });
      });
    });
    var api = lift$12({
      liftActionArgs: {
        id: draggableId,
        clientSelection,
        movementMode: "FLUID"
      },
      cleanup: function cleanup() {
        return move$1.cancel();
      },
      actions: {
        move: move$1
      }
    });
    return _extends({}, api, {
      move: move$1
    });
  }
  function snapLift() {
    var actions = {
      moveUp: function moveUp$1() {
        return tryDispatchWhenDragging(moveUp);
      },
      moveRight: function moveRight$1() {
        return tryDispatchWhenDragging(moveRight);
      },
      moveDown: function moveDown$1() {
        return tryDispatchWhenDragging(moveDown);
      },
      moveLeft: function moveLeft$1() {
        return tryDispatchWhenDragging(moveLeft);
      }
    };
    return lift$12({
      liftActionArgs: {
        id: draggableId,
        clientSelection: getBorderBoxCenterPosition(el2),
        movementMode: "SNAP"
      },
      cleanup: noop2,
      actions
    });
  }
  function abortPreDrag() {
    var shouldRelease = _isActive({
      expected: "PRE_DRAG",
      phase,
      isLockActive,
      shouldWarn: true
    });
    if (shouldRelease) {
      lockAPI.release();
    }
  }
  var preDrag = {
    isActive: function isActive() {
      return _isActive({
        expected: "PRE_DRAG",
        phase,
        isLockActive,
        shouldWarn: false
      });
    },
    shouldRespectForcePress: getShouldRespectForcePress,
    fluidLift,
    snapLift,
    abort: abortPreDrag
  };
  return preDrag;
}
var defaultSensors = [useMouseSensor, useKeyboardSensor, useTouchSensor];
function useSensorMarshal(_ref42) {
  var contextId = _ref42.contextId, store = _ref42.store, registry = _ref42.registry, customSensors = _ref42.customSensors, enableDefaultSensors = _ref42.enableDefaultSensors;
  var useSensors = [].concat(enableDefaultSensors ? defaultSensors : [], customSensors || []);
  var lockAPI = useState32(function() {
    return create2();
  })[0];
  var tryAbandonLock = useCallback26(function tryAbandonLock2(previous, current) {
    if (previous.isDragging && !current.isDragging) {
      lockAPI.tryAbandon();
    }
  }, [lockAPI]);
  useIsomorphicLayoutEffect2(function listenToStore() {
    var previous = store.getState();
    var unsubscribe = store.subscribe(function() {
      var current = store.getState();
      tryAbandonLock(previous, current);
      previous = current;
    });
    return unsubscribe;
  }, [lockAPI, store, tryAbandonLock]);
  useIsomorphicLayoutEffect2(function() {
    return lockAPI.tryAbandon;
  }, [lockAPI.tryAbandon]);
  var canGetLock = useCallback26(function(draggableId) {
    return canStart({
      lockAPI,
      registry,
      store,
      draggableId
    });
  }, [lockAPI, registry, store]);
  var tryGetLock = useCallback26(function(draggableId, forceStop, options) {
    return tryStart({
      lockAPI,
      registry,
      contextId,
      store,
      draggableId,
      forceSensorStop: forceStop,
      sourceEvent: options && options.sourceEvent ? options.sourceEvent : null
    });
  }, [contextId, lockAPI, registry, store]);
  var findClosestDraggableId = useCallback26(function(event) {
    return tryGetClosestDraggableIdFromEvent(contextId, event);
  }, [contextId]);
  var findOptionsForDraggable = useCallback26(function(id3) {
    var entry = registry.draggable.findById(id3);
    return entry ? entry.options : null;
  }, [registry.draggable]);
  var tryReleaseLock = useCallback26(function tryReleaseLock2() {
    if (!lockAPI.isClaimed()) {
      return;
    }
    lockAPI.tryAbandon();
    if (store.getState().phase !== "IDLE") {
      store.dispatch(flush());
    }
  }, [lockAPI, store]);
  var isLockClaimed = useCallback26(lockAPI.isClaimed, [lockAPI]);
  var api = useMemo45(function() {
    return {
      canGetLock,
      tryGetLock,
      findClosestDraggableId,
      findOptionsForDraggable,
      tryReleaseLock,
      isLockClaimed
    };
  }, [canGetLock, tryGetLock, findClosestDraggableId, findOptionsForDraggable, tryReleaseLock, isLockClaimed]);
  useValidateSensorHooks(useSensors);
  for (var i2 = 0; i2 < useSensors.length; i2++) {
    useSensors[i2](api);
  }
}
var createResponders = function createResponders2(props) {
  return {
    onBeforeCapture: props.onBeforeCapture,
    onBeforeDragStart: props.onBeforeDragStart,
    onDragStart: props.onDragStart,
    onDragEnd: props.onDragEnd,
    onDragUpdate: props.onDragUpdate
  };
};
function getStore(lazyRef) {
  !lazyRef.current ? true ? invariant2(false, "Could not find store from lazy ref") : invariant2(false) : void 0;
  return lazyRef.current;
}
function App(props) {
  var contextId = props.contextId, setCallbacks = props.setCallbacks, sensors = props.sensors, nonce = props.nonce, dragHandleUsageInstructions2 = props.dragHandleUsageInstructions;
  var lazyStoreRef = useRef70(null);
  useStartupValidation();
  var lastPropsRef = usePrevious2(props);
  var getResponders = useCallback26(function() {
    return createResponders(lastPropsRef.current);
  }, [lastPropsRef]);
  var announce = useAnnouncer2(contextId);
  var dragHandleUsageInstructionsId = useHiddenTextElement({
    contextId,
    text: dragHandleUsageInstructions2
  });
  var styleMarshal = useStyleMarshal(contextId, nonce);
  var lazyDispatch = useCallback26(function(action3) {
    getStore(lazyStoreRef).dispatch(action3);
  }, []);
  var marshalCallbacks = useMemo45(function() {
    return bindActionCreators({
      publishWhileDragging,
      updateDroppableScroll,
      updateDroppableIsEnabled,
      updateDroppableIsCombineEnabled,
      collectionStarting
    }, lazyDispatch);
  }, [lazyDispatch]);
  var registry = useRegistry();
  var dimensionMarshal = useMemo45(function() {
    return createDimensionMarshal(registry, marshalCallbacks);
  }, [registry, marshalCallbacks]);
  var autoScroller = useMemo45(function() {
    return createAutoScroller(_extends({
      scrollWindow,
      scrollDroppable: dimensionMarshal.scrollDroppable
    }, bindActionCreators({
      move
    }, lazyDispatch)));
  }, [dimensionMarshal.scrollDroppable, lazyDispatch]);
  var focusMarshal = useFocusMarshal(contextId);
  var store = useMemo45(function() {
    return createStore2({
      announce,
      autoScroller,
      dimensionMarshal,
      focusMarshal,
      getResponders,
      styleMarshal
    });
  }, [announce, autoScroller, dimensionMarshal, focusMarshal, getResponders, styleMarshal]);
  if (true) {
    if (lazyStoreRef.current && lazyStoreRef.current !== store) {
      true ? warning7("unexpected store change") : void 0;
    }
  }
  lazyStoreRef.current = store;
  var tryResetStore = useCallback26(function() {
    var current = getStore(lazyStoreRef);
    var state = current.getState();
    if (state.phase !== "IDLE") {
      current.dispatch(flush());
    }
  }, []);
  var isDragging = useCallback26(function() {
    var state = getStore(lazyStoreRef).getState();
    return state.isDragging || state.phase === "DROP_ANIMATING";
  }, []);
  var appCallbacks = useMemo45(function() {
    return {
      isDragging,
      tryAbort: tryResetStore
    };
  }, [isDragging, tryResetStore]);
  setCallbacks(appCallbacks);
  var getCanLift = useCallback26(function(id3) {
    return canStartDrag(getStore(lazyStoreRef).getState(), id3);
  }, []);
  var getIsMovementAllowed = useCallback26(function() {
    return isMovementAllowed(getStore(lazyStoreRef).getState());
  }, []);
  var appContext = useMemo45(function() {
    return {
      marshal: dimensionMarshal,
      focus: focusMarshal,
      contextId,
      canLift: getCanLift,
      isMovementAllowed: getIsMovementAllowed,
      dragHandleUsageInstructionsId,
      registry
    };
  }, [contextId, dimensionMarshal, dragHandleUsageInstructionsId, focusMarshal, getCanLift, getIsMovementAllowed, registry]);
  useSensorMarshal({
    contextId,
    store,
    registry,
    customSensors: sensors,
    enableDefaultSensors: props.enableDefaultSensors !== false
  });
  useEffect51(function() {
    return tryResetStore;
  }, [tryResetStore]);
  return React632.createElement(AppContext.Provider, {
    value: appContext
  }, React632.createElement(Provider_default, {
    context: StoreContext,
    store
  }, props.children));
}
var count$1 = 0;
function useInstanceCount() {
  return useMemo45(function() {
    return "" + count$1++;
  }, []);
}
function DragDropContext(props) {
  var contextId = useInstanceCount();
  var dragHandleUsageInstructions2 = props.dragHandleUsageInstructions || preset.dragHandleUsageInstructions;
  return React632.createElement(ErrorBoundary, null, function(setCallbacks) {
    return React632.createElement(App, {
      nonce: props.nonce,
      contextId,
      setCallbacks,
      dragHandleUsageInstructions: dragHandleUsageInstructions2,
      enableDefaultSensors: props.enableDefaultSensors,
      sensors: props.sensors,
      onBeforeCapture: props.onBeforeCapture,
      onBeforeDragStart: props.onBeforeDragStart,
      onDragStart: props.onDragStart,
      onDragUpdate: props.onDragUpdate,
      onDragEnd: props.onDragEnd
    }, props.children);
  });
}
var isEqual$1 = function isEqual4(base) {
  return function(value) {
    return base === value;
  };
};
var isScroll = isEqual$1("scroll");
var isAuto = isEqual$1("auto");
var isVisible$1 = isEqual$1("visible");
var isEither = function isEither2(overflow2, fn) {
  return fn(overflow2.overflowX) || fn(overflow2.overflowY);
};
var isBoth = function isBoth2(overflow2, fn) {
  return fn(overflow2.overflowX) && fn(overflow2.overflowY);
};
var isElementScrollable = function isElementScrollable2(el2) {
  var style3 = window.getComputedStyle(el2);
  var overflow2 = {
    overflowX: style3.overflowX,
    overflowY: style3.overflowY
  };
  return isEither(overflow2, isScroll) || isEither(overflow2, isAuto);
};
var isBodyScrollable = function isBodyScrollable2() {
  if (false) {
    return false;
  }
  var body = getBodyElement();
  var html = document.documentElement;
  !html ? true ? invariant2(false) : invariant2(false) : void 0;
  if (!isElementScrollable(body)) {
    return false;
  }
  var htmlStyle = window.getComputedStyle(html);
  var htmlOverflow = {
    overflowX: htmlStyle.overflowX,
    overflowY: htmlStyle.overflowY
  };
  if (isBoth(htmlOverflow, isVisible$1)) {
    return false;
  }
  true ? warning7("\n    We have detected that your <body> element might be a scroll container.\n    We have found no reliable way of detecting whether the <body> element is a scroll container.\n    Under most circumstances a <body> scroll bar will be on the <html> element (document.documentElement)\n\n    Because we cannot determine if the <body> is a scroll container, and generally it is not one,\n    we will be treating the <body> as *not* a scroll container\n\n    More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/how-we-detect-scroll-containers.md\n  ") : void 0;
  return false;
};
var getClosestScrollable = function getClosestScrollable2(el2) {
  if (el2 == null) {
    return null;
  }
  if (el2 === document.body) {
    return isBodyScrollable() ? el2 : null;
  }
  if (el2 === document.documentElement) {
    return null;
  }
  if (!isElementScrollable(el2)) {
    return getClosestScrollable2(el2.parentElement);
  }
  return el2;
};
var checkForNestedScrollContainers = function(scrollable) {
  if (!scrollable) {
    return;
  }
  var anotherScrollParent = getClosestScrollable(scrollable.parentElement);
  if (!anotherScrollParent) {
    return;
  }
  true ? warning7("\n    Droppable: unsupported nested scroll container detected.\n    A Droppable can only have one scroll parent (which can be itself)\n    Nested scroll containers are currently not supported.\n\n    We hope to support nested scroll containers soon: https://github.com/atlassian/react-beautiful-dnd/issues/131\n  ") : void 0;
};
var getScroll$1 = function(el2) {
  return {
    x: el2.scrollLeft,
    y: el2.scrollTop
  };
};
var getIsFixed = function getIsFixed2(el2) {
  if (!el2) {
    return false;
  }
  var style3 = window.getComputedStyle(el2);
  if (style3.position === "fixed") {
    return true;
  }
  return getIsFixed2(el2.parentElement);
};
var getEnv = function(start3) {
  var closestScrollable = getClosestScrollable(start3);
  var isFixedOnPage = getIsFixed(start3);
  return {
    closestScrollable,
    isFixedOnPage
  };
};
var getDroppableDimension = function(_ref6) {
  var descriptor = _ref6.descriptor, isEnabled = _ref6.isEnabled, isCombineEnabled = _ref6.isCombineEnabled, isFixedOnPage = _ref6.isFixedOnPage, direction = _ref6.direction, client = _ref6.client, page = _ref6.page, closest3 = _ref6.closest;
  var frame = function() {
    if (!closest3) {
      return null;
    }
    var scrollSize = closest3.scrollSize, frameClient = closest3.client;
    var maxScroll = getMaxScroll({
      scrollHeight: scrollSize.scrollHeight,
      scrollWidth: scrollSize.scrollWidth,
      height: frameClient.paddingBox.height,
      width: frameClient.paddingBox.width
    });
    return {
      pageMarginBox: closest3.page.marginBox,
      frameClient,
      scrollSize,
      shouldClipSubject: closest3.shouldClipSubject,
      scroll: {
        initial: closest3.scroll,
        current: closest3.scroll,
        max: maxScroll,
        diff: {
          value: origin,
          displacement: origin
        }
      }
    };
  }();
  var axis = direction === "vertical" ? vertical : horizontal;
  var subject = getSubject({
    page,
    withPlaceholder: null,
    axis,
    frame
  });
  var dimension = {
    descriptor,
    isCombineEnabled,
    isFixedOnPage,
    axis,
    isEnabled,
    client,
    page,
    frame,
    subject
  };
  return dimension;
};
var getClient = function getClient2(targetRef, closestScrollable) {
  var base = getBox(targetRef);
  if (!closestScrollable) {
    return base;
  }
  if (targetRef !== closestScrollable) {
    return base;
  }
  var top2 = base.paddingBox.top - closestScrollable.scrollTop;
  var left2 = base.paddingBox.left - closestScrollable.scrollLeft;
  var bottom2 = top2 + closestScrollable.scrollHeight;
  var right2 = left2 + closestScrollable.scrollWidth;
  var paddingBox = {
    top: top2,
    right: right2,
    bottom: bottom2,
    left: left2
  };
  var borderBox = expand(paddingBox, base.border);
  var client = createBox({
    borderBox,
    margin: base.margin,
    border: base.border,
    padding: base.padding
  });
  return client;
};
var getDimension = function(_ref6) {
  var ref2 = _ref6.ref, descriptor = _ref6.descriptor, env = _ref6.env, windowScroll = _ref6.windowScroll, direction = _ref6.direction, isDropDisabled = _ref6.isDropDisabled, isCombineEnabled = _ref6.isCombineEnabled, shouldClipSubject = _ref6.shouldClipSubject;
  var closestScrollable = env.closestScrollable;
  var client = getClient(ref2, closestScrollable);
  var page = withScroll(client, windowScroll);
  var closest3 = function() {
    if (!closestScrollable) {
      return null;
    }
    var frameClient = getBox(closestScrollable);
    var scrollSize = {
      scrollHeight: closestScrollable.scrollHeight,
      scrollWidth: closestScrollable.scrollWidth
    };
    return {
      client: frameClient,
      page: withScroll(frameClient, windowScroll),
      scroll: getScroll$1(closestScrollable),
      scrollSize,
      shouldClipSubject
    };
  }();
  var dimension = getDroppableDimension({
    descriptor,
    isEnabled: !isDropDisabled,
    isCombineEnabled,
    isFixedOnPage: env.isFixedOnPage,
    direction,
    client,
    page,
    closest: closest3
  });
  return dimension;
};
var immediate = {
  passive: false
};
var delayed = {
  passive: true
};
var getListenerOptions = function(options) {
  return options.shouldPublishImmediately ? immediate : delayed;
};
function useRequiredContext(Context2) {
  var result = useContext23(Context2);
  !result ? true ? invariant2(false, "Could not find required context") : invariant2(false) : void 0;
  return result;
}
var getClosestScrollableFromDrag = function getClosestScrollableFromDrag2(dragging) {
  return dragging && dragging.env.closestScrollable || null;
};
function useDroppablePublisher(args) {
  var whileDraggingRef = useRef70(null);
  var appContext = useRequiredContext(AppContext);
  var uniqueId4 = useUniqueId("droppable");
  var registry = appContext.registry, marshal = appContext.marshal;
  var previousRef = usePrevious2(args);
  var descriptor = useMemo45(function() {
    return {
      id: args.droppableId,
      type: args.type,
      mode: args.mode
    };
  }, [args.droppableId, args.mode, args.type]);
  var publishedDescriptorRef = useRef70(descriptor);
  var memoizedUpdateScroll = useMemo45(function() {
    return memoize_one_esm_default(function(x2, y2) {
      !whileDraggingRef.current ? true ? invariant2(false, "Can only update scroll when dragging") : invariant2(false) : void 0;
      var scroll4 = {
        x: x2,
        y: y2
      };
      marshal.updateDroppableScroll(descriptor.id, scroll4);
    });
  }, [descriptor.id, marshal]);
  var getClosestScroll = useCallback26(function() {
    var dragging = whileDraggingRef.current;
    if (!dragging || !dragging.env.closestScrollable) {
      return origin;
    }
    return getScroll$1(dragging.env.closestScrollable);
  }, []);
  var updateScroll = useCallback26(function() {
    var scroll4 = getClosestScroll();
    memoizedUpdateScroll(scroll4.x, scroll4.y);
  }, [getClosestScroll, memoizedUpdateScroll]);
  var scheduleScrollUpdate = useMemo45(function() {
    return raf_schd_esm_default(updateScroll);
  }, [updateScroll]);
  var onClosestScroll = useCallback26(function() {
    var dragging = whileDraggingRef.current;
    var closest3 = getClosestScrollableFromDrag(dragging);
    !(dragging && closest3) ? true ? invariant2(false, "Could not find scroll options while scrolling") : invariant2(false) : void 0;
    var options = dragging.scrollOptions;
    if (options.shouldPublishImmediately) {
      updateScroll();
      return;
    }
    scheduleScrollUpdate();
  }, [scheduleScrollUpdate, updateScroll]);
  var getDimensionAndWatchScroll = useCallback26(function(windowScroll, options) {
    !!whileDraggingRef.current ? true ? invariant2(false, "Cannot collect a droppable while a drag is occurring") : invariant2(false) : void 0;
    var previous = previousRef.current;
    var ref2 = previous.getDroppableRef();
    !ref2 ? true ? invariant2(false, "Cannot collect without a droppable ref") : invariant2(false) : void 0;
    var env = getEnv(ref2);
    var dragging = {
      ref: ref2,
      descriptor,
      env,
      scrollOptions: options
    };
    whileDraggingRef.current = dragging;
    var dimension = getDimension({
      ref: ref2,
      descriptor,
      env,
      windowScroll,
      direction: previous.direction,
      isDropDisabled: previous.isDropDisabled,
      isCombineEnabled: previous.isCombineEnabled,
      shouldClipSubject: !previous.ignoreContainerClipping
    });
    var scrollable = env.closestScrollable;
    if (scrollable) {
      scrollable.setAttribute(scrollContainer.contextId, appContext.contextId);
      scrollable.addEventListener("scroll", onClosestScroll, getListenerOptions(dragging.scrollOptions));
      if (true) {
        checkForNestedScrollContainers(scrollable);
      }
    }
    return dimension;
  }, [appContext.contextId, descriptor, onClosestScroll, previousRef]);
  var getScrollWhileDragging = useCallback26(function() {
    var dragging = whileDraggingRef.current;
    var closest3 = getClosestScrollableFromDrag(dragging);
    !(dragging && closest3) ? true ? invariant2(false, "Can only recollect Droppable client for Droppables that have a scroll container") : invariant2(false) : void 0;
    return getScroll$1(closest3);
  }, []);
  var dragStopped = useCallback26(function() {
    var dragging = whileDraggingRef.current;
    !dragging ? true ? invariant2(false, "Cannot stop drag when no active drag") : invariant2(false) : void 0;
    var closest3 = getClosestScrollableFromDrag(dragging);
    whileDraggingRef.current = null;
    if (!closest3) {
      return;
    }
    scheduleScrollUpdate.cancel();
    closest3.removeAttribute(scrollContainer.contextId);
    closest3.removeEventListener("scroll", onClosestScroll, getListenerOptions(dragging.scrollOptions));
  }, [onClosestScroll, scheduleScrollUpdate]);
  var scroll3 = useCallback26(function(change) {
    var dragging = whileDraggingRef.current;
    !dragging ? true ? invariant2(false, "Cannot scroll when there is no drag") : invariant2(false) : void 0;
    var closest3 = getClosestScrollableFromDrag(dragging);
    !closest3 ? true ? invariant2(false, "Cannot scroll a droppable with no closest scrollable") : invariant2(false) : void 0;
    closest3.scrollTop += change.y;
    closest3.scrollLeft += change.x;
  }, []);
  var callbacks = useMemo45(function() {
    return {
      getDimensionAndWatchScroll,
      getScrollWhileDragging,
      dragStopped,
      scroll: scroll3
    };
  }, [dragStopped, getDimensionAndWatchScroll, getScrollWhileDragging, scroll3]);
  var entry = useMemo45(function() {
    return {
      uniqueId: uniqueId4,
      descriptor,
      callbacks
    };
  }, [callbacks, descriptor, uniqueId4]);
  useIsomorphicLayoutEffect2(function() {
    publishedDescriptorRef.current = entry.descriptor;
    registry.droppable.register(entry);
    return function() {
      if (whileDraggingRef.current) {
        true ? warning7("Unsupported: changing the droppableId or type of a Droppable during a drag") : void 0;
        dragStopped();
      }
      registry.droppable.unregister(entry);
    };
  }, [callbacks, descriptor, dragStopped, entry, marshal, registry.droppable]);
  useIsomorphicLayoutEffect2(function() {
    if (!whileDraggingRef.current) {
      return;
    }
    marshal.updateDroppableIsEnabled(publishedDescriptorRef.current.id, !args.isDropDisabled);
  }, [args.isDropDisabled, marshal]);
  useIsomorphicLayoutEffect2(function() {
    if (!whileDraggingRef.current) {
      return;
    }
    marshal.updateDroppableIsCombineEnabled(publishedDescriptorRef.current.id, args.isCombineEnabled);
  }, [args.isCombineEnabled, marshal]);
}
function noop$2() {
}
var empty = {
  width: 0,
  height: 0,
  margin: noSpacing2
};
var getSize2 = function getSize3(_ref6) {
  var isAnimatingOpenOnMount = _ref6.isAnimatingOpenOnMount, placeholder2 = _ref6.placeholder, animate2 = _ref6.animate;
  if (isAnimatingOpenOnMount) {
    return empty;
  }
  if (animate2 === "close") {
    return empty;
  }
  return {
    height: placeholder2.client.borderBox.height,
    width: placeholder2.client.borderBox.width,
    margin: placeholder2.client.margin
  };
};
var getStyle = function getStyle2(_ref23) {
  var isAnimatingOpenOnMount = _ref23.isAnimatingOpenOnMount, placeholder2 = _ref23.placeholder, animate2 = _ref23.animate;
  var size = getSize2({
    isAnimatingOpenOnMount,
    placeholder: placeholder2,
    animate: animate2
  });
  return {
    display: placeholder2.display,
    boxSizing: "border-box",
    width: size.width,
    height: size.height,
    marginTop: size.margin.top,
    marginRight: size.margin.right,
    marginBottom: size.margin.bottom,
    marginLeft: size.margin.left,
    flexShrink: "0",
    flexGrow: "0",
    pointerEvents: "none",
    transition: animate2 !== "none" ? transitions.placeholder : null
  };
};
function Placeholder(props) {
  var animateOpenTimerRef = useRef70(null);
  var tryClearAnimateOpenTimer = useCallback26(function() {
    if (!animateOpenTimerRef.current) {
      return;
    }
    clearTimeout(animateOpenTimerRef.current);
    animateOpenTimerRef.current = null;
  }, []);
  var animate2 = props.animate, onTransitionEnd2 = props.onTransitionEnd, onClose = props.onClose, contextId = props.contextId;
  var _useState = useState32(props.animate === "open"), isAnimatingOpenOnMount = _useState[0], setIsAnimatingOpenOnMount = _useState[1];
  useEffect51(function() {
    if (!isAnimatingOpenOnMount) {
      return noop$2;
    }
    if (animate2 !== "open") {
      tryClearAnimateOpenTimer();
      setIsAnimatingOpenOnMount(false);
      return noop$2;
    }
    if (animateOpenTimerRef.current) {
      return noop$2;
    }
    animateOpenTimerRef.current = setTimeout(function() {
      animateOpenTimerRef.current = null;
      setIsAnimatingOpenOnMount(false);
    });
    return tryClearAnimateOpenTimer;
  }, [animate2, isAnimatingOpenOnMount, tryClearAnimateOpenTimer]);
  var onSizeChangeEnd = useCallback26(function(event) {
    if (event.propertyName !== "height") {
      return;
    }
    onTransitionEnd2();
    if (animate2 === "close") {
      onClose();
    }
  }, [animate2, onClose, onTransitionEnd2]);
  var style3 = getStyle({
    isAnimatingOpenOnMount,
    animate: props.animate,
    placeholder: props.placeholder
  });
  return React632.createElement(props.placeholder.tagName, {
    style: style3,
    "data-rbd-placeholder-context-id": contextId,
    onTransitionEnd: onSizeChangeEnd,
    ref: props.innerRef
  });
}
var Placeholder$1 = React632.memo(Placeholder);
var DroppableContext = React632.createContext(null);
function checkIsValidInnerRef(el2) {
  !(el2 && isHtmlElement(el2)) ? true ? invariant2(false, "\n    provided.innerRef has not been provided with a HTMLElement.\n\n    You can find a guide on using the innerRef callback functions at:\n    https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/using-inner-ref.md\n  ") : invariant2(false) : void 0;
}
function isBoolean(value) {
  return typeof value === "boolean";
}
function runChecks(args, checks) {
  checks.forEach(function(check) {
    return check(args);
  });
}
var shared = [function required(_ref6) {
  var props = _ref6.props;
  !props.droppableId ? true ? invariant2(false, "A Droppable requires a droppableId prop") : invariant2(false) : void 0;
  !(typeof props.droppableId === "string") ? true ? invariant2(false, "A Droppable requires a [string] droppableId. Provided: [" + typeof props.droppableId + "]") : invariant2(false) : void 0;
}, function _boolean(_ref23) {
  var props = _ref23.props;
  !isBoolean(props.isDropDisabled) ? true ? invariant2(false, "isDropDisabled must be a boolean") : invariant2(false) : void 0;
  !isBoolean(props.isCombineEnabled) ? true ? invariant2(false, "isCombineEnabled must be a boolean") : invariant2(false) : void 0;
  !isBoolean(props.ignoreContainerClipping) ? true ? invariant2(false, "ignoreContainerClipping must be a boolean") : invariant2(false) : void 0;
}, function ref(_ref32) {
  var getDroppableRef = _ref32.getDroppableRef;
  checkIsValidInnerRef(getDroppableRef());
}];
var standard = [function placeholder(_ref42) {
  var props = _ref42.props, getPlaceholderRef = _ref42.getPlaceholderRef;
  if (!props.placeholder) {
    return;
  }
  var ref2 = getPlaceholderRef();
  if (ref2) {
    return;
  }
  true ? warning7('\n      Droppable setup issue [droppableId: "' + props.droppableId + '"]:\n      DroppableProvided > placeholder could not be found.\n\n      Please be sure to add the {provided.placeholder} React Node as a child of your Droppable.\n      More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/droppable.md\n    ') : void 0;
}];
var virtual = [function hasClone(_ref52) {
  var props = _ref52.props;
  !props.renderClone ? true ? invariant2(false, "Must provide a clone render function (renderClone) for virtual lists") : invariant2(false) : void 0;
}, function hasNoPlaceholder(_ref6) {
  var getPlaceholderRef = _ref6.getPlaceholderRef;
  !!getPlaceholderRef() ? true ? invariant2(false, "Expected virtual list to not have a placeholder") : invariant2(false) : void 0;
}];
function useValidation(args) {
  useDevSetupWarning(function() {
    runChecks(args, shared);
    if (args.props.mode === "standard") {
      runChecks(args, standard);
    }
    if (args.props.mode === "virtual") {
      runChecks(args, virtual);
    }
  });
}
var AnimateInOut = function(_React$PureComponent) {
  _inheritsLoose(AnimateInOut2, _React$PureComponent);
  function AnimateInOut2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.state = {
      isVisible: Boolean(_this.props.on),
      data: _this.props.on,
      animate: _this.props.shouldAnimate && _this.props.on ? "open" : "none"
    };
    _this.onClose = function() {
      if (_this.state.animate !== "close") {
        return;
      }
      _this.setState({
        isVisible: false
      });
    };
    return _this;
  }
  AnimateInOut2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (!props.shouldAnimate) {
      return {
        isVisible: Boolean(props.on),
        data: props.on,
        animate: "none"
      };
    }
    if (props.on) {
      return {
        isVisible: true,
        data: props.on,
        animate: "open"
      };
    }
    if (state.isVisible) {
      return {
        isVisible: true,
        data: state.data,
        animate: "close"
      };
    }
    return {
      isVisible: false,
      animate: "close",
      data: null
    };
  };
  var _proto = AnimateInOut2.prototype;
  _proto.render = function render() {
    if (!this.state.isVisible) {
      return null;
    }
    var provided = {
      onClose: this.onClose,
      data: this.state.data,
      animate: this.state.animate
    };
    return this.props.children(provided);
  };
  return AnimateInOut2;
}(React632.PureComponent);
var zIndexOptions = {
  dragging: 5e3,
  dropAnimating: 4500
};
var getDraggingTransition = function getDraggingTransition2(shouldAnimateDragMovement, dropping) {
  if (dropping) {
    return transitions.drop(dropping.duration);
  }
  if (shouldAnimateDragMovement) {
    return transitions.snap;
  }
  return transitions.fluid;
};
var getDraggingOpacity = function getDraggingOpacity2(isCombining, isDropAnimating) {
  if (!isCombining) {
    return null;
  }
  return isDropAnimating ? combine.opacity.drop : combine.opacity.combining;
};
var getShouldDraggingAnimate = function getShouldDraggingAnimate2(dragging) {
  if (dragging.forceShouldAnimate != null) {
    return dragging.forceShouldAnimate;
  }
  return dragging.mode === "SNAP";
};
function getDraggingStyle(dragging) {
  var dimension = dragging.dimension;
  var box = dimension.client;
  var offset7 = dragging.offset, combineWith = dragging.combineWith, dropping = dragging.dropping;
  var isCombining = Boolean(combineWith);
  var shouldAnimate = getShouldDraggingAnimate(dragging);
  var isDropAnimating = Boolean(dropping);
  var transform4 = isDropAnimating ? transforms.drop(offset7, isCombining) : transforms.moveTo(offset7);
  var style3 = {
    position: "fixed",
    top: box.marginBox.top,
    left: box.marginBox.left,
    boxSizing: "border-box",
    width: box.borderBox.width,
    height: box.borderBox.height,
    transition: getDraggingTransition(shouldAnimate, dropping),
    transform: transform4,
    opacity: getDraggingOpacity(isCombining, isDropAnimating),
    zIndex: isDropAnimating ? zIndexOptions.dropAnimating : zIndexOptions.dragging,
    pointerEvents: "none"
  };
  return style3;
}
function getSecondaryStyle(secondary3) {
  return {
    transform: transforms.moveTo(secondary3.offset),
    transition: secondary3.shouldAnimateDisplacement ? null : "none"
  };
}
function getStyle$1(mapped) {
  return mapped.type === "DRAGGING" ? getDraggingStyle(mapped) : getSecondaryStyle(mapped);
}
function getDimension$1(descriptor, el2, windowScroll) {
  if (windowScroll === void 0) {
    windowScroll = origin;
  }
  var computedStyles = window.getComputedStyle(el2);
  var borderBox = el2.getBoundingClientRect();
  var client = calculateBox(borderBox, computedStyles);
  var page = withScroll(client, windowScroll);
  var placeholder2 = {
    client,
    tagName: el2.tagName.toLowerCase(),
    display: computedStyles.display
  };
  var displaceBy = {
    x: client.marginBox.width,
    y: client.marginBox.height
  };
  var dimension = {
    descriptor,
    placeholder: placeholder2,
    displaceBy,
    client,
    page
  };
  return dimension;
}
function useDraggablePublisher(args) {
  var uniqueId4 = useUniqueId("draggable");
  var descriptor = args.descriptor, registry = args.registry, getDraggableRef = args.getDraggableRef, canDragInteractiveElements = args.canDragInteractiveElements, shouldRespectForcePress = args.shouldRespectForcePress, isEnabled = args.isEnabled;
  var options = useMemo45(function() {
    return {
      canDragInteractiveElements,
      shouldRespectForcePress,
      isEnabled
    };
  }, [canDragInteractiveElements, isEnabled, shouldRespectForcePress]);
  var getDimension2 = useCallback26(function(windowScroll) {
    var el2 = getDraggableRef();
    !el2 ? true ? invariant2(false, "Cannot get dimension when no ref is set") : invariant2(false) : void 0;
    return getDimension$1(descriptor, el2, windowScroll);
  }, [descriptor, getDraggableRef]);
  var entry = useMemo45(function() {
    return {
      uniqueId: uniqueId4,
      descriptor,
      options,
      getDimension: getDimension2
    };
  }, [descriptor, getDimension2, options, uniqueId4]);
  var publishedRef = useRef70(entry);
  var isFirstPublishRef = useRef70(true);
  useIsomorphicLayoutEffect2(function() {
    registry.draggable.register(publishedRef.current);
    return function() {
      return registry.draggable.unregister(publishedRef.current);
    };
  }, [registry.draggable]);
  useIsomorphicLayoutEffect2(function() {
    if (isFirstPublishRef.current) {
      isFirstPublishRef.current = false;
      return;
    }
    var last2 = publishedRef.current;
    publishedRef.current = entry;
    registry.draggable.update(entry, last2);
  }, [entry, registry.draggable]);
}
function useValidation$1(props, contextId, getRef) {
  useDevSetupWarning(function() {
    function prefix4(id4) {
      return "Draggable[id: " + id4 + "]: ";
    }
    var id3 = props.draggableId;
    !id3 ? true ? invariant2(false, "Draggable requires a draggableId") : invariant2(false) : void 0;
    !(typeof id3 === "string") ? true ? invariant2(false, "Draggable requires a [string] draggableId.\n      Provided: [type: " + typeof id3 + "] (value: " + id3 + ")") : invariant2(false) : void 0;
    !isInteger(props.index) ? true ? invariant2(false, prefix4(id3) + " requires an integer index prop") : invariant2(false) : void 0;
    if (props.mapped.type === "DRAGGING") {
      return;
    }
    checkIsValidInnerRef(getRef());
    if (props.isEnabled) {
      !findDragHandle(contextId, id3) ? true ? invariant2(false, prefix4(id3) + " Unable to find drag handle") : invariant2(false) : void 0;
    }
  });
}
function useClonePropValidation(isClone) {
  useDev(function() {
    var initialRef = useRef70(isClone);
    useDevSetupWarning(function() {
      !(isClone === initialRef.current) ? true ? invariant2(false, "Draggable isClone prop value changed during component life") : invariant2(false) : void 0;
    }, [isClone]);
  });
}
function preventHtml5Dnd(event) {
  event.preventDefault();
}
function Draggable(props) {
  var ref2 = useRef70(null);
  var setRef2 = useCallback26(function(el2) {
    ref2.current = el2;
  }, []);
  var getRef = useCallback26(function() {
    return ref2.current;
  }, []);
  var _useRequiredContext = useRequiredContext(AppContext), contextId = _useRequiredContext.contextId, dragHandleUsageInstructionsId = _useRequiredContext.dragHandleUsageInstructionsId, registry = _useRequiredContext.registry;
  var _useRequiredContext2 = useRequiredContext(DroppableContext), type3 = _useRequiredContext2.type, droppableId = _useRequiredContext2.droppableId;
  var descriptor = useMemo45(function() {
    return {
      id: props.draggableId,
      index: props.index,
      type: type3,
      droppableId
    };
  }, [props.draggableId, props.index, type3, droppableId]);
  var children2 = props.children, draggableId = props.draggableId, isEnabled = props.isEnabled, shouldRespectForcePress = props.shouldRespectForcePress, canDragInteractiveElements = props.canDragInteractiveElements, isClone = props.isClone, mapped = props.mapped, dropAnimationFinishedAction = props.dropAnimationFinished;
  useValidation$1(props, contextId, getRef);
  useClonePropValidation(isClone);
  if (!isClone) {
    var forPublisher = useMemo45(function() {
      return {
        descriptor,
        registry,
        getDraggableRef: getRef,
        canDragInteractiveElements,
        shouldRespectForcePress,
        isEnabled
      };
    }, [descriptor, registry, getRef, canDragInteractiveElements, shouldRespectForcePress, isEnabled]);
    useDraggablePublisher(forPublisher);
  }
  var dragHandleProps = useMemo45(function() {
    return isEnabled ? {
      tabIndex: 0,
      role: "button",
      "aria-describedby": dragHandleUsageInstructionsId,
      "data-rbd-drag-handle-draggable-id": draggableId,
      "data-rbd-drag-handle-context-id": contextId,
      draggable: false,
      onDragStart: preventHtml5Dnd
    } : null;
  }, [contextId, dragHandleUsageInstructionsId, draggableId, isEnabled]);
  var onMoveEnd = useCallback26(function(event) {
    if (mapped.type !== "DRAGGING") {
      return;
    }
    if (!mapped.dropping) {
      return;
    }
    if (event.propertyName !== "transform") {
      return;
    }
    dropAnimationFinishedAction();
  }, [dropAnimationFinishedAction, mapped]);
  var provided = useMemo45(function() {
    var style3 = getStyle$1(mapped);
    var onTransitionEnd2 = mapped.type === "DRAGGING" && mapped.dropping ? onMoveEnd : null;
    var result = {
      innerRef: setRef2,
      draggableProps: {
        "data-rbd-draggable-context-id": contextId,
        "data-rbd-draggable-id": draggableId,
        style: style3,
        onTransitionEnd: onTransitionEnd2
      },
      dragHandleProps
    };
    return result;
  }, [contextId, dragHandleProps, draggableId, mapped, onMoveEnd, setRef2]);
  var rubric = useMemo45(function() {
    return {
      draggableId: descriptor.id,
      type: descriptor.type,
      source: {
        index: descriptor.index,
        droppableId: descriptor.droppableId
      }
    };
  }, [descriptor.droppableId, descriptor.id, descriptor.index, descriptor.type]);
  return children2(provided, mapped.snapshot, rubric);
}
var isStrictEqual = function(a2, b2) {
  return a2 === b2;
};
var whatIsDraggedOverFromResult = function(result) {
  var combine2 = result.combine, destination = result.destination;
  if (destination) {
    return destination.droppableId;
  }
  if (combine2) {
    return combine2.droppableId;
  }
  return null;
};
var getCombineWithFromResult = function getCombineWithFromResult2(result) {
  return result.combine ? result.combine.draggableId : null;
};
var getCombineWithFromImpact = function getCombineWithFromImpact2(impact) {
  return impact.at && impact.at.type === "COMBINE" ? impact.at.combine.draggableId : null;
};
function getDraggableSelector() {
  var memoizedOffset = memoize_one_esm_default(function(x2, y2) {
    return {
      x: x2,
      y: y2
    };
  });
  var getMemoizedSnapshot = memoize_one_esm_default(function(mode, isClone, draggingOver, combineWith, dropping) {
    return {
      isDragging: true,
      isClone,
      isDropAnimating: Boolean(dropping),
      dropAnimation: dropping,
      mode,
      draggingOver,
      combineWith,
      combineTargetFor: null
    };
  });
  var getMemoizedProps = memoize_one_esm_default(function(offset7, mode, dimension, isClone, draggingOver, combineWith, forceShouldAnimate) {
    return {
      mapped: {
        type: "DRAGGING",
        dropping: null,
        draggingOver,
        combineWith,
        mode,
        offset: offset7,
        dimension,
        forceShouldAnimate,
        snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, null)
      }
    };
  });
  var selector = function selector2(state, ownProps) {
    if (state.isDragging) {
      if (state.critical.draggable.id !== ownProps.draggableId) {
        return null;
      }
      var offset7 = state.current.client.offset;
      var dimension = state.dimensions.draggables[ownProps.draggableId];
      var draggingOver = whatIsDraggedOver(state.impact);
      var combineWith = getCombineWithFromImpact(state.impact);
      var forceShouldAnimate = state.forceShouldAnimate;
      return getMemoizedProps(memoizedOffset(offset7.x, offset7.y), state.movementMode, dimension, ownProps.isClone, draggingOver, combineWith, forceShouldAnimate);
    }
    if (state.phase === "DROP_ANIMATING") {
      var completed = state.completed;
      if (completed.result.draggableId !== ownProps.draggableId) {
        return null;
      }
      var isClone = ownProps.isClone;
      var _dimension = state.dimensions.draggables[ownProps.draggableId];
      var result = completed.result;
      var mode = result.mode;
      var _draggingOver = whatIsDraggedOverFromResult(result);
      var _combineWith = getCombineWithFromResult(result);
      var duration5 = state.dropDuration;
      var dropping = {
        duration: duration5,
        curve: curves.drop,
        moveTo: state.newHomeClientOffset,
        opacity: _combineWith ? combine.opacity.drop : null,
        scale: _combineWith ? combine.scale.drop : null
      };
      return {
        mapped: {
          type: "DRAGGING",
          offset: state.newHomeClientOffset,
          dimension: _dimension,
          dropping,
          draggingOver: _draggingOver,
          combineWith: _combineWith,
          mode,
          forceShouldAnimate: null,
          snapshot: getMemoizedSnapshot(mode, isClone, _draggingOver, _combineWith, dropping)
        }
      };
    }
    return null;
  };
  return selector;
}
function getSecondarySnapshot(combineTargetFor) {
  return {
    isDragging: false,
    isDropAnimating: false,
    isClone: false,
    dropAnimation: null,
    mode: null,
    draggingOver: null,
    combineTargetFor,
    combineWith: null
  };
}
var atRest = {
  mapped: {
    type: "SECONDARY",
    offset: origin,
    combineTargetFor: null,
    shouldAnimateDisplacement: true,
    snapshot: getSecondarySnapshot(null)
  }
};
function getSecondarySelector() {
  var memoizedOffset = memoize_one_esm_default(function(x2, y2) {
    return {
      x: x2,
      y: y2
    };
  });
  var getMemoizedSnapshot = memoize_one_esm_default(getSecondarySnapshot);
  var getMemoizedProps = memoize_one_esm_default(function(offset7, combineTargetFor, shouldAnimateDisplacement) {
    if (combineTargetFor === void 0) {
      combineTargetFor = null;
    }
    return {
      mapped: {
        type: "SECONDARY",
        offset: offset7,
        combineTargetFor,
        shouldAnimateDisplacement,
        snapshot: getMemoizedSnapshot(combineTargetFor)
      }
    };
  });
  var getFallback = function getFallback2(combineTargetFor) {
    return combineTargetFor ? getMemoizedProps(origin, combineTargetFor, true) : null;
  };
  var getProps = function getProps2(ownId, draggingId, impact, afterCritical) {
    var visualDisplacement = impact.displaced.visible[ownId];
    var isAfterCriticalInVirtualList = Boolean(afterCritical.inVirtualList && afterCritical.effected[ownId]);
    var combine2 = tryGetCombine(impact);
    var combineTargetFor = combine2 && combine2.draggableId === ownId ? draggingId : null;
    if (!visualDisplacement) {
      if (!isAfterCriticalInVirtualList) {
        return getFallback(combineTargetFor);
      }
      if (impact.displaced.invisible[ownId]) {
        return null;
      }
      var change = negate(afterCritical.displacedBy.point);
      var _offset = memoizedOffset(change.x, change.y);
      return getMemoizedProps(_offset, combineTargetFor, true);
    }
    if (isAfterCriticalInVirtualList) {
      return getFallback(combineTargetFor);
    }
    var displaceBy = impact.displacedBy.point;
    var offset7 = memoizedOffset(displaceBy.x, displaceBy.y);
    return getMemoizedProps(offset7, combineTargetFor, visualDisplacement.shouldAnimate);
  };
  var selector = function selector2(state, ownProps) {
    if (state.isDragging) {
      if (state.critical.draggable.id === ownProps.draggableId) {
        return null;
      }
      return getProps(ownProps.draggableId, state.critical.draggable.id, state.impact, state.afterCritical);
    }
    if (state.phase === "DROP_ANIMATING") {
      var completed = state.completed;
      if (completed.result.draggableId === ownProps.draggableId) {
        return null;
      }
      return getProps(ownProps.draggableId, completed.result.draggableId, completed.impact, completed.afterCritical);
    }
    return null;
  };
  return selector;
}
var makeMapStateToProps = function makeMapStateToProps2() {
  var draggingSelector = getDraggableSelector();
  var secondarySelector = getSecondarySelector();
  var selector = function selector2(state, ownProps) {
    return draggingSelector(state, ownProps) || secondarySelector(state, ownProps) || atRest;
  };
  return selector;
};
var mapDispatchToProps = {
  dropAnimationFinished
};
var ConnectedDraggable = connect_default(makeMapStateToProps, mapDispatchToProps, null, {
  context: StoreContext,
  pure: true,
  areStatePropsEqual: isStrictEqual
})(Draggable);
function PrivateDraggable(props) {
  var droppableContext = useRequiredContext(DroppableContext);
  var isUsingCloneFor = droppableContext.isUsingCloneFor;
  if (isUsingCloneFor === props.draggableId && !props.isClone) {
    return null;
  }
  return React632.createElement(ConnectedDraggable, props);
}
function PublicDraggable(props) {
  var isEnabled = typeof props.isDragDisabled === "boolean" ? !props.isDragDisabled : true;
  var canDragInteractiveElements = Boolean(props.disableInteractiveElementBlocking);
  var shouldRespectForcePress = Boolean(props.shouldRespectForcePress);
  return React632.createElement(PrivateDraggable, _extends({}, props, {
    isClone: false,
    isEnabled,
    canDragInteractiveElements,
    shouldRespectForcePress
  }));
}
function Droppable(props) {
  var appContext = useContext23(AppContext);
  !appContext ? true ? invariant2(false, "Could not find app context") : invariant2(false) : void 0;
  var contextId = appContext.contextId, isMovementAllowed2 = appContext.isMovementAllowed;
  var droppableRef = useRef70(null);
  var placeholderRef = useRef70(null);
  var children2 = props.children, droppableId = props.droppableId, type3 = props.type, mode = props.mode, direction = props.direction, ignoreContainerClipping = props.ignoreContainerClipping, isDropDisabled = props.isDropDisabled, isCombineEnabled = props.isCombineEnabled, snapshot = props.snapshot, useClone = props.useClone, updateViewportMaxScroll3 = props.updateViewportMaxScroll, getContainerForClone = props.getContainerForClone;
  var getDroppableRef = useCallback26(function() {
    return droppableRef.current;
  }, []);
  var setDroppableRef = useCallback26(function(value) {
    droppableRef.current = value;
  }, []);
  var getPlaceholderRef = useCallback26(function() {
    return placeholderRef.current;
  }, []);
  var setPlaceholderRef = useCallback26(function(value) {
    placeholderRef.current = value;
  }, []);
  useValidation({
    props,
    getDroppableRef,
    getPlaceholderRef
  });
  var onPlaceholderTransitionEnd = useCallback26(function() {
    if (isMovementAllowed2()) {
      updateViewportMaxScroll3({
        maxScroll: getMaxWindowScroll()
      });
    }
  }, [isMovementAllowed2, updateViewportMaxScroll3]);
  useDroppablePublisher({
    droppableId,
    type: type3,
    mode,
    direction,
    isDropDisabled,
    isCombineEnabled,
    ignoreContainerClipping,
    getDroppableRef
  });
  var placeholder2 = React632.createElement(AnimateInOut, {
    on: props.placeholder,
    shouldAnimate: props.shouldAnimatePlaceholder
  }, function(_ref6) {
    var onClose = _ref6.onClose, data = _ref6.data, animate2 = _ref6.animate;
    return React632.createElement(Placeholder$1, {
      placeholder: data,
      onClose,
      innerRef: setPlaceholderRef,
      animate: animate2,
      contextId,
      onTransitionEnd: onPlaceholderTransitionEnd
    });
  });
  var provided = useMemo45(function() {
    return {
      innerRef: setDroppableRef,
      placeholder: placeholder2,
      droppableProps: {
        "data-rbd-droppable-id": droppableId,
        "data-rbd-droppable-context-id": contextId
      }
    };
  }, [contextId, droppableId, placeholder2, setDroppableRef]);
  var isUsingCloneFor = useClone ? useClone.dragging.draggableId : null;
  var droppableContext = useMemo45(function() {
    return {
      droppableId,
      type: type3,
      isUsingCloneFor
    };
  }, [droppableId, isUsingCloneFor, type3]);
  function getClone() {
    if (!useClone) {
      return null;
    }
    var dragging = useClone.dragging, render = useClone.render;
    var node4 = React632.createElement(PrivateDraggable, {
      draggableId: dragging.draggableId,
      index: dragging.source.index,
      isClone: true,
      isEnabled: true,
      shouldRespectForcePress: false,
      canDragInteractiveElements: true
    }, function(draggableProvided, draggableSnapshot) {
      return render(draggableProvided, draggableSnapshot, dragging);
    });
    return ReactDOM16.createPortal(node4, getContainerForClone());
  }
  return React632.createElement(DroppableContext.Provider, {
    value: droppableContext
  }, children2(provided, snapshot), getClone());
}
var isMatchingType = function isMatchingType2(type3, critical) {
  return type3 === critical.droppable.type;
};
var getDraggable = function getDraggable2(critical, dimensions) {
  return dimensions.draggables[critical.draggable.id];
};
var makeMapStateToProps$1 = function makeMapStateToProps3() {
  var idleWithAnimation = {
    placeholder: null,
    shouldAnimatePlaceholder: true,
    snapshot: {
      isDraggingOver: false,
      draggingOverWith: null,
      draggingFromThisWith: null,
      isUsingPlaceholder: false
    },
    useClone: null
  };
  var idleWithoutAnimation = _extends({}, idleWithAnimation, {
    shouldAnimatePlaceholder: false
  });
  var getDraggableRubric = memoize_one_esm_default(function(descriptor) {
    return {
      draggableId: descriptor.id,
      type: descriptor.type,
      source: {
        index: descriptor.index,
        droppableId: descriptor.droppableId
      }
    };
  });
  var getMapProps = memoize_one_esm_default(function(id3, isEnabled, isDraggingOverForConsumer, isDraggingOverForImpact, dragging, renderClone) {
    var draggableId = dragging.descriptor.id;
    var isHome = dragging.descriptor.droppableId === id3;
    if (isHome) {
      var useClone = renderClone ? {
        render: renderClone,
        dragging: getDraggableRubric(dragging.descriptor)
      } : null;
      var _snapshot = {
        isDraggingOver: isDraggingOverForConsumer,
        draggingOverWith: isDraggingOverForConsumer ? draggableId : null,
        draggingFromThisWith: draggableId,
        isUsingPlaceholder: true
      };
      return {
        placeholder: dragging.placeholder,
        shouldAnimatePlaceholder: false,
        snapshot: _snapshot,
        useClone
      };
    }
    if (!isEnabled) {
      return idleWithoutAnimation;
    }
    if (!isDraggingOverForImpact) {
      return idleWithAnimation;
    }
    var snapshot = {
      isDraggingOver: isDraggingOverForConsumer,
      draggingOverWith: draggableId,
      draggingFromThisWith: null,
      isUsingPlaceholder: true
    };
    return {
      placeholder: dragging.placeholder,
      shouldAnimatePlaceholder: true,
      snapshot,
      useClone: null
    };
  });
  var selector = function selector2(state, ownProps) {
    var id3 = ownProps.droppableId;
    var type3 = ownProps.type;
    var isEnabled = !ownProps.isDropDisabled;
    var renderClone = ownProps.renderClone;
    if (state.isDragging) {
      var critical = state.critical;
      if (!isMatchingType(type3, critical)) {
        return idleWithoutAnimation;
      }
      var dragging = getDraggable(critical, state.dimensions);
      var isDraggingOver = whatIsDraggedOver(state.impact) === id3;
      return getMapProps(id3, isEnabled, isDraggingOver, isDraggingOver, dragging, renderClone);
    }
    if (state.phase === "DROP_ANIMATING") {
      var completed = state.completed;
      if (!isMatchingType(type3, completed.critical)) {
        return idleWithoutAnimation;
      }
      var _dragging = getDraggable(completed.critical, state.dimensions);
      return getMapProps(id3, isEnabled, whatIsDraggedOverFromResult(completed.result) === id3, whatIsDraggedOver(completed.impact) === id3, _dragging, renderClone);
    }
    if (state.phase === "IDLE" && state.completed && !state.shouldFlush) {
      var _completed = state.completed;
      if (!isMatchingType(type3, _completed.critical)) {
        return idleWithoutAnimation;
      }
      var wasOver = whatIsDraggedOver(_completed.impact) === id3;
      var wasCombining = Boolean(_completed.impact.at && _completed.impact.at.type === "COMBINE");
      var isHome = _completed.critical.droppable.id === id3;
      if (wasOver) {
        return wasCombining ? idleWithAnimation : idleWithoutAnimation;
      }
      if (isHome) {
        return idleWithAnimation;
      }
      return idleWithoutAnimation;
    }
    return idleWithoutAnimation;
  };
  return selector;
};
var mapDispatchToProps$1 = {
  updateViewportMaxScroll
};
function getBody() {
  !document.body ? true ? invariant2(false, "document.body is not ready") : invariant2(false) : void 0;
  return document.body;
}
var defaultProps2 = {
  mode: "standard",
  type: "DEFAULT",
  direction: "vertical",
  isDropDisabled: false,
  isCombineEnabled: false,
  ignoreContainerClipping: false,
  renderClone: null,
  getContainerForClone: getBody
};
var ConnectedDroppable = connect_default(makeMapStateToProps$1, mapDispatchToProps$1, null, {
  context: StoreContext,
  pure: true,
  areStatePropsEqual: isStrictEqual
})(Droppable);
ConnectedDroppable.defaultProps = defaultProps2;

// src/components/DnD/Draggable/utils/DraggableUtils.ts
var RcDraggableClasses = RcClasses(["root", "isDragging"], "RcDraggable");
var getDirectionOnlyItemStyle = (direction, style3) => {
  if (!direction) {
    return style3;
  }
  const isVertical = direction === "vertical";
  const overrideStyles = {};
  const currentTransformMatch = style3 && style3.transform && style3.transform.match(/translate\((-?\d+)px,\s+(-?\d+)px\)/);
  if (currentTransformMatch) {
    const transform4 = parseInt(currentTransformMatch[isVertical ? 2 : 1], 10);
    overrideStyles["transform"] = `translate(${isVertical ? 0 : transform4}px, ${isVertical ? transform4 : 0}px)`;
  }
  return {
    ...style3,
    ...overrideStyles
  };
};

// src/components/DnD/DragDropContext/styles/StyledGlobalDraggable.tsx
var GlobalDraggableStyle = createGlobalStyle`
  .${RcDraggableClasses.root} {
    &::before, &::after {
      content: '';
      opacity: 0;
      transition: opacity .2s;
    }
  }

  .${RcDraggableClasses.isDragging} {
    &::before, &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      opacity: 1;
    }

    &::before {
      background-color: ${palette22("action", "grayLight")};
      opacity: ${opacity3("16")};
    }

    &::after {
      box-shadow: ${shadows4("8")};
    }

    background-color: ${palette22("neutral", "elevation")} !important;
    ${fakeBorder()};
    opacity: ${opacity3("88")} !important;
    position: relative;
  }
`;

// src/components/DnD/DragDropContext/DragDropContext.tsx
var RcDragDropContext = (inProps) => {
  const props = useThemeProps({ props: inProps, name: "RcDragDropContext" });
  return /* @__PURE__ */ React633.createElement(React633.Fragment, null, /* @__PURE__ */ React633.createElement(GlobalDraggableStyle, null), /* @__PURE__ */ React633.createElement(DragDropContext, {
    ...props
  }));
};
RcDragDropContext.defaultProps = {};
RcDragDropContext.displayName = "RcDragDropContext";

// src/components/DnD/Draggable/Draggable.tsx
import React634, { forwardRef as forwardRef559 } from "react";
var _RcDraggable = forwardRef559((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDraggable" });
  const { classes, children: children2, directionOnly, ...rest } = props;
  return /* @__PURE__ */ React634.createElement(PublicDraggable, {
    ...rest,
    ref: ref2
  }, (provided, snapshot, ...args) => {
    const preStyle = provided.draggableProps.style;
    const directionOnlyStyle = getDirectionOnlyItemStyle(directionOnly, preStyle);
    provided.draggableProps.style = directionOnlyStyle;
    provided.draggableProps["className"] = clsx_m_default(RcDraggableClasses.root, classes?.root, snapshot.isDragging && clsx_m_default(RcDraggableClasses.isDragging, classes?.isDragging));
    return children2(provided, snapshot, ...args);
  });
});
var RcDraggable = styled_components_default(_RcDraggable)``;
RcDraggable.defaultProps = {};
RcDraggable.displayName = "RcDraggable";

// src/components/DnD/Droppable/Droppable.tsx
import React635, { forwardRef as forwardRef560 } from "react";
var _RcDroppable = forwardRef560((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDroppable" });
  const { children: children2, ...rest } = props;
  return /* @__PURE__ */ React635.createElement(ConnectedDroppable, {
    ...rest,
    ref: ref2
  }, (...args) => children2(...args));
});
var RcDroppable = styled_components_default(_RcDroppable)``;
RcDroppable.defaultProps = {};
RcDroppable.displayName = "RcDroppable";

// src/components/DnD/DragHandle/DragHandle.tsx
import React636, { forwardRef as forwardRef561 } from "react";

// src/components/DnD/DragHandle/styles/StyledDragHandle.tsx
var dragHandleStyle = () => {
  return css2`
    outline: none;
    margin-right: 4px;
    padding: 2px 0;

    ${flexCenterStyle};

    ${focusVisible} {
      box-shadow: 0 0 0 1px ${focusVisibleColor};
      border-radius: ${radius3("sm")};
    }
  `;
};

// src/components/DnD/DragHandle/utils/DragHandleUtils.ts
var RcDragHandleClasses = RcClasses(["root"], "RcDraggable");

// src/components/DnD/DragHandle/DragHandle.tsx
var defaultChildren2 = /* @__PURE__ */ React636.createElement(RcIcon, {
  size: "xsmall",
  symbol: DragableArea_default
});
var _DragHandle = forwardRef561((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDragHandle" });
  const { children: children2 = defaultChildren2, className, ...rest } = props;
  const ClassName = clsx_m_default(RcDragHandleClasses.root, className);
  return /* @__PURE__ */ React636.createElement("div", {
    ...rest,
    className: ClassName,
    ref: ref2
  }, children2);
});
var RcDragHandle = styled_components_default(_DragHandle)`
  ${dragHandleStyle}
`;
RcDragHandle.defaultProps = {};
RcDragHandle.displayName = "RcDragHandle";

// src/components/Downshift/utils/DownshiftUtils.tsx
import React650 from "react";

// src/components/Menu/MenuItem/MenuItem.tsx
import React649, {
  forwardRef as forwardRef573,
  useContext as useContext24,
  useImperativeHandle as useImperativeHandle13,
  useMemo as useMemo57
} from "react";

// src/components/List/List/List.tsx
import React637, { forwardRef as forwardRef562, useMemo as useMemo46 } from "react";

// src/components/List/List/styles/ListStyle.tsx
var ListStyle = () => {
  return css2``;
};

// src/components/List/List/utils/ListUtils.ts
var RcListClasses = RcClasses([], "RcList");

// src/components/List/List/List.tsx
var _RcList = forwardRef562((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcList" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo46(() => combineClasses(RcListClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React637.createElement(List_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcList = styled_components_default(_RcList)`
  ${ListStyle}
`;
RcList.defaultProps = {
  disablePadding: true
};
RcList.displayName = "RcList";

// src/components/List/ListItem/ListItem.tsx
import React640, { forwardRef as forwardRef565, useMemo as useMemo49 } from "react";

// src/components/Forms/FormControlLabel/FormControlLabel.tsx
import React638, { forwardRef as forwardRef563, useMemo as useMemo47 } from "react";

// src/components/Forms/FormControlLabel/styles/StyledControl.tsx
var StyledControl = styled_components_default.span`
  display: inline-block;
  width: 48px;
`;

// src/components/Forms/Checkbox/utils/CheckboxUtils.ts
var RcCheckboxClasses = RcClasses(["root", "disabled", "checked"], "RcCheckbox");

// src/components/Forms/Radio/utils/RadioUtils.ts
var RcRadioClasses = RcClasses(["root", "checked", "disabled"], "RcRadio");
var RadioButtonIconClasses = RcClasses(["root"], "RadioButtonIcon");

// src/components/Forms/Switch/utils/SwitchUtils.tsx
var RcSwitchClasses = RcClasses([
  "root",
  "switchBase",
  "thumb",
  "track",
  "checked",
  "disabled",
  "focusVisible"
], "RcSwitch");

// src/components/Forms/FormControlLabel/utils/FormControlLabelUtils.ts
var RcFormControlLabelClasses = RcClasses(["root", "disabled", "labelPlacementStart"], "RcFormControlLabel");

// src/components/Forms/FormControlLabel/styles/FormControlLabelStyle.tsx
var controlsClassName = `.${RcCheckboxClasses.root}, .${RcRadioClasses.root}`;
var FormControlLabelStyle = () => {
  return css2`
    color: ${palette22("neutral", "f06")};
    ${typography4("body2")};

    .${RcFormControlLabelClasses.disabled} {
      color: ${palette22("disabled", "f02")};
    }

    ${controlsClassName} {
      margin-left: 0;
      margin-right: ${spacing2(1)};
    }

    .${RcSwitchClasses.root} {
      margin: ${spacing2(3)};
    }

    &.${RcFormControlLabelClasses.labelPlacementStart} {
      ${controlsClassName} {
        margin-left: ${spacing2(1)};
        margin-right: 0;
      }
    }
  `;
};

// src/components/Forms/FormControlLabel/FormControlLabel.tsx
var _RcFormControlLabel = forwardRef563((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcFormControlLabel" });
  const { classes: classesProp, ...rest } = props;
  const classes = useMemo47(() => combineClasses(RcFormControlLabelClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React638.createElement(FormControlLabel_default, {
    ...rest,
    ref: ref2,
    classes
  });
});
var RcFormControlLabel = styled_components_default(_RcFormControlLabel)`
  ${FormControlLabelStyle}
`;
RcFormControlLabel.defaultProps = {};
RcFormControlLabel.displayName = "RcFormControlLabel";

// src/components/Forms/Switch/Switch.tsx
import React639, { forwardRef as forwardRef564, useMemo as useMemo48 } from "react";

// src/components/Forms/Switch/styles/SwitchStyle.tsx
var thumbColor = palette22("neutral", "f01");
var disabledColor2 = palette22("disabled", "f02");
var defaultTrackColorArray = ["neutral", "f02"];
var heightCss = css2`
  height: 20px;
`;
var widthCss = css2`
  width: 36px;
`;
var thumbSize = css2`
  height: 12px;
  width: 12px;
`;
var notDisabledSwitchBase = (opacity4, checkedColor, trackedColor) => css2`
  .${RcSwitchClasses.switchBase} {
    &:not(.${RcSwitchClasses.disabled}) {
      & + .${RcSwitchClasses.track} {
        background-color: ${setOpacity(trackedColor, opacity4, true)};
      }

      &.${RcSwitchClasses.checked} + .${RcSwitchClasses.track} {
        background-color: ${setOpacity(checkedColor, opacity4, true)};
      }
    }
  }
`;
var SwitchStyle = ({
  color: colorProp,
  trackColor: trackColorProp
}) => {
  const checkedColor = getParsePaletteColor(colorProp);
  const trackColor = getParsePaletteColor(trackColorProp, defaultTrackColorArray);
  return css2`
    &.${RcSwitchClasses.root} {
      padding: 0px;
      ${widthCss};
      ${heightCss};

      .${RcSwitchClasses.switchBase} {
        ${widthCss};
        ${heightCss};
        padding: 0;
        background-color: transparent;
        transform: translateX(${spacing2(-2)});

        &.${RcSwitchClasses.checked} {
          transform: translateX(${spacing2(2)});
        }
      }

      .${RcSwitchClasses.thumb} {
        ${thumbSize};
        background-color: ${thumbColor};
        box-shadow: none;
      }

      .${RcSwitchClasses.track} {
        ${heightCss};
        opacity: 1;
        margin: 0;
        border-radius: ${radius3("round")};
        background-color: ${trackColor};
      }

      .${RcSwitchClasses.checked} + .${RcSwitchClasses.track} {
        background-color: ${checkedColor};
      }

      .${RcSwitchClasses.disabled} + .${RcSwitchClasses.track} {
        background-color: ${disabledColor2};
      }

      .${RcSwitchClasses.focusVisible} + .${RcSwitchClasses.track} {
        &:after {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          box-sizing: border-box;
          border-radius: ${radius3("round")};
          border: 1px solid ${palette22("interactive", "f01")};
          ${fakeBorder({ color: palette22("neutral", "f11") })}
        }
      }

      ${nonTouchHoverMedia} {
        &:hover {
          ${notDisabledSwitchBase("08", checkedColor, trackColor)};
        }
      }

      &:active {
        ${notDisabledSwitchBase("24", checkedColor, trackColor)};
      }
    }
  `;
};

// src/components/Forms/Switch/Switch.tsx
var _RcSwitch = forwardRef564((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcSwitch" });
  const {
    label: label3,
    formControlLabelProps = {},
    focusVisibleClassName: focusVisibleClassNameProp,
    classes: classesProp,
    color: color2,
    trackColor,
    ...rest
  } = props;
  const classes = useMemo48(() => combineClasses(omit3(RcSwitchClasses, ["focusVisible"]), classesProp), [classesProp]);
  const focusVisibleClassName = useMemo48(() => clsx_m_default(RcSwitchClasses.focusVisible, focusVisibleClassNameProp), [focusVisibleClassNameProp]);
  const Switch3 = /* @__PURE__ */ React639.createElement(Switch_default, {
    ref: ref2,
    focusVisibleClassName,
    classes,
    ...rest,
    color: "default",
    size: "medium",
    disableRipple: true,
    disableTouchRipple: true
  });
  if (label3) {
    return /* @__PURE__ */ React639.createElement(RcFormControlLabel, {
      ...formControlLabelProps,
      label: label3,
      control: Switch3
    });
  }
  return Switch3;
});
var RcSwitch = styled_components_default(_RcSwitch)`
  ${SwitchStyle}
`;
RcSwitch.defaultProps = {
  color: "interactive.f01"
};
RcSwitch.displayName = "RcSwitch";

// src/components/List/ListItem/utils/ListItemUtils.ts
var RcListItemPrefix = "RcListItem";
var RcListItemMultilineClassName = `${RcListItemPrefix}-multiline`;
var RcListItemClasses = RcClasses(["focusVisible", "gutters", "dense", "selected"], RcListItemPrefix);
var RcListItemTopAndBottomPaddings = {
  small: spacing2(1),
  medium: spacing2(1.25)
};
var colorMap = {
  primary: "interactive.f01",
  secondary: "highlight.f02",
  black: "action.grayLight"
};
var RcListItemRippleClasses = RcClasses(["rippleVisible"], "RcListItemTouchRipple");

// src/components/List/ListItem/styles/ListItemStyle.tsx
var ListItemFormControlStyle = css2`
  ${RcFormControlLabel} {
    margin-right: 0;

    > ${RcSwitch} {
      /** The DOM structure of Switch is special,
        should remove this after fix Switch as common control */
      margin-left: ${spacing2(1)};
      margin-right: ${spacing2(1)};
    }
  }
`;
var ListItemStyle = ({
  maxWidth: maxWidth2,
  isInline,
  size,
  onClick,
  color: color2,
  canHover,
  baseColor: baseColorProp = "black",
  highlighted
}) => {
  const baseColor = getParsePaletteColor(color2 ?? colorMap[baseColorProp]);
  const defaultPadding = RcListItemTopAndBottomPaddings[size];
  return css2`
    ${typography4("body1")};
    width: ${maxWidth2 ? px2(maxWidth2) : "100%"};
    padding-top: ${defaultPadding};
    padding-bottom: ${defaultPadding};
    display: ${isInline ? "inline-flex" : "flex"};
    color: ${palette22("neutral", "f06")};
    cursor: ${onClick ? "pointer" : "default"};

    ${highlighted && css2`
      background-color: ${setAlpha(baseColor, 0.05)};
    `};

    &.${RcListItemClasses.focusVisible} {
      background-color: ${setOpacity(baseColor, "16")};
    }

    ${nonTouchHoverMedia} {
      &:hover {
        background-color: ${canHover ? setOpacity(baseColor, "08") : "unset"};
      }
    }

    &.${RcListItemClasses.selected} {
      &,
      &:hover {
        background-color: ${setOpacity(baseColor, "12")};
      }
    }

    .${RcListItemRippleClasses.rippleVisible} {
      color: ${baseColor};
    }

    &.${RcListItemClasses.gutters} {
      padding-left: ${spacing2(4)};
      padding-right: ${spacing2(4)};
    }

    &.${RcListItemClasses.dense} {
      padding-top: ${spacing2(1)};
      padding-bottom: ${spacing2(1)};
    }

    ${ListItemFormControlStyle};
  `;
};

// src/components/List/ListItem/ListItem.tsx
var _RcListItem = forwardRef565((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcListItem" });
  const {
    classes: classesProp,
    color: color2,
    TouchRippleProps: TouchRipplePropsProp,
    children: children2,
    className,
    singleLine,
    button: button2,
    size,
    canHover,
    isInline,
    baseColor,
    title,
    highlighted,
    maxWidth: maxWidth2,
    ...rest
  } = props;
  const classes = useMemo49(() => combineClasses(RcListItemClasses, classesProp), [classesProp]);
  const ListItemClassName = useMemo49(() => clsx_m_default(className, {
    [RcListItemMultilineClassName]: !singleLine
  }), [className, singleLine]);
  const additionProps = useMemo49(() => button2 ? {
    TouchRippleProps: combineProps({ classes: RcListItemRippleClasses }, TouchRipplePropsProp)
  } : {}, [TouchRipplePropsProp, button2]);
  return /* @__PURE__ */ React640.createElement(ListItem_default, {
    ...rest,
    ...additionProps,
    ref: ref2,
    title: typeof title === "string" ? title : void 0,
    classes,
    className: ListItemClassName,
    button: button2
  }, children2);
});
var RcListItem = styled_components_default(withDeprecatedCheck(withTooltip(_RcListItem), [
  {
    prop: "baseColor",
    time: "2021-9",
    comment: "@deprecated should use color directly"
  },
  {
    prop: "maxWidth",
    time: "2021-4",
    comment: "recommend using classes to define"
  }
], "RcListItem"))`
  ${ListItemStyle};
`;
RcListItem.defaultProps = {
  singleLine: false,
  button: true,
  canHover: true,
  size: "medium"
};
RcListItem.displayName = "RcListItem";

// src/components/List/ListItemAvatar/ListItemAvatar.tsx
import React641, { forwardRef as forwardRef566, useMemo as useMemo50 } from "react";

// src/components/List/ListItemAvatar/styles/ListItemAvatarStyle.tsx
var ListItemAvatarStyle = () => css2`
    margin: ${spacing2(0.75, 2, 0.75, 0)};
    min-width: 0;
    ${flexCenterStyle};
  `;

// src/components/List/ListItemAvatar/utils/ListItemAvatarUtils.ts
var RcListItemAvatarClasses = RcClasses([], "RcListItemAvatar");

// src/components/List/ListItemAvatar/ListItemAvatar.tsx
var _RcListItemAvatar = forwardRef566((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcListItemAvatar" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo50(() => combineClasses(RcListItemAvatarClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React641.createElement(ListItemAvatar_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcListItemAvatar = styled_components_default(_RcListItemAvatar)`
  ${ListItemAvatarStyle};
`;
RcListItemAvatar.defaultProps = {};
RcListItemAvatar.displayName = "RcListItemAvatar";

// src/components/List/ListItemIcon/ListItemIcon.tsx
import React645, { forwardRef as forwardRef569, useMemo as useMemo53 } from "react";

// src/components/Forms/Checkbox/Checkbox.tsx
import React643, { forwardRef as forwardRef567, useMemo as useMemo51 } from "react";

// src/components/Forms/utils/CustomIconPropsGetter.tsx
import React642, { isValidElement as isValidElement18 } from "react";
var CustomIconPropsGetter = (options) => {
  const {
    icon: defaultIcon5,
    checkedIcon: defaultCheckedIcon3,
    indeterminateIcon: defaultIndeterminateIcon2
  } = options;
  return (props) => {
    const {
      size,
      icon: iconProp,
      checkedIcon: checkedIconProp,
      indeterminateIcon: indeterminateIconProp
    } = props;
    const resultProps = {};
    const icon = getResultIcon(iconProp, size, defaultIcon5);
    if (icon)
      resultProps.icon = icon;
    const checkedIcon = getResultIcon(checkedIconProp, size, defaultCheckedIcon3);
    if (checkedIcon)
      resultProps.checkedIcon = checkedIcon;
    const indeterminateIcon = getResultIcon(indeterminateIconProp, size, defaultIndeterminateIcon2);
    if (indeterminateIcon)
      resultProps.indeterminateIcon = indeterminateIcon;
    return resultProps;
  };
};
function getResultIcon(iconProp, size, defaultIcon5) {
  let icon;
  if (iconProp) {
    if (isRcElement(iconProp, ["RcIcon"]) && size) {
      icon = cloneProps(iconProp, size);
    } else {
      icon = iconProp;
    }
  }
  if (!icon && defaultIcon5) {
    icon = isValidElement18(defaultIcon5) ? cloneProps(defaultIcon5, size) : /* @__PURE__ */ React642.createElement(RcIcon, {
      symbol: defaultIcon5,
      size
    });
  }
  return icon;
}
function cloneProps(iconProp, size) {
  return React642.cloneElement(iconProp, {
    size
  });
}

// src/components/Forms/utils/checkedStyles.tsx
var backgroundColor2 = palette22("neutral", "f02");
var disabledColor3 = palette22("disabled", "f02");
var errorColor2 = palette22("danger", "b04");
var checkedStyles = ({ color: color2, error: error4, followColorWhenUnChecked, size, classes }) => {
  const _color = error4 ? errorColor2 : getParsePaletteColor(color2);
  const ripplePaddingSize = px2(RcIconButtonSizes[size] / 2);
  return css2`
    &.${classes.root} {
      color: ${followColorWhenUnChecked ? _color : backgroundColor2};
      padding: ${ripplePaddingSize};

      &.${classes.checked} {
        color: ${_color};
      }

      ${nonTouchHoverMedia} {
        &:hover {
          background-color: ${setOpacity(followColorWhenUnChecked ? _color : backgroundColor2, "12")};

          &.${classes.checked} {
            color: ${setOpacity(_color, "08", true)};
            background-color: ${setOpacity(_color, "12")};
          }
        }
      }

      &.${classes.disabled} {
        color: ${disabledColor3};
      }
    }
  `;
};

// src/components/Forms/Checkbox/styles/CheckboxStyle.tsx
var CheckboxStyle = ({
  ...rest
}) => {
  return css2`
    ${checkedStyles({ ...rest, classes: RcCheckboxClasses })}
  `;
};

// src/components/Forms/Checkbox/Checkbox.tsx
var getIconProps = CustomIconPropsGetter({
  icon: Unselect_default,
  checkedIcon: Selects_default,
  indeterminateIcon: Indeterminate_default
});
var _RcCheckbox = forwardRef567((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcCheckbox" });
  const {
    label: label3,
    formControlLabelProps,
    color: color2,
    error: error4,
    followColorWhenUnChecked,
    classes: classesProp,
    iconSize,
    size: sizeProp,
    icon,
    checkedIcon,
    ...rest
  } = props;
  let size = sizeProp;
  if (iconSize) {
    size = iconSize;
  }
  const classes = useMemo51(() => combineClasses(RcCheckboxClasses, classesProp), [classesProp]);
  const iconProps = useMemo51(() => getIconProps({ size, icon, checkedIcon }), [checkedIcon, icon, size]);
  const Checkbox3 = /* @__PURE__ */ React643.createElement(Checkbox_default, {
    ...iconProps,
    ...rest,
    ref: ref2,
    color: "default",
    classes
  });
  if (label3) {
    return /* @__PURE__ */ React643.createElement(RcFormControlLabel, {
      ...formControlLabelProps,
      label: label3,
      control: Checkbox3
    });
  }
  return Checkbox3;
});
var RcCheckbox = styled_components_default(withDeprecatedCheck(withTooltip(_RcCheckbox), [
  {
    prop: "iconSize",
    time: "2021-4",
    comment: `@deprecated using size to replace that`
  }
], "RcCheckbox"))`
  ${CheckboxStyle}
`;
RcCheckbox.displayName = "RcCheckbox";
RcCheckbox.defaultProps = {
  color: "interactive.f01",
  size: "medium"
};

// src/components/Forms/Radio/Radio.tsx
import React644, { forwardRef as forwardRef568, useMemo as useMemo52 } from "react";

// src/components/Forms/Radio/styles/RadioStyle.tsx
var RadioStyle = ({
  size,
  ...rest
}) => {
  const currSize = RcIconButtonSizes[size];
  const fontSize3 = px2(currSize * 1.2);
  const disSize = px2(currSize * 0.1);
  return css2`
    ${checkedStyles({ size, ...rest, classes: RcRadioClasses })};

    .${RadioButtonIconClasses.root} {
      svg {
        font-size: ${fontSize3};
        margin: -${disSize};
      }
    }
  `;
};

// src/components/Forms/Radio/Radio.tsx
var getIconProps2 = CustomIconPropsGetter({
  checkedIcon: /* @__PURE__ */ React644.createElement(RadioButtonIcon_default, {
    checked: true,
    classes: RadioButtonIconClasses
  }),
  icon: /* @__PURE__ */ React644.createElement(RadioButtonIcon_default, {
    classes: RadioButtonIconClasses
  })
});
var _RcRadio = forwardRef568((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcRadio" });
  const {
    label: label3,
    formControlLabelProps,
    color: color2,
    error: error4,
    followColorWhenUnChecked,
    classes: classesProp,
    size,
    icon,
    checkedIcon,
    ...rest
  } = props;
  const classes = useMemo52(() => combineClasses(RcRadioClasses, classesProp), [classesProp]);
  const iconProps = useMemo52(() => getIconProps2({ size, icon, checkedIcon }), [checkedIcon, icon, size]);
  const Radio4 = /* @__PURE__ */ React644.createElement(Radio_default, {
    ...iconProps,
    ...rest,
    ref: ref2,
    color: "default",
    classes
  });
  if (label3) {
    return /* @__PURE__ */ React644.createElement(RcFormControlLabel, {
      ...formControlLabelProps,
      label: label3,
      control: Radio4
    });
  }
  return Radio4;
});
var RcRadio = styled_components_default(withTooltip(_RcRadio))`
  ${RadioStyle}
`;
RcRadio.defaultProps = {
  color: "interactive.f01",
  size: "medium"
};
RcRadio.displayName = "RcRadio";

// src/components/List/ListItemIcon/styles/ListItemIconStyle.tsx
var ListItemIconStyle = ({
  color: color2
}) => {
  return css2`
    ${flexCenterStyle};
    width: auto;
    height: unset;
    color: ${getParsePaletteColor(color2, ["neutral", "f04"])};
    min-width: unset;

    > ${RcRadio}, > ${RcCheckbox} {
      margin-right: ${spacing2(1)};
    }

    > ${RcSwitch} {
      /** The DOM structure of Switch is special,
        should remove margin-left after fix Switch as common control */
      margin-left: ${spacing2(1)};
      margin-right: ${spacing2(1)};
    }

    > ${RcIconButton}, > ${RcIcon} {
      margin-right: ${spacing2(2)};
    }
  `;
};

// src/components/List/ListItemIcon/utils/ListItemIconUtils.ts
var RcListItemIconClasses = RcClasses(["alignItemsFlexStart"], "RcListItemIcon");

// src/components/List/ListItemIcon/ListItemIcon.tsx
var _RcListItemIcon = forwardRef569((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcListItemIcon" });
  const { classes: classesProp, children: children2, color: color2, ...rest } = props;
  const classes = useMemo53(() => combineClasses(RcListItemIconClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React645.createElement(ListItemIcon_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcListItemIcon = styled_components_default(_RcListItemIcon)`
  ${ListItemIconStyle};
`;
RcListItemIcon.defaultProps = {};
RcListItemIcon.displayName = "RcListItemIcon";

// src/components/List/ListItemSecondaryAction/ListItemSecondaryAction.tsx
import React646, {
  forwardRef as forwardRef570,
  useLayoutEffect as useLayoutEffect19,
  useMemo as useMemo54,
  useRef as useRef71
} from "react";

// src/components/List/ListItemSecondaryAction/styles/ListItemSecondaryActionStyle.tsx
var ListItemSecondaryActionStyle = () => {
  return css2`
    ${flexCenterStyle};
    ${typography4("caption1")};
    color: ${palette22("neutral", "f04")};

    ${RcFormControlLabel} {
      margin-right: -${spacing2(2)};

      > ${RcRadio}, > ${RcCheckbox}, > ${RcSwitch} {
        margin-right: 0;
      }
    }

    > * + * {
      margin-left: ${spacing2(2)};
    }
  `;
};

// src/components/List/ListItemSecondaryAction/utils/ListItemSecondaryActionUtils.ts
var RcListItemSecondaryActionClasses = RcClasses([], "RcListItemSecondaryAction");

// src/components/List/ListItemSecondaryAction/ListItemSecondaryAction.tsx
var _RcListItemSecondaryAction = forwardRef570((inProps, ref2) => {
  const props = useThemeProps({
    props: inProps,
    name: "RcListItemSecondaryAction"
  });
  const { classes: classesProp, children: children2, ...rest } = props;
  const innerRef = useRef71(null);
  const divRef = useForkRef2(innerRef, ref2);
  const classes = useMemo54(() => combineClasses(RcListItemSecondaryActionClasses, classesProp), [classesProp]);
  useLayoutEffect19(() => {
    removeClassName(innerRef, "MuiListItemSecondaryAction-root");
  });
  return /* @__PURE__ */ React646.createElement(ListItemSecondaryAction_default, {
    ...rest,
    ref: divRef,
    classes
  }, children2);
});
var RcListItemSecondaryAction = styled_components_default(_RcListItemSecondaryAction)`
  ${ListItemSecondaryActionStyle}
`;
RcListItemSecondaryAction.defaultProps = {};
RcListItemSecondaryAction.displayName = "RcListItemSecondaryAction";

// src/components/List/ListSubheader/ListSubheader.tsx
import React647, { forwardRef as forwardRef571, useMemo as useMemo55 } from "react";

// src/components/List/ListSubheader/utils/ListSubheaderUtils.ts
var RcListSubheaderClasses = RcClasses(["gutters", "inset"], "RcListSubheader");

// src/components/List/ListSubheader/styles/ListSubheaderStyle.tsx
var ListSubheaderStyle = () => {
  return css2`
      height: 36px;
      padding-top: ${spacing2(3)};
      padding-bottom: ${spacing2(1)};
      display: flex;
      background: ${palette22("neutral", "b01")};
      color: ${palette22("neutral", "f04")};
      ${typography4("body1")};

      &.${RcListSubheaderClasses.gutters} {
        padding-left: ${spacing2(4)};
        padding-right: ${spacing2(2)};
      }

      &.${RcListSubheaderClasses.inset} {
        padding-left: ${spacing2(18)};
      }
    `;
};

// src/components/List/ListSubheader/ListSubheader.tsx
var _RcListSubheader = forwardRef571((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcListSubheader" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo55(() => combineClasses(RcListSubheaderClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React647.createElement(ListSubheader_default, {
    ...rest,
    ref: ref2,
    classes,
    color: "default"
  }, children2);
});
var RcListSubheader = styled_components_default(_RcListSubheader)`
  ${ListSubheaderStyle}
`;
RcListSubheader.defaultProps = {
  component: "li"
};
RcListSubheader.displayName = "RcListSubheader";

// src/components/List/ListItemText/ListItemText.tsx
import React648, { forwardRef as forwardRef572, useMemo as useMemo56 } from "react";

// src/components/List/ListItemText/utils/ListItemTextUtils.ts
var RcListItemTextClasses = RcClasses(["primary", "secondary", "inset", "multiline"], "RcListItemText");

// src/components/List/ListItemText/styles/ListItemTextStyle.tsx
var ListItemTextStyle = ({
  alignCenter,
  primaryColor: primaryColorProp,
  lineThrough,
  primaryTypographyProps,
  secondaryTypographyProps,
  isEllipsis
}) => {
  const primaryColor2 = getParsePaletteColor(primaryColorProp || primaryTypographyProps?.color, palette22("neutral", "f06"));
  const secondaryColor = getParsePaletteColor(secondaryTypographyProps?.color, palette22("neutral", "f04"));
  const primaryTypography = typography4(primaryTypographyProps?.variant || "body1");
  const secondaryTypography = typography4(secondaryTypographyProps?.variant || "caption1");
  const textDisplay = css2`
    ${isEllipsis && ellipsis()};
    text-decoration-line: ${lineThrough ? "line-through" : "inherit"};
  `;
  return css2`
    ${alignCenter && css2`
      flex: 'none !important';
    `}

    padding: 0;
    /** for next ListSecondaryAction default margin */
    margin: 0 ${spacing2(2)} 0 0;

    &.${RcListItemTextClasses.multiline} {
      margin: ${spacing2(1, 2, 1, 0)};
    }

    &.${RcListItemTextClasses.inset} {
      padding-left: ${spacing2(14)};
    }

    .${RcListItemTextClasses.primary} {
      ${textDisplay};
      ${primaryTypography};
      color: ${primaryColor2};
    }

    .${RcListItemTextClasses.secondary} {
      ${textDisplay};
      ${secondaryTypography};
      color: ${secondaryColor};
    }
  `;
};

// src/components/List/ListItemText/ListItemText.tsx
var _RcListItemText = forwardRef572((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcListItemText" });
  const {
    classes: classesProp,
    children: children2,
    isEllipsis,
    primaryTypographyProps: primaryTypographyPropsProp,
    secondaryTypographyProps: secondaryTypographyPropsProp,
    primaryColor: primaryColor2,
    alignCenter,
    lineThrough,
    ...rest
  } = props;
  const classes = useMemo56(() => combineClasses(RcListItemTextClasses, classesProp), [classesProp]);
  const primaryTypographyProps = useMemo56(() => omit3(primaryTypographyPropsProp, ["color", "variant"]), [primaryTypographyPropsProp]);
  const secondaryTypographyProps = useMemo56(() => omit3(secondaryTypographyPropsProp, ["color", "variant"]), [secondaryTypographyPropsProp]);
  return /* @__PURE__ */ React648.createElement(ListItemText_default, {
    ...rest,
    ref: ref2,
    classes,
    primaryTypographyProps,
    secondaryTypographyProps
  }, children2);
});
var RcListItemText = styled_components_default(withDeprecatedCheck(_RcListItemText, [
  {
    prop: "primaryColor",
    time: "2021-4",
    comment: "recommend use primaryTypographyProps color prop"
  },
  {
    prop: "alignCenter",
    time: "2021-4",
    comment: `recommend using classes to define it`
  },
  {
    prop: "lineThrough",
    time: "2021-4",
    comment: `recommend using classes to define it`
  }
], "RcListItemText"))`
  ${ListItemTextStyle}
`;
RcListItemText.defaultProps = {
  isEllipsis: true,
  primaryTypographyProps: {
    variant: "body1",
    color: "neutral.f06"
  },
  secondaryTypographyProps: {
    variant: "caption1",
    color: "neutral.f04"
  }
};
RcListItemText.displayName = "RcListItemText";

// src/components/Menu/MenuList/MenuListContext.ts
import { createContext as createContext17 } from "react";
var RcMenuListContext = createContext17({
  menuListId: "",
  autoClose: false,
  focusedMenuItemId: null,
  setFocusedMenuItemId: () => null,
  onClose: void 0
});

// src/components/Menu/SubMenu/SubMenuContext.ts
import { createContext as createContext18 } from "react";
var RcSubMenuContext = createContext18({
  autoClose: false,
  closeSubMenu: void 0
});

// src/components/Menu/MenuItem/utils/MenuItemUtils.ts
var RcMenuItemClasses = RcClasses(["checked", "unchecked", "gutters", "dense"], "RcMenuItem");
var RcMenuItemTopAndBottomPaddings = {
  medium: spacing2(1),
  large: spacing2(2)
};
var RcMenuItemLeftAndRightPaddings = {
  medium: spacing2(4),
  large: spacing2(5)
};

// src/components/Menu/MenuItem/styles/MenuItemStyle.tsx
var StyledCheckIcon = styled_components_default(RcIcon)`
  height: 22px;
`;
var MenuItemStyle = ({
  size
}) => {
  const topAndBottomPadding = RcMenuItemTopAndBottomPaddings[size];
  const leftAndRightPadding = RcMenuItemLeftAndRightPaddings[size];
  return css2`
    outline: none;
    box-sizing: border-box;
    ${typography4("body1")};
    color: ${palette22("neutral", "f06")};
    height: auto;
    min-height: 32px;
    min-width: 112px;
    padding-top: ${topAndBottomPadding};
    padding-bottom: ${topAndBottomPadding};

    .${RcMenuItemClasses.gutters} {
      padding-left: ${leftAndRightPadding};
      padding-right: ${leftAndRightPadding};
    }

    &.${RcMenuItemClasses.dense} {
      padding-top: ${spacing2(1)};
      padding-bottom: ${spacing2(1)};
      min-height: auto;
      line-height: 22px;
      font-weight: 700;
    }

    ${ListItemFormControlStyle};
  `;
};

// src/components/Menu/MenuItem/MenuItem.tsx
var _RcMenuItem = forwardRef573((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcMenuItem" });
  const {
    classes: classesProp,
    children: children2,
    className,
    onMouseEnter,
    onClick,
    onFocus,
    size,
    type: type3,
    checked,
    icon,
    symbol,
    avatar: avatar3,
    secondaryAction,
    idRef,
    isSubMenuItem,
    title,
    ...rest
  } = props;
  const isCheckedType = type3 === "checked";
  const menuItemId = useId2("menu-item", true);
  const menuContext = useContext24(RcMenuContext);
  const menuListContext = useContext24(RcMenuListContext);
  const subMenuContext = useContext24(RcSubMenuContext);
  const setFocusedMenuItemId = useEventCallback2(() => {
    if (!menuItemId)
      return;
    if (menuListContext.menuListId) {
      menuListContext.setFocusedMenuItemId(menuItemId);
    } else if (menuContext.menuId) {
      menuContext.setFocusedMenuItemId(menuItemId);
    }
  });
  const classes = useMemo57(() => combineClasses(RcMenuItemClasses, classesProp), [classesProp]);
  const toClasses = useMemo57(() => omit3(classes, ["checked", "unchecked"]), [classes]);
  const itemAvatar = useMemo57(() => {
    if (React649.isValidElement(avatar3)) {
      return isRcElement(avatar3, ["RcListItemAvatar"]) ? avatar3 : /* @__PURE__ */ React649.createElement(RcListItemAvatar, null, avatar3);
    }
    return null;
  }, [avatar3]);
  const itemIcon = useMemo57(() => {
    if (symbol) {
      return /* @__PURE__ */ React649.createElement(RcListItemIcon, null, /* @__PURE__ */ React649.createElement(RcIcon, {
        size: "small",
        symbol
      }));
    }
    if (React649.isValidElement(icon)) {
      return isRcElement(icon, ["RcListItemIcon"]) ? icon : /* @__PURE__ */ React649.createElement(RcListItemIcon, null, icon);
    }
    if (typeof icon === "string") {
      logInDev({
        component: "RcMenuItem",
        message: "please use symbol to replace icon string"
      });
      return /* @__PURE__ */ React649.createElement(RcListItemIcon, null, /* @__PURE__ */ React649.createElement(RcIcon, {
        size: "small"
      }, icon));
    }
    return null;
  }, [icon, symbol]);
  const itemSubAction = useMemo57(() => {
    if (isCheckedType && checked) {
      return /* @__PURE__ */ React649.createElement(RcListItemSecondaryAction, null, /* @__PURE__ */ React649.createElement(StyledCheckIcon, {
        size: "large",
        symbol: Check_default,
        color: ["interactive", "f01"]
      }));
    }
    return secondaryAction ? isRcElement(secondaryAction, ["RcListItemSecondaryAction"]) ? secondaryAction : /* @__PURE__ */ React649.createElement(RcListItemSecondaryAction, null, secondaryAction) : null;
  }, [checked, isCheckedType, secondaryAction]);
  const handleMouseEnter = useEventCallback2((e2) => {
    onMouseEnter?.(e2);
    setFocusedMenuItemId();
  });
  const handleClick = useEventCallback2((e2) => {
    onClick?.(e2);
    if (menuContext.autoClose && !isSubMenuItem) {
      menuContext.closeMenu(e2, "itemClick");
    }
    if (subMenuContext.autoClose && !isSubMenuItem) {
      subMenuContext?.closeSubMenu?.(e2, "itemClick");
    }
  });
  const handleFocus = useEventCallback2((e2) => {
    setFocusedMenuItemId();
    onFocus?.(e2);
  });
  useImperativeHandle13(idRef, () => menuItemId, [menuItemId]);
  return /* @__PURE__ */ React649.createElement(MenuItem_default, {
    "aria-checked": isCheckedType && checked ? true : void 0,
    ...rest,
    ref: ref2,
    title: typeof title === "string" ? title : void 0,
    classes: toClasses,
    className: clsx_m_default(className, {
      [classes.checked]: isCheckedType && checked,
      [classes.unchecked]: isCheckedType && !checked
    }),
    onMouseEnter: handleMouseEnter,
    onClick: handleClick,
    onFocus: handleFocus,
    "data-menuitem-id": menuItemId
  }, itemAvatar, itemIcon, children2, itemSubAction);
});
var RcMenuItem = styled_components_default(withTooltip(_RcMenuItem))`
  ${MenuItemStyle};
`;
RcMenuItem.defaultProps = {
  size: "medium"
};
RcMenuItem.displayName = "RcMenuItem";

// src/components/Downshift/utils/DownshiftUtils.tsx
var RcDownshiftInputClasses = RcClasses(["root", "input", "container"], "RcDownshiftInput");
var isItemCanSelected = (item) => {
  return !!(item && !item.disabled && !item.isMember && !item.unSelectable);
};
var DEFAULT_KEY_TO_CHIPS = [";", ",", "\\n"];
var DEFAULT_LIMIT_CHIPS = 20;
var DEFAULT_GET_OPTION_LABEL = (item) => item?.label || "";
var RcDownshiftDefaultRenderNoOptions = (getNoOptionsProps) => {
  return /* @__PURE__ */ React650.createElement(RcMenuItem, {
    component: "div",
    ...getNoOptionsProps()
  }, "No Options");
};
var RcDownshiftDefaultFilterOptions = (options, { inputValue, getOptionLabel, selectedItems }) => {
  return options.filter((item) => selectedItems.indexOf(item) < 0 && getOptionLabel?.(item).toLowerCase().startsWith(inputValue?.toLowerCase() || ""));
};
var RcAutocompleteDefaultFilterOptions = (options, { inputValue, getOptionLabel, inputChanged }) => {
  if (!inputChanged) {
    return options;
  }
  return options.filter((item) => getOptionLabel?.(item).toLowerCase().startsWith(inputValue?.toLowerCase() || ""));
};
var downshiftComponentName = "RcDownshift";
function stringArrToRegExp(keyToTags) {
  return new RegExp(keyToTags?.join("|") || "", "g");
}

// src/components/Downshift/utils/useDownshift.ts
import {
  useCallback as useCallback28,
  useLayoutEffect as useLayoutEffect20,
  useMemo as useMemo61,
  useRef as useRef74
} from "react";

// src/components/Downshift/SuggestionList/utils/useSuggestionList.ts
import {
  useCallback as useCallback27,
  useEffect as useEffect52,
  useMemo as useMemo59,
  useRef as useRef72
} from "react";

// src/components/Downshift/utils/useDownshiftGroup.ts
import { useMemo as useMemo58 } from "react";
var useDownshiftGroup = ({
  groupBy,
  options,
  filteredResult,
  getExpandIconProps,
  groupExpanded,
  groupDefaultExpanded,
  onGroupExpanded,
  groupVariant,
  getOptionDisabled,
  id: id3
}) => {
  const [groupExpandedMapRef, setGroupExpandedMap] = useRefState({});
  const isTitleGroup = groupVariant === "normal";
  const handleGroupExpandedChange = (groupName) => {
    const groupExpandedMap2 = groupExpandedMapRef.current;
    if (typeof groupExpanded === "boolean") {
      return;
    }
    const toExpandedState = !groupExpandedMap2[groupName];
    const newExpandedMap = {
      ...groupExpandedMap2,
      [groupName]: toExpandedState
    };
    setGroupExpandedMap(newExpandedMap);
    if (onGroupExpanded) {
      const group = optionsGroupList.find((x2) => x2.group === groupName);
      if (group) {
        onGroupExpanded({
          ...omit3(group, ["getExpandIconProps"]),
          expanded: toExpandedState
        }, newExpandedMap);
      }
    }
  };
  const handleExpandIconClick = useEventCallback2((e2, groupName) => {
    handleGroupExpandedChange(groupName);
    e2.preventDefault();
    e2.stopPropagation();
  });
  const optionsGroupList = useMemo58(() => {
    if (groupBy && options) {
      const indexBy = new Map();
      let warn = false;
      const afterGroupFn = [];
      const result = filteredResult.reduce((acc, option, index4) => {
        const group = groupBy(option);
        if (acc.length > 0 && acc[acc.length - 1].group === group) {
          const currGroup = acc[acc.length - 1];
          acc[acc.length - 1].options.push({
            ...option,
            group: currGroup,
            indexInOwnGroup: currGroup.options.length - 1
          });
        } else {
          if (true) {
            if (indexBy.get(group) && !warn) {
              logInDev({
                component: "useDownshift",
                comment: `Material-UI: The options provided combined with the \`groupBy\` method returns duplicated headers.
                  You can solve the issue by sorting the options with the output of \`groupBy\``
              });
              warn = true;
            }
            indexBy.set(group, true);
          }
          const newGroup = {
            key: index4,
            index: index4,
            group,
            order: acc.length,
            options: [{ ...option, indexInOwnGroup: 0 }],
            expanded: false,
            getExpandIconProps: (additionExpandIconProps) => {
              return newGroup.options.length > 1 ? combineProps({
                onClick: (e2) => {
                  handleExpandIconClick(e2, group);
                },
                onMouseDown: (e2) => {
                  e2.preventDefault();
                  e2.stopPropagation();
                },
                tabIndex: -1
              }, combineProps(additionExpandIconProps, getExpandIconProps?.(newGroup))) : void 0;
            }
          };
          newGroup.options[0].group = newGroup;
          if (isTitleGroup) {
            const groupTitleOption = {
              id: `${id3}-${group}`,
              label: group,
              disabled: true,
              group: newGroup
            };
            if (getOptionDisabled) {
              afterGroupFn.push(() => {
                groupTitleOption.disabled = getOptionDisabled(groupTitleOption);
              });
            }
            newGroup.options.unshift(groupTitleOption);
          }
          acc.push(newGroup);
        }
        return acc;
      }, []);
      afterGroupFn.forEach((fn) => {
        fn();
      });
      return result;
    }
    return [];
  }, [
    filteredResult,
    getExpandIconProps,
    getOptionDisabled,
    groupBy,
    handleExpandIconClick,
    id3,
    isTitleGroup,
    options
  ]);
  const initGroupExpandedState = (expandedState) => {
    if (typeof expandedState === "object") {
      setGroupExpandedMap(expandedState, false);
    } else if (typeof expandedState === "boolean") {
      setGroupExpandedMap(optionsGroupList.reduce((prev, curr) => {
        prev[curr.group] = expandedState;
        return prev;
      }, {}), false);
    }
  };
  useDepsChange(() => {
    initGroupExpandedState(groupDefaultExpanded);
  }, []);
  useDepsChange(() => {
    initGroupExpandedState(groupExpanded);
  }, [groupExpanded]);
  const groupExpandedMap = groupExpandedMapRef.current;
  const groupedResult = useMemo58(() => {
    const addExpandedResult = Object.entries(groupExpandedMap).reduce((prev, [key, expended]) => {
      const group = prev.find((x2) => x2.group === key);
      if (group)
        group.expanded = expended;
      return prev;
    }, [...optionsGroupList]);
    return addExpandedResult.reduce((prev, curr) => {
      if (curr.expanded) {
        prev.push(...curr.options);
      } else {
        prev.push(curr.options[0]);
      }
      return prev;
    }, []);
  }, [groupExpandedMap, optionsGroupList]);
  return {
    optionsGroupList,
    groupedResult,
    groupExpandedMap,
    handleGroupExpandedChange
  };
};

// src/components/Downshift/SuggestionList/utils/useSuggestionList.ts
var DEFAULT_HIGHLIGHTED_INDEX = -1;
var componentName = "useSuggestionList";
var useSuggestionList = ({
  id: id3,
  inputValue: inputValueProp,
  getOptionLabel = DEFAULT_GET_OPTION_LABEL,
  filterOptions,
  disabledItemsHighlightable,
  options,
  onInputChange: onInputChangeProp,
  inputRef,
  onKeyDown: onKeyDownProp,
  onSelect,
  onClear,
  getOptionDisabled,
  groupBy,
  onGroupExpanded,
  groupVariant,
  groupExpanded,
  groupDefaultExpanded,
  getExpandIconProps,
  processFilteredResult
}) => {
  const isTitleMode = groupVariant === "normal";
  const [inputValue, setInputValue] = useControlled({
    controlled: inputValueProp,
    default: "",
    name: componentName
  });
  const updateInputValue = (newValue) => {
    onInputChangeProp?.(newValue);
    setInputValue(newValue);
  };
  const focusInput = () => inputRef.current?.focus();
  const currUniqueId = useId2(id3 || "suggestion-list", !id3);
  const highlightedIndexRef = useRef72(DEFAULT_HIGHLIGHTED_INDEX);
  const changeHighlightedIndexReasonRef = useRef72();
  const forceUpdate = useForceUpdate();
  const getFilteredItems = useCallback27((items) => {
    if (filterOptions) {
      return filterOptions(items, {
        inputValue,
        getOptionLabel,
        selectedItems: []
      });
    }
    return items;
  }, [filterOptions, getOptionLabel, inputValue]);
  const filteredResult = useMemo59(() => {
    let results = getFilteredItems(options);
    results = processFilteredResult ? processFilteredResult(results, inputValue) : results;
    return results;
  }, [getFilteredItems, inputValue, options, processFilteredResult]);
  const { groupedResult, handleGroupExpandedChange, optionsGroupList } = useDownshiftGroup({
    id: currUniqueId,
    options,
    filteredResult,
    groupExpanded,
    groupDefaultExpanded,
    groupVariant,
    groupBy,
    getExpandIconProps,
    onGroupExpanded,
    getOptionDisabled
  });
  const optionItems = groupBy ? groupedResult : filteredResult;
  const setHighlightedIndex = (index4, {
    reRender = false,
    reason
  }) => {
    changeHighlightedIndexReasonRef.current = reason;
    if (highlightedIndexRef.current !== index4) {
      highlightedIndexRef.current = index4;
      if (reRender)
        forceUpdate();
    }
  };
  const handleInputChange = (newValue) => {
    if (inputValue !== newValue) {
      setHighlightedIndex(DEFAULT_HIGHLIGHTED_INDEX, { reason: "auto" });
      updateInputValue(newValue);
    }
    return false;
  };
  const getIsItemCanSelected = (item) => {
    return !!item && item.freeSolo || isItemCanSelected(item) && !getOptionDisabled?.(item);
  };
  const selectItem = (e2, selectedItem) => {
    if (getIsItemCanSelected(selectedItem)) {
      onSelect?.(e2, selectedItem);
      return true;
    }
    return false;
  };
  const clearInput = () => {
    if (inputRef.current && inputRef.current.value.length > 0) {
      updateInputValue("");
    }
  };
  const reset2 = (isFocus) => {
    clearInput();
    onInputChangeProp?.("");
    if (isFocus)
      focusInput();
  };
  const { onKeyFocusedIndexHandle, getNextFocusableOption } = useKeyboardMoveFocus({
    options: optionItems,
    focusedIndexRef: highlightedIndexRef,
    infinite: true,
    onFocusedIndexChange: (event, toIndex) => {
      setHighlightedIndex(toIndex, { reason: "keyboard", reRender: true });
      event?.preventDefault();
    },
    getOptionDisabled: disabledItemsHighlightable ? void 0 : (child) => {
      return !getIsItemCanSelected(child);
    }
  });
  const getItemProps = ({
    item,
    index: index4 = 0,
    ...itemRest
  }) => {
    const currGroup = item.group;
    const isGroupTitle = item === currGroup?.options[0];
    const itemCount = optionItems.length;
    const groupOrder = currGroup?.order || 0;
    return combineProps({
      id: `${currUniqueId}-option-${index4}`,
      onClick: (e2) => {
        selectItem(e2, item);
      },
      onMouseDown: (e2) => {
        e2.preventDefault();
        e2.stopPropagation();
      },
      onMouseOver: () => {
        if (highlightedIndexRef.current !== index4 && getIsItemCanSelected(item)) {
          setHighlightedIndex(index4, { reason: "mouse", reRender: true });
        }
      },
      ...isTitleMode && isGroupTitle ? {} : {
        role: "option",
        "aria-setsize": itemCount - (isTitleMode ? optionsGroupList?.length || 0 : 0),
        "aria-posinset": index4 - (isTitleMode ? groupOrder + 1 : 0)
      }
    }, itemRest);
  };
  const handleF10KeyDown = (e2) => {
    const highlightedIndex = highlightedIndexRef.current;
    if (e2.shiftKey) {
      const currOption = optionItems[highlightedIndex];
      const currentGroup = currOption.group;
      if (currentGroup && currentGroup.options.length > 1) {
        handleGroupExpandedChange(currentGroup.group);
      }
    }
  };
  const getInputProps = (props) => {
    return combineProps({
      id: `${currUniqueId}-input`,
      autoComplete: "off",
      onChange: (e2) => {
        const changeValue = e2.target.value;
        handleInputChange(changeValue);
      },
      onKeyDown: (e2) => {
        onKeyDownProp?.(e2, highlightedIndexRef.current);
        switch (e2.key) {
          case "F10":
            handleF10KeyDown(e2);
            break;
          case "Enter": {
            const highlightedIndex = highlightedIndexRef.current;
            if (e2.which === 229)
              return;
            if (highlightedIndex !== DEFAULT_HIGHLIGHTED_INDEX) {
              const currOption = optionItems[highlightedIndex];
              const isGroupTitle = currOption === currOption.group?.options[0];
              if (isGroupTitle) {
                const { onClick } = currOption.group.getExpandIconProps();
                onClick?.(e2);
              } else {
                selectItem(e2, currOption);
              }
              e2.stopPropagation();
            }
            e2.preventDefault();
            break;
          }
          default:
            onKeyFocusedIndexHandle(e2);
            break;
        }
      }
    }, props);
  };
  const getInputAriaProps = (props) => {
    return combineProps({
      onContainerClick: focusInput,
      role: "combobox",
      "aria-autocomplete": "list",
      "aria-expanded": true,
      "aria-haspopup": true,
      "aria-owns": `${currUniqueId}-menu`,
      "aria-activedescendant": highlightedIndexRef.current > -1 ? `${currUniqueId}-option-${highlightedIndexRef.current}` : void 0
    }, props);
  };
  const getLabelProps = (props) => {
    return combineProps({
      htmlFor: `${currUniqueId}-input`,
      id: `${currUniqueId}-label`
    }, props);
  };
  const getMenuProps = (restMenuProps) => {
    return combineProps({
      "aria-labelledby": `${currUniqueId}-label`,
      id: `${currUniqueId}-menu`,
      role: "listbox"
    }, restMenuProps);
  };
  const getClearButtonProps = (props) => {
    return combineProps({
      id: `${currUniqueId}-clear-button`,
      onClick: (e2) => {
        onClear?.(e2);
        reset2(true);
      }
    }, props);
  };
  useEffect52(() => {
    changeHighlightedIndexReasonRef.current = void 0;
  });
  return {
    reset: reset2,
    clearInput,
    forceUpdate,
    focusInput,
    updateInputValue,
    selectItem,
    onKeyFocusedIndexHandle,
    getClearButtonProps,
    getLabelProps,
    getMenuProps,
    getInputProps,
    getInputAriaProps,
    getItemProps,
    highlightedIndexRef,
    highlightedIndex: highlightedIndexRef.current,
    optionItems,
    inputValue,
    onInputChange: handleInputChange,
    setHighlightedIndex,
    changeHighlightedIndexReasonRef,
    changeHighlightedIndexReason: changeHighlightedIndexReasonRef.current,
    optionsGroupList,
    id: currUniqueId,
    getNextFocusableOption,
    handleF10KeyDown
  };
};

// src/components/Downshift/utils/useDownshiftTag.ts
var import_isString = __toModule(require_isString());
var import_uniqueId2 = __toModule(require_uniqueId());
import { useMemo as useMemo60, useRef as useRef73, useState as useState33 } from "react";
var DOWNSHIFT_ID_TOKEN = "rc-chip-";
var useDownshiftTag = ({
  id: downshiftId,
  value: selectedItemsProp = [],
  onChange: onSelectChange,
  variant,
  getOptionLabel = DEFAULT_GET_OPTION_LABEL,
  onInputChange: onInputChangeProp,
  wrapperRef,
  inputRef,
  freeSolo,
  maxFreeSolo,
  keyToTags,
  onMaxFreeSolo,
  multiple,
  label: labelProp,
  required: required2,
  disabled: disabled3,
  getStopCreateFreeSolo,
  onReset
}) => {
  const isAutocomplete = variant === "autocomplete";
  const isSelectedFromAutocompleteRef = useRef73(false);
  const [tags, _setTags] = useControlled({
    controlled: selectedItemsProp,
    default: [],
    name: downshiftComponentName
  });
  const [focused, setFocused] = useState33(false);
  const [focusedIndexRef, setFocusedIndex] = useRefState(0);
  const freeSoloCount = useMemo60(() => tags.filter((x2) => x2.freeSolo).length, [tags]);
  const setTags = (_selectedItems) => {
    _setTags(_selectedItems);
    onSelectChange?.(_selectedItems);
    if (isAutocomplete && _selectedItems.length === 1) {
      const result = getOptionLabel(_selectedItems[0]);
      onInputChangeProp?.(result);
      isSelectedFromAutocompleteRef.current = true;
    }
  };
  const _focusTag = (tagToFocus) => {
    const textFieldElm = wrapperRef?.current;
    const inputElm = inputRef.current;
    if (tagToFocus === -1) {
      inputElm?.focus();
    } else {
      textFieldElm?.querySelector(`[data-tag-index="${tagToFocus}"]`)?.focus();
    }
  };
  const focusTag = useEventCallback2((tagToFocus, focus2 = true) => {
    if (focusedIndexRef.current === tagToFocus)
      return;
    setFocusedIndex(tagToFocus);
    if (focus2)
      _focusTag(tagToFocus);
  });
  const checkAndAddFreeSolo = ({
    selectedItem,
    value
  } = {}, e2) => {
    let isAddItem = false;
    const currentValue = value ?? inputRef.current?.value;
    if (!getStopCreateFreeSolo?.() && !selectedItem && freeSolo && currentValue && currentValue.length > 0) {
      if (freeSoloCount < maxFreeSolo) {
        const items = currentValue.trim().split(stringArrToRegExp(keyToTags)).filter((x2) => x2.trim() !== "");
        const toLength = freeSoloCount + items.length;
        if (toLength > maxFreeSolo) {
          items.splice(-(toLength - maxFreeSolo));
          onMaxFreeSolo?.(maxFreeSolo);
        }
        if (items.length > 0) {
          setTags([
            ...tags,
            ...items.map((label3) => ({
              id: (0, import_uniqueId2.default)(DOWNSHIFT_ID_TOKEN),
              isSuggestion: false,
              freeSolo: true,
              label: label3
            }))
          ]);
          isAddItem = true;
        }
      } else {
        onMaxFreeSolo?.(maxFreeSolo);
      }
      onReset?.(e2);
    }
    return isAddItem;
  };
  const removeTag = (selectedItem) => {
    const selectedItemIndex = tags.indexOf(selectedItem);
    if (selectedItemIndex > -1) {
      setTags([
        ...tags.slice(0, selectedItemIndex),
        ...tags.slice(selectedItemIndex + 1)
      ]);
    }
  };
  const addTag = (selectedItem) => {
    if (selectedItem.freeSolo) {
      if (freeSoloCount < maxFreeSolo) {
        selectedItem.id = (0, import_uniqueId2.default)(DOWNSHIFT_ID_TOKEN);
      } else {
        onMaxFreeSolo?.(maxFreeSolo);
        return;
      }
    }
    if (multiple) {
      setTags([...tags, selectedItem]);
    } else {
      setTags([selectedItem]);
    }
  };
  const { onKeyFocusedIndexHandle: handleTagKey } = useKeyboardMoveFocus({
    options: tags,
    focusedIndexRef,
    infinite: "order",
    onFocusedIndexChange: (event, toIndex) => {
      focusTag(toIndex);
      event?.preventDefault();
    }
  });
  const getTagListBoxProps = (props) => {
    return {
      "aria-label": (0, import_isString.default)(labelProp) ? labelProp : void 0,
      "aria-required": required2 || false,
      "aria-disabled": disabled3 || false,
      ...props
    };
  };
  const getTagProps = ({
    index: index4,
    selectedItem,
    ...restTagProps
  }) => {
    const tabIndex = !focused && index4 === 0 ? 0 : -1;
    return combineProps({
      tabIndex,
      role: "button",
      key: `${downshiftId}-selected-item-${index4}`,
      "data-tag-index": index4,
      "data-item-last": index4 === tags.length - 1,
      onClick: (e2) => {
        e2.stopPropagation();
      },
      onBlur: () => setFocused(false),
      onFocus: () => {
        focusTag(index4);
        setFocused(true);
      },
      onKeyDown: (e2) => {
        const focusedIndex = focusedIndexRef.current;
        switch (e2.key) {
          case "Backspace":
            {
              const lengthBeforeDelete = tags.length;
              focusTag(lengthBeforeDelete === 1 ? -1 : focusedIndex === 0 ? 0 : focusedIndex - 1);
              removeTag(selectedItem);
            }
            break;
          case "Delete":
            {
              const lengthBeforeDelete = tags.length;
              focusTag(lengthBeforeDelete === 1 ? -1 : focusedIndex === tags.length - 1 ? focusedIndex - 1 : focusedIndex);
              removeTag(selectedItem);
            }
            break;
          default:
            handleTagKey(e2);
            break;
        }
      },
      onDelete: (e2) => {
        if (e2.button === 0) {
          removeTag(selectedItem);
          setFocused(false);
        }
      }
    }, restTagProps);
  };
  return {
    focused,
    setFocused,
    tags,
    isSelectedFromAutocompleteRef,
    focusedIndex: focusedIndexRef.current,
    checkAndAddFreeSolo,
    getTagListBoxProps,
    getTagProps,
    focusTag,
    addTag,
    clearTags: () => {
      setTags([]);
    },
    blur: () => {
      if (focusedIndexRef.current !== -1) {
        focusTag(-1, false);
      }
      setFocused(false);
    },
    focusLast: () => {
      const currTagsLength = tags.length;
      if (currTagsLength > 0) {
        focusTag(currTagsLength - 1);
      }
    }
  };
};

// src/components/Downshift/utils/useDownshift.ts
var DOWNSHIFT_ID_NO_RESULT_TOKEN = "rc-chip-empty";
var DEFAULT_HIGHLIGHTED_INDEX2 = -1;
var useDownshift = ({
  multiple: multipleProp,
  variant,
  label: labelProp,
  inputValue: inputValueProp,
  getOptionLabel = DEFAULT_GET_OPTION_LABEL,
  keyToTags = DEFAULT_KEY_TO_CHIPS,
  filterOptions: filterOptionsProp,
  disabledItemsHighlightable,
  options,
  freeSolo,
  onInputChange: onInputChangeProp,
  maxFreeSolo,
  onMaxFreeSolo,
  openOnFocus,
  disableCloseOnSelect,
  initialIsOpen,
  autoSelect,
  inputContainerRef,
  inputRef,
  wrapperRef,
  onKeyDown: onKeyDownProp,
  onChange: onSelectChange,
  value: selectedItemsProp = [],
  disabled: disabled3,
  renderNoOptions,
  onClear,
  autoHighlight,
  getOptionDisabled,
  addNoOptionItem,
  groupBy,
  onGroupExpanded,
  groupVariant,
  groupExpanded,
  groupDefaultExpanded,
  getExpandIconProps,
  required: required2,
  open: openProp,
  onOpen,
  onClose,
  focused
}) => {
  const isAutocomplete = variant === "autocomplete";
  const downshiftId = useId2("downshift", true);
  const [inputFocused, setInputFocused] = useControlled({
    controlled: focused,
    default: false,
    name: downshiftComponentName
  });
  const [isOpen, setIsOpen] = useControlled({
    controlled: openProp,
    default: initialIsOpen || false,
    name: downshiftComponentName
  });
  const isInputValueChangedRef = useRef74(false);
  const isCompositionRef = useRef74(false);
  const noOptionItemRef = useRef74(null);
  const stopAutoSelectRef = useRef74(false);
  const fromPasteString = useRef74("");
  const keepHighlightedIndexRef = useRef74(false);
  const { sleep, getSleeping } = useSleep();
  const multiple = isAutocomplete ? false : multipleProp;
  const {
    isSelectedFromAutocompleteRef,
    tags,
    focused: tagFocused,
    addTag,
    checkAndAddFreeSolo,
    focusedIndex: focusedTagIndex,
    focusTag,
    focusLast: focusLastTag,
    clearTags,
    blur: blurTags,
    getTagProps,
    getTagListBoxProps
  } = useDownshiftTag({
    id: downshiftId,
    value: selectedItemsProp,
    onChange: onSelectChange,
    getOptionLabel,
    onInputChange: onInputChangeProp,
    variant,
    wrapperRef,
    inputRef,
    freeSolo,
    maxFreeSolo,
    keyToTags,
    onMaxFreeSolo,
    multiple,
    label: labelProp,
    required: required2,
    disabled: disabled3,
    getStopCreateFreeSolo: () => isCompositionRef.current,
    onReset: () => {
      resetState();
    }
  });
  const processFilteredResult = useCallback28((results, inputValue2 = "") => {
    const getInputValueAsItem = () => {
      const label3 = inputValue2.trim();
      if (label3.length > 0) {
        const item = {
          id: DOWNSHIFT_ID_NO_RESULT_TOKEN,
          isSuggestion: false,
          freeSolo: true,
          label: label3
        };
        return item;
      }
      return null;
    };
    noOptionItemRef.current = null;
    if (addNoOptionItem) {
      const item = getInputValueAsItem();
      noOptionItemRef.current = item;
      if (item && freeSolo) {
        switch (addNoOptionItem) {
          case "first":
            return [item, ...results];
          case "last":
            return [...results, item];
          default:
            break;
        }
      }
    } else if (results.length === 0) {
      const item = getInputValueAsItem();
      noOptionItemRef.current = item;
      if (item && freeSolo && !renderNoOptions) {
        return [...results, item];
      }
    }
    return results;
  }, [addNoOptionItem, freeSolo, renderNoOptions]);
  const filterOptions = useCallback28((items, state) => {
    if (filterOptionsProp) {
      return filterOptionsProp(items, {
        ...state,
        inputChanged: isInputValueChangedRef.current,
        selectedItems: tags
      });
    }
    return items;
  }, [filterOptionsProp, tags]);
  const {
    inputValue,
    optionItems,
    optionsGroupList,
    highlightedIndexRef,
    changeHighlightedIndexReasonRef,
    forceUpdate,
    selectItem,
    handleF10KeyDown,
    onKeyFocusedIndexHandle,
    setHighlightedIndex,
    updateInputValue,
    clearInput,
    getNextFocusableOption,
    getItemProps,
    focusInput,
    reset: resetSuggestionList,
    getInputProps: getSuggestionListInputProps,
    getInputAriaProps: getSuggestionListInputAriaProps,
    getClearButtonProps: getSuggestionListClearButtonProps,
    getLabelProps,
    getMenuProps
  } = useSuggestionList({
    id: downshiftId,
    inputRef,
    inputValue: inputValueProp,
    options,
    disabledItemsHighlightable,
    groupVariant,
    groupExpanded,
    groupDefaultExpanded,
    getOptionLabel,
    filterOptions,
    processFilteredResult,
    onInputChange: onInputChangeProp,
    onKeyDown: onKeyDownProp,
    onClear,
    getOptionDisabled,
    groupBy,
    onGroupExpanded,
    getExpandIconProps,
    onSelect: (e2, selectedItem) => {
      addTag(selectedItem);
      resetState(e2);
      inputContainerScrollToBottom();
      if (disableCloseOnSelect) {
        if (autoHighlight) {
          const currIndex = highlightedIndexRef.current;
          const nextValidIndex = getNextFocusableOption();
          const toIndex = nextValidIndex > currIndex || nextValidIndex === optionItems.length - 1 ? nextValidIndex - 1 : nextValidIndex;
          setHighlightedIndex(toIndex, {
            reRender: true
          });
        } else {
          highlightedIndexRef.current = DEFAULT_HIGHLIGHTED_INDEX2;
        }
      }
    }
  });
  const readOnly = !isAutocomplete && !multiple && tags.length >= 1 ? true : void 0;
  const closeMenu = (e2, reason) => {
    keepHighlightedIndexRef.current = false;
    isInputValueChangedRef.current = false;
    setHighlightedIndex(DEFAULT_HIGHLIGHTED_INDEX2, { reason: "auto" });
    if (isOpen) {
      if (e2 && reason) {
        onClose?.(e2, reason);
      }
      setIsOpen(false);
    }
  };
  const openMenu = (e2) => {
    if (!isOpen) {
      if (e2)
        onOpen?.(e2);
      setIsOpen(true);
    }
  };
  const handleInputChange = (newValue, open = true, e2) => {
    if (inputValue !== newValue) {
      setHighlightedIndex(DEFAULT_HIGHLIGHTED_INDEX2, { reason: "auto" });
      if (stringArrToRegExp(keyToTags).test((newValue || "").trim())) {
        const resultHaveAdd = checkAndAddFreeSolo({ value: newValue }, e2);
        if (!disableCloseOnSelect) {
          closeMenu(e2, "toggleInput");
        } else if (open) {
          openMenu(e2);
        }
        return resultHaveAdd;
      }
      updateInputValue(newValue);
    }
    if (open)
      openMenu(e2);
    return false;
  };
  const inputContainerScrollToBottom = () => {
    requestAnimationFrame(() => {
      const inputContainer = inputContainerRef?.current;
      if (inputContainer) {
        inputContainer.scrollTop = inputContainer.scrollHeight;
      }
    });
  };
  const resetState = (e2) => {
    if (!isSelectedFromAutocompleteRef.current) {
      clearInput();
    }
    blurTags();
    isSelectedFromAutocompleteRef.current = false;
    noOptionItemRef.current = null;
    isInputValueChangedRef.current = false;
    if (!disableCloseOnSelect) {
      closeMenu(e2, "select-option");
    }
  };
  const reset2 = (isFocus) => {
    resetState();
    onSelectChange?.([]);
    resetSuggestionList(isFocus);
  };
  const keepHighlightedIndex = () => {
    keepHighlightedIndexRef.current = true;
  };
  useChange(() => {
    const shouldResetHighlightedIndex = !keepHighlightedIndexRef.current;
    if (options !== void 0 && shouldResetHighlightedIndex) {
      setHighlightedIndex(DEFAULT_HIGHLIGHTED_INDEX2, { reason: "auto" });
    }
  }, () => options);
  const defaultHighlightedIndex = useMemo61(() => {
    return autoHighlight ? getNextFocusableOption(0) : -1;
  }, [autoHighlight, getNextFocusableOption]);
  if (isOpen) {
    if (highlightedIndexRef.current === DEFAULT_HIGHLIGHTED_INDEX2) {
      let toIndex = defaultHighlightedIndex;
      if (isAutocomplete && tags.length === 1) {
        const itemText = getOptionLabel(tags[0]);
        const fIndex = optionItems.findIndex((x2) => getOptionLabel(x2) === itemText);
        if (fIndex > -1) {
          toIndex = fIndex;
        }
      }
      setHighlightedIndex(toIndex, { reason: "auto" });
    } else {
      const currIndex = highlightedIndexRef.current;
      const availableIndex = getNextFocusableOption(currIndex);
      if (currIndex !== availableIndex) {
        setTimeout(() => {
          setHighlightedIndex(availableIndex, {
            reason: "auto",
            reRender: true
          });
        }, 0);
      }
    }
  }
  const handleAutocompleteText = () => {
    if (isAutocomplete && tags.length > 0) {
      const result = getOptionLabel(tags[0]);
      onInputChangeProp?.(result);
    }
  };
  useLayoutEffect20(() => {
    if (isOpen) {
      forceUpdate();
    }
    handleAutocompleteText();
  }, []);
  const getInputProps = (props) => {
    const suggestionListItemProps = getSuggestionListInputProps(props);
    return combineProps({
      ...suggestionListItemProps,
      onPaste: (e2) => {
        if (freeSolo) {
          const clipboardData = e2.clipboardData;
          const { position: position4 } = getSelectionPosition(inputRef);
          const currText = inputValue ?? "";
          const pasteText = clipboardData.getData("Text") ?? "";
          fromPasteString.current = currText.slice(0, position4.start) + pasteText + currText.slice(position4.end);
        }
      },
      onChange: (e2) => {
        const changeValue = fromPasteString.current || e2.target.value;
        handleInputChange(changeValue, void 0, e2);
        if (isAutocomplete && changeValue.length === 0) {
          clearTags();
        }
        fromPasteString.current = "";
        isInputValueChangedRef.current = true;
      },
      onFocus: (e2) => {
        setInputFocused(true);
        if (openOnFocus)
          openMenu(e2);
        if (isAutocomplete) {
          inputRef.current?.select();
        }
        stopAutoSelectRef.current = false;
        blurTags();
      },
      onBlur: (e2) => {
        setInputFocused(false);
        if (autoSelect && !stopAutoSelectRef.current) {
          if (!freeSolo)
            selectItem(e2, optionItems[highlightedIndexRef.current]);
          checkAndAddFreeSolo({}, e2);
        }
        handleAutocompleteText();
        closeMenu(e2, "blur");
      },
      onCompositionStart: () => {
        isCompositionRef.current = true;
      },
      onCompositionEnd: async () => {
        await sleep(20);
        isCompositionRef.current = false;
      },
      onKeyDown: (e2) => {
        keepHighlightedIndexRef.current = false;
        onKeyDownProp?.(e2, highlightedIndexRef.current);
        const { isSelectRange, position: position4 } = getSelectionPosition(inputRef);
        const currTagsLength = tags.length;
        if (!isSelectRange && position4.start === 0 && currTagsLength > 0 && e2.key === "Backspace") {
          stopAutoSelectRef.current = true;
          focusLastTag();
        } else {
          const highlightedIndex = highlightedIndexRef.current;
          switch (e2.key) {
            case "Escape":
              if (isOpen) {
                e2.preventDefault();
                e2.stopPropagation();
                closeMenu(e2, "escape");
              }
              break;
            case "Tab":
              if (e2.which === 229)
                return;
              if (getSleeping()) {
                e2.preventDefault();
                e2.stopPropagation();
                return;
              }
              if (e2.shiftKey && currTagsLength > 0) {
                stopAutoSelectRef.current = true;
              }
              if (!e2.shiftKey && !isCompositionRef.current) {
                const currentHighlightItem = optionItems[highlightedIndex];
                if (isOpen && currentHighlightItem) {
                  if (selectItem(e2, currentHighlightItem)) {
                    e2.preventDefault();
                    e2.stopPropagation();
                  }
                } else if (checkAndAddFreeSolo({}, e2)) {
                  e2.preventDefault();
                  e2.stopPropagation();
                }
              }
              break;
            case "Enter":
              if (e2.which === 229)
                return;
              if (freeSolo && highlightedIndex === DEFAULT_HIGHLIGHTED_INDEX2 && checkAndAddFreeSolo({
                selectedItem: isOpen ? optionItems[highlightedIndex] : void 0
              }, e2)) {
                e2.stopPropagation();
                closeMenu(e2, "select-option");
              } else if (highlightedIndex !== DEFAULT_HIGHLIGHTED_INDEX2 && isOpen && !isCompositionRef.current) {
                selectItem(e2, optionItems[highlightedIndex]);
                e2.stopPropagation();
              }
              e2.preventDefault();
              break;
            case "F10":
              handleF10KeyDown(e2);
              break;
            case "ArrowUp":
            case "ArrowDown":
              if (readOnly) {
                e2.preventDefault();
                return;
              }
              if (isAutocomplete && tags.length > 0 && !isOpen) {
                openMenu(e2);
                e2.preventDefault();
                break;
              }
              onKeyFocusedIndexHandle(e2);
              openMenu(e2);
              break;
            default:
              if (isOpen) {
                onKeyFocusedIndexHandle(e2);
              }
              break;
          }
        }
      }
    }, props);
  };
  const getInputAriaProps = (props) => {
    const suggestionListInputAriaProps = getSuggestionListInputAriaProps(props);
    return combineProps({
      ...suggestionListInputAriaProps,
      readOnly,
      unselectable: readOnly ? "on" : void 0,
      "aria-owns": isOpen ? `${downshiftId}-menu` : void 0,
      "aria-expanded": !!isOpen
    }, props);
  };
  const getPopperProps = (restPopperProps) => {
    return combineProps({
      id: `${downshiftId}-popper`,
      style: { width: wrapperRef?.current?.clientWidth },
      role: "presentation",
      onMouseDown: (e2) => {
        e2.preventDefault();
        e2.stopPropagation();
      }
    }, restPopperProps);
  };
  const getToggleButtonProps = (props) => {
    return combineProps({
      disabled: !isOpen && optionItems.length === 0 || disabled3 || readOnly,
      id: `${downshiftId}-toggle-button`,
      onMouseDown: (e2) => {
        e2.preventDefault();
        e2.stopPropagation();
      },
      onClick: (e2) => {
        if (isOpen) {
          closeMenu(e2, "toggleInput");
        } else {
          openMenu(e2);
          focusInput();
        }
      },
      tabIndex: -1
    }, props);
  };
  const getClearButtonProps = (props) => {
    const suggestionListClearButtonProps = getSuggestionListClearButtonProps(props);
    return combineProps({
      ...suggestionListClearButtonProps,
      onClick: (e2) => {
        onClear?.(e2);
        reset2(true);
      }
    }, props);
  };
  const getNoOptionsProps = (additionProps) => {
    return combineProps({
      onClick: (e2) => {
        closeMenu(e2, "blur");
      },
      role: "presentation"
    }, additionProps);
  };
  return {
    focusInput,
    readOnly,
    getTagProps,
    getClearButtonProps,
    activeIndex: focusedTagIndex,
    setActiveIndex: focusTag,
    isOpen,
    getToggleButtonProps,
    getPopperProps,
    getLabelProps,
    getMenuProps,
    getInputProps,
    getInputAriaProps,
    getTagListBoxProps,
    getItemProps,
    getNoOptionsProps,
    noOptionItem: noOptionItemRef.current,
    highlightedIndex: highlightedIndexRef.current,
    tags,
    optionItems,
    inputValue,
    onInputChange: handleInputChange,
    keepHighlightedIndex,
    isKeepHighlightedIndex: keepHighlightedIndexRef.current,
    setHighlightedIndex,
    changeHighlightedIndexReason: changeHighlightedIndexReasonRef.current,
    closeMenu,
    openMenu,
    reset: reset2,
    forceUpdate,
    optionsGroupList,
    focused: focused ?? (tagFocused || inputFocused ? true : void 0),
    id: downshiftId,
    inputChanged: isInputValueChangedRef.current
  };
};

// src/components/Downshift/utils/useDownshiftError.tsx
var import_react_is12 = __toModule(require_react_is2());
import React651, { useEffect as useEffect53 } from "react";
var useDownshiftError = ({ isNew, MenuItem: MenuItem3, InputItem }) => {
  if (isShowJunoWarning) {
    useEffect53(() => {
      if (!isNew) {
        logInDev({
          component: "RcDownshift",
          message: `you use the old structure,
        1. please switch to new props \`options\`.
        2. migrate \`helperText\` to control with outside.
        3. not use \`nameError\` \`allowPlainHelperText\`.
        4. tags with isError should use \`renderTags\` and check error outside`
        });
      }
      if (MenuItem3 && !(0, import_react_is12.isForwardRef)(/* @__PURE__ */ React651.createElement(MenuItem3, null))) {
        logInDev({
          component: "RcDownshift",
          message: `\`MenuItem\` must wrap with forwardRef, and that props is a deprecated props,
!!!!!!!!!!!!! suggest you switch to \`renderOption\``,
          level: "error"
        });
      }
      if (InputItem && !(0, import_react_is12.isForwardRef)(/* @__PURE__ */ React651.createElement(InputItem, null))) {
        logInDev({
          component: "RcDownshift",
          message: `\`InputItem\` must wrap with \`forwardRef\`, and that props is a deprecated props,
!!!!!!!!!!!!! suggest you switch to \`renderTags\``,
          level: "error"
        });
      }
    }, []);
  }
};

// src/components/Downshift/Downshift.tsx
import React660, {
  forwardRef as forwardRef579,
  memo as memo418,
  useImperativeHandle as useImperativeHandle15,
  useMemo as useMemo64,
  useRef as useRef81,
  useState as useState35
} from "react";

// src/components/Downshift/styles/DownshiftInput.tsx
import React652 from "react";
var RcDownshiftInput = ({
  inputRef,
  containerRef,
  startAdornment,
  containerClassName,
  onContainerClick,
  ...rest
}) => /* @__PURE__ */ React652.createElement("div", {
  ref: containerRef,
  onClick: onContainerClick,
  className: containerClassName
}, startAdornment, /* @__PURE__ */ React652.createElement("input", {
  ref: inputRef,
  ...rest
}));

// src/components/Downshift/styles/DownshiftStyle.tsx
var ArrowDownButton = styled_components_default(RcIconButton)``;
var EndAdornment = styled_components_default.div`
  right: 0;
  position: absolute;
`;
var DownshiftStyle = ({
  toggleButton = false,
  clearBtn = false
}) => {
  const paddingRight = (toggleButton ? 36 : 0) + (clearBtn ? 32 : 0);
  return css2`
    .${RcDownshiftInputClasses.root} {
      flex-wrap: wrap;
      padding: 0 ${px2(paddingRight)} 0 0;

      ${RcChip} {
        margin: ${spacing2(0.5)};

        .${RcChipClasses.deleteIcon} {
          margin-left: -${spacing2(1.5)};
        }
      }

      &:before,
      &:after {
        z-index: 1;
      }
    }

    .${RcDownshiftInputClasses.container} {
      display: flex;
      flex-wrap: wrap;
      overflow-y: auto;
      max-height: 132px;
      width: 100%;
    }
  `;
};

// src/components/Downshift/styles/StyledPopper.tsx
import React654, { forwardRef as forwardRef575 } from "react";

// src/components/Popper/Popper.tsx
import React653, { forwardRef as forwardRef574 } from "react";

// src/components/Popper/styles/PopperStyle.tsx
var PopperStyle = () => {
  return css2`
    z-index: ${zIndex3("modal")};
  `;
};

// src/components/Popper/Popper.tsx
var _RcPopper = forwardRef574((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcPopper" });
  const { children: children2, ...rest } = props;
  const { externalWindow } = useRcPortalWindowContext();
  return /* @__PURE__ */ React653.createElement(Popper_default, {
    container: externalWindow?.document.body,
    ...rest,
    ref: ref2
  }, children2);
});
var RcPopper = styled_components_default(_RcPopper)`
  ${PopperStyle};
`;
RcPopper.defaultProps = {};
RcPopper.displayName = "RcPopper";

// src/components/Downshift/styles/StyledPopper.tsx
var radiusLg = radius3("lg");
var _StyledPopper = forwardRef575(({ position: position4, ...rest }, ref2) => {
  return /* @__PURE__ */ React654.createElement(RcPopper, {
    ref: ref2,
    ...rest
  });
});
var StyledPopper = styled_components_default(_StyledPopper)`
  box-shadow: ${shadows4("1")};
  background-color: ${palette22("neutral", "elevation")};
  overflow: hidden;

  ${({ position: position4 }) => position4 === "top" ? css2`
          border-top-right-radius: ${radiusLg};
          border-top-left-radius: ${radiusLg};
        ` : css2`
          border-bottom-right-radius: ${radiusLg};
          border-bottom-left-radius: ${radiusLg};
        `}
`;

// src/components/Downshift/styles/StyledTextField.tsx
import React655, { forwardRef as forwardRef576 } from "react";
var _StyledTextField = forwardRef576(({ hasTags, renderInput, ...rest }, ref2) => {
  if (renderInput) {
    const child = renderInput({ ...rest, ref: ref2 });
    return child;
  }
  return /* @__PURE__ */ React655.createElement(RcTextField, {
    ref: ref2,
    ...rest
  });
});
var StyledTextField = styled_components_default(_StyledTextField)`
  .${RcDownshiftInputClasses.input} {
    flex: 1;
    min-width: 30px;
  }

  ${({ hasTags }) => hasTags && clearBtnInactiveStyle}
`;

// src/components/Downshift/SuggestionList/SuggestionList.tsx
import React659, {
  createContext as createContext20,
  forwardRef as forwardRef578,
  useContext as useContext26,
  useLayoutEffect as useLayoutEffect23,
  useMemo as useMemo63,
  useRef as useRef80
} from "react";

// src/components/VirtualizedMenu/styles/StyledMenuPadding.tsx
var menuListBoundaryPadding = 8;
var StyledMenuListPadding = styled_components_default.div`
  height: ${({ height: height2 = menuListBoundaryPadding }) => height2}px;
`;

// src/components/VirtualizedMenu/utils/VirtualizedMenuUtils.ts
var RcVirtualizedMenuClasses = RcClasses(["paper"], "RcVirtualizedMenu");

// src/components/VirtualizedMenu/styles/VirtualizedMenuStyle.tsx
var VirtualizedMenuStyle = () => {
  return css2`
      .${RcVirtualizedMenuClasses.paper} {
        max-height: calc(100% - 96px);
        -webkit-overflow-scrolling: touch;
        overflow: hidden;
      }
    `;
};

// src/components/Virtuoso/react-virtuoso/Grid.tsx
import {
  createElement as createElement119,
  memo as memo417
} from "react";
import { createElement as createElement120 } from "react";

// node_modules/@virtuoso.dev/react-urx/dist/react-urx.esm.js
import { createContext as createContext19, forwardRef as forwardRef577, useState as useState34, useImperativeHandle as useImperativeHandle14, createElement as createElement116, useLayoutEffect as useLayoutEffect21, useEffect as useEffect54, useCallback as useCallback29, useContext as useContext25 } from "react";

// node_modules/@virtuoso.dev/urx/dist/urx.esm.js
var PUBLISH = 0;
var SUBSCRIBE = 1;
var RESET = 2;
var VALUE = 4;
function compose3(a2, b2) {
  return function(arg) {
    return a2(b2(arg));
  };
}
function thrush(arg, proc) {
  return proc(arg);
}
function curry2to1(proc, arg1) {
  return function(arg2) {
    return proc(arg1, arg2);
  };
}
function curry1to0(proc, arg) {
  return function() {
    return proc(arg);
  };
}
function prop(property) {
  return function(object3) {
    return object3[property];
  };
}
function tap(arg, proc) {
  proc(arg);
  return arg;
}
function tup() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return args;
}
function call(proc) {
  proc();
}
function always(value) {
  return function() {
    return value;
  };
}
function joinProc() {
  for (var _len2 = arguments.length, procs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    procs[_key2] = arguments[_key2];
  }
  return function() {
    procs.map(call);
  };
}
function noop3() {
}
function subscribe(emitter, subscription) {
  return emitter(SUBSCRIBE, subscription);
}
function publish(publisher, value) {
  publisher(PUBLISH, value);
}
function reset(emitter) {
  emitter(RESET);
}
function getValue3(depot) {
  return depot(VALUE);
}
function connect(emitter, publisher) {
  return subscribe(emitter, curry2to1(publisher, PUBLISH));
}
function handleNext(emitter, subscription) {
  var unsub = emitter(SUBSCRIBE, function(value) {
    unsub();
    subscription(value);
  });
  return unsub;
}
function stream() {
  var subscriptions = [];
  return function(action3, arg) {
    switch (action3) {
      case RESET:
        subscriptions.splice(0, subscriptions.length);
        return;
      case SUBSCRIBE:
        subscriptions.push(arg);
        return function() {
          var indexOf = subscriptions.indexOf(arg);
          if (indexOf > -1) {
            subscriptions.splice(indexOf, 1);
          }
        };
      case PUBLISH:
        subscriptions.slice().forEach(function(subscription) {
          subscription(arg);
        });
        return;
      default:
        throw new Error("unrecognized action " + action3);
    }
  };
}
function statefulStream(initial) {
  var value = initial;
  var innerSubject = stream();
  return function(action3, arg) {
    switch (action3) {
      case SUBSCRIBE:
        var subscription = arg;
        subscription(value);
        break;
      case PUBLISH:
        value = arg;
        break;
      case VALUE:
        return value;
    }
    return innerSubject(action3, arg);
  };
}
function eventHandler(emitter) {
  var unsub;
  var currentSubscription;
  var cleanup = function cleanup2() {
    return unsub && unsub();
  };
  return function(action3, subscription) {
    switch (action3) {
      case SUBSCRIBE:
        if (subscription) {
          if (currentSubscription === subscription) {
            return;
          }
          cleanup();
          currentSubscription = subscription;
          unsub = subscribe(emitter, subscription);
          return unsub;
        } else {
          cleanup();
          return noop3;
        }
      case RESET:
        cleanup();
        currentSubscription = null;
        return;
      default:
        throw new Error("unrecognized action " + action3);
    }
  };
}
function streamFromEmitter(emitter) {
  return tap(stream(), function(stream2) {
    return connect(emitter, stream2);
  });
}
function statefulStreamFromEmitter(emitter, initial) {
  return tap(statefulStream(initial), function(stream2) {
    return connect(emitter, stream2);
  });
}
function combineOperators() {
  for (var _len = arguments.length, operators = new Array(_len), _key = 0; _key < _len; _key++) {
    operators[_key] = arguments[_key];
  }
  return function(subscriber) {
    return operators.reduceRight(thrush, subscriber);
  };
}
function pipe(source) {
  for (var _len2 = arguments.length, operators = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    operators[_key2 - 1] = arguments[_key2];
  }
  var project = combineOperators.apply(void 0, operators);
  return function(action3, subscription) {
    switch (action3) {
      case SUBSCRIBE:
        return subscribe(source, project(subscription));
      case RESET:
        reset(source);
        return;
      default:
        throw new Error("unrecognized action " + action3);
    }
  };
}
function defaultComparator(previous, next) {
  return previous === next;
}
function distinctUntilChanged(comparator) {
  if (comparator === void 0) {
    comparator = defaultComparator;
  }
  var current;
  return function(done) {
    return function(next) {
      if (!comparator(current, next)) {
        current = next;
        done(next);
      }
    };
  };
}
function filter(predicate) {
  return function(done) {
    return function(value) {
      predicate(value) && done(value);
    };
  };
}
function map(project) {
  return function(done) {
    return compose3(done, project);
  };
}
function mapTo(value) {
  return function(done) {
    return function() {
      return done(value);
    };
  };
}
function scan(scanner, initial) {
  return function(done) {
    return function(value) {
      return done(initial = scanner(initial, value));
    };
  };
}
function skip(times) {
  return function(done) {
    return function(value) {
      times > 0 ? times-- : done(value);
    };
  };
}
function throttleTime(interval) {
  var currentValue;
  var timeout2;
  return function(done) {
    return function(value) {
      currentValue = value;
      if (timeout2) {
        return;
      }
      timeout2 = setTimeout(function() {
        timeout2 = void 0;
        done(currentValue);
      }, interval);
    };
  };
}
function debounceTime(interval) {
  var currentValue;
  var timeout2;
  return function(done) {
    return function(value) {
      currentValue = value;
      if (timeout2) {
        clearTimeout(timeout2);
      }
      timeout2 = setTimeout(function() {
        done(currentValue);
      }, interval);
    };
  };
}
function withLatestFrom() {
  for (var _len3 = arguments.length, sources = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    sources[_key3] = arguments[_key3];
  }
  var values6 = new Array(sources.length);
  var called = 0;
  var pendingCall = null;
  var allCalled = Math.pow(2, sources.length) - 1;
  sources.forEach(function(source, index4) {
    var bit = Math.pow(2, index4);
    subscribe(source, function(value) {
      var prevCalled = called;
      called = called | bit;
      values6[index4] = value;
      if (prevCalled !== allCalled && called === allCalled && pendingCall) {
        pendingCall();
        pendingCall = null;
      }
    });
  });
  return function(done) {
    return function(value) {
      var call2 = function call3() {
        return done([value].concat(values6));
      };
      if (called === allCalled) {
        call2();
      } else {
        pendingCall = call2;
      }
    };
  };
}
function merge2() {
  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {
    sources[_key] = arguments[_key];
  }
  return function(action3, subscription) {
    switch (action3) {
      case SUBSCRIBE:
        return joinProc.apply(void 0, sources.map(function(source) {
          return subscribe(source, subscription);
        }));
      case RESET:
        return;
      default:
        throw new Error("unrecognized action " + action3);
    }
  };
}
function duc(source, comparator) {
  if (comparator === void 0) {
    comparator = defaultComparator;
  }
  return pipe(source, distinctUntilChanged(comparator));
}
function combineLatest() {
  var innerSubject = stream();
  for (var _len2 = arguments.length, emitters = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    emitters[_key2] = arguments[_key2];
  }
  var values6 = new Array(emitters.length);
  var called = 0;
  var allCalled = Math.pow(2, emitters.length) - 1;
  emitters.forEach(function(source, index4) {
    var bit = Math.pow(2, index4);
    subscribe(source, function(value) {
      values6[index4] = value;
      called = called | bit;
      if (called === allCalled) {
        publish(innerSubject, values6);
      }
    });
  });
  return function(action3, subscription) {
    switch (action3) {
      case SUBSCRIBE:
        if (called === allCalled) {
          subscription(values6);
        }
        return subscribe(innerSubject, subscription);
      case RESET:
        return reset(innerSubject);
      default:
        throw new Error("unrecognized action " + action3);
    }
  };
}
function system(constructor, dependencies, _temp) {
  if (dependencies === void 0) {
    dependencies = [];
  }
  var _ref6 = _temp === void 0 ? {
    singleton: true
  } : _temp, singleton = _ref6.singleton;
  return {
    id: id(),
    constructor,
    dependencies,
    singleton
  };
}
var id = function id2() {
  return Symbol();
};
function init(systemSpec) {
  var singletons = new Map();
  var _init = function _init2(_ref23) {
    var id3 = _ref23.id, constructor = _ref23.constructor, dependencies = _ref23.dependencies, singleton = _ref23.singleton;
    if (singleton && singletons.has(id3)) {
      return singletons.get(id3);
    }
    var system2 = constructor(dependencies.map(function(e2) {
      return _init2(e2);
    }));
    if (singleton) {
      singletons.set(id3, system2);
    }
    return system2;
  };
  return _init(systemSpec);
}

// node_modules/@virtuoso.dev/react-urx/dist/react-urx.esm.js
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _unsupportedIterableToArray2(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray2(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray2(o2, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _createForOfIteratorHelperLoose(o2, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o2[Symbol.iterator] || o2["@@iterator"];
  if (it)
    return (it = it.call(o2)).next.bind(it);
  if (Array.isArray(o2) || (it = _unsupportedIterableToArray2(o2)) || allowArrayLike && o2 && typeof o2.length === "number") {
    if (it)
      o2 = it;
    var i2 = 0;
    return function() {
      if (i2 >= o2.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o2[i2++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var _excluded5 = ["children"];
function omit4(keys3, obj) {
  var result = {};
  var index4 = {};
  var idx = 0;
  var len = keys3.length;
  while (idx < len) {
    index4[keys3[idx]] = 1;
    idx += 1;
  }
  for (var prop2 in obj) {
    if (!index4.hasOwnProperty(prop2)) {
      result[prop2] = obj[prop2];
    }
  }
  return result;
}
var useIsomorphicLayoutEffect3 = typeof document !== "undefined" ? useLayoutEffect21 : useEffect54;
function systemToComponent(systemSpec, map2, Root) {
  var requiredPropNames = Object.keys(map2.required || {});
  var optionalPropNames = Object.keys(map2.optional || {});
  var methodNames = Object.keys(map2.methods || {});
  var eventNames = Object.keys(map2.events || {});
  var Context2 = createContext19({});
  function applyPropsToSystem(system2, props) {
    if (system2["propsReady"]) {
      publish(system2["propsReady"], false);
    }
    for (var _iterator = _createForOfIteratorHelperLoose(requiredPropNames), _step; !(_step = _iterator()).done; ) {
      var requiredPropName = _step.value;
      var stream2 = system2[map2.required[requiredPropName]];
      publish(stream2, props[requiredPropName]);
    }
    for (var _iterator2 = _createForOfIteratorHelperLoose(optionalPropNames), _step2; !(_step2 = _iterator2()).done; ) {
      var optionalPropName = _step2.value;
      if (optionalPropName in props) {
        var _stream = system2[map2.optional[optionalPropName]];
        publish(_stream, props[optionalPropName]);
      }
    }
    if (system2["propsReady"]) {
      publish(system2["propsReady"], true);
    }
  }
  function buildMethods(system2) {
    return methodNames.reduce(function(acc, methodName) {
      acc[methodName] = function(value) {
        var stream2 = system2[map2.methods[methodName]];
        publish(stream2, value);
      };
      return acc;
    }, {});
  }
  function buildEventHandlers(system2) {
    return eventNames.reduce(function(handlers, eventName) {
      handlers[eventName] = eventHandler(system2[map2.events[eventName]]);
      return handlers;
    }, {});
  }
  var Component7 = forwardRef577(function(propsWithChildren, ref2) {
    var children2 = propsWithChildren.children, props = _objectWithoutPropertiesLoose2(propsWithChildren, _excluded5);
    var _useState = useState34(function() {
      return tap(init(systemSpec), function(system3) {
        return applyPropsToSystem(system3, props);
      });
    }), system2 = _useState[0];
    var _useState2 = useState34(curry1to0(buildEventHandlers, system2)), handlers = _useState2[0];
    useIsomorphicLayoutEffect3(function() {
      for (var _iterator3 = _createForOfIteratorHelperLoose(eventNames), _step3; !(_step3 = _iterator3()).done; ) {
        var eventName = _step3.value;
        if (eventName in props) {
          subscribe(handlers[eventName], props[eventName]);
        }
      }
      return function() {
        Object.values(handlers).map(reset);
      };
    }, [props, handlers, system2]);
    useIsomorphicLayoutEffect3(function() {
      applyPropsToSystem(system2, props);
    });
    useImperativeHandle14(ref2, always(buildMethods(system2)));
    return createElement116(Context2.Provider, {
      value: system2
    }, Root ? createElement116(Root, omit4([].concat(requiredPropNames, optionalPropNames, eventNames), props), children2) : children2);
  });
  var usePublisher3 = function usePublisher4(key) {
    return useCallback29(curry2to1(publish, useContext25(Context2)[key]), [key]);
  };
  var useEmitterValue3 = function useEmitterValue4(key) {
    var context = useContext25(Context2);
    var source = context[key];
    var _useState3 = useState34(curry1to0(getValue3, source)), value = _useState3[0], setValue = _useState3[1];
    useIsomorphicLayoutEffect3(function() {
      return subscribe(source, function(next) {
        if (next !== value) {
          setValue(always(next));
        }
      });
    }, [source, value]);
    return value;
  };
  var useEmitter3 = function useEmitter4(key, callback) {
    var context = useContext25(Context2);
    var source = context[key];
    useIsomorphicLayoutEffect3(function() {
      return subscribe(source, callback);
    }, [callback, source]);
  };
  return {
    Component: Component7,
    usePublisher: usePublisher3,
    useEmitterValue: useEmitterValue3,
    useEmitter: useEmitter3
  };
}

// src/components/Virtuoso/react-virtuoso/comparators.tsx
function tupleComparator(prev, current) {
  return !!(prev && prev[0] === current[0] && prev[1] === current[1]);
}
function rangeComparator(prev, next) {
  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex);
}

// src/components/Virtuoso/react-virtuoso/domIOSystem.ts
var UP = "up";
var DOWN = "down";
var domIOSystem = system(() => {
  const scrollTop = stream();
  const deviation = statefulStream(0);
  const smoothScrollTargetReached = stream();
  const statefulScrollTop = statefulStream(0);
  const viewportHeight = stream();
  const headerHeight = statefulStream(0);
  const footerHeight = statefulStream(0);
  const scrollTo = stream();
  const scrollBy = stream();
  const scrollingInProgress = statefulStream(false);
  connect(scrollTop, statefulScrollTop);
  const scrollDirection = statefulStream(DOWN);
  connect(pipe(scrollTop, scan((acc, scrollTop2) => {
    return {
      direction: scrollTop2 < acc.prevScrollTop ? UP : DOWN,
      prevScrollTop: scrollTop2
    };
  }, { direction: DOWN, prevScrollTop: 0 }), map((value) => value.direction)), scrollDirection);
  return {
    scrollTop,
    viewportHeight,
    headerHeight,
    footerHeight,
    smoothScrollTargetReached,
    scrollTo,
    scrollBy,
    scrollDirection,
    statefulScrollTop,
    deviation,
    scrollingInProgress
  };
}, [], { singleton: true });

// src/components/Virtuoso/react-virtuoso/propsReadySystem.ts
var propsReadySystem = system(() => {
  const propsReady = statefulStream(false);
  const didMount = streamFromEmitter(pipe(propsReady, filter((ready) => ready), distinctUntilChanged()));
  return { propsReady, didMount };
}, [], { singleton: true });

// src/components/Virtuoso/react-virtuoso/stateFlagsSystem.ts
var INITIAL_BOTTOM_STATE = {
  atBottom: false,
  notAtBottomBecause: "NOT_SHOWING_LAST_ITEM",
  state: {
    offsetBottom: 0,
    scrollTop: 0,
    viewportHeight: 0,
    totalHeight: 0
  }
};
var stateFlagsSystem = system(([{ scrollTop, viewportHeight }]) => {
  const isAtBottom = statefulStream(false);
  const isAtTop = statefulStream(true);
  const atBottomStateChange = stream();
  const atTopStateChange = stream();
  const listStateListener = stream();
  const isScrolling = streamFromEmitter(pipe(merge2(pipe(duc(scrollTop), skip(1), mapTo(true)), pipe(duc(scrollTop), skip(1), mapTo(false), debounceTime(100))), distinctUntilChanged()));
  connect(pipe(duc(scrollTop), map((top2) => top2 === 0), distinctUntilChanged()), isAtTop);
  connect(isAtTop, atTopStateChange);
  const atBottomState = streamFromEmitter(pipe(combineLatest(listStateListener, duc(scrollTop), duc(viewportHeight)), scan((current, [{ bottom: bottom2, offsetBottom }, scrollTop2, viewportHeight2]) => {
    const isAtBottom2 = offsetBottom === 0 && scrollTop2 + viewportHeight2 - bottom2 > -4;
    const state = {
      viewportHeight: viewportHeight2,
      scrollTop: scrollTop2,
      offsetBottom,
      totalHeight: bottom2 + offsetBottom
    };
    if (isAtBottom2) {
      return {
        atBottom: true,
        state
      };
    }
    let notAtBottomBecause;
    if (state.totalHeight > current.state.totalHeight) {
      notAtBottomBecause = "SIZE_INCREASED";
    } else if (offsetBottom !== 0) {
      notAtBottomBecause = "NOT_SHOWING_LAST_ITEM";
    } else if (viewportHeight2 < current.state.viewportHeight) {
      notAtBottomBecause = "VIEWPORT_HEIGHT_DECREASING";
    } else if (scrollTop2 < current.state.scrollTop) {
      notAtBottomBecause = "SCROLLING_UPWARDS";
    } else {
      notAtBottomBecause = "NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM";
    }
    return {
      atBottom: false,
      notAtBottomBecause,
      state
    };
  }, INITIAL_BOTTOM_STATE), distinctUntilChanged((prev, next) => {
    return prev && prev.atBottom === next.atBottom;
  })));
  connect(pipe(atBottomState, map((state) => state.atBottom)), isAtBottom);
  subscribe(isAtBottom, (value) => {
    setTimeout(() => publish(atBottomStateChange, value));
  });
  return {
    isScrolling,
    isAtTop,
    isAtBottom,
    atBottomState,
    atTopStateChange,
    atBottomStateChange,
    listStateListener
  };
}, tup(domIOSystem));

// src/components/Virtuoso/react-virtuoso/scrollSeekSystem.ts
var scrollSeekSystem = system(([{ scrollTop }, { isScrolling }]) => {
  const scrollVelocity = statefulStream(0);
  const isSeeking = statefulStream(false);
  const rangeChanged = stream();
  const scrollSeekConfiguration = statefulStream(false);
  connect(pipe(isScrolling, filter((value) => !value), mapTo(0)), scrollVelocity);
  connect(pipe(scrollTop, throttleTime(100), withLatestFrom(isScrolling), filter(([, isScrolling2]) => !!isScrolling2), scan(([, prev], [next]) => [prev, next], [0, 0]), map(([prev, next]) => next - prev)), scrollVelocity);
  connect(pipe(scrollVelocity, withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged), filter(([, config2]) => !!config2), map(([speed, config2, isSeeking2, range]) => {
    const { exit, enter: enter2 } = config2;
    if (isSeeking2) {
      if (exit(speed, range)) {
        return false;
      }
    } else if (enter2(speed, range)) {
      return true;
    }
    return isSeeking2;
  }), distinctUntilChanged()), isSeeking);
  subscribe(pipe(combineLatest(isSeeking, scrollVelocity, rangeChanged), withLatestFrom(scrollSeekConfiguration)), ([[isSeeking2, velocity, range], config2]) => isSeeking2 && config2 && config2.change && config2.change(velocity, range));
  return {
    isSeeking,
    scrollSeekConfiguration,
    scrollVelocity,
    scrollSeekRangeChanged: rangeChanged
  };
}, tup(domIOSystem, stateFlagsSystem), { singleton: true });

// src/components/Virtuoso/react-virtuoso/AATree.ts
var NIL_NODE = { lvl: 0 };
function newAANode(k2, v2, lvl, l2 = NIL_NODE, r2 = NIL_NODE) {
  return { k: k2, v: v2, lvl, l: l2, r: r2 };
}
function empty2(node4) {
  return node4 === NIL_NODE;
}
function newTree() {
  return NIL_NODE;
}
function remove(node4, key) {
  if (empty2(node4))
    return NIL_NODE;
  const { k: k2, l: l2, r: r2 } = node4;
  if (key === k2) {
    if (empty2(l2)) {
      return r2;
    }
    if (empty2(r2)) {
      return l2;
    }
    const [lastKey, lastValue] = last(l2);
    return adjust(clone(node4, { k: lastKey, v: lastValue, l: deleteLast(l2) }));
  }
  if (key < k2) {
    return adjust(clone(node4, { l: remove(l2, key) }));
  }
  return adjust(clone(node4, { r: remove(r2, key) }));
}
function findMaxKeyValue(node4, value, field = "k") {
  if (empty2(node4)) {
    return [-Infinity, void 0];
  }
  if (node4[field] === value) {
    return [node4.k, node4.v];
  }
  if (node4[field] < value) {
    const r2 = findMaxKeyValue(node4.r, value, field);
    if (r2[0] === -Infinity) {
      return [node4.k, node4.v];
    }
    return r2;
  }
  return findMaxKeyValue(node4.l, value, field);
}
function insert(node4, k2, v2) {
  if (empty2(node4)) {
    return newAANode(k2, v2, 1);
  }
  if (k2 === node4.k) {
    return clone(node4, { k: k2, v: v2 });
  }
  if (k2 < node4.k) {
    return rebalance(clone(node4, { l: insert(node4.l, k2, v2) }));
  }
  return rebalance(clone(node4, { r: insert(node4.r, k2, v2) }));
}
function walkWithin(node4, start3, end2) {
  if (empty2(node4)) {
    return [];
  }
  const { k: k2, v: v2, l: l2, r: r2 } = node4;
  let result = [];
  if (k2 > start3) {
    result = result.concat(walkWithin(l2, start3, end2));
  }
  if (k2 >= start3 && k2 <= end2) {
    result.push({ k: k2, v: v2 });
  }
  if (k2 <= end2) {
    result = result.concat(walkWithin(r2, start3, end2));
  }
  return result;
}
function walk(node4) {
  if (empty2(node4)) {
    return [];
  }
  return [...walk(node4.l), { k: node4.k, v: node4.v }, ...walk(node4.r)];
}
function last(node4) {
  return empty2(node4.r) ? [node4.k, node4.v] : last(node4.r);
}
function deleteLast(node4) {
  return empty2(node4.r) ? node4.l : adjust(clone(node4, { r: deleteLast(node4.r) }));
}
function clone(node4, args) {
  return newAANode(args.k !== void 0 ? args.k : node4.k, args.v !== void 0 ? args.v : node4.v, args.lvl !== void 0 ? args.lvl : node4.lvl, args.l !== void 0 ? args.l : node4.l, args.r !== void 0 ? args.r : node4.r);
}
function isSingle(node4) {
  return empty2(node4) || node4.lvl > node4.r.lvl;
}
function rebalance(node4) {
  return split(skew(node4));
}
function adjust(node4) {
  const { l: l2, r: r2, lvl } = node4;
  if (r2.lvl >= lvl - 1 && l2.lvl >= lvl - 1) {
    return node4;
  }
  if (lvl > r2.lvl + 1) {
    if (isSingle(l2)) {
      return skew(clone(node4, { lvl: lvl - 1 }));
    }
    if (!empty2(l2) && !empty2(l2.r)) {
      return clone(l2.r, {
        l: clone(l2, { r: l2.r.l }),
        r: clone(node4, {
          l: l2.r.r,
          lvl: lvl - 1
        }),
        lvl
      });
    }
    throw new Error("Unexpected empty nodes");
  } else {
    if (isSingle(node4)) {
      return split(clone(node4, { lvl: lvl - 1 }));
    }
    if (!empty2(r2) && !empty2(r2.l)) {
      const rl = r2.l;
      const rlvl = isSingle(rl) ? r2.lvl - 1 : r2.lvl;
      return clone(rl, {
        l: clone(node4, {
          r: rl.l,
          lvl: lvl - 1
        }),
        r: split(clone(r2, { l: rl.r, lvl: rlvl })),
        lvl: rl.lvl + 1
      });
    }
    throw new Error("Unexpected empty nodes");
  }
}
function rangesWithin(node4, startIndex, endIndex) {
  if (empty2(node4)) {
    return [];
  }
  const adjustedStart = findMaxKeyValue(node4, startIndex)[0];
  return toRanges(walkWithin(node4, adjustedStart, endIndex));
}
function arrayToRanges(items, parser) {
  const length = items.length;
  if (length === 0) {
    return [];
  }
  let { index: start3, value } = parser(items[0]);
  const result = [];
  for (let i2 = 1; i2 < length; i2++) {
    const { index: nextIndex, value: nextValue } = parser(items[i2]);
    result.push({ start: start3, end: nextIndex - 1, value });
    start3 = nextIndex;
    value = nextValue;
  }
  result.push({ start: start3, end: Infinity, value });
  return result;
}
function toRanges(nodes) {
  return arrayToRanges(nodes, ({ k: index4, v: value }) => ({ index: index4, value }));
}
function split(node4) {
  const { r: r2, lvl } = node4;
  return !empty2(r2) && !empty2(r2.r) && r2.lvl === lvl && r2.r.lvl === lvl ? clone(r2, { l: clone(node4, { r: r2.l }), lvl: lvl + 1 }) : node4;
}
function skew(node4) {
  const { l: l2 } = node4;
  return !empty2(l2) && l2.lvl === node4.lvl ? clone(l2, { r: clone(node4, { l: l2.r }) }) : node4;
}

// src/components/Virtuoso/react-virtuoso/utils/binaryArraySearch.ts
function findIndexOfClosestSmallerOrEqual(items, value, comparator, start3 = 0) {
  let end2 = items.length - 1;
  while (start3 <= end2) {
    const index4 = Math.floor((start3 + end2) / 2);
    const item = items[index4];
    const match2 = comparator(item, value);
    if (match2 === 0) {
      return index4;
    }
    if (match2 === -1) {
      if (end2 - start3 < 2) {
        return index4 - 1;
      }
      end2 = index4 - 1;
    } else {
      if (end2 === start3) {
        return index4;
      }
      start3 = index4 + 1;
    }
  }
  throw new Error(`Failed binary finding record in array - ${items.join(",")}, searched for ${value}`);
}
function findClosestSmallerOrEqual(items, value, comparator) {
  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)];
}
function findRange(items, startValue, endValue, comparator) {
  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator);
  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex);
  return items.slice(startIndex, endIndex + 1);
}

// src/components/Virtuoso/react-virtuoso/sizeSystem.ts
function rangeIncludes(refRange) {
  const { size, startIndex, endIndex } = refRange;
  return (range) => {
    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size;
  };
}
function insertRanges(sizeTree, ranges) {
  let syncStart = empty2(sizeTree) ? 0 : Infinity;
  for (const range of ranges) {
    const { size, startIndex, endIndex } = range;
    syncStart = Math.min(syncStart, startIndex);
    if (empty2(sizeTree)) {
      sizeTree = insert(sizeTree, 0, size);
      continue;
    }
    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1);
    if (overlappingRanges.some(rangeIncludes(range))) {
      continue;
    }
    let firstPassDone = false;
    let shouldInsert = false;
    for (const {
      start: rangeStart,
      end: rangeEnd,
      value: rangeValue
    } of overlappingRanges) {
      if (!firstPassDone) {
        shouldInsert = rangeValue !== size;
        firstPassDone = true;
      } else if (endIndex >= rangeStart || size === rangeValue) {
        sizeTree = remove(sizeTree, rangeStart);
      }
      if (rangeEnd > endIndex && endIndex >= rangeStart) {
        if (rangeValue !== size) {
          sizeTree = insert(sizeTree, endIndex + 1, rangeValue);
        }
      }
    }
    if (shouldInsert) {
      sizeTree = insert(sizeTree, startIndex, size);
    }
  }
  return [sizeTree, syncStart];
}
function initialSizeState() {
  return {
    offsetTree: [],
    sizeTree: newTree(),
    groupOffsetTree: newTree(),
    lastIndex: 0,
    lastOffset: 0,
    lastSize: 0,
    groupIndices: []
  };
}
function indexComparator({ index: itemIndex }, index4) {
  return index4 === itemIndex ? 0 : index4 < itemIndex ? -1 : 1;
}
function offsetComparator({ offset: itemOffset }, offset7) {
  return offset7 === itemOffset ? 0 : offset7 < itemOffset ? -1 : 1;
}
function offsetPointParser(point) {
  return { index: point.index, value: point };
}
function rangesWithinOffsets(tree, startOffset, endOffset, minStartIndex = 0) {
  if (minStartIndex > 0) {
    startOffset = Math.max(startOffset, findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset);
  }
  return arrayToRanges(findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser);
}
function sizeStateReducer(state, [ranges, groupIndices]) {
  const sizeTree = state.sizeTree;
  let offsetTree = state.offsetTree;
  let newSizeTree = sizeTree;
  let syncStart = 0;
  if (groupIndices.length > 0 && empty2(sizeTree) && ranges.length === 2) {
    const groupSize = ranges[0].size;
    const itemSize = ranges[1].size;
    newSizeTree = groupIndices.reduce((tree, groupIndex) => {
      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize);
    }, newSizeTree);
  } else {
    [newSizeTree, syncStart] = insertRanges(newSizeTree, ranges);
  }
  if (newSizeTree === sizeTree) {
    return state;
  }
  let prevIndex = 0;
  let prevSize = 0;
  let prevAOffset = 0;
  let startAIndex = 0;
  if (syncStart !== 0) {
    startAIndex = findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator);
    const offsetInfo = offsetTree[startAIndex];
    prevAOffset = offsetInfo.offset;
    const kv = findMaxKeyValue(newSizeTree, syncStart - 1);
    prevIndex = kv[0];
    prevSize = kv[1];
    if (offsetTree.length && offsetTree[startAIndex].size === findMaxKeyValue(newSizeTree, syncStart)[1]) {
      startAIndex -= 1;
    }
    offsetTree = offsetTree.slice(0, startAIndex + 1);
  } else {
    offsetTree = [];
  }
  for (const { start: startIndex, value } of rangesWithin(newSizeTree, syncStart, Infinity)) {
    const aOffset = (startIndex - prevIndex) * prevSize + prevAOffset;
    offsetTree.push({
      offset: aOffset,
      size: value,
      index: startIndex
    });
    prevIndex = startIndex;
    prevAOffset = aOffset;
    prevSize = value;
  }
  return {
    sizeTree: newSizeTree,
    offsetTree,
    groupOffsetTree: groupIndices.reduce((tree, index4) => {
      return insert(tree, index4, offsetOf(index4, offsetTree));
    }, newTree()),
    lastIndex: prevIndex,
    lastOffset: prevAOffset,
    lastSize: prevSize,
    groupIndices
  };
}
function offsetOf(index4, tree) {
  if (tree.length === 0) {
    return 0;
  }
  const {
    offset: offset7,
    index: startIndex,
    size
  } = findClosestSmallerOrEqual(tree, index4, indexComparator);
  return size * (index4 - startIndex) + offset7;
}
function originalIndexFromItemIndex(itemIndex, sizes) {
  if (!hasGroups(sizes)) {
    return itemIndex;
  }
  let groupOffset = 0;
  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {
    groupOffset++;
  }
  return itemIndex + groupOffset;
}
function hasGroups(sizes) {
  return !empty2(sizes.groupOffsetTree);
}
var sizeSystem = system(() => {
  const sizeRanges = stream();
  const totalCount = stream();
  const unshiftWith = stream();
  const firstItemIndex = statefulStream(0);
  const groupIndices = statefulStream([]);
  const fixedItemSize = statefulStream(void 0);
  const defaultItemSize = statefulStream(void 0);
  const itemSize = statefulStream((el2, field) => el2[field]);
  const data = statefulStream(void 0);
  const initial = initialSizeState();
  const sizes = statefulStreamFromEmitter(pipe(sizeRanges, withLatestFrom(groupIndices), scan(sizeStateReducer, initial), distinctUntilChanged()), initial);
  connect(pipe(groupIndices, filter((indexes) => indexes.length > 0), withLatestFrom(sizes), map(([groupIndices2, sizes2]) => {
    const groupOffsetTree = groupIndices2.reduce((tree, index4, idx) => {
      return insert(tree, index4, offsetOf(index4, sizes2.offsetTree) || idx);
    }, newTree());
    return {
      ...sizes2,
      groupIndices: groupIndices2,
      groupOffsetTree
    };
  })), sizes);
  connect(pipe(totalCount, withLatestFrom(sizes), filter(([totalCount2, { lastIndex }]) => {
    return totalCount2 < lastIndex;
  }), map(([totalCount2, { lastIndex, lastSize }]) => {
    return [
      {
        startIndex: totalCount2,
        endIndex: lastIndex,
        size: lastSize
      }
    ];
  })), sizeRanges);
  connect(fixedItemSize, defaultItemSize);
  const trackItemSizes = statefulStreamFromEmitter(pipe(fixedItemSize, map((size) => size === void 0)), true);
  connect(pipe(defaultItemSize, filter((value) => value !== void 0), map((size) => [{ startIndex: 0, endIndex: 0, size }])), sizeRanges);
  const listRefresh = streamFromEmitter(pipe(sizeRanges, withLatestFrom(sizes), scan(({ sizes: oldSizes }, [, newSizes]) => {
    return {
      changed: newSizes !== oldSizes,
      sizes: newSizes
    };
  }, { changed: false, sizes: initial }), map((value) => value.changed)));
  connect(pipe(firstItemIndex, scan((prev, next) => {
    return { diff: prev.prev - next, prev: next };
  }, { diff: 0, prev: 0 }), map((val) => val.diff), filter((value) => value > 0)), unshiftWith);
  const beforeUnshiftWith = streamFromEmitter(unshiftWith);
  connect(pipe(unshiftWith, withLatestFrom(sizes), map(([unshiftWith2, sizes2]) => {
    if (sizes2.groupIndices.length > 0) {
      throw new Error("Virtuoso: prepending items does not work with groups");
    }
    return walk(sizes2.sizeTree).reduce((acc, { k: index4, v: size }) => {
      return {
        ranges: [
          ...acc.ranges,
          {
            startIndex: acc.prevIndex,
            endIndex: index4 + unshiftWith2 - 1,
            size: acc.prevSize
          }
        ],
        prevIndex: index4 + unshiftWith2,
        prevSize: size
      };
    }, {
      ranges: [],
      prevIndex: 0,
      prevSize: sizes2.lastSize
    }).ranges;
  })), sizeRanges);
  return {
    data,
    totalCount,
    sizeRanges,
    groupIndices,
    defaultItemSize,
    fixedItemSize,
    unshiftWith,
    beforeUnshiftWith,
    firstItemIndex,
    sizes,
    listRefresh,
    trackItemSizes,
    itemSize
  };
}, [], { singleton: true });

// src/components/Virtuoso/react-virtuoso/scrollToIndexSystem.ts
var SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== "undefined" && "scrollBehavior" in document.documentElement.style;
function normalizeIndexLocation(location) {
  const result = typeof location === "number" ? { index: location } : location;
  if (!result.align) {
    result.align = "start";
  }
  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {
    result.behavior = "auto";
  }
  if (!result.offset) {
    result.offset = 0;
  }
  return result;
}
var scrollToIndexSystem = system(([
  { sizes, totalCount, listRefresh },
  {
    scrollingInProgress,
    viewportHeight,
    scrollTo,
    smoothScrollTargetReached,
    headerHeight,
    footerHeight
  }
]) => {
  const scrollToIndex = stream();
  const topListHeight = statefulStream(0);
  let unsubscribeNextListRefresh = null;
  let cleartTimeoutRef = null;
  let unsubscribeListRefresh = null;
  const cleanup = () => {
    if (unsubscribeNextListRefresh) {
      unsubscribeNextListRefresh();
      unsubscribeNextListRefresh = null;
    }
    if (unsubscribeListRefresh) {
      unsubscribeListRefresh();
      unsubscribeListRefresh = null;
    }
    if (cleartTimeoutRef) {
      clearTimeout(cleartTimeoutRef);
      cleartTimeoutRef = null;
    }
    publish(scrollingInProgress, false);
  };
  connect(pipe(scrollToIndex, withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight), map(([
    location,
    sizes2,
    viewportHeight2,
    totalCount2,
    topListHeight2,
    headerHeight2,
    footerHeight2
  ]) => {
    const normalLocation = normalizeIndexLocation(location);
    const { align, behavior, offset: offset7 } = normalLocation;
    const lastIndex = totalCount2 - 1;
    let index4 = normalLocation.index;
    index4 = originalIndexFromItemIndex(index4, sizes2);
    index4 = Math.max(0, index4, Math.min(lastIndex, index4));
    let top2 = offsetOf(index4, sizes2.offsetTree) + headerHeight2;
    if (align === "end") {
      top2 = Math.round(top2 - viewportHeight2 + findMaxKeyValue(sizes2.sizeTree, index4)[1]);
      if (index4 === lastIndex) {
        top2 += footerHeight2;
      }
    } else if (align === "center") {
      top2 = Math.round(top2 - viewportHeight2 / 2 + findMaxKeyValue(sizes2.sizeTree, index4)[1] / 2);
    } else {
      top2 -= topListHeight2;
    }
    if (offset7) {
      top2 += offset7;
    }
    const retry = (listChanged) => {
      cleanup();
      if (listChanged) {
        publish(scrollToIndex, location);
      }
    };
    cleanup();
    if (behavior === "smooth") {
      let listChanged = false;
      unsubscribeListRefresh = subscribe(listRefresh, (changed) => {
        listChanged = listChanged || changed;
      });
      unsubscribeNextListRefresh = handleNext(smoothScrollTargetReached, () => {
        retry(listChanged);
      });
    } else {
      unsubscribeNextListRefresh = handleNext(listRefresh, retry);
    }
    cleartTimeoutRef = setTimeout(() => {
      cleanup();
    }, 1200);
    publish(scrollingInProgress, true);
    return { top: top2, behavior };
  })), scrollTo);
  return {
    scrollToIndex,
    topListHeight
  };
}, tup(sizeSystem, domIOSystem), { singleton: true });

// src/components/Virtuoso/react-virtuoso/sizeRangeSystem.ts
var TOP = "top";
var BOTTOM = "bottom";
var NONE = "none";
var getOverscan = (overscan, end2, direction) => {
  if (typeof overscan === "number") {
    return direction === UP && end2 === TOP || direction === DOWN && end2 === BOTTOM ? overscan : 0;
  }
  if (direction === UP) {
    return end2 === TOP ? overscan.main : overscan.reverse;
  }
  return end2 === BOTTOM ? overscan.main : overscan.reverse;
};
var sizeRangeSystem = system(([{ scrollTop, viewportHeight, deviation, headerHeight }]) => {
  const listBoundary = stream();
  const topListHeight = statefulStream(0);
  const overscan = statefulStream(0);
  const visibleRange = statefulStreamFromEmitter(pipe(combineLatest(duc(scrollTop), duc(viewportHeight), duc(headerHeight), duc(listBoundary, tupleComparator), duc(overscan), duc(topListHeight), duc(deviation)), map(([
    scrollTop2,
    viewportHeight2,
    headerHeight2,
    [listTop, listBottom],
    overscan2,
    topListHeight2,
    deviation2
  ]) => {
    const top2 = scrollTop2 - headerHeight2 - deviation2;
    let direction = NONE;
    listTop -= deviation2;
    listBottom -= deviation2;
    if (listTop > scrollTop2 + topListHeight2) {
      direction = UP;
    }
    if (listBottom < scrollTop2 + viewportHeight2) {
      direction = DOWN;
    }
    if (direction !== NONE) {
      return [
        Math.max(top2 - getOverscan(overscan2, TOP, direction), 0),
        top2 + viewportHeight2 + getOverscan(overscan2, BOTTOM, direction)
      ];
    }
    return null;
  }), filter((value) => value != null), distinctUntilChanged(tupleComparator)), [0, 0]);
  return {
    listBoundary,
    overscan,
    topListHeight,
    visibleRange
  };
}, tup(domIOSystem), { singleton: true });

// src/components/Virtuoso/react-virtuoso/windowScrollerSystem.ts
var windowScrollerSystem = system(([{ scrollTop, scrollTo }]) => {
  const windowViewportRect = stream();
  const windowScrollTop = stream();
  const windowScrollTo = stream();
  const useWindowScroll = statefulStream(false);
  connect(pipe(combineLatest(windowScrollTop, windowViewportRect), map(([windowScrollTop2, { offsetTop }]) => {
    return Math.max(0, windowScrollTop2 - offsetTop);
  })), scrollTop);
  connect(pipe(scrollTo, withLatestFrom(windowViewportRect), map(([scrollTo2, { offsetTop }]) => {
    return {
      ...scrollTo2,
      top: scrollTo2.top + offsetTop
    };
  })), windowScrollTo);
  return {
    useWindowScroll,
    windowScrollTop,
    windowViewportRect,
    windowScrollTo
  };
}, tup(domIOSystem));

// src/components/Virtuoso/react-virtuoso/gridSystem.ts
var INITIAL_GRID_STATE = {
  items: [],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  bottom: 0,
  itemHeight: 0,
  itemWidth: 0
};
var PROBE_GRID_STATE = {
  items: [{ index: 0 }],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  bottom: 0,
  itemHeight: 0,
  itemWidth: 0
};
var { ceil, floor, min, max } = Math;
function hackFloor(val) {
  return ceil(val) - val < 0.03 ? ceil(val) : floor(val);
}
function buildItems(startIndex, endIndex) {
  return Array.from({ length: endIndex - startIndex + 1 }).map((_18, i2) => ({ index: i2 + startIndex }));
}
var gridSystem = system(([
  { overscan, visibleRange, listBoundary },
  {
    scrollTop,
    viewportHeight,
    scrollBy,
    scrollTo,
    smoothScrollTargetReached
  },
  stateFlags,
  scrollSeek,
  { propsReady, didMount },
  { windowViewportRect, windowScrollTo, useWindowScroll, windowScrollTop }
]) => {
  const totalCount = statefulStream(0);
  const initialItemCount = statefulStream(0);
  const gridState = statefulStream(INITIAL_GRID_STATE);
  const viewportDimensions = statefulStream({
    height: 0,
    width: 0
  });
  const itemDimensions = statefulStream({
    height: 0,
    width: 0
  });
  const scrollToIndex = stream();
  connect(pipe(didMount, withLatestFrom(initialItemCount), filter(([, count2]) => count2 !== 0), map(([, count2]) => {
    return {
      items: buildItems(0, count2 - 1),
      top: 0,
      bottom: 0,
      offsetBottom: 0,
      offsetTop: 0,
      itemHeight: 0,
      itemWidth: 0
    };
  })), gridState);
  connect(pipe(combineLatest(duc(totalCount), visibleRange, duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height)), withLatestFrom(viewportDimensions), map(([[totalCount2, [startOffset, endOffset], item], viewport]) => {
    const { height: itemHeight, width: itemWidth } = item;
    const { width: viewportWidth } = viewport;
    if (totalCount2 === 0 || viewportWidth === 0) {
      return INITIAL_GRID_STATE;
    }
    if (itemWidth === 0) {
      return PROBE_GRID_STATE;
    }
    const perRow = hackFloor(viewportWidth / itemWidth);
    let startIndex = perRow * floor(startOffset / itemHeight);
    let endIndex = perRow * ceil(endOffset / itemHeight) - 1;
    endIndex = min(totalCount2 - 1, endIndex);
    startIndex = min(endIndex, max(0, startIndex));
    const items = buildItems(startIndex, endIndex);
    const { top: top2, bottom: bottom2 } = gridLayout(viewport, item, items);
    const totalHeight = ceil(totalCount2 / perRow) * itemHeight;
    const offsetBottom = totalHeight - bottom2;
    return {
      items,
      offsetTop: top2,
      offsetBottom,
      top: top2,
      bottom: bottom2,
      itemHeight,
      itemWidth
    };
  })), gridState);
  connect(pipe(viewportDimensions, map(({ height: height2 }) => height2)), viewportHeight);
  connect(pipe(combineLatest(viewportDimensions, itemDimensions, gridState), map(([viewportDimensions2, item, { items }]) => {
    const { top: top2, bottom: bottom2 } = gridLayout(viewportDimensions2, item, items);
    return [top2, bottom2];
  }), distinctUntilChanged(tupleComparator)), listBoundary);
  connect(pipe(listBoundary, withLatestFrom(gridState), map(([[, bottom2], { offsetBottom }]) => {
    return { bottom: bottom2, offsetBottom };
  })), stateFlags.listStateListener);
  const endReached = streamFromEmitter(pipe(duc(gridState), filter(({ items }) => items.length > 0), withLatestFrom(totalCount), filter(([{ items }, totalCount2]) => items[items.length - 1].index === totalCount2 - 1), map(([, totalCount2]) => totalCount2 - 1), distinctUntilChanged()));
  const startReached = streamFromEmitter(pipe(duc(gridState), filter(({ items }) => {
    return items.length > 0 && items[0].index === 0;
  }), mapTo(0), distinctUntilChanged()));
  const rangeChanged = streamFromEmitter(pipe(duc(gridState), filter(({ items }) => items.length > 0), map(({ items }) => {
    return {
      startIndex: items[0].index,
      endIndex: items[items.length - 1].index
    };
  }), distinctUntilChanged(rangeComparator)));
  connect(rangeChanged, scrollSeek.scrollSeekRangeChanged);
  connect(pipe(scrollToIndex, withLatestFrom(viewportDimensions, itemDimensions, totalCount), map(([location, viewport, item, totalCount2]) => {
    const normalLocation = normalizeIndexLocation(location);
    const { align, behavior, offset: offset7 } = normalLocation;
    let index4 = normalLocation.index;
    index4 = Math.max(0, index4, Math.min(totalCount2 - 1, index4));
    let top2 = itemTop(viewport, item, index4);
    if (align === "end") {
      top2 = Math.round(top2 - viewport.height + item.height);
    } else if (align === "center") {
      top2 = Math.round(top2 - viewport.height / 2 + item.height / 2);
    }
    if (offset7) {
      top2 += offset7;
    }
    return { top: top2, behavior };
  })), scrollTo);
  const totalListHeight = statefulStreamFromEmitter(pipe(gridState, map((gridState2) => {
    return gridState2.offsetBottom + gridState2.bottom;
  })), 0);
  connect(pipe(windowViewportRect, map((viewportInfo) => ({
    width: viewportInfo.visibleWidth,
    height: viewportInfo.visibleHeight
  }))), viewportDimensions);
  return {
    totalCount,
    viewportDimensions,
    itemDimensions,
    scrollTop,
    overscan,
    scrollBy,
    scrollTo,
    scrollToIndex,
    smoothScrollTargetReached,
    windowViewportRect,
    windowScrollTo,
    useWindowScroll,
    windowScrollTop,
    initialItemCount,
    ...scrollSeek,
    gridState,
    totalListHeight,
    ...stateFlags,
    startReached,
    endReached,
    rangeChanged,
    propsReady
  };
}, tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem));
function gridLayout(viewport, item, items) {
  const { height: itemHeight } = item;
  if (itemHeight === void 0 || items.length === 0) {
    return { top: 0, bottom: 0 };
  }
  const top2 = itemTop(viewport, item, items[0].index);
  const bottom2 = itemTop(viewport, item, items[items.length - 1].index) + itemHeight;
  return { top: top2, bottom: bottom2 };
}
function itemTop(viewport, item, index4) {
  const perRow = itemsPerRow(viewport.width, item.width);
  return floor(index4 / perRow) * item.height;
}
function itemsPerRow(viewportWidth, itemWidth) {
  return hackFloor(viewportWidth / itemWidth);
}

// src/components/Virtuoso/react-virtuoso/hooks/useSize.ts
import { useRef as useRef75 } from "react";
function useSizeWithElRef(callback, enabled = true) {
  const { externalWindow } = useRcPortalWindowContext();
  const ref2 = useRef75(null);
  const observer = getResizeObserver((entries) => {
    const element2 = entries[0].target;
    if (element2.offsetParent !== null) {
      callback(element2);
    }
  }, externalWindow);
  const callbackRef = (elRef) => {
    if (elRef && enabled) {
      observer.observe(elRef);
      ref2.current = elRef;
    } else {
      if (ref2.current) {
        observer.unobserve(ref2.current);
      }
      ref2.current = null;
    }
  };
  return { ref: ref2, callbackRef };
}
function useSize(callback, enabled = true) {
  return useSizeWithElRef(callback, enabled).callbackRef;
}

// src/components/Virtuoso/react-virtuoso/hooks/useWindowViewportRect.ts
import { useCallback as useCallback30, useEffect as useEffect55, useRef as useRef76 } from "react";
function useWindowViewportRectRef(callback, customWindow = window) {
  const viewportInfo = useRef76(null);
  const calculateInfo = useCallback30((element2) => {
    if (element2 === null) {
      return;
    }
    const rect = element2.getBoundingClientRect();
    const visibleHeight = customWindow.innerHeight - Math.max(0, rect.top);
    const visibleWidth = rect.width;
    const offsetTop = rect.top + customWindow.pageYOffset;
    viewportInfo.current = {
      offsetTop,
      visibleHeight,
      visibleWidth
    };
    callback(viewportInfo.current);
  }, [callback, customWindow]);
  const { callbackRef, ref: ref2 } = useSizeWithElRef(calculateInfo);
  const windowEH = useCallback30(() => {
    calculateInfo(ref2.current);
  }, [calculateInfo, ref2]);
  useEffect55(() => {
    customWindow.addEventListener("scroll", windowEH);
    customWindow.addEventListener("resize", windowEH);
    return () => {
      customWindow.removeEventListener("scroll", windowEH);
      customWindow.removeEventListener("resize", windowEH);
    };
  }, [customWindow, windowEH]);
  return callbackRef;
}

// src/components/Virtuoso/react-virtuoso/List.tsx
import {
  createElement as createElement117,
  memo as memo416,
  useMemo as useMemo62
} from "react";
import { createElement as createElement118 } from "react";

// src/components/Virtuoso/react-virtuoso/hooks/useChangedChildSizes.ts
function useChangedChildSizes(callback, itemSize, enabled) {
  return useSize((el2) => {
    const ranges = getChangedChildSizes(el2.children, itemSize, "offsetHeight");
    if (ranges !== null) {
      callback(ranges);
    }
  }, enabled);
}
function getChangedChildSizes(children2, itemSize, field) {
  const length = children2.length;
  if (length === 0) {
    return null;
  }
  const results = [];
  for (let i2 = 0; i2 < length; i2++) {
    const child = children2.item(i2);
    if (!child || child.dataset.index === void 0) {
      continue;
    }
    const index4 = parseInt(child.dataset.index, 10);
    const knownSize = parseInt(child.dataset.knownSize, 10);
    const size = itemSize(child, field);
    if (size === 0) {
      throw new Error("Zero-sized element, this should not happen");
    }
    if (size === knownSize) {
      continue;
    }
    const lastResult = results[results.length - 1];
    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index4 - 1) {
      results.push({ startIndex: index4, endIndex: index4, size });
    } else {
      results[results.length - 1].endIndex++;
    }
  }
  return results;
}

// src/components/Virtuoso/react-virtuoso/hooks/useIsomorphicLayoutEffect.ts
import { useEffect as useEffect56, useLayoutEffect as useLayoutEffect22 } from "react";
var useIsomorphicLayoutEffect4 = typeof document !== "undefined" ? useLayoutEffect22 : useEffect56;
var useIsomorphicLayoutEffect_default = useIsomorphicLayoutEffect4;

// src/components/Virtuoso/react-virtuoso/hooks/useScrollTop.ts
import { useCallback as useCallback31, useEffect as useEffect57, useRef as useRef77 } from "react";
function useScrollTop(scrollTopCallback, smoothScrollTargetReached, scrollerElement, scrollerRefCallback = noop3, customWindow = window) {
  const scrollerRef = useRef77(null);
  const scrollTopTarget = useRef77(null);
  const timeoutRef = useRef77(null);
  const customDocument = customWindow.document;
  const handler = useCallback31((ev) => {
    const el2 = ev.target;
    const scrollTop = el2 === customWindow || el2 === customDocument ? customWindow.pageYOffset || customDocument.documentElement.scrollTop : el2.scrollTop;
    scrollTopCallback(Math.max(scrollTop, 0));
    if (scrollTopTarget.current !== null) {
      if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === el2.scrollHeight - el2.offsetHeight) {
        scrollTopTarget.current = null;
        smoothScrollTargetReached(true);
        if (timeoutRef.current) {
          clearTimeout(timeoutRef.current);
          timeoutRef.current = null;
        }
      }
    }
  }, [
    customDocument,
    customWindow,
    scrollTopCallback,
    smoothScrollTargetReached
  ]);
  useEffect57(() => {
    const localRef = scrollerRef.current;
    scrollerRefCallback(scrollerRef.current);
    handler({ target: localRef });
    localRef.addEventListener("scroll", handler, { passive: true });
    return () => {
      scrollerRefCallback(null);
      localRef.removeEventListener("scroll", handler);
    };
  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback]);
  function scrollToCallback(location) {
    const scrollerElement2 = scrollerRef.current;
    if (!scrollerElement2) {
      return;
    }
    const isSmooth = location.behavior === "smooth";
    let offsetHeight;
    let scrollHeight;
    let scrollTop;
    if (scrollerElement2 === customWindow) {
      scrollHeight = Math.max(customDocument.documentElement.offsetHeight, customDocument.documentElement.scrollHeight);
      offsetHeight = customWindow.innerHeight;
      scrollTop = customDocument.documentElement.scrollTop;
    } else {
      scrollHeight = scrollerElement2.scrollHeight;
      offsetHeight = scrollerElement2.offsetHeight;
      scrollTop = scrollerElement2.scrollTop;
    }
    if (offsetHeight === scrollHeight || location.top === scrollTop) {
      scrollTopCallback(scrollTop);
      if (isSmooth) {
        smoothScrollTargetReached(true);
      }
      return;
    }
    const maxScrollTop = scrollHeight - offsetHeight;
    location.top = Math.max(Math.min(maxScrollTop, location.top), 0);
    if (isSmooth) {
      scrollTopTarget.current = location.top;
      if (timeoutRef.current) {
        clearTimeout(timeoutRef.current);
      }
      timeoutRef.current = setTimeout(() => {
        timeoutRef.current = null;
        scrollTopTarget.current = null;
        smoothScrollTargetReached(true);
      }, 1e3);
    } else {
      scrollTopTarget.current = null;
    }
    scrollerElement2.scrollTo(location);
  }
  function scrollByCallback(location) {
    if (scrollTopTarget.current === null) {
      scrollerRef.current.scrollBy(location);
    }
  }
  return { scrollerRef, scrollByCallback, scrollToCallback };
}

// src/components/Virtuoso/react-virtuoso/groupedListSystem.ts
function groupCountsToIndicesAndCount(counts) {
  return counts.reduce((acc, groupCount) => {
    acc.groupIndices.push(acc.totalCount);
    acc.totalCount += groupCount + 1;
    return acc;
  }, {
    totalCount: 0,
    groupIndices: []
  });
}
var groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {
  const groupCounts = stream();
  const topItemsIndexes = stream();
  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)));
  connect(pipe(groupIndicesAndCount, map(prop("totalCount"))), totalCount);
  connect(pipe(groupIndicesAndCount, map(prop("groupIndices"))), groupIndices);
  connect(pipe(combineLatest(scrollTop, sizes, headerHeight), filter(([, sizes2]) => hasGroups(sizes2)), map(([scrollTop2, state, headerHeight2]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop2 - headerHeight2, 0), "v")[0]), distinctUntilChanged(), map((index4) => [index4])), topItemsIndexes);
  return { groupCounts, topItemsIndexes };
}, tup(sizeSystem, domIOSystem));

// src/components/Virtuoso/react-virtuoso/initialTopMostItemIndexSystem.ts
var initialTopMostItemIndexSystem = system(([
  { sizes, listRefresh },
  { scrollTop },
  { scrollToIndex },
  { didMount }
]) => {
  const scrolledToInitialItem = statefulStream(true);
  const initialTopMostItemIndex = statefulStream(0);
  connect(pipe(didMount, withLatestFrom(initialTopMostItemIndex), filter(([, index4]) => index4 !== 0), mapTo(false)), scrolledToInitialItem);
  subscribe(pipe(listRefresh, withLatestFrom(scrolledToInitialItem, sizes), filter(([, scrolledToInitialItem2, { sizeTree }]) => {
    return !empty2(sizeTree) && !scrolledToInitialItem2;
  }), withLatestFrom(initialTopMostItemIndex)), ([, initialTopMostItemIndex2]) => {
    handleNext(scrollTop, () => {
      publish(scrolledToInitialItem, true);
    });
    publish(scrollToIndex, initialTopMostItemIndex2);
  });
  return {
    scrolledToInitialItem,
    initialTopMostItemIndex
  };
}, tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem), { singleton: true });

// src/components/Virtuoso/react-virtuoso/listStateSystem.ts
function probeItemSet(index4, sizes, data) {
  if (hasGroups(sizes)) {
    const itemIndex = originalIndexFromItemIndex(index4, sizes);
    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0];
    return [
      { index: groupIndex, size: 0, offset: 0 },
      { index: itemIndex, size: 0, offset: 0, data: data && data[0] }
    ];
  }
  return [{ index: index4, size: 0, offset: 0, data: data && data[0] }];
}
var EMPTY_LIST_STATE = {
  items: [],
  topItems: [],
  offsetTop: 0,
  offsetBottom: 0,
  top: 0,
  bottom: 0,
  topListHeight: 0,
  totalCount: 0
};
function transposeItems(items, sizes, firstItemIndex) {
  if (items.length === 0) {
    return [];
  }
  if (!hasGroups(sizes)) {
    return items.map((item) => ({
      ...item,
      index: item.index + firstItemIndex,
      originalIndex: item.index
    }));
  }
  const startIndex = items[0].index;
  const endIndex = items[items.length - 1].index;
  const transposedItems = [];
  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex);
  let currentRange;
  let currentGroupIndex = 0;
  for (const item of items) {
    if (!currentRange || currentRange.end < item.index) {
      currentRange = groupRanges.shift();
      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start);
    }
    let transposedItem;
    if (item.index === currentRange.start) {
      transposedItem = {
        type: "group",
        index: currentGroupIndex
      };
    } else {
      transposedItem = {
        index: item.index - (currentGroupIndex + 1) + firstItemIndex,
        groupIndex: currentGroupIndex
      };
    }
    transposedItems.push({
      ...transposedItem,
      size: item.size,
      offset: item.offset,
      originalIndex: item.index,
      data: item.data
    });
  }
  return transposedItems;
}
function buildListState(items, topItems, totalCount, sizes, firstItemIndex) {
  const { lastSize, lastOffset, lastIndex } = sizes;
  let offsetTop = 0;
  let bottom2 = 0;
  if (items.length > 0) {
    offsetTop = items[0].offset;
    const lastItem = items[items.length - 1];
    bottom2 = lastItem.offset + lastItem.size;
  }
  const total = lastOffset + (totalCount - lastIndex) * lastSize;
  const top2 = offsetTop;
  const offsetBottom = total - bottom2;
  return {
    items: transposeItems(items, sizes, firstItemIndex),
    topItems: transposeItems(topItems, sizes, firstItemIndex),
    topListHeight: topItems.reduce((height2, item) => item.size + height2, 0),
    offsetTop,
    offsetBottom,
    top: top2,
    bottom: bottom2,
    totalCount
  };
}
var listStateSystem = system(([
  { sizes, totalCount, data, firstItemIndex },
  groupedListSystem2,
  { visibleRange, listBoundary, topListHeight: rangeTopListHeight },
  { scrolledToInitialItem, initialTopMostItemIndex },
  { topListHeight },
  stateFlags,
  { didMount }
]) => {
  const topItemsIndexes = statefulStream([]);
  const itemsRendered = stream();
  connect(groupedListSystem2.topItemsIndexes, topItemsIndexes);
  const listState = statefulStreamFromEmitter(pipe(combineLatest(didMount, duc(visibleRange), duc(totalCount), duc(sizes), duc(initialTopMostItemIndex), scrolledToInitialItem, duc(topItemsIndexes), duc(firstItemIndex), data), filter(([mount]) => mount), map(([
    ,
    [startOffset, endOffset],
    totalCount2,
    sizes2,
    initialTopMostItemIndex2,
    scrolledToInitialItem2,
    topItemsIndexes2,
    firstItemIndex2,
    data2
  ]) => {
    const sizesValue = sizes2;
    const { sizeTree, offsetTree } = sizesValue;
    if (totalCount2 === 0 || startOffset === 0 && endOffset === 0) {
      return EMPTY_LIST_STATE;
    }
    if (empty2(sizeTree)) {
      return buildListState(probeItemSet(initialTopMostItemIndex2, sizesValue, data2), [], totalCount2, sizesValue, firstItemIndex2);
    }
    const topItems = [];
    if (topItemsIndexes2.length > 0) {
      const startIndex = topItemsIndexes2[0];
      const endIndex = topItemsIndexes2[topItemsIndexes2.length - 1];
      let offset7 = 0;
      for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {
        const size = range.value;
        const rangeStartIndex = Math.max(range.start, startIndex);
        const rangeEndIndex = Math.min(range.end, endIndex);
        for (let i2 = rangeStartIndex; i2 <= rangeEndIndex; i2++) {
          topItems.push({
            index: i2,
            size,
            offset: offset7,
            data: data2 && data2[i2]
          });
          offset7 += size;
        }
      }
    }
    if (!scrolledToInitialItem2) {
      return buildListState([], topItems, totalCount2, sizesValue, firstItemIndex2);
    }
    const minStartIndex = topItemsIndexes2.length > 0 ? topItemsIndexes2[topItemsIndexes2.length - 1] + 1 : 0;
    const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex);
    if (offsetPointRanges.length === 0) {
      return null;
    }
    const maxIndex = totalCount2 - 1;
    const items = tap([], (result) => {
      for (const range of offsetPointRanges) {
        const point = range.value;
        let offset7 = point.offset;
        let rangeStartIndex = range.start;
        const size = point.size;
        if (point.offset < startOffset) {
          rangeStartIndex += Math.floor((startOffset - point.offset) / size);
          offset7 += (rangeStartIndex - range.start) * size;
        }
        if (rangeStartIndex < minStartIndex) {
          offset7 += (minStartIndex - rangeStartIndex) * size;
          rangeStartIndex = minStartIndex;
        }
        const endIndex = Math.min(range.end, maxIndex);
        for (let i2 = rangeStartIndex; i2 <= endIndex; i2++) {
          if (offset7 >= endOffset) {
            break;
          }
          result.push({
            index: i2,
            size,
            offset: offset7,
            data: data2 && data2[i2]
          });
          offset7 += size;
        }
      }
    });
    return buildListState(items, topItems, totalCount2, sizesValue, firstItemIndex2);
  }), filter((value) => value !== null), distinctUntilChanged()), EMPTY_LIST_STATE);
  connect(pipe(data, filter((data2) => data2 !== void 0), map((data2) => data2.length)), totalCount);
  connect(pipe(listState, map(prop("topListHeight"))), topListHeight);
  connect(topListHeight, rangeTopListHeight);
  connect(listState, stateFlags.listStateListener);
  connect(pipe(listState, map((state) => [state.top, state.bottom])), listBoundary);
  connect(pipe(listState, map((state) => state.items)), itemsRendered);
  const endReached = streamFromEmitter(pipe(listState, filter(({ items }) => items.length > 0), withLatestFrom(totalCount, data), filter(([{ items }, totalCount2]) => items[items.length - 1].originalIndex === totalCount2 - 1), map(([, totalCount2, data2]) => [totalCount2 - 1, data2]), distinctUntilChanged(tupleComparator), map(([count2]) => count2)));
  const startReached = streamFromEmitter(pipe(listState, throttleTime(200), filter(({ items, topItems }) => {
    return items.length > 0 && items[0].originalIndex === topItems.length;
  }), map(({ items }) => items[0].index), distinctUntilChanged()));
  const rangeChanged = streamFromEmitter(pipe(listState, filter(({ items }) => items.length > 0), map(({ items }) => {
    return {
      startIndex: items[0].index,
      endIndex: items[items.length - 1].index
    };
  }), distinctUntilChanged(rangeComparator)));
  return {
    listState,
    topItemsIndexes,
    endReached,
    startReached,
    rangeChanged,
    itemsRendered,
    ...stateFlags
  };
}, tup(sizeSystem, groupedListSystem, sizeRangeSystem, initialTopMostItemIndexSystem, scrollToIndexSystem, stateFlagsSystem, propsReadySystem), { singleton: true });

// src/components/Virtuoso/react-virtuoso/totalListHeightSystem.ts
var totalListHeightSystem = system(([{ footerHeight, headerHeight }, { listState }]) => {
  const totalListHeightChanged = stream();
  const totalListHeight = statefulStreamFromEmitter(pipe(combineLatest(footerHeight, headerHeight, listState), map(([footerHeight2, headerHeight2, listState2]) => {
    return footerHeight2 + headerHeight2 + listState2.offsetBottom + listState2.bottom;
  })), 0);
  connect(duc(totalListHeight), totalListHeightChanged);
  return { totalListHeight, totalListHeightChanged };
}, tup(domIOSystem, listStateSystem), { singleton: true });

// src/components/Virtuoso/react-virtuoso/alignToBottomSystem.ts
var alignToBottomSystem = system(([{ viewportHeight }, { totalListHeight }]) => {
  const alignToBottom = statefulStream(false);
  const paddingTopAddition = statefulStreamFromEmitter(pipe(combineLatest(alignToBottom, viewportHeight, totalListHeight), filter(([enabled]) => enabled), map(([, viewportHeight2, totalListHeight2]) => {
    return Math.max(0, viewportHeight2 - totalListHeight2);
  }), distinctUntilChanged()), 0);
  return { alignToBottom, paddingTopAddition };
}, tup(domIOSystem, totalListHeightSystem), { singleton: true });

// src/components/Virtuoso/react-virtuoso/followOutputSystem.ts
function normalizeFollowOutput(follow) {
  if (!follow) {
    return false;
  }
  return follow === "smooth" ? "smooth" : "auto";
}
var behaviorFromFollowOutput = (follow, isAtBottom) => {
  if (typeof follow === "function") {
    return normalizeFollowOutput(follow(isAtBottom));
  }
  return isAtBottom && normalizeFollowOutput(follow);
};
var followOutputSystem = system(([
  { totalCount, listRefresh },
  { isAtBottom, atBottomState },
  { scrollToIndex },
  { scrolledToInitialItem },
  { propsReady, didMount }
]) => {
  const followOutput = statefulStream(false);
  function scrollToBottom(totalCount2, followOutputBehavior) {
    publish(scrollToIndex, {
      index: totalCount2 - 1,
      align: "end",
      behavior: followOutputBehavior
    });
  }
  subscribe(pipe(combineLatest(duc(totalCount), didMount), withLatestFrom(duc(followOutput), isAtBottom, scrolledToInitialItem), map(([
    [totalCount2, didMount2],
    followOutput2,
    isAtBottom2,
    scrolledToInitialItem2
  ]) => {
    let shouldFollow = didMount2 && scrolledToInitialItem2;
    let followOutputBehavior = "auto";
    if (shouldFollow) {
      followOutputBehavior = behaviorFromFollowOutput(followOutput2, isAtBottom2);
      shouldFollow = shouldFollow && !!followOutputBehavior;
    }
    return { totalCount: totalCount2, shouldFollow, followOutputBehavior };
  }), filter(({ shouldFollow }) => shouldFollow)), ({ totalCount: totalCount2, followOutputBehavior }) => {
    handleNext(listRefresh, () => {
      scrollToBottom(totalCount2, followOutputBehavior);
    });
  });
  subscribe(pipe(combineLatest(duc(followOutput), totalCount, propsReady), filter(([follow, , ready]) => follow && ready), scan(({ value }, [, next]) => {
    return { refreshed: value === next, value: next };
  }, { refreshed: false, value: 0 }), filter(({ refreshed }) => refreshed), withLatestFrom(followOutput, totalCount)), ([, followOutput2, totalCount2]) => {
    const cancel = handleNext(atBottomState, (state) => {
      if (followOutput2 && !state.atBottom && state.notAtBottomBecause === "SIZE_INCREASED") {
        scrollToBottom(totalCount2, "auto");
      }
    });
    setTimeout(cancel, 100);
  });
  subscribe(pipe(combineLatest(duc(followOutput), atBottomState), withLatestFrom(totalCount)), ([[followOutput2, state], totalCount2]) => {
    if (followOutput2 && !state.atBottom && state.notAtBottomBecause === "VIEWPORT_HEIGHT_DECREASING") {
      scrollToBottom(totalCount2, "auto");
    }
  });
  return { followOutput };
}, tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem));

// src/components/Virtuoso/react-virtuoso/initialItemCountSystem.ts
var initialItemCountSystem = system(([{ sizes, firstItemIndex, data }, { listState }, { didMount }]) => {
  const initialItemCount = statefulStream(0);
  connect(pipe(didMount, withLatestFrom(initialItemCount), filter(([, count2]) => count2 !== 0), withLatestFrom(sizes, firstItemIndex, data), map(([[, count2], sizes2, firstItemIndex2, data2 = []]) => {
    let includedGroupsCount = 0;
    if (sizes2.groupIndices.length > 0) {
      for (const index4 of sizes2.groupIndices) {
        if (index4 - includedGroupsCount >= count2) {
          break;
        }
        includedGroupsCount++;
      }
    }
    const adjustedCount = count2 + includedGroupsCount;
    const items = Array.from({
      length: adjustedCount
    }).map((_18, index4) => ({
      index: index4,
      size: 0,
      offset: 0,
      data: data2[index4]
    }));
    return buildListState(items, [], adjustedCount, sizes2, firstItemIndex2);
  })), listState);
  return { initialItemCount };
}, tup(sizeSystem, listStateSystem, propsReadySystem), { singleton: true });

// src/components/Virtuoso/react-virtuoso/initialScrollTopSystem.ts
var initialScrollTopSystem = system(([{ totalListHeight }, { didMount }, { scrollTo }]) => {
  const initialScrollTop = statefulStream(0);
  subscribe(pipe(didMount, withLatestFrom(initialScrollTop), filter(([, offset7]) => offset7 !== 0), map(([, offset7]) => ({ top: offset7 }))), (location) => {
    handleNext(pipe(totalListHeight, filter((val) => val !== 0)), () => {
      setTimeout(() => {
        publish(scrollTo, location);
      });
    });
  });
  return {
    initialScrollTop
  };
}, tup(totalListHeightSystem, propsReadySystem, domIOSystem), { singleton: true });

// src/components/Virtuoso/react-virtuoso/topItemCountSystem.ts
var topItemCountSystem = system(([{ topItemsIndexes }]) => {
  const topItemCount = statefulStream(0);
  connect(pipe(topItemCount, filter((length) => length > 0), map((length) => Array.from({ length }).map((_18, index4) => index4))), topItemsIndexes);
  return { topItemCount };
}, tup(listStateSystem));

// src/components/Virtuoso/react-virtuoso/upwardScrollFixSystem.ts
var upwardScrollFixSystem = system(([
  { scrollBy, scrollTop, scrollDirection, deviation, scrollingInProgress },
  { isScrolling },
  { listState },
  { beforeUnshiftWith, sizes }
]) => {
  const deviationOffset = streamFromEmitter(pipe(listState, withLatestFrom(scrollTop, scrollDirection, scrollingInProgress), filter(([, scrollTop2, scrollDirection2, scrollingInProgress2]) => {
    return !scrollingInProgress2 && scrollTop2 !== 0 && scrollDirection2 === UP;
  }), map(([state]) => state), scan(([, prevItems], { items }) => {
    let newDev = 0;
    if (prevItems.length > 0 && items.length > 0) {
      const firstItemIndex = items[0].originalIndex;
      const prevFirstItemIndex = prevItems[0].originalIndex;
      const atStart = firstItemIndex === 0 && prevFirstItemIndex === 0;
      if (!atStart) {
        if (firstItemIndex === prevFirstItemIndex) {
          newDev = items[0].size - prevItems[0].size;
        } else {
          for (let index4 = items.length - 1; index4 >= 0; index4--) {
            const item = items[index4];
            const prevItem = prevItems.find((pItem) => pItem.originalIndex === item.originalIndex);
            if (!prevItem) {
              continue;
            }
            if (item.offset !== prevItem.offset) {
              newDev = item.offset - prevItem.offset;
              break;
            }
          }
        }
      }
    }
    return [newDev, items];
  }, [0, []]), filter(([amount]) => amount !== 0), map(([amount]) => amount)));
  connect(pipe(deviationOffset, withLatestFrom(deviation), map(([amount, deviation2]) => deviation2 - amount)), deviation);
  subscribe(pipe(combineLatest(statefulStreamFromEmitter(isScrolling, false), deviation), filter(([is3, deviation2]) => !is3 && deviation2 !== 0), map(([, deviation2]) => deviation2), throttleTime(1)), (offset7) => {
    if (offset7 > 0) {
      publish(scrollBy, { top: -offset7, behavior: "auto" });
      publish(deviation, 0);
    } else {
      publish(deviation, 0);
      publish(scrollBy, { top: -offset7, behavior: "auto" });
    }
  });
  connect(pipe(beforeUnshiftWith, withLatestFrom(sizes), map(([offset7, { lastSize }]) => offset7 * lastSize)), deviationOffset);
  return { deviation };
}, tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem));

// src/components/Virtuoso/react-virtuoso/listSystem.ts
var featureGroup1System = system(([
  sizeRange,
  initialItemCount,
  propsReady,
  scrollSeek,
  totalListHeight,
  initialScrollTopSystem2,
  alignToBottom,
  windowScroller
]) => {
  return {
    ...sizeRange,
    ...initialItemCount,
    ...propsReady,
    ...scrollSeek,
    ...totalListHeight,
    ...initialScrollTopSystem2,
    ...alignToBottom,
    ...windowScroller
  };
}, tup(sizeRangeSystem, initialItemCountSystem, propsReadySystem, scrollSeekSystem, totalListHeightSystem, initialScrollTopSystem, alignToBottomSystem, windowScrollerSystem));
var listSystem = system(([
  {
    totalCount,
    sizeRanges,
    fixedItemSize,
    defaultItemSize,
    trackItemSizes,
    itemSize,
    data,
    firstItemIndex,
    groupIndices
  },
  { initialTopMostItemIndex, scrolledToInitialItem },
  domIO,
  followOutput,
  { listState, topItemsIndexes, ...flags },
  { scrollToIndex },
  ,
  { topItemCount },
  { groupCounts },
  featureGroup1
]) => {
  connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged);
  connect(pipe(featureGroup1.windowViewportRect, map(prop("visibleHeight"))), domIO.viewportHeight);
  return {
    totalCount,
    data,
    firstItemIndex,
    sizeRanges,
    initialTopMostItemIndex,
    scrolledToInitialItem,
    topItemsIndexes,
    topItemCount,
    groupCounts,
    fixedItemHeight: fixedItemSize,
    defaultItemHeight: defaultItemSize,
    ...followOutput,
    listState,
    scrollToIndex,
    trackItemSizes,
    itemSize,
    groupIndices,
    ...flags,
    ...featureGroup1,
    ...domIO
  };
}, tup(sizeSystem, initialTopMostItemIndexSystem, domIOSystem, followOutputSystem, listStateSystem, scrollToIndexSystem, upwardScrollFixSystem, topItemCountSystem, groupedListSystem, featureGroup1System));

// src/components/Virtuoso/react-virtuoso/utils/simpleMemoize.ts
function simpleMemoize(func4) {
  let called = false;
  let result;
  return () => {
    if (!called) {
      called = true;
      result = func4();
    }
    return result;
  };
}

// src/components/Virtuoso/react-virtuoso/utils/positionStickyCssValue.ts
var WEBKIT_STICKY = "-webkit-sticky";
var STICKY = "sticky";
var positionStickyCssValue = simpleMemoize(() => {
  if (typeof document === "undefined") {
    return STICKY;
  }
  const node4 = document.createElement("div");
  node4.style.position = WEBKIT_STICKY;
  return node4.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY;
});

// src/components/Virtuoso/react-virtuoso/List.tsx
function identity(value) {
  return value;
}
var listComponentPropsSystem = system(() => {
  const itemContent = statefulStream((index4) => `Item ${index4}`);
  const groupContent = statefulStream((index4) => `Group ${index4}`);
  const components = statefulStream({});
  const computeItemKey = statefulStream(identity);
  const headerFooterTag = statefulStream("div");
  const scrollerRef = statefulStream(noop3);
  const distinctProp = (propName, defaultValue = null) => {
    return statefulStreamFromEmitter(pipe(components, map((components2) => components2[propName]), distinctUntilChanged()), defaultValue);
  };
  return {
    itemContent,
    groupContent,
    components,
    computeItemKey,
    headerFooterTag,
    scrollerRef,
    FooterComponent: distinctProp("Footer"),
    HeaderComponent: distinctProp("Header"),
    TopItemListComponent: distinctProp("TopItemList"),
    ListComponent: distinctProp("List", "div"),
    ItemComponent: distinctProp("Item", "div"),
    GroupComponent: distinctProp("Group", "div"),
    ScrollerComponent: distinctProp("Scroller", "div"),
    EmptyPlaceholder: distinctProp("EmptyPlaceholder"),
    ScrollSeekPlaceholder: distinctProp("ScrollSeekPlaceholder")
  };
});
function addDeprecatedAlias(prop2, message) {
  const alias = stream();
  subscribe(alias, () => console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, "color: red;", "color: inherit;", "color: blue;"));
  connect(alias, prop2);
  return alias;
}
var combinedSystem = system(([listSystem2, propsSystem]) => {
  const deprecatedProps = {
    item: addDeprecatedAlias(propsSystem.itemContent, "Rename the %citem%c prop to %citemContent."),
    group: addDeprecatedAlias(propsSystem.groupContent, "Rename the %cgroup%c prop to %cgroupContent."),
    topItems: addDeprecatedAlias(listSystem2.topItemCount, "Rename the %ctopItems%c prop to %ctopItemCount."),
    itemHeight: addDeprecatedAlias(listSystem2.fixedItemHeight, "Rename the %citemHeight%c prop to %cfixedItemHeight."),
    scrollingStateChange: addDeprecatedAlias(listSystem2.isScrolling, "Rename the %cscrollingStateChange%c prop to %cisScrolling."),
    adjustForPrependedItems: stream(),
    maxHeightCacheSize: stream(),
    footer: stream(),
    header: stream(),
    HeaderContainer: stream(),
    FooterContainer: stream(),
    ItemContainer: stream(),
    ScrollContainer: stream(),
    GroupContainer: stream(),
    ListContainer: stream(),
    emptyComponent: stream(),
    scrollSeek: stream()
  };
  subscribe(deprecatedProps.adjustForPrependedItems, () => {
    console.warn(`react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`, "color: red;", "color: inherit;", "color: blue;");
  });
  subscribe(deprecatedProps.maxHeightCacheSize, () => {
    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`);
  });
  subscribe(deprecatedProps.HeaderContainer, () => {
    console.warn(`react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`);
  });
  subscribe(deprecatedProps.FooterContainer, () => {
    console.warn(`react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`);
  });
  function deprecateComponentProp(stream2, componentName2, propName) {
    connect(pipe(stream2, withLatestFrom(propsSystem.components), map(([comp, components]) => {
      console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName2} instead.`);
      return { ...components, [componentName2]: comp };
    })), propsSystem.components);
  }
  subscribe(deprecatedProps.scrollSeek, ({ placeholder: placeholder2, ...config2 }) => {
    console.warn(`react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`);
    publish(propsSystem.components, {
      ...getValue3(propsSystem.components),
      ScrollSeekPlaceholder: placeholder2
    });
    publish(listSystem2.scrollSeekConfiguration, config2);
  });
  deprecateComponentProp(deprecatedProps.footer, "Footer", "footer");
  deprecateComponentProp(deprecatedProps.header, "Header", "header");
  deprecateComponentProp(deprecatedProps.ItemContainer, "Item", "ItemContainer");
  deprecateComponentProp(deprecatedProps.ListContainer, "List", "ListContainer");
  deprecateComponentProp(deprecatedProps.ScrollContainer, "Scroller", "ScrollContainer");
  deprecateComponentProp(deprecatedProps.emptyComponent, "EmptyPlaceholder", "emptyComponent");
  deprecateComponentProp(deprecatedProps.GroupContainer, "Group", "GroupContainer");
  return { ...listSystem2, ...propsSystem, ...deprecatedProps };
}, tup(listSystem, listComponentPropsSystem));
var DefaultScrollSeekPlaceholder = ({ height: height2 }) => /* @__PURE__ */ createElement117("div", {
  style: { height: height2 }
});
var GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1 };
var Items = memo416(function VirtuosoItems({
  showTopList = false
}) {
  const listState = useEmitterValue("listState");
  const deviation = useEmitterValue("deviation");
  const sizeRanges = usePublisher("sizeRanges");
  const itemContent = useEmitterValue("itemContent");
  const groupContent = useEmitterValue("groupContent");
  const trackItemSizes = useEmitterValue("trackItemSizes");
  const itemSize = useEmitterValue("itemSize");
  const ref2 = useChangedChildSizes(sizeRanges, itemSize, trackItemSizes);
  const EmptyPlaceholder = useEmitterValue("EmptyPlaceholder");
  const ScrollSeekPlaceholder = useEmitterValue("ScrollSeekPlaceholder") || DefaultScrollSeekPlaceholder;
  const ListComponent = useEmitterValue("ListComponent");
  const ItemComponent = useEmitterValue("ItemComponent");
  const GroupComponent = useEmitterValue("GroupComponent");
  const computeItemKey = useEmitterValue("computeItemKey");
  const isSeeking = useEmitterValue("isSeeking");
  const hasGroups2 = useEmitterValue("groupIndices").length > 0;
  const paddingTopAddition = useEmitterValue("paddingTopAddition");
  const scrolledToInitialItem = useEmitterValue("scrolledToInitialItem");
  const containerStyle = showTopList ? {} : {
    boxSizing: "border-box",
    paddingTop: listState.offsetTop + paddingTopAddition,
    paddingBottom: listState.offsetBottom,
    marginTop: deviation
  };
  if (!showTopList && listState.items.length === 0 && EmptyPlaceholder && scrolledToInitialItem) {
    return createElement118(EmptyPlaceholder);
  }
  return createElement118(ListComponent, { ref: ref2, style: containerStyle }, (showTopList ? listState.topItems : listState.items).map((item) => {
    const index4 = item.originalIndex;
    const key = computeItemKey(index4);
    if (isSeeking) {
      return createElement118(ScrollSeekPlaceholder, {
        key,
        index: item.index,
        height: item.size
      });
    }
    if (item.type === "group") {
      return createElement118(GroupComponent, {
        key,
        "data-index": index4,
        "data-known-size": item.size,
        "data-item-index": item.index,
        style: GROUP_STYLE
      }, groupContent(item.index));
    }
    return createElement118(ItemComponent, {
      key,
      "data-index": index4,
      "data-known-size": item.size,
      "data-item-index": item.index,
      "data-item-group-index": item.groupIndex
    }, hasGroups2 ? itemContent(item.index, item.groupIndex, item.data) : itemContent(item.index, item.data));
  }));
});
var scrollerStyle = {
  height: "100%",
  outline: "none",
  overflowY: "auto",
  position: "relative",
  WebkitOverflowScrolling: "touch"
};
var viewportStyle = {
  width: "100%",
  height: "100%",
  position: "absolute",
  top: 0
};
var topItemListStyle = {
  width: "100%",
  position: positionStickyCssValue(),
  top: 0
};
var Header = memo416(function VirtuosoHeader() {
  const Header2 = useEmitterValue("HeaderComponent");
  const headerHeight = usePublisher("headerHeight");
  const headerFooterTag = useEmitterValue("headerFooterTag");
  const ref2 = useSize((el2) => headerHeight(el2.offsetHeight));
  return Header2 ? createElement118(headerFooterTag, { ref: ref2 }, createElement118(Header2)) : null;
});
var Footer = memo416(function VirtuosoFooter() {
  const Footer2 = useEmitterValue("FooterComponent");
  const footerHeight = usePublisher("footerHeight");
  const headerFooterTag = useEmitterValue("headerFooterTag");
  const ref2 = useSize((el2) => footerHeight(el2.offsetHeight));
  return Footer2 ? createElement118(headerFooterTag, { ref: ref2 }, createElement118(Footer2)) : null;
});
function buildScroller({
  usePublisher: usePublisher3,
  useEmitter: useEmitter3,
  useEmitterValue: useEmitterValue3,
  window: customWindow
}) {
  const Scroller2 = memo416(function VirtuosoScroller({ style: style3, children: children2, ...props }) {
    const scrollTopCallback = usePublisher3("scrollTop");
    const ScrollerComponent = useEmitterValue3("ScrollerComponent");
    const smoothScrollTargetReached = usePublisher3("smoothScrollTargetReached");
    const scrollerRefCallback = useEmitterValue3("scrollerRef");
    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(scrollTopCallback, smoothScrollTargetReached, ScrollerComponent, scrollerRefCallback, customWindow);
    useEmitter3("scrollTo", scrollToCallback);
    useEmitter3("scrollBy", scrollByCallback);
    return createElement118(ScrollerComponent, {
      ref: scrollerRef,
      style: { ...scrollerStyle, ...style3 },
      tabIndex: 0,
      ...props
    }, children2);
  });
  return Scroller2;
}
function buildWindowScroller({
  usePublisher: usePublisher3,
  useEmitter: useEmitter3,
  useEmitterValue: useEmitterValue3,
  window: customWindow
}) {
  const Scroller2 = memo416(function VirtuosoWindowScroller({ style: style3, children: children2, ...props }) {
    const scrollTopCallback = usePublisher3("windowScrollTop");
    const ScrollerComponent = useEmitterValue3("ScrollerComponent");
    const smoothScrollTargetReached = usePublisher3("smoothScrollTargetReached");
    const totalListHeight = useEmitterValue3("totalListHeight");
    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(scrollTopCallback, smoothScrollTargetReached, ScrollerComponent, void 0, customWindow);
    useIsomorphicLayoutEffect_default(() => {
      scrollerRef.current = window;
      return () => {
        scrollerRef.current = null;
      };
    }, [scrollerRef]);
    useEmitter3("windowScrollTo", scrollToCallback);
    useEmitter3("scrollBy", scrollByCallback);
    return createElement118(ScrollerComponent, {
      style: {
        position: "relative",
        ...style3,
        ...totalListHeight !== 0 ? { height: totalListHeight } : {}
      },
      ...props
    }, children2);
  });
  return Scroller2;
}
var Viewport = ({ children: children2 }) => {
  const viewportHeight = usePublisher("viewportHeight");
  const viewportRef = useSize(compose3(viewportHeight, prop("offsetHeight")));
  return /* @__PURE__ */ createElement117("div", {
    style: viewportStyle,
    ref: viewportRef
  }, children2);
};
var WindowViewport = ({ children: children2 }) => {
  const windowViewportRect = usePublisher("windowViewportRect");
  const { externalWindow } = useRcPortalWindowContext();
  const viewportRef = useWindowViewportRectRef(windowViewportRect, externalWindow);
  return /* @__PURE__ */ createElement117("div", {
    ref: viewportRef,
    style: viewportStyle
  }, children2);
};
var TopItemListContainer = ({ children: children2 }) => {
  const TopItemList = useEmitterValue("TopItemListComponent");
  const headerHeight = useEmitterValue("headerHeight");
  const style3 = { ...topItemListStyle, marginTop: `${headerHeight}px` };
  return createElement118(TopItemList || "div", { style: style3 }, children2);
};
var ListRoot = memo416(function VirtuosoRoot(props) {
  const useWindowScroll = useEmitterValue("useWindowScroll");
  const showTopList = useEmitterValue("topItemsIndexes").length > 0;
  const { externalWindow } = useRcPortalWindowContext();
  const TheScroller = useMemo62(() => (useWindowScroll ? createWindowScroller : createScroller)(externalWindow || window), [externalWindow, useWindowScroll]);
  const TheViewport = useWindowScroll ? WindowViewport : Viewport;
  return /* @__PURE__ */ createElement117(TheScroller, {
    ...props
  }, /* @__PURE__ */ createElement117(TheViewport, null, /* @__PURE__ */ createElement117(Header, null), /* @__PURE__ */ createElement117(Items, null), /* @__PURE__ */ createElement117(Footer, null)), showTopList && /* @__PURE__ */ createElement117(TopItemListContainer, null, /* @__PURE__ */ createElement117(Items, {
    showTopList: true
  })));
});
var {
  Component: List3,
  usePublisher,
  useEmitterValue,
  useEmitter
} = systemToComponent(combinedSystem, {
  required: {},
  optional: {
    followOutput: "followOutput",
    firstItemIndex: "firstItemIndex",
    itemContent: "itemContent",
    groupContent: "groupContent",
    overscan: "overscan",
    totalCount: "totalCount",
    topItemCount: "topItemCount",
    initialTopMostItemIndex: "initialTopMostItemIndex",
    components: "components",
    groupCounts: "groupCounts",
    computeItemKey: "computeItemKey",
    defaultItemHeight: "defaultItemHeight",
    fixedItemHeight: "fixedItemHeight",
    itemSize: "itemSize",
    scrollSeekConfiguration: "scrollSeekConfiguration",
    headerFooterTag: "headerFooterTag",
    data: "data",
    initialItemCount: "initialItemCount",
    initialScrollTop: "initialScrollTop",
    alignToBottom: "alignToBottom",
    useWindowScroll: "useWindowScroll",
    scrollerRef: "scrollerRef",
    item: "item",
    group: "group",
    topItems: "topItems",
    itemHeight: "itemHeight",
    scrollingStateChange: "scrollingStateChange",
    maxHeightCacheSize: "maxHeightCacheSize",
    footer: "footer",
    header: "header",
    ItemContainer: "ItemContainer",
    ScrollContainer: "ScrollContainer",
    ListContainer: "ListContainer",
    GroupContainer: "GroupContainer",
    emptyComponent: "emptyComponent",
    HeaderContainer: "HeaderContainer",
    FooterContainer: "FooterContainer",
    scrollSeek: "scrollSeek"
  },
  methods: {
    scrollToIndex: "scrollToIndex",
    scrollTo: "scrollTo",
    scrollBy: "scrollBy",
    adjustForPrependedItems: "adjustForPrependedItems"
  },
  events: {
    isScrolling: "isScrolling",
    endReached: "endReached",
    startReached: "startReached",
    rangeChanged: "rangeChanged",
    atBottomStateChange: "atBottomStateChange",
    atTopStateChange: "atTopStateChange",
    totalListHeightChanged: "totalListHeightChanged",
    itemsRendered: "itemsRendered",
    groupIndices: "groupIndices"
  }
}, ListRoot);
var createScroller = (window2) => buildScroller({ usePublisher, useEmitterValue, useEmitter, window: window2 });
var createWindowScroller = (window2) => buildWindowScroller({
  usePublisher,
  useEmitterValue,
  useEmitter,
  window: window2
});

// src/components/Virtuoso/react-virtuoso/Grid.tsx
var gridComponentPropsSystem = system(() => {
  const itemContent = statefulStream((index4) => `Item ${index4}`);
  const components = statefulStream({});
  const itemClassName = statefulStream("virtuoso-grid-item");
  const listClassName = statefulStream("virtuoso-grid-list");
  const computeItemKey = statefulStream(identity);
  const scrollerRef = statefulStream(noop3);
  const distinctProp = (propName, defaultValue = null) => {
    return statefulStreamFromEmitter(pipe(components, map((components2) => components2[propName]), distinctUntilChanged()), defaultValue);
  };
  return {
    itemContent,
    components,
    computeItemKey,
    itemClassName,
    listClassName,
    scrollerRef,
    ListComponent: distinctProp("List", "div"),
    ItemComponent: distinctProp("Item", "div"),
    ScrollerComponent: distinctProp("Scroller", "div"),
    ScrollSeekPlaceholder: distinctProp("ScrollSeekPlaceholder", "div")
  };
});
var combinedSystem2 = system(([gridSystem2, gridComponentPropsSystem2]) => {
  const deprecatedProps = {
    item: addDeprecatedAlias(gridComponentPropsSystem2.itemContent, "Rename the %citem%c prop to %citemContent."),
    ItemContainer: stream(),
    ScrollContainer: stream(),
    ListContainer: stream(),
    emptyComponent: stream(),
    scrollSeek: stream()
  };
  function deprecateComponentProp(stream2, componentName2, propName) {
    connect(pipe(stream2, withLatestFrom(gridComponentPropsSystem2.components), map(([comp, components]) => {
      console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName2} instead.`);
      return { ...components, [componentName2]: comp };
    })), gridComponentPropsSystem2.components);
  }
  subscribe(deprecatedProps.scrollSeek, ({ placeholder: placeholder2, ...config2 }) => {
    console.warn(`react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`);
    publish(gridComponentPropsSystem2.components, {
      ...getValue3(gridComponentPropsSystem2.components),
      ScrollSeekPlaceholder: placeholder2
    });
    publish(gridSystem2.scrollSeekConfiguration, config2);
  });
  deprecateComponentProp(deprecatedProps.ItemContainer, "Item", "ItemContainer");
  deprecateComponentProp(deprecatedProps.ListContainer, "List", "ListContainer");
  deprecateComponentProp(deprecatedProps.ScrollContainer, "Scroller", "ScrollContainer");
  return { ...gridSystem2, ...gridComponentPropsSystem2, ...deprecatedProps };
}, tup(gridSystem, gridComponentPropsSystem));
var GridItems = memo417(function GridItems2() {
  const gridState = useEmitterValue2("gridState");
  const listClassName = useEmitterValue2("listClassName");
  const itemClassName = useEmitterValue2("itemClassName");
  const itemContent = useEmitterValue2("itemContent");
  const computeItemKey = useEmitterValue2("computeItemKey");
  const isSeeking = useEmitterValue2("isSeeking");
  const ItemComponent = useEmitterValue2("ItemComponent");
  const ListComponent = useEmitterValue2("ListComponent");
  const ScrollSeekPlaceholder = useEmitterValue2("ScrollSeekPlaceholder");
  const itemDimensions = usePublisher2("itemDimensions");
  const listRef = useSize((el2) => {
    const firstItem = el2.firstChild;
    if (firstItem) {
      itemDimensions({
        width: firstItem.offsetWidth,
        height: firstItem.offsetHeight
      });
    }
  });
  return createElement120(ListComponent, {
    ref: listRef,
    className: listClassName,
    style: {
      paddingTop: gridState.offsetTop,
      paddingBottom: gridState.offsetBottom
    }
  }, gridState.items.map((item) => {
    const key = computeItemKey(item.index);
    return isSeeking ? createElement120(ScrollSeekPlaceholder, {
      key,
      style: { height: gridState.itemHeight, width: gridState.itemWidth }
    }) : createElement120(ItemComponent, { className: itemClassName, "data-index": item.index, key }, itemContent(item.index));
  }));
});
var Viewport2 = ({ children: children2 }) => {
  const viewportDimensions = usePublisher2("viewportDimensions");
  const viewportRef = useSize((el2) => {
    viewportDimensions({
      width: el2.offsetWidth,
      height: el2.offsetHeight
    });
  });
  return /* @__PURE__ */ createElement119("div", {
    style: viewportStyle,
    ref: viewportRef
  }, children2);
};
var WindowViewport2 = ({ children: children2 }) => {
  const windowViewportRect = usePublisher2("windowViewportRect");
  const viewportRef = useWindowViewportRectRef(windowViewportRect);
  return /* @__PURE__ */ createElement119("div", {
    ref: viewportRef,
    style: viewportStyle
  }, children2);
};
var GridRoot = memo417(function GridRoot2({ ...props }) {
  const useWindowScroll = useEmitterValue2("useWindowScroll");
  const TheScroller = useWindowScroll ? WindowScroller : Scroller;
  const TheViewport = useWindowScroll ? WindowViewport2 : Viewport2;
  return /* @__PURE__ */ createElement119(TheScroller, {
    ...props
  }, /* @__PURE__ */ createElement119(TheViewport, null, /* @__PURE__ */ createElement119(GridItems, null)));
});
var {
  Component: Grid3,
  usePublisher: usePublisher2,
  useEmitterValue: useEmitterValue2,
  useEmitter: useEmitter2
} = systemToComponent(combinedSystem2, {
  optional: {
    totalCount: "totalCount",
    overscan: "overscan",
    itemContent: "itemContent",
    components: "components",
    computeItemKey: "computeItemKey",
    initialItemCount: "initialItemCount",
    scrollSeekConfiguration: "scrollSeekConfiguration",
    listClassName: "listClassName",
    itemClassName: "itemClassName",
    useWindowScroll: "useWindowScroll",
    scrollerRef: "scrollerRef",
    item: "item",
    ItemContainer: "ItemContainer",
    ScrollContainer: "ScrollContainer",
    ListContainer: "ListContainer",
    scrollSeek: "scrollSeek"
  },
  methods: {
    scrollTo: "scrollTo",
    scrollBy: "scrollBy",
    scrollToIndex: "scrollToIndex"
  },
  events: {
    isScrolling: "isScrolling",
    endReached: "endReached",
    startReached: "startReached",
    rangeChanged: "rangeChanged",
    atBottomStateChange: "atBottomStateChange",
    atTopStateChange: "atTopStateChange"
  }
}, GridRoot);
var Scroller = buildScroller({ usePublisher: usePublisher2, useEmitterValue: useEmitterValue2, useEmitter: useEmitter2 });
var WindowScroller = buildWindowScroller({
  usePublisher: usePublisher2,
  useEmitterValue: useEmitterValue2,
  useEmitter: useEmitter2
});

// src/components/Virtuoso/react-virtuoso/components.tsx
var Virtuoso = List3;
var GroupedVirtuoso = List3;
var VirtuosoGrid = Grid3;

// src/components/Virtuoso/utils/isOutOfRange.ts
function isOutOfRange(focusedIndex, range) {
  return focusedIndex < range.startIndex || focusedIndex > range.endIndex;
}

// src/components/Virtuoso/utils/useDynamicHeight.tsx
import { useRef as useRef78 } from "react";
var useDynamicHeight = ({
  itemCount,
  maxContainerHeight,
  onContainerHeightChange
}) => {
  const prevItemCount = usePrevious(() => itemCount);
  const fullHeight = maxContainerHeight === "100%";
  const maxContainerSize = fullHeight ? -1 : maxContainerHeight;
  const containerHeighRef = useRef78(maxContainerSize);
  if (!fullHeight) {
    if (prevItemCount === 0 && itemCount !== 0) {
      containerHeighRef.current = maxContainerSize;
    } else if (itemCount === 0) {
      containerHeighRef.current = 0;
    }
  }
  return {
    containerHeighRef,
    totalListHeightChanged: (height2) => {
      if (!fullHeight) {
        const containerHeigh = containerHeighRef.current;
        let changeHeight = -1;
        if (height2 < containerHeigh) {
          changeHeight = height2;
        } else if (containerHeigh !== maxContainerSize) {
          changeHeight = Math.min(height2, maxContainerSize);
        }
        if (changeHeight !== -1) {
          containerHeighRef.current = changeHeight;
          onContainerHeightChange?.(changeHeight);
        }
      }
    },
    style: {
      height: fullHeight ? "100%" : containerHeighRef.current
    }
  };
};

// src/components/Virtuoso/utils/useHighlightScroll.tsx
import { useRef as useRef79 } from "react";
function useHighlightScroll({
  containerHeighRef,
  scrollToIndex
}) {
  const renderedItemsRef = useRef79([]);
  const scrollerRef = useRef79();
  const scrollToHighlightedIndex = (prevHighlightedIndex, currHighlightedIndex, topHighlightIndex = 0) => {
    if (!scrollerRef.current) {
      if (currHighlightedIndex !== topHighlightIndex) {
        setTimeout(() => {
          scrollToIndex({
            index: currHighlightedIndex,
            align: "start"
          });
        }, 0);
      }
      return;
    }
    const scrollElm = scrollerRef.current;
    const renderedItems = renderedItemsRef.current;
    const isBackward = prevHighlightedIndex > currHighlightedIndex;
    const isForward = prevHighlightedIndex < currHighlightedIndex;
    const currentVisibleOffset = {
      start: scrollElm.scrollTop,
      stop: scrollElm.scrollTop + containerHeighRef.current
    };
    if (!renderedItems.some((x2) => x2.index === currHighlightedIndex)) {
      scrollToIndex({
        index: currHighlightedIndex,
        align: isBackward ? "start" : "end"
      });
      return;
    }
    if (isBackward) {
      let firstShouldScrollIndex = currHighlightedIndex;
      for (let i2 = renderedItems.length - 1; i2 >= 0; i2--) {
        const item = renderedItems[i2];
        if (item.offset <= currentVisibleOffset.start) {
          break;
        }
        firstShouldScrollIndex = item.index;
      }
      if (currHighlightedIndex < firstShouldScrollIndex) {
        scrollToIndex({
          index: currHighlightedIndex,
          align: "start"
        });
      }
    } else if (isForward) {
      let lastShouldScrollIndex = currHighlightedIndex;
      for (let i2 = 0; i2 < renderedItems.length; i2++) {
        const item = renderedItems[i2];
        if (item.offset >= currentVisibleOffset.stop) {
          break;
        }
        lastShouldScrollIndex = item.index;
      }
      if (currHighlightedIndex >= lastShouldScrollIndex) {
        scrollToIndex({
          index: currHighlightedIndex,
          align: "end"
        });
      }
    } else {
      scrollToIndex({
        index: currHighlightedIndex,
        align: "start"
      });
    }
  };
  return {
    scrollerRef,
    scrollToHighlightedIndex,
    scrollerRefFn: (elm) => scrollerRef.current = elm,
    itemsRendered: (e2) => renderedItemsRef.current = e2
  };
}

// src/components/Downshift/SuggestionList/utils/SuggestionListUtils.ts
var RcSuggestionListClasses = RcClasses(["root", "expanded", "toggle", "groupTitle"], "RcSuggestionList");

// src/components/Downshift/SuggestionList/styles/SuggestionListStyle.tsx
var SuggestionListStyle = () => {
  return css2`
    .${RcSuggestionListClasses.toggle} {
      margin-right: -${spacing2(3)};

      transform: rotate(0deg);
      transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;

      &.${RcSuggestionListClasses.expanded} {
        transform: rotate(180deg);
      }
    }
  `;
};

// src/components/Downshift/SuggestionList/SuggestionList.tsx
var SuggestionListContext = createContext20(null);
var List4 = forwardRef578((props, ref2) => {
  const listRef = useContext26(SuggestionListContext);
  const forkRef = useForkRef2(ref2, listRef);
  return /* @__PURE__ */ React659.createElement("div", {
    ref: forkRef,
    "data-suggestion-list": true,
    ...props
  });
});
var SuggestionList = forwardRef578((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcSuggestionList" });
  const {
    highlightedIndex,
    options,
    getItemProps,
    getMenuProps,
    renderOption,
    inputValue,
    groupVariant,
    groupExpanded,
    renderGroup,
    optionsGroupList,
    getOptionDisabled,
    MenuItem: MenuItem3,
    changeHighlightedIndexReason,
    isKeepHighlightedIndex,
    components: componentsProp,
    onUpdatePopper,
    getOptionLabel,
    padding,
    maxContainerHeight = "100%",
    className: classNameProp,
    classes: classesProp,
    ...rest
  } = props;
  const vlRef = useRef80(null);
  const forkVlRef = useForkRef2(ref2, vlRef);
  const isTitleMode = groupVariant === "normal";
  const listRef = useRef80(null);
  const itemData = options;
  const itemCount = options.length;
  const classes = combineClasses(RcSuggestionListClasses, classesProp);
  const className = clsx_m_default(classNameProp, classes?.root);
  const { totalListHeightChanged, style: style3, containerHeighRef } = useDynamicHeight({
    itemCount,
    maxContainerHeight,
    onContainerHeightChange: (changeHeight) => {
      const scroller = scrollerRef.current;
      if (scroller?.style) {
        scroller.style.height = `${changeHeight}px`;
        onUpdatePopper?.();
      }
    }
  });
  const { sleep } = useSleep();
  const { retry: scrollToIndexWithRetry } = useRetry(async (location) => {
    if (location.index === 0 && padding !== void 0) {
      location = {
        ...location,
        offset: -(typeof padding === "number" ? padding : menuListBoundaryPadding)
      };
    }
    vlRef.current?.scrollToIndex(location);
    const toIndex = location.index;
    await sleep(0);
    const toElm = listRef.current?.querySelector(`[data-item-index="${toIndex}"]`);
    if (toElm) {
      return true;
    }
    return false;
  }, {
    retryTimes: 10,
    intervalTime: 20
  });
  const {
    scrollerRef,
    scrollerRefFn,
    itemsRendered,
    scrollToHighlightedIndex
  } = useHighlightScroll({
    containerHeighRef,
    scrollToIndex: scrollToIndexWithRetry
  });
  const prevHighlightedIndex = usePrevious(() => highlightedIndex, true);
  useLayoutEffect23(() => {
    if (vlRef.current && !isKeepHighlightedIndex && changeHighlightedIndexReason && changeHighlightedIndexReason !== "mouse") {
      scrollToHighlightedIndex(prevHighlightedIndex, highlightedIndex, isTitleMode ? 1 : 0);
    }
  });
  const handleScrolling = (scrolling) => {
    const list = listRef.current;
    if (list && list.style) {
      if (scrolling) {
        list.style.pointerEvents = "none";
      } else {
        list.style.pointerEvents = "";
      }
    }
  };
  const itemContent = (index4, option) => {
    const currGroup = option.group;
    const isGroupTitle = option === currGroup?.options[0];
    const isFixedGroupExpanded = typeof groupExpanded === "boolean";
    const expandIconProps = !isTitleMode && !isFixedGroupExpanded && isGroupTitle ? option.group?.getExpandIconProps?.({
      className: clsx_m_default(classes.toggle, {
        [classes.expanded]: option.group?.expanded
      })
    }) : void 0;
    const itemProps = getItemProps({
      item: option,
      index: index4,
      className: isGroupTitle ? classes.groupTitle : void 0
    });
    const selected = highlightedIndex === index4;
    const resultProps = {
      ...option,
      ...itemProps,
      key: itemProps.id
    };
    const indexInOwnGroup = resultProps.indexInOwnGroup;
    delete resultProps.indexInOwnGroup;
    if (!resultProps.freeSolo && !resultProps.disabled && getOptionDisabled) {
      resultProps.disabled = getOptionDisabled(option);
    }
    const state = {
      inputValue,
      selected,
      index: index4,
      indexInOwnGroup
    };
    if (renderGroup && isGroupTitle) {
      return renderGroup(resultProps, {
        ...state,
        expanded: option.group?.expanded,
        expandIconProps
      });
    }
    if (renderOption) {
      return renderOption(resultProps, state);
    }
    if (MenuItem3) {
      return /* @__PURE__ */ React659.createElement(MenuItem3, {
        ...resultProps,
        itemId: option.id,
        "data-suggestion-item-id": option.id,
        isHighlighted: selected,
        isMember: option.isMember
      });
    }
    return /* @__PURE__ */ React659.createElement(RcMenuItem, {
      component: "div",
      selected,
      ...omit3(resultProps, [
        "isSuggestion",
        "freeSolo",
        "label",
        "unSelectable"
      ])
    }, getOptionLabel ? getOptionLabel(option) : option.label, /* @__PURE__ */ React659.createElement(RcBox, {
      flex: "1 1 auto"
    }), expandIconProps && /* @__PURE__ */ React659.createElement(RcIconButton, {
      ...expandIconProps,
      symbol: ArrowDown2_default
    }));
  };
  const PaddingComponent = useMemo63(() => {
    const paddingValue = padding !== void 0 && itemCount > 0 ? typeof padding === "number" ? padding : menuListBoundaryPadding : 0;
    return () => /* @__PURE__ */ React659.createElement(StyledMenuListPadding, {
      height: paddingValue
    });
  }, [itemCount, padding]);
  const components = useMemo63(() => {
    return {
      List: List4,
      Header: PaddingComponent,
      Footer: PaddingComponent,
      ...componentsProp
    };
  }, [componentsProp, PaddingComponent]);
  return /* @__PURE__ */ React659.createElement(SuggestionListContext.Provider, {
    value: listRef
  }, /* @__PURE__ */ React659.createElement(Virtuoso, {
    ref: forkVlRef,
    totalCount: itemCount,
    data: itemData,
    className,
    components,
    itemContent,
    ...getMenuProps(),
    ...combineProps({
      scrollerRef: scrollerRefFn,
      itemsRendered,
      totalListHeightChanged,
      style: style3,
      isScrolling: handleScrolling
    }, rest)
  }));
});
var RcSuggestionList = styled_components_default(SuggestionList)`
  ${SuggestionListStyle};
`;
RcSuggestionList.displayName = "RcSuggestionList";

// src/components/Downshift/Downshift.tsx
var _RcDownshift = memo418(forwardRef579((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDownshift" });
  const theme = RcUseTheme();
  const {
    itemToString = DEFAULT_GET_OPTION_LABEL,
    keyToChips = DEFAULT_KEY_TO_CHIPS,
    limitOfFreeChips = DEFAULT_LIMIT_CHIPS,
    minRowHeight,
    suggestionItems,
    messageRef,
    MenuItem: MenuItem3,
    inputLabel,
    nameError,
    maxLength,
    InputItem,
    emailError,
    autoSwitchEmail,
    enableFreeChips,
    inputPlaceholder,
    errorSelectedItems,
    enableAutoTransform,
    allowPlainHelperText,
    TextFieldProps,
    selectedItems: selectedItemsProp,
    automationId,
    screenReader,
    onSelectChange,
    variant,
    groupExpanded,
    groupDefaultExpanded,
    groupVariant = "normal",
    getExpandIconProps,
    groupBy,
    value: valueProp = selectedItemsProp,
    autoHighlight = true,
    fullWidth = true,
    clearBtn = false,
    toggleButton = false,
    multiple = false,
    clearButtonProps,
    onClear,
    ToggleButtonProps,
    inputValue: inputValueProp,
    onKeyDown: onKeyDownProp,
    helperText: helperTextProp,
    options,
    openOnFocus,
    getOptionLabel = itemToString,
    renderInput,
    label: label3 = inputLabel,
    inputRef: inputRefProp = messageRef,
    error: error4 = nameError,
    placeholder: placeholder2 = inputPlaceholder,
    freeSolo = enableFreeChips,
    keyToTags = keyToChips,
    maxFreeSolo = limitOfFreeChips,
    SuggestionListProps,
    autoSelect = enableAutoTransform,
    PopperProps,
    initialIsOpen,
    disabled: disabled3,
    required: requiredProp,
    defaultIsOpen = openOnFocus,
    disableCloseOnSelect = defaultIsOpen,
    onChange: onChangeProp = onSelectChange,
    onInputChange: onInputChangeProp,
    onMaxFreeSolo,
    FormHelperTextProps: FormHelperTextPropsProp,
    action: action3,
    filterOptions,
    renderOption,
    renderTags,
    getOptionDisabled,
    renderGroup,
    onGroupExpanded,
    renderNoOptions,
    InputProps: InputPropsProp,
    debug,
    disabledItemsHighlightable,
    open: openProp,
    onOpen,
    onClose,
    focused,
    color: color2,
    ...rest
  } = props;
  const [position4, setPosition] = useState35("bottom");
  const innerInputRef = useRef81(null);
  const textFieldRef = useRef81(null);
  const inputRef = useForkRef2(inputRefProp, innerInputRef);
  const inputContainerRef = useRef81(null);
  const isNew = !suggestionItems;
  let oneOfTagError = false;
  useDownshiftError({ isNew, MenuItem: MenuItem3, InputItem });
  const required2 = requiredProp || TextFieldProps?.required;
  const {
    focusInput,
    optionItems,
    optionsGroupList,
    tags: selectedItems,
    highlightedIndex,
    getToggleButtonProps,
    getTagProps,
    getTagListBoxProps,
    getMenuProps,
    getPopperProps,
    getInputProps,
    getInputAriaProps,
    getLabelProps,
    getItemProps,
    isOpen,
    inputValue,
    activeIndex,
    setActiveIndex,
    setHighlightedIndex,
    onInputChange,
    keepHighlightedIndex,
    changeHighlightedIndexReason,
    closeMenu,
    openMenu,
    reset: reset2,
    getClearButtonProps,
    noOptionItem,
    getNoOptionsProps,
    isKeepHighlightedIndex,
    focused: isDownshiftFocused
  } = useDownshift({
    focused,
    open: openProp,
    variant,
    onOpen,
    onClose,
    wrapperRef: textFieldRef,
    inputContainerRef,
    inputRef: innerInputRef,
    value: valueProp,
    inputValue: inputValueProp,
    getOptionDisabled,
    groupExpanded: groupVariant === "normal" ? true : groupExpanded,
    groupDefaultExpanded,
    getExpandIconProps,
    options: suggestionItems || options,
    freeSolo,
    label: label3,
    multiple,
    keyToTags,
    maxFreeSolo,
    autoSelect,
    disableCloseOnSelect,
    initialIsOpen,
    disabled: disabled3,
    required: required2,
    openOnFocus,
    autoHighlight,
    groupBy,
    groupVariant,
    onChange: onChangeProp,
    onInputChange: onInputChangeProp,
    getOptionLabel,
    filterOptions,
    onMaxFreeSolo,
    renderNoOptions,
    onKeyDown: onKeyDownProp,
    disabledItemsHighlightable,
    onGroupExpanded
  });
  const open = Boolean((isOpen || noOptionItem) && textFieldRef.current);
  const { onBlur, ...InputProps } = getInputProps();
  const helperText = isNew ? helperTextProp : nameError || allowPlainHelperText ? helperTextProp : void 0;
  const describedbyId = `${InputProps.id}-helper-text`;
  const FormHelperTextProps = FormHelperTextPropsProp || {};
  const screenReaderText = useMemo64(() => {
    if (!screenReader || !selectedItems.length)
      return;
    const { entry, entries } = screenReader;
    return `${selectedItems.length === 1 ? entry : entries}`.trim();
  }, [screenReader, selectedItems.length]);
  if (screenReaderText) {
    if (!helperText) {
      InputProps["aria-describedby"] = describedbyId;
    } else if (helperText) {
      FormHelperTextProps["aria-label"] = `${screenReaderText} ${helperText}`.trim();
    }
  }
  const toTextFieldRef = useForkRef2(textFieldRef, ref2);
  const colorHex = useMemo64(() => color2 ? getParsePaletteColor(color2)({ theme }) : void 0, [color2, theme]);
  const startAdornment = (() => {
    if (variant === "autocomplete") {
      return void 0;
    }
    const getCustomizedTagProps = (selectedItem, index4) => {
      const tagProps = getTagProps({
        selectedItem,
        index: index4,
        label: getOptionLabel(selectedItem),
        disabled: disabled3
      });
      if (selectedItem.error) {
        oneOfTagError = true;
      }
      return { ...tagProps, color: colorHex };
    };
    return renderTags ? renderTags(selectedItems, getCustomizedTagProps) : selectedItems.map((selectedItem, index4) => {
      const itemChipProps = getCustomizedTagProps(selectedItem, index4);
      if (InputItem) {
        const isError2 = emailError && emailError === selectedItem.label?.trim() || selectedItem.id && errorSelectedItems?.includes(selectedItem.id) || selectedItem.isError || selectedItem.error;
        return /* @__PURE__ */ React660.createElement(InputItem, {
          ...selectedItem,
          ...itemChipProps,
          isError: isError2
        });
      }
      return /* @__PURE__ */ React660.createElement(RcChip, {
        ...itemChipProps,
        deleteIconProps: {
          "aria-label": "remove"
        }
      });
    });
  })();
  const endAdornment = (toggleButton || clearBtn) && /* @__PURE__ */ React660.createElement(EndAdornment, null, clearBtn && /* @__PURE__ */ React660.createElement(ClearIconButton, {
    ...getClearButtonProps(clearButtonProps)
  }), toggleButton && /* @__PURE__ */ React660.createElement(ArrowDownButton, {
    variant: "plain",
    "aria-hidden": true,
    color: isDownshiftFocused ? color2 || "interactive.f01" : error4 ? "danger.f02" : "neutral.f04",
    size: "large",
    symbol: isOpen ? ArrowUp_default : ArrowDown_default,
    ...getToggleButtonProps(ToggleButtonProps)
  }));
  const { containerClassName, TextFieldInputProps } = (() => {
    const { classes, ...restInputPropsProp } = InputPropsProp || {};
    const toClasses = combineClasses(classes, RcDownshiftInputClasses);
    return {
      containerClassName: toClasses.container,
      TextFieldInputProps: combineProps({
        classes: omit3(toClasses, ["container"]),
        endAdornment,
        inputComponent: RcDownshiftInput,
        ...getTagListBoxProps(),
        ...InputProps,
        onBlur: debug ? void 0 : onBlur
      }, restInputPropsProp)
    };
  })();
  useImperativeHandle15(action3, () => ({
    getActiveIndex: () => activeIndex,
    setActiveIndex,
    getFilterResultItems: () => optionItems,
    getHighlightedIndex: () => highlightedIndex,
    setHighlightedIndex: (index4) => setHighlightedIndex(index4, { reason: "auto", reRender: true }),
    closeMenu,
    openMenu,
    reset: reset2,
    clearInput: () => onInputChange("", false),
    keepHighlightedIndex: () => keepHighlightedIndex(),
    focus: focusInput
  }));
  const hasTags = selectedItems.length > 0;
  const isRenderNoOptions = !!noOptionItem;
  const popperRef = useRef81(null);
  const handleUpdatePopper = useEventCallback2(() => {
    popperRef.current?.update();
  });
  return /* @__PURE__ */ React660.createElement(React660.Fragment, null, /* @__PURE__ */ React660.createElement(StyledTextField, {
    renderInput,
    hasTags,
    ref: toTextFieldRef,
    inputRef,
    "data-test-automation-id": automationId,
    fullWidth,
    placeholder: !hasTags ? placeholder2 : void 0,
    label: label3,
    focused: isDownshiftFocused,
    disabled: disabled3,
    required: required2,
    color: color2,
    error: error4 ?? oneOfTagError,
    FormHelperTextProps,
    InputProps: TextFieldInputProps,
    helperText,
    ...combineProps({
      InputLabelProps: getLabelProps(),
      inputProps: {
        startAdornment,
        containerClassName,
        maxLength,
        containerRef: inputContainerRef,
        ...getInputAriaProps(TextFieldProps?.inputProps)
      }
    }, rest),
    value: inputValue,
    clearBtn: false
  }), !helperText && screenReaderText && /* @__PURE__ */ React660.createElement(RcVisuallyHidden, {
    id: describedbyId
  }, screenReaderText), /* @__PURE__ */ React660.createElement(StyledPopper, {
    open,
    position: position4,
    anchorEl: textFieldRef.current,
    "data-test-automation-id": "suggestions-list",
    popperRef,
    popperOptions: {
      onUpdate: (e2) => {
        const currPosition = e2.placement;
        if (position4 !== currPosition) {
          setPosition(currPosition);
        }
      }
    },
    ...getPopperProps(PopperProps)
  }, isOpen && /* @__PURE__ */ React660.createElement(RcSuggestionList, {
    highlightedIndex,
    optionsGroupList,
    options: optionItems,
    groupVariant,
    groupExpanded,
    renderGroup,
    MenuItem: MenuItem3,
    renderOption,
    inputValue,
    getItemProps,
    getMenuProps,
    changeHighlightedIndexReason,
    getOptionDisabled,
    isKeepHighlightedIndex,
    onUpdatePopper: handleUpdatePopper,
    maxContainerHeight: 180,
    getOptionLabel,
    ...SuggestionListProps
  }), isRenderNoOptions && renderNoOptions?.(getNoOptionsProps, noOptionItem)));
}));
var RcDownshift = styled_components_default(withDeprecatedCheck(_RcDownshift, [
  {
    prop: "onSelectChange",
    time: "2021-10",
    comment: `@deprecated should use \`onChange\` */`
  },
  {
    prop: "suggestionItems",
    time: "2021-10",
    comment: `@deprecated  should use \`options\` to replace */`
  },
  {
    prop: "selectedItems",
    time: "2021-10",
    comment: `@deprecated  not need any more */`
  },
  {
    prop: "itemToString",
    time: "2021-10",
    comment: `@deprecated use \`getOptionLabel\` to replace that */`
  },
  {
    prop: "MenuItem",
    time: "2021-10",
    comment: `@deprecated should use \`renderOption\` to replace that */`
  },
  {
    prop: "minRowHeight",
    time: "2021-10",
    comment: `@deprecated suggestion list row min height for virtual list */`
  },
  {
    prop: "enableFreeChips",
    time: "2021-10",
    comment: `@deprecated enable free chip mode, should use \`freeSolo\` to replace that */`
  },
  {
    prop: "inputLabel",
    time: "2021-10",
    comment: `@deprecated please use \`label\` to replace that */`
  },
  {
    prop: "inputPlaceholder",
    time: "2021-10",
    comment: `@deprecated input element placeholder attribute */`
  },
  {
    prop: "maxLength",
    time: "2021-10",
    comment: `@deprecated input element maxlength, please use \`TextFieldProps.inputProps.maxLength\` */`
  },
  {
    prop: "screenReader",
    time: "2021-10",
    comment: `@deprecated should use \`screenReaderProps\` */`
  },
  {
    prop: "automationId",
    time: "2021-10",
    comment: `@deprecated wrapper automationId, should use \`data-test-automation-id\` directly */`
  },
  {
    prop: "InputItem",
    time: "2021-10",
    comment: `@deprecated just use the \`renderTags\` to render whole tags  */`
  },
  {
    prop: "emailError",
    time: "2021-10",
    comment: `@deprecated please calculate error outside by your self with \`renderTags\`, or prepare ready items with error field */`
  },
  {
    prop: "errorSelectedItems",
    time: "2021-10",
    comment: `@deprecated please calculate error outside by your self with \`renderTags\`, or prepare ready items with error field */`
  },
  {
    prop: "nameError",
    time: "2021-10",
    comment: `@deprecated replace to \`error\` */`
  },
  {
    prop: "keyToChips",
    time: "2021-10",
    comment: `@deprecated rename to \`keyToTags\` */`
  },
  {
    prop: "limitOfFreeChips",
    time: "2021-10",
    comment: `@deprecated should use \`max\` */`
  },
  {
    prop: "enableAutoTransform",
    time: "2021-10",
    comment: `@deprecated should use \`autoSelect\` */`
  },
  {
    prop: "messageRef",
    time: "2021-10",
    comment: `@deprecated should use \`inputRef\` */`
  },
  {
    prop: "TextFieldProps",
    time: "2021-10",
    comment: `@deprecated TextField props */`
  }
], "RcDownshift"))`
  ${DownshiftStyle}
`;
RcDownshift.defaultProps = {};
RcDownshift.displayName = "RcDownshift";
var ExportType2 = RcDownshift;

// src/components/Drawer/Drawer.tsx
import React662, { forwardRef as forwardRef581, useMemo as useMemo66 } from "react";

// src/components/Paper/Paper.tsx
import React661, { forwardRef as forwardRef580, useMemo as useMemo65 } from "react";

// src/components/Paper/styles/PaperStyle.tsx
var PaperStyle = () => {
  return css2``;
};

// src/components/Paper/utils/PaperUtils.ts
var RcPaperClasses = RcClasses([], "RcPaper");

// src/components/Paper/Paper.tsx
var _RcPaper = forwardRef580((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcPaper" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo65(() => combineClasses(RcPaperClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React661.createElement(Paper_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcPaper = styled_components_default(_RcPaper)`
  ${PaperStyle}
`;
RcPaper.defaultProps = {};
RcPaper.displayName = "RcPaper";

// src/components/Drawer/utils/DrawerUtils.ts
var RcDrawerClasses = RcClasses([
  "paper",
  "paperAnchorLeft",
  "paperAnchorRight",
  "paperAnchorTop",
  "paperAnchorBottom"
], "RcDrawer");
var drawerRadius = {
  left: [0, 1, 1, 0],
  right: [1, 0, 0, 1],
  top: [0, 0, 1, 1],
  bottom: [1, 1, 0, 0]
};

// src/components/Drawer/styles/DrawerStyle.tsx
var DrawerStyle = (props) => {
  const { radius: radiusProp, inlinePaper, anchor = "left" } = props;
  const currRadiusValue = (() => {
    if (!radiusProp)
      return null;
    const radiusValue = radius3(radiusProp)(props);
    if (radiusValue === "0px" || radiusValue === 0)
      return null;
    return drawerRadius[anchor].map((x2) => x2 === 1 ? radiusValue : 0).join(" ");
  })();
  return css2`
    .${RcDrawerClasses.paper} {
      border-radius: ${currRadiusValue};

      ${inlinePaper && css2`
        background: transparent;
        box-shadow: none;
        align-items: center;
        justify-content: center;
        overflow: unset;

        ${RcPaper} {
          border-radius: ${currRadiusValue};
        }
      `}
    }
  `;
};

// src/components/Drawer/Drawer.tsx
var _RcDrawer = forwardRef581((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDrawer" });
  const {
    inlinePaper,
    radius: radius4,
    classes: classesProp,
    children: children2,
    PaperProps: PaperPropsProp,
    onClose,
    ...rest
  } = props;
  const { externalWindow } = useRcPortalWindowContext();
  const PaperProps = useMemo66(() => combineProps({
    ["data-mui-paper"]: true,
    onClick: inlinePaper ? (e2) => {
      if (e2.target?.dataset.muiPaper) {
        onClose?.(e2, "backdropClick");
      }
    } : void 0
  }, PaperPropsProp), [PaperPropsProp, inlinePaper, onClose]);
  const classes = useMemo66(() => combineClasses(RcDrawerClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React662.createElement(Drawer_default, {
    ...rest,
    ref: ref2,
    container: externalWindow?.document.body,
    classes,
    onClose,
    PaperProps
  }, children2);
});
var RcDrawer = styled_components_default(_RcDrawer)`
  ${DrawerStyle}
`;
RcDrawer.defaultProps = {
  radius: "lg"
};
RcDrawer.displayName = "RcDrawer";

// src/components/Forms/Form/Form/Form.tsx
import React663, { useCallback as useCallback32, useState as useState36 } from "react";
var RcForm = (inProps) => {
  const props = useThemeProps({ props: inProps, name: "RcForm" });
  const {
    children: children2,
    isSubmitting,
    onBeforeSubmit,
    onValidateFailed,
    onSubmit,
    ...rest
  } = props;
  const [fieldManager] = useState36(() => new Map());
  const handleSubmit = useCallback32((event) => {
    event.preventDefault();
    if (isSubmitting)
      return;
    onBeforeSubmit && onBeforeSubmit();
    const validateMessages = [...fieldManager.values()].map((fieldInfo) => fieldInfo.validate()).filter((msg) => msg !== false);
    if (validateMessages.length > 0) {
      onValidateFailed && onValidateFailed();
      return;
    }
    onSubmit && onSubmit(event);
  }, [isSubmitting, onBeforeSubmit, fieldManager, onSubmit, onValidateFailed]);
  return /* @__PURE__ */ React663.createElement(RcFormContext.Provider, {
    value: fieldManager
  }, /* @__PURE__ */ React663.createElement("form", {
    onSubmit: handleSubmit,
    ...rest
  }, children2));
};

// src/components/Forms/FormControl.tsx
var RcFormControl = styled_components_default(FormControl_default)``;
RcFormControl.displayName = "RcFormControl";

// src/components/Forms/FormGroup/FormGroup.tsx
import React664, { forwardRef as forwardRef582 } from "react";
var _RcFormGroup = forwardRef582((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcFormGroup" });
  return /* @__PURE__ */ React664.createElement(FormGroup_default, {
    ref: ref2,
    ...props
  });
});
var RcFormGroup = styled_components_default(_RcFormGroup)``;
RcFormGroup.displayName = "RcFormGroup";

// src/components/Forms/FormHelperText/FormHelperText.tsx
import React666, { forwardRef as forwardRef584 } from "react";

// src/components/Forms/FormHelperText/styles/StyledFormHelperText.tsx
import React665, { forwardRef as forwardRef583 } from "react";
var _StyledFormHelperText = forwardRef583(({ ...rest }, ref2) => {
  return /* @__PURE__ */ React665.createElement(FormHelperText_default, {
    ...rest,
    ref: ref2
  });
});
var StyledFormHelperText = styled_components_default(_StyledFormHelperText)``;

// src/components/Forms/FormHelperText/utils/FormHelperTextUtils.ts
var RcFormHelperTextClasses = RcClasses([], "RcFormHelperText");

// src/components/Forms/FormHelperText/FormHelperText.tsx
var _RcFormHelperText = forwardRef584((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcFormHelperText" });
  const { classes, children: children2 } = props;
  return /* @__PURE__ */ React666.createElement(StyledFormHelperText, {
    ...props,
    ref: ref2,
    classes: combineClasses(RcFormHelperTextClasses, classes)
  }, children2);
});
var RcFormHelperText = styled_components_default(_RcFormHelperText)``;
RcFormHelperText.defaultProps = {};
RcFormHelperText.displayName = "RcFormHelperText";

// src/components/Forms/FormLabel.tsx
import React667, { forwardRef as forwardRef585 } from "react";
var _RcFormLabel = React667.memo(forwardRef585((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcFormLabel" });
  return /* @__PURE__ */ React667.createElement(FormLabel_default, {
    ref: ref2,
    ...props
  });
}));
var RcFormLabel = styled_components_default(_RcFormLabel)`
  ${typography4("subheading2")};
  color: ${palette22("interactive", "f01")};
`;
RcFormLabel.displayName = "RcFormLabel";

// src/components/Forms/InputLabel/InputLabel.tsx
import React669, { forwardRef as forwardRef587 } from "react";

// src/components/Forms/InputLabel/styles/StyledInputLabel.tsx
import React668, { forwardRef as forwardRef586 } from "react";
var _StyledInputLabel = forwardRef586(({ ...rest }, ref2) => {
  return /* @__PURE__ */ React668.createElement(InputLabel_default, {
    ...rest,
    ref: ref2
  });
});
var StyledInputLabel = styled_components_default(_StyledInputLabel)``;

// src/components/Forms/InputLabel/utils/InputLabelUtils.ts
var RcInputLabelClasses = RcClasses([], "RcInputLabel");

// src/components/Forms/InputLabel/InputLabel.tsx
var _RcInputLabel = forwardRef587((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcInputLabel" });
  const { classes, children: children2 } = props;
  return /* @__PURE__ */ React669.createElement(StyledInputLabel, {
    ...props,
    ref: ref2,
    classes: combineClasses(RcInputLabelClasses, classes)
  }, children2);
});
var RcInputLabel = styled_components_default(_RcInputLabel)``;
RcInputLabel.defaultProps = {};
RcInputLabel.displayName = "RcInputLabel";

// src/components/Forms/Picker/DatePicker/DatePicker.tsx
var import_moment3 = __toModule(require_moment());
import React681, {
  forwardRef as forwardRef597,
  useCallback as useCallback34,
  useEffect as useEffect60,
  useMemo as useMemo72,
  useRef as useRef87
} from "react";

// node_modules/@date-io/moment/build/index.esm.js
var import_moment = __toModule(require_moment());
var MomentUtils = function() {
  function MomentUtils2(_a) {
    var _b = _a === void 0 ? {} : _a, locale = _b.locale, instance = _b.instance, moment3 = _b.moment;
    this.yearFormat = "YYYY";
    this.yearMonthFormat = "MMMM YYYY";
    this.dateTime12hFormat = "MMMM Do hh:mm a";
    this.dateTime24hFormat = "MMMM Do HH:mm";
    this.time12hFormat = "hh:mm A";
    this.time24hFormat = "HH:mm";
    this.dateFormat = "MMMM Do";
    this.moment = instance || moment3 || import_moment.default;
    this.locale = locale;
  }
  MomentUtils2.prototype.parse = function(value, format) {
    if (value === "") {
      return null;
    }
    return this.moment(value, format, true);
  };
  MomentUtils2.prototype.date = function(value) {
    if (value === null) {
      return null;
    }
    var moment3 = this.moment(value);
    moment3.locale(this.locale);
    return moment3;
  };
  MomentUtils2.prototype.isValid = function(value) {
    return this.moment(value).isValid();
  };
  MomentUtils2.prototype.isNull = function(date) {
    return date === null;
  };
  MomentUtils2.prototype.getDiff = function(date, comparing) {
    return date.diff(comparing);
  };
  MomentUtils2.prototype.isAfter = function(date, value) {
    return date.isAfter(value);
  };
  MomentUtils2.prototype.isBefore = function(date, value) {
    return date.isBefore(value);
  };
  MomentUtils2.prototype.isAfterDay = function(date, value) {
    return date.isAfter(value, "day");
  };
  MomentUtils2.prototype.isBeforeDay = function(date, value) {
    return date.isBefore(value, "day");
  };
  MomentUtils2.prototype.isBeforeYear = function(date, value) {
    return date.isBefore(value, "year");
  };
  MomentUtils2.prototype.isAfterYear = function(date, value) {
    return date.isAfter(value, "year");
  };
  MomentUtils2.prototype.startOfDay = function(date) {
    return date.clone().startOf("day");
  };
  MomentUtils2.prototype.endOfDay = function(date) {
    return date.clone().endOf("day");
  };
  MomentUtils2.prototype.format = function(date, formatString) {
    date.locale(this.locale);
    return date.format(formatString);
  };
  MomentUtils2.prototype.formatNumber = function(numberToFormat) {
    return numberToFormat;
  };
  MomentUtils2.prototype.getHours = function(date) {
    return date.get("hours");
  };
  MomentUtils2.prototype.addDays = function(date, count2) {
    return count2 < 0 ? date.clone().subtract(Math.abs(count2), "days") : date.clone().add(count2, "days");
  };
  MomentUtils2.prototype.setHours = function(date, count2) {
    return date.clone().hours(count2);
  };
  MomentUtils2.prototype.getMinutes = function(date) {
    return date.get("minutes");
  };
  MomentUtils2.prototype.setMinutes = function(date, count2) {
    return date.clone().minutes(count2);
  };
  MomentUtils2.prototype.getSeconds = function(date) {
    return date.get("seconds");
  };
  MomentUtils2.prototype.setSeconds = function(date, count2) {
    return date.clone().seconds(count2);
  };
  MomentUtils2.prototype.getMonth = function(date) {
    return date.get("month");
  };
  MomentUtils2.prototype.isSameDay = function(date, comparing) {
    return date.isSame(comparing, "day");
  };
  MomentUtils2.prototype.isSameMonth = function(date, comparing) {
    return date.isSame(comparing, "month");
  };
  MomentUtils2.prototype.isSameYear = function(date, comparing) {
    return date.isSame(comparing, "year");
  };
  MomentUtils2.prototype.isSameHour = function(date, comparing) {
    return date.isSame(comparing, "hour");
  };
  MomentUtils2.prototype.setMonth = function(date, count2) {
    return date.clone().month(count2);
  };
  MomentUtils2.prototype.getMeridiemText = function(ampm) {
    return ampm === "am" ? "AM" : "PM";
  };
  MomentUtils2.prototype.startOfMonth = function(date) {
    return date.clone().startOf("month");
  };
  MomentUtils2.prototype.endOfMonth = function(date) {
    return date.clone().endOf("month");
  };
  MomentUtils2.prototype.getNextMonth = function(date) {
    return date.clone().add(1, "month");
  };
  MomentUtils2.prototype.getPreviousMonth = function(date) {
    return date.clone().subtract(1, "month");
  };
  MomentUtils2.prototype.getMonthArray = function(date) {
    var firstMonth = date.clone().startOf("year");
    var monthArray = [firstMonth];
    while (monthArray.length < 12) {
      var prevMonth = monthArray[monthArray.length - 1];
      monthArray.push(this.getNextMonth(prevMonth));
    }
    return monthArray;
  };
  MomentUtils2.prototype.getYear = function(date) {
    return date.get("year");
  };
  MomentUtils2.prototype.setYear = function(date, year) {
    return date.clone().set("year", year);
  };
  MomentUtils2.prototype.mergeDateAndTime = function(date, time) {
    return this.setMinutes(this.setHours(date, this.getHours(time)), this.getMinutes(time));
  };
  MomentUtils2.prototype.getWeekdays = function() {
    return this.moment.weekdaysShort(true);
  };
  MomentUtils2.prototype.isEqual = function(value, comparing) {
    if (value === null && comparing === null) {
      return true;
    }
    return this.moment(value).isSame(comparing);
  };
  MomentUtils2.prototype.getWeekArray = function(date) {
    var start3 = date.clone().startOf("month").startOf("week");
    var end2 = date.clone().endOf("month").endOf("week");
    var count2 = 0;
    var current = start3;
    var nestedWeeks = [];
    while (current.isBefore(end2)) {
      var weekNumber = Math.floor(count2 / 7);
      nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];
      nestedWeeks[weekNumber].push(current);
      current = current.clone().add(1, "day");
      count2 += 1;
    }
    return nestedWeeks;
  };
  MomentUtils2.prototype.getYearRange = function(start3, end2) {
    var startDate = this.moment(start3).startOf("year");
    var endDate = this.moment(end2).endOf("year");
    var years = [];
    var current = startDate;
    while (current.isBefore(endDate)) {
      years.push(current);
      current = current.clone().add(1, "year");
    }
    return years;
  };
  MomentUtils2.prototype.getCalendarHeaderText = function(date) {
    return this.format(date, this.yearMonthFormat);
  };
  MomentUtils2.prototype.getYearText = function(date) {
    return this.format(date, "YYYY");
  };
  MomentUtils2.prototype.getDatePickerHeaderText = function(date) {
    return this.format(date, "ddd, MMM D");
  };
  MomentUtils2.prototype.getDateTimePickerHeaderText = function(date) {
    return this.format(date, "MMM D");
  };
  MomentUtils2.prototype.getMonthText = function(date) {
    return this.format(date, "MMMM");
  };
  MomentUtils2.prototype.getDayText = function(date) {
    return this.format(date, "D");
  };
  MomentUtils2.prototype.getHourText = function(date, ampm) {
    return this.format(date, ampm ? "hh" : "HH");
  };
  MomentUtils2.prototype.getMinuteText = function(date) {
    return this.format(date, "mm");
  };
  MomentUtils2.prototype.getSecondText = function(date) {
    return this.format(date, "ss");
  };
  return MomentUtils2;
}();
var index_esm_default = MomentUtils;

// node_modules/@material-ui/pickers/esm/index.js
var import_prop_types121 = __toModule(require_prop_types());
import "react";

// node_modules/@material-ui/pickers/esm/useUtils-cfb96ac9.js
var import_prop_types117 = __toModule(require_prop_types());
import { createContext as createContext21, useMemo as useMemo67, createElement as createElement121, useContext as useContext27 } from "react";
var MuiPickersContext = createContext21(null);
var MuiPickersUtilsProvider = function MuiPickersUtilsProvider2(_ref6) {
  var Utils = _ref6.utils, children2 = _ref6.children, locale = _ref6.locale, libInstance = _ref6.libInstance;
  var utils = useMemo67(function() {
    return new Utils({
      locale,
      instance: libInstance
    });
  }, [Utils, libInstance, locale]);
  return createElement121(MuiPickersContext.Provider, {
    value: utils,
    children: children2
  });
};
true ? MuiPickersUtilsProvider.propTypes = {
  utils: import_prop_types117.func.isRequired,
  locale: (0, import_prop_types117.oneOfType)([import_prop_types117.object, import_prop_types117.string]),
  children: (0, import_prop_types117.oneOfType)([import_prop_types117.element.isRequired, (0, import_prop_types117.arrayOf)(import_prop_types117.element.isRequired)]).isRequired
} : void 0;
var checkUtils = function checkUtils2(utils) {
  if (!utils) {
    throw new Error("Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.");
  }
};
function useUtils() {
  var utils = useContext27(MuiPickersContext);
  checkUtils(utils);
  return utils;
}

// node_modules/@material-ui/pickers/esm/Wrapper-241966d7.js
var import_prop_types118 = __toModule(require_prop_types());
import { createElement as createElement122, useEffect as useEffect58, useLayoutEffect as useLayoutEffect24, useRef as useRef82, Fragment as Fragment10, createContext as createContext22 } from "react";
var DIALOG_WIDTH = 310;
var DIALOG_WIDTH_WIDER = 325;
var useStyles = makeStyles_default(function(theme) {
  return {
    staticWrapperRoot: {
      overflow: "hidden",
      minWidth: DIALOG_WIDTH,
      display: "flex",
      flexDirection: "column",
      backgroundColor: theme.palette.background.paper
    }
  };
}, {
  name: "MuiPickersStaticWrapper"
});
var ModalDialog = function ModalDialog2(_ref6) {
  var children2 = _ref6.children, classes = _ref6.classes, onAccept = _ref6.onAccept, onDismiss = _ref6.onDismiss, onClear = _ref6.onClear, onSetToday = _ref6.onSetToday, okLabel = _ref6.okLabel, cancelLabel = _ref6.cancelLabel, clearLabel = _ref6.clearLabel, todayLabel = _ref6.todayLabel, clearable = _ref6.clearable, showTodayButton = _ref6.showTodayButton, showTabs = _ref6.showTabs, wider = _ref6.wider, other = _objectWithoutProperties(_ref6, ["children", "classes", "onAccept", "onDismiss", "onClear", "onSetToday", "okLabel", "cancelLabel", "clearLabel", "todayLabel", "clearable", "showTodayButton", "showTabs", "wider"]);
  return createElement122(Dialog_default, _extends({
    role: "dialog",
    onClose: onDismiss,
    classes: {
      paper: clsx_m_default(classes.dialogRoot, wider && classes.dialogRootWider)
    }
  }, other), createElement122(DialogContent_default, {
    children: children2,
    className: classes.dialog
  }), createElement122(DialogActions_default, {
    classes: {
      root: clsx_m_default((clearable || showTodayButton) && classes.withAdditionalAction)
    }
  }, clearable && createElement122(Button_default, {
    color: "primary",
    onClick: onClear
  }, clearLabel), showTodayButton && createElement122(Button_default, {
    color: "primary",
    onClick: onSetToday
  }, todayLabel), cancelLabel && createElement122(Button_default, {
    color: "primary",
    onClick: onDismiss
  }, cancelLabel), okLabel && createElement122(Button_default, {
    color: "primary",
    onClick: onAccept
  }, okLabel)));
};
ModalDialog.displayName = "ModalDialog";
var styles148 = createStyles2({
  dialogRoot: {
    minWidth: DIALOG_WIDTH
  },
  dialogRootWider: {
    minWidth: DIALOG_WIDTH_WIDER
  },
  dialog: {
    "&:first-child": {
      padding: 0
    }
  },
  withAdditionalAction: {
    justifyContent: "flex-start",
    "& > *:first-child": {
      marginRight: "auto"
    }
  }
});
var ModalDialog$1 = withStyles_default2(styles148, {
  name: "MuiPickersModal"
})(ModalDialog);
var useIsomorphicEffect = typeof window === "undefined" ? useEffect58 : useLayoutEffect24;
function runKeyHandler(e2, keyHandlers) {
  var handler = keyHandlers[e2.key];
  if (handler) {
    handler();
    e2.preventDefault();
  }
}
function useKeyDown(active, keyHandlers) {
  var keyHandlersRef = useRef82(keyHandlers);
  keyHandlersRef.current = keyHandlers;
  useIsomorphicEffect(function() {
    if (active) {
      var handleKeyDown2 = function handleKeyDown3(event) {
        runKeyHandler(event, keyHandlersRef.current);
      };
      window.addEventListener("keydown", handleKeyDown2);
      return function() {
        window.removeEventListener("keydown", handleKeyDown2);
      };
    }
  }, [active]);
}
var ModalWrapper = function ModalWrapper2(_ref6) {
  var open = _ref6.open, children2 = _ref6.children, okLabel = _ref6.okLabel, cancelLabel = _ref6.cancelLabel, clearLabel = _ref6.clearLabel, todayLabel = _ref6.todayLabel, showTodayButton = _ref6.showTodayButton, clearable = _ref6.clearable, DialogProps = _ref6.DialogProps, showTabs = _ref6.showTabs, wider = _ref6.wider, InputComponent = _ref6.InputComponent, DateInputProps = _ref6.DateInputProps, onClear = _ref6.onClear, onAccept = _ref6.onAccept, onDismiss = _ref6.onDismiss, onSetToday = _ref6.onSetToday, other = _objectWithoutProperties(_ref6, ["open", "children", "okLabel", "cancelLabel", "clearLabel", "todayLabel", "showTodayButton", "clearable", "DialogProps", "showTabs", "wider", "InputComponent", "DateInputProps", "onClear", "onAccept", "onDismiss", "onSetToday"]);
  useKeyDown(open, {
    Enter: onAccept
  });
  return createElement122(Fragment10, null, createElement122(InputComponent, _extends({}, other, DateInputProps)), createElement122(ModalDialog$1, _extends({
    wider,
    showTabs,
    open,
    onClear,
    onAccept,
    onDismiss,
    onSetToday,
    clearLabel,
    todayLabel,
    okLabel,
    cancelLabel,
    clearable,
    showTodayButton,
    children: children2
  }, DialogProps)));
};
true ? ModalWrapper.propTypes = {
  okLabel: import_prop_types118.node,
  cancelLabel: import_prop_types118.node,
  clearLabel: import_prop_types118.node,
  clearable: import_prop_types118.bool,
  todayLabel: import_prop_types118.node,
  showTodayButton: import_prop_types118.bool,
  DialogProps: import_prop_types118.object
} : void 0;
ModalWrapper.defaultProps = {
  okLabel: "OK",
  cancelLabel: "Cancel",
  clearLabel: "Clear",
  todayLabel: "Today",
  clearable: false,
  showTodayButton: false
};
var InlineWrapper = function InlineWrapper2(_ref6) {
  var open = _ref6.open, wider = _ref6.wider, children2 = _ref6.children, PopoverProps = _ref6.PopoverProps, onClear = _ref6.onClear, onDismiss = _ref6.onDismiss, onSetToday = _ref6.onSetToday, onAccept = _ref6.onAccept, showTabs = _ref6.showTabs, DateInputProps = _ref6.DateInputProps, InputComponent = _ref6.InputComponent, other = _objectWithoutProperties(_ref6, ["open", "wider", "children", "PopoverProps", "onClear", "onDismiss", "onSetToday", "onAccept", "showTabs", "DateInputProps", "InputComponent"]);
  var ref2 = useRef82();
  useKeyDown(open, {
    Enter: onAccept
  });
  return createElement122(Fragment10, null, createElement122(InputComponent, _extends({}, other, DateInputProps, {
    inputRef: ref2
  })), createElement122(Popover_default, _extends({
    open,
    onClose: onDismiss,
    anchorEl: ref2.current,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: "center"
    },
    transformOrigin: {
      vertical: "top",
      horizontal: "center"
    },
    children: children2
  }, PopoverProps)));
};
true ? InlineWrapper.propTypes = {
  onOpen: import_prop_types118.func,
  onClose: import_prop_types118.func,
  PopoverProps: import_prop_types118.object
} : void 0;
var VariantContext = createContext22(null);

// node_modules/rifm/dist/rifm.esm.js
import { Component as Component5 } from "react";

// node_modules/@material-ui/pickers/esm/Calendar-11ae61f6.js
var import_prop_types120 = __toModule(require_prop_types());
import React__default, { useCallback as useCallback33, createElement as createElement124, cloneElement as cloneElement27, Fragment as Fragment11, Component as Component6, useEffect as useEffect59 } from "react";

// node_modules/@material-ui/pickers/esm/Day.js
var import_prop_types119 = __toModule(require_prop_types());
import { createElement as createElement123 } from "react";
var useStyles2 = makeStyles_default(function(theme) {
  return {
    day: {
      width: 36,
      height: 36,
      fontSize: theme.typography.caption.fontSize,
      margin: "0 2px",
      color: theme.palette.text.primary,
      fontWeight: theme.typography.fontWeightMedium,
      padding: 0
    },
    hidden: {
      opacity: 0,
      pointerEvents: "none"
    },
    current: {
      color: theme.palette.primary.main,
      fontWeight: 600
    },
    daySelected: {
      color: theme.palette.primary.contrastText,
      backgroundColor: theme.palette.primary.main,
      fontWeight: theme.typography.fontWeightMedium,
      "&:hover": {
        backgroundColor: theme.palette.primary.main
      }
    },
    dayDisabled: {
      pointerEvents: "none",
      color: theme.palette.text.hint
    }
  };
}, {
  name: "MuiPickersDay"
});
var Day = function Day2(_ref6) {
  var children2 = _ref6.children, disabled3 = _ref6.disabled, hidden = _ref6.hidden, current = _ref6.current, selected = _ref6.selected, other = _objectWithoutProperties(_ref6, ["children", "disabled", "hidden", "current", "selected"]);
  var classes = useStyles2();
  var className = clsx_m_default(classes.day, hidden && classes.hidden, current && classes.current, selected && classes.daySelected, disabled3 && classes.dayDisabled);
  return createElement123(IconButton_default, _extends({
    className,
    tabIndex: hidden || disabled3 ? -1 : 0
  }, other), createElement123(Typography_default, {
    variant: "body2",
    color: "inherit"
  }, children2));
};
Day.displayName = "Day";
true ? Day.propTypes = {
  current: import_prop_types119.bool,
  disabled: import_prop_types119.bool,
  hidden: import_prop_types119.bool,
  selected: import_prop_types119.bool
} : void 0;
Day.defaultProps = {
  disabled: false,
  hidden: false,
  current: false,
  selected: false
};
var Day_default = Day;

// node_modules/@material-ui/pickers/esm/Calendar-11ae61f6.js
var findClosestEnabledDate = function findClosestEnabledDate2(_ref6) {
  var date = _ref6.date, utils = _ref6.utils, minDate = _ref6.minDate, maxDate = _ref6.maxDate, disableFuture = _ref6.disableFuture, disablePast = _ref6.disablePast, shouldDisableDate = _ref6.shouldDisableDate;
  var today = utils.startOfDay(utils.date());
  if (disablePast && utils.isBefore(minDate, today)) {
    minDate = today;
  }
  if (disableFuture && utils.isAfter(maxDate, today)) {
    maxDate = today;
  }
  var forward = date;
  var backward = date;
  if (utils.isBefore(date, minDate)) {
    forward = utils.date(minDate);
    backward = null;
  }
  if (utils.isAfter(date, maxDate)) {
    if (backward) {
      backward = utils.date(maxDate);
    }
    forward = null;
  }
  while (forward || backward) {
    if (forward && utils.isAfter(forward, maxDate)) {
      forward = null;
    }
    if (backward && utils.isBefore(backward, minDate)) {
      backward = null;
    }
    if (forward) {
      if (!shouldDisableDate(forward)) {
        return forward;
      }
      forward = utils.addDays(forward, 1);
    }
    if (backward) {
      if (!shouldDisableDate(backward)) {
        return backward;
      }
      backward = utils.addDays(backward, -1);
    }
  }
  return utils.date();
};
var DayWrapper = function DayWrapper2(_ref6) {
  var children2 = _ref6.children, value = _ref6.value, disabled3 = _ref6.disabled, onSelect = _ref6.onSelect, dayInCurrentMonth = _ref6.dayInCurrentMonth, other = _objectWithoutProperties(_ref6, ["children", "value", "disabled", "onSelect", "dayInCurrentMonth"]);
  var handleClick = useCallback33(function() {
    return onSelect(value);
  }, [onSelect, value]);
  return createElement124("div", _extends({
    role: "presentation",
    onClick: dayInCurrentMonth && !disabled3 ? handleClick : void 0,
    onKeyPress: dayInCurrentMonth && !disabled3 ? handleClick : void 0
  }, other), children2);
};
var animationDuration = 350;
var useStyles3 = makeStyles_default(function(theme) {
  var slideTransition = theme.transitions.create("transform", {
    duration: animationDuration,
    easing: "cubic-bezier(0.35, 0.8, 0.4, 1)"
  });
  return {
    transitionContainer: {
      display: "block",
      position: "relative",
      "& > *": {
        position: "absolute",
        top: 0,
        right: 0,
        left: 0
      }
    },
    "slideEnter-left": {
      willChange: "transform",
      transform: "translate(100%)"
    },
    "slideEnter-right": {
      willChange: "transform",
      transform: "translate(-100%)"
    },
    slideEnterActive: {
      transform: "translate(0%)",
      transition: slideTransition
    },
    slideExit: {
      transform: "translate(0%)"
    },
    "slideExitActiveLeft-left": {
      willChange: "transform",
      transform: "translate(-200%)",
      transition: slideTransition
    },
    "slideExitActiveLeft-right": {
      willChange: "transform",
      transform: "translate(200%)",
      transition: slideTransition
    }
  };
}, {
  name: "MuiPickersSlideTransition"
});
var SlideTransition = function SlideTransition2(_ref6) {
  var children2 = _ref6.children, transKey = _ref6.transKey, slideDirection = _ref6.slideDirection, _ref$className = _ref6.className, className = _ref$className === void 0 ? null : _ref$className;
  var classes = useStyles3();
  var transitionClasses = {
    exit: classes.slideExit,
    enterActive: classes.slideEnterActive,
    enter: classes["slideEnter-" + slideDirection],
    exitActive: classes["slideExitActiveLeft-" + slideDirection]
  };
  return createElement124(TransitionGroup_default, {
    className: clsx_m_default(classes.transitionContainer, className),
    childFactory: function childFactory2(element2) {
      return cloneElement27(element2, {
        classNames: transitionClasses
      });
    }
  }, createElement124(CSSTransition_default, {
    mountOnEnter: true,
    unmountOnExit: true,
    key: transKey + slideDirection,
    timeout: animationDuration,
    classNames: transitionClasses,
    children: children2
  }));
};
var ArrowLeftIcon = function ArrowLeftIcon2(props) {
  return React__default.createElement(SvgIcon_default, props, React__default.createElement("path", {
    d: "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
  }), React__default.createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};
var ArrowRightIcon = function ArrowRightIcon2(props) {
  return React__default.createElement(SvgIcon_default, props, React__default.createElement("path", {
    d: "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
  }), React__default.createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};
var useStyles$1 = makeStyles_default(function(theme) {
  return {
    switchHeader: {
      display: "flex",
      justifyContent: "space-between",
      alignItems: "center",
      marginTop: theme.spacing(0.5),
      marginBottom: theme.spacing(1)
    },
    transitionContainer: {
      width: "100%",
      overflow: "hidden",
      height: 23
    },
    iconButton: {
      zIndex: 1,
      backgroundColor: theme.palette.background.paper
    },
    daysHeader: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      maxHeight: 16
    },
    dayLabel: {
      width: 36,
      margin: "0 2px",
      textAlign: "center",
      color: theme.palette.text.hint
    }
  };
}, {
  name: "MuiPickersCalendarHeader"
});
var CalendarHeader = function CalendarHeader2(_ref6) {
  var currentMonth = _ref6.currentMonth, onMonthChange = _ref6.onMonthChange, leftArrowIcon = _ref6.leftArrowIcon, rightArrowIcon = _ref6.rightArrowIcon, leftArrowButtonProps = _ref6.leftArrowButtonProps, rightArrowButtonProps = _ref6.rightArrowButtonProps, disablePrevMonth = _ref6.disablePrevMonth, disableNextMonth = _ref6.disableNextMonth, slideDirection = _ref6.slideDirection;
  var utils = useUtils();
  var classes = useStyles$1();
  var theme = useTheme2();
  var rtl = theme.direction === "rtl";
  var selectNextMonth = function selectNextMonth2() {
    return onMonthChange(utils.getNextMonth(currentMonth), "left");
  };
  var selectPreviousMonth = function selectPreviousMonth2() {
    return onMonthChange(utils.getPreviousMonth(currentMonth), "right");
  };
  return createElement124("div", null, createElement124("div", {
    className: classes.switchHeader
  }, createElement124(IconButton_default, _extends({}, leftArrowButtonProps, {
    disabled: disablePrevMonth,
    onClick: selectPreviousMonth,
    className: classes.iconButton
  }), rtl ? rightArrowIcon : leftArrowIcon), createElement124(SlideTransition, {
    slideDirection,
    transKey: currentMonth.toString(),
    className: classes.transitionContainer
  }, createElement124(Typography_default, {
    align: "center",
    variant: "body1"
  }, utils.getCalendarHeaderText(currentMonth))), createElement124(IconButton_default, _extends({}, rightArrowButtonProps, {
    disabled: disableNextMonth,
    onClick: selectNextMonth,
    className: classes.iconButton
  }), rtl ? leftArrowIcon : rightArrowIcon)), createElement124("div", {
    className: classes.daysHeader
  }, utils.getWeekdays().map(function(day, index4) {
    return createElement124(Typography_default, {
      key: index4,
      variant: "caption",
      className: classes.dayLabel
    }, day);
  })));
};
CalendarHeader.displayName = "CalendarHeader";
true ? CalendarHeader.propTypes = {
  leftArrowIcon: import_prop_types120.node,
  rightArrowIcon: import_prop_types120.node,
  disablePrevMonth: import_prop_types120.bool,
  disableNextMonth: import_prop_types120.bool
} : void 0;
CalendarHeader.defaultProps = {
  leftArrowIcon: createElement124(ArrowLeftIcon, null),
  rightArrowIcon: createElement124(ArrowRightIcon, null),
  disablePrevMonth: false,
  disableNextMonth: false
};
var withUtils = function withUtils2() {
  return function(Component7) {
    var WithUtils = function WithUtils2(props) {
      var utils = useUtils();
      return createElement124(Component7, _extends({
        utils
      }, props));
    };
    WithUtils.displayName = "WithUtils(".concat(Component7.displayName || Component7.name, ")");
    return WithUtils;
  };
};
var KeyDownListener = function KeyDownListener2(_ref6) {
  var onKeyDown = _ref6.onKeyDown;
  useEffect59(function() {
    window.addEventListener("keydown", onKeyDown);
    return function() {
      window.removeEventListener("keydown", onKeyDown);
    };
  }, [onKeyDown]);
  return null;
};
var Calendar = /* @__PURE__ */ function(_React$Component) {
  _inherits(Calendar3, _React$Component);
  function Calendar3() {
    var _getPrototypeOf2;
    var _this;
    _classCallCheck(this, Calendar3);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar3)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      slideDirection: "left",
      currentMonth: _this.props.utils.startOfMonth(_this.props.date),
      loadingQueue: 0
    };
    _this.pushToLoadingQueue = function() {
      var loadingQueue = _this.state.loadingQueue + 1;
      _this.setState({
        loadingQueue
      });
    };
    _this.popFromLoadingQueue = function() {
      var loadingQueue = _this.state.loadingQueue;
      loadingQueue = loadingQueue <= 0 ? 0 : loadingQueue - 1;
      _this.setState({
        loadingQueue
      });
    };
    _this.handleChangeMonth = function(newMonth, slideDirection) {
      _this.setState({
        currentMonth: newMonth,
        slideDirection
      });
      if (_this.props.onMonthChange) {
        var returnVal = _this.props.onMonthChange(newMonth);
        if (returnVal) {
          _this.pushToLoadingQueue();
          returnVal.then(function() {
            _this.popFromLoadingQueue();
          });
        }
      }
    };
    _this.validateMinMaxDate = function(day) {
      var _this$props = _this.props, minDate = _this$props.minDate, maxDate = _this$props.maxDate, utils = _this$props.utils, disableFuture = _this$props.disableFuture, disablePast = _this$props.disablePast;
      var now2 = utils.date();
      return Boolean(disableFuture && utils.isAfterDay(day, now2) || disablePast && utils.isBeforeDay(day, now2) || minDate && utils.isBeforeDay(day, utils.date(minDate)) || maxDate && utils.isAfterDay(day, utils.date(maxDate)));
    };
    _this.shouldDisablePrevMonth = function() {
      var _this$props2 = _this.props, utils = _this$props2.utils, disablePast = _this$props2.disablePast, minDate = _this$props2.minDate;
      var now2 = utils.date();
      var firstEnabledMonth = utils.startOfMonth(disablePast && utils.isAfter(now2, utils.date(minDate)) ? now2 : utils.date(minDate));
      return !utils.isBefore(firstEnabledMonth, _this.state.currentMonth);
    };
    _this.shouldDisableNextMonth = function() {
      var _this$props3 = _this.props, utils = _this$props3.utils, disableFuture = _this$props3.disableFuture, maxDate = _this$props3.maxDate;
      var now2 = utils.date();
      var lastEnabledMonth = utils.startOfMonth(disableFuture && utils.isBefore(now2, utils.date(maxDate)) ? now2 : utils.date(maxDate));
      return !utils.isAfter(lastEnabledMonth, _this.state.currentMonth);
    };
    _this.shouldDisableDate = function(day) {
      var shouldDisableDate = _this.props.shouldDisableDate;
      return _this.validateMinMaxDate(day) || Boolean(shouldDisableDate && shouldDisableDate(day));
    };
    _this.handleDaySelect = function(day) {
      var isFinish = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
      var _this$props4 = _this.props, date = _this$props4.date, utils = _this$props4.utils;
      _this.props.onChange(utils.mergeDateAndTime(day, date), isFinish);
    };
    _this.moveToDay = function(day) {
      var utils = _this.props.utils;
      if (day && !_this.shouldDisableDate(day)) {
        if (utils.getMonth(day) !== utils.getMonth(_this.state.currentMonth)) {
          _this.handleChangeMonth(utils.startOfMonth(day), "left");
        }
        _this.handleDaySelect(day, false);
      }
    };
    _this.handleKeyDown = function(event) {
      var _this$props5 = _this.props, theme = _this$props5.theme, date = _this$props5.date, utils = _this$props5.utils;
      runKeyHandler(event, {
        ArrowUp: function ArrowUp3() {
          return _this.moveToDay(utils.addDays(date, -7));
        },
        ArrowDown: function ArrowDown3() {
          return _this.moveToDay(utils.addDays(date, 7));
        },
        ArrowLeft: function ArrowLeft3() {
          return _this.moveToDay(utils.addDays(date, theme.direction === "ltr" ? -1 : 1));
        },
        ArrowRight: function ArrowRight2() {
          return _this.moveToDay(utils.addDays(date, theme.direction === "ltr" ? 1 : -1));
        }
      });
    };
    _this.renderWeeks = function() {
      var _this$props6 = _this.props, utils = _this$props6.utils, classes = _this$props6.classes;
      var weeks = utils.getWeekArray(_this.state.currentMonth);
      return weeks.map(function(week) {
        return createElement124("div", {
          key: "week-".concat(week[0].toString()),
          className: classes.week
        }, _this.renderDays(week));
      });
    };
    _this.renderDays = function(week) {
      var _this$props7 = _this.props, date = _this$props7.date, renderDay = _this$props7.renderDay, utils = _this$props7.utils;
      var now2 = utils.date();
      var selectedDate = utils.startOfDay(date);
      var currentMonthNumber = utils.getMonth(_this.state.currentMonth);
      return week.map(function(day) {
        var disabled3 = _this.shouldDisableDate(day);
        var isDayInCurrentMonth = utils.getMonth(day) === currentMonthNumber;
        var dayComponent = createElement124(Day_default, {
          disabled: disabled3,
          current: utils.isSameDay(day, now2),
          hidden: !isDayInCurrentMonth,
          selected: utils.isSameDay(selectedDate, day)
        }, utils.getDayText(day));
        if (renderDay) {
          dayComponent = renderDay(day, selectedDate, isDayInCurrentMonth, dayComponent);
        }
        return createElement124(DayWrapper, {
          value: day,
          key: day.toString(),
          disabled: disabled3,
          dayInCurrentMonth: isDayInCurrentMonth,
          onSelect: _this.handleDaySelect
        }, dayComponent);
      });
    };
    return _this;
  }
  _createClass(Calendar3, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props8 = this.props, date = _this$props8.date, minDate = _this$props8.minDate, maxDate = _this$props8.maxDate, utils = _this$props8.utils, disablePast = _this$props8.disablePast, disableFuture = _this$props8.disableFuture;
      if (this.shouldDisableDate(date)) {
        var closestEnabledDate = findClosestEnabledDate({
          date,
          utils,
          minDate: utils.date(minDate),
          maxDate: utils.date(maxDate),
          disablePast: Boolean(disablePast),
          disableFuture: Boolean(disableFuture),
          shouldDisableDate: this.shouldDisableDate
        });
        this.handleDaySelect(closestEnabledDate, false);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state, currentMonth = _this$state.currentMonth, slideDirection = _this$state.slideDirection;
      var _this$props9 = this.props, classes = _this$props9.classes, allowKeyboardControl = _this$props9.allowKeyboardControl, leftArrowButtonProps = _this$props9.leftArrowButtonProps, leftArrowIcon = _this$props9.leftArrowIcon, rightArrowButtonProps = _this$props9.rightArrowButtonProps, rightArrowIcon = _this$props9.rightArrowIcon, loadingIndicator = _this$props9.loadingIndicator;
      var loadingElement = loadingIndicator ? loadingIndicator : createElement124(CircularProgress_default, null);
      return createElement124(Fragment11, null, allowKeyboardControl && this.context !== "static" && createElement124(KeyDownListener, {
        onKeyDown: this.handleKeyDown
      }), createElement124(CalendarHeader, {
        currentMonth,
        slideDirection,
        onMonthChange: this.handleChangeMonth,
        leftArrowIcon,
        leftArrowButtonProps,
        rightArrowIcon,
        rightArrowButtonProps,
        disablePrevMonth: this.shouldDisablePrevMonth(),
        disableNextMonth: this.shouldDisableNextMonth()
      }), createElement124(SlideTransition, {
        slideDirection,
        transKey: currentMonth.toString(),
        className: classes.transitionContainer
      }, createElement124(Fragment11, null, this.state.loadingQueue > 0 && createElement124("div", {
        className: classes.progressContainer
      }, loadingElement) || createElement124("div", null, this.renderWeeks()))));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, state) {
      var utils = nextProps.utils, nextDate = nextProps.date;
      if (!utils.isEqual(nextDate, state.lastDate)) {
        var nextMonth = utils.getMonth(nextDate);
        var lastDate = state.lastDate || nextDate;
        var lastMonth = utils.getMonth(lastDate);
        return {
          lastDate: nextDate,
          currentMonth: nextProps.utils.startOfMonth(nextDate),
          slideDirection: nextMonth === lastMonth ? state.slideDirection : utils.isAfterDay(nextDate, lastDate) ? "left" : "right"
        };
      }
      return null;
    }
  }]);
  return Calendar3;
}(Component6);
Calendar.contextType = VariantContext;
true ? Calendar.propTypes = {
  renderDay: import_prop_types120.func,
  shouldDisableDate: import_prop_types120.func,
  allowKeyboardControl: import_prop_types120.bool
} : void 0;
Calendar.defaultProps = {
  minDate: new Date("1900-01-01"),
  maxDate: new Date("2100-01-01"),
  disablePast: false,
  disableFuture: false,
  allowKeyboardControl: true
};
var styles149 = function styles150(theme) {
  return {
    transitionContainer: {
      minHeight: 36 * 6,
      marginTop: theme.spacing(1.5)
    },
    progressContainer: {
      width: "100%",
      height: "100%",
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    },
    week: {
      display: "flex",
      justifyContent: "center"
    }
  };
};
var Calendar$1 = withStyles_default2(styles149, {
  name: "MuiPickersCalendar",
  withTheme: true
})(withUtils()(Calendar));

// src/components/Forms/Picker/DatePicker/DatePicker.tsx
var import_date_utils = __toModule(require_date_utils());

// src/components/Forms/Picker/utils/PickerTextField/PickerTextField.tsx
var import_uniqueId3 = __toModule(require_uniqueId());
import React674, {
  forwardRef as forwardRef591,
  useImperativeHandle as useImperativeHandle16,
  useMemo as useMemo69,
  useRef as useRef83,
  useState as useState37
} from "react";

// src/components/Forms/Picker/styles/PickerBaseIconButton.tsx
import React670, { forwardRef as forwardRef588 } from "react";
var PickerBaseIconButton = forwardRef588((props, ref2) => {
  const { children: children2, selected, hidden, ...rest } = props;
  return /* @__PURE__ */ React670.createElement(RcIconButton, {
    elevation: 0,
    activeElevation: 0,
    ref: ref2,
    variant: selected ? "contained" : "round",
    color: selected ? "interactive.b02" : "neutral.f06",
    "data-hidden": hidden,
    size: "xsmall",
    ...rest
  }, children2);
});
PickerBaseIconButton.displayName = "PickerBaseIconButton";

// src/components/Forms/Picker/styles/StyledPickerTextField.tsx
import React671, { forwardRef as forwardRef589 } from "react";
var _RcTextField2 = forwardRef589((props, ref2) => {
  const { ...rest } = props;
  return /* @__PURE__ */ React671.createElement(RcTextField, {
    ref: ref2,
    ...rest,
    clearBtn: false
  });
});
var cleanStyle = ({
  value,
  clearBtn,
  disabled: disabled3
}) => {
  return value && clearBtn && !disabled3 && css2`
      ${nonTouchHoverMedia} {
        .${RcTextFieldInputClasses.root} {
          &:hover {
            .picker-action {
              display: none;
            }
            .picker-clear {
              display: inline-flex;
            }
          }
        }
      }
    `;
};
var StyledPickerTextField = styled_components_default(_RcTextField2)`
  .picker-clear {
    display: none;
  }

  .${RcTextFieldInputClasses.root}, .${RcTextFieldInputClasses.input} {
    cursor: pointer;
  }

  .${RcTextFieldInputClasses.disabled} {
    cursor: auto;
  }

  .picker-action {
    margin: 0;
  }

  ${cleanStyle};
`;

// src/components/Popover/Popover.tsx
import React672, { forwardRef as forwardRef590, useMemo as useMemo68 } from "react";

// src/components/Popover/styles/PopoverStyle.tsx
var PopoverStyle = () => {
  return css2``;
};

// src/components/Popover/utils/PopoverUtils.ts
var RcPopoverClasses = RcClasses([], "RcPopover");

// src/components/Popover/Popover.tsx
var _RcPopover = forwardRef590((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcPopover" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo68(() => combineClasses(RcPopoverClasses, classesProp), [classesProp]);
  const { externalWindow } = useRcPortalWindowContext();
  return /* @__PURE__ */ React672.createElement(Popover_default, {
    container: externalWindow?.document.body,
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcPopover = styled_components_default(_RcPopover)`
  ${PopoverStyle};
`;
RcPopover.defaultProps = {
  anchorOrigin: { vertical: "top", horizontal: "left" },
  anchorReference: "anchorEl"
};
RcPopover.displayName = "RcPopover";

// src/components/Forms/Picker/DatePicker/utils/DatePickerUtils.ts
var textColor3 = palette22("neutral", "f06");
var primaryColor = palette22("interactive", "b02");
var primaryHoverColor = setOpacity(primaryColor, "16");
var disabledColor4 = palette22("disabled", "f02");
var RcDatePickerClasses = RcClasses([
  "popover",
  "popoverPaper",
  "calendarSlider",
  "footer",
  "progress",
  "header",
  "leftArrow",
  "rightArrow",
  "select"
], "RcDatePicker");
var RcDatePickerSizes = {
  small: {
    width: RcDefaultTextFieldWidth,
    height: "296px"
  },
  medium: {
    width: "272px",
    height: "308px"
  }
};
var RcDatePickerIconWidths = {
  small: "18px",
  medium: "28px"
};
var focusDayElement = () => {
  const elm = document.querySelector("[data-picker-focused]");
  elm?.focus();
};
var isSameYearAndMonth = ({ source, comparing }, utils) => {
  if (!source || !comparing) {
    return false;
  }
  const thisMonth = utils.getMonth(source);
  const thisYear = utils.getYear(source);
  const comparingMonth = utils.getMonth(comparing);
  const comparingYear = utils.getYear(comparing);
  return thisMonth === comparingMonth && thisYear === comparingYear;
};
var onTransitionEnd = (event) => {
  const activeElm = document.activeElement;
  if (event.target.dataset["transitionTag"] && activeElm.dataset["pickerAction"] !== "true") {
    focusDayElement();
  }
};
var invalidateDateInRange = (day, {
  dateRange: { min: min2, max: max2 },
  disableFuture,
  disablePast,
  now: now2
}, utils) => {
  if (disableFuture && utils.isAfterDay(day, now2)) {
    return now2;
  }
  if (disablePast && utils.isBeforeDay(day, now2)) {
    return now2;
  }
  if (min2 && utils.isBeforeDay(day, utils.date(min2))) {
    return min2;
  }
  if (max2 && utils.isAfterDay(day, utils.date(max2))) {
    return max2;
  }
  return false;
};

// src/components/Forms/Picker/DatePicker/utils/DatePickerAriaLabelUtils.tsx
import React673, { createContext as createContext23, useContext as useContext28 } from "react";
var ScreenReaderContext = createContext23({});
var useScreenReaderContext = () => useContext28(ScreenReaderContext);
var ScreenReaderProvider = ({
  screenReaderProps,
  children: children2
}) => {
  return /* @__PURE__ */ React673.createElement(ScreenReaderContext.Provider, {
    value: screenReaderProps || {}
  }, children2);
};

// src/components/Forms/Picker/TimePicker/utils/A11yUtils.ts
function isClick(event) {
  return event.type === "click";
}

// src/components/Forms/Picker/TimePicker/constant.ts
var TIME_SYSTEM_TEXT;
(function(TIME_SYSTEM_TEXT2) {
  TIME_SYSTEM_TEXT2["PM"] = "PM";
  TIME_SYSTEM_TEXT2["AM"] = "AM";
})(TIME_SYSTEM_TEXT || (TIME_SYSTEM_TEXT = {}));

// src/components/Forms/Picker/TimePicker/utils/TimePickerHelper.ts
var parseNumber = (value, isTwelveHourSystem) => {
  const count2 = isTwelveHourSystem ? value % 12 : value;
  if (isTwelveHourSystem && count2 === 0)
    return 12;
  return count2;
};
var parseNumberToString = (value, isTwelveHourSystem) => {
  const count2 = parseNumber(value, isTwelveHourSystem);
  return pad(count2);
};
var pad = (num, size = 2) => {
  let s2 = `${num}`;
  while (s2.length < size) {
    s2 = `0${s2}`;
  }
  return s2;
};
var getFormattedTime = ({ hour, minute, period }, isTwelveHourSystem) => {
  const formattedHour = parseNumberToString(hour, isTwelveHourSystem);
  const formattedMinute = parseNumberToString(minute);
  const periodText = isTwelveHourSystem ? ` ${period}` : "";
  return `${formattedHour}:${formattedMinute}${periodText}`;
};
var HALF_DAY_HOURS = 12;
var HOUR_MINUTES = 60;
var TIME_GAP = 15;
var ONE_HOUR = HOUR_MINUTES * HOUR_MINUTES * 1e3;
var ONE_MINUTE = HOUR_MINUTES * 1e3;
var buildConsecutiveNumberToArray = (min2, max2) => {
  const array = [];
  if (min2 > max2)
    return array;
  let count2 = min2;
  while (count2 <= max2) {
    array.push(count2);
    count2++;
  }
  return array;
};
var twelveHourSystemSource = buildConsecutiveNumberToArray(0, 11);
var twentyFourHourSystemSource = buildConsecutiveNumberToArray(0, 23);
var minuteSource = [0, 15, 30, 45];
var lastMinute = 45;
var getTimestampFromDate = (date) => {
  return date.getHours() * ONE_HOUR + date.getMinutes() * ONE_MINUTE;
};
var getHourAndMinute = (times) => {
  if (times === null) {
    return {
      hour: 0,
      minute: 0
    };
  }
  const minute = times % ONE_HOUR;
  const hour = (times - minute) / ONE_HOUR;
  return {
    hour,
    minute: Math.floor(minute / ONE_MINUTE)
  };
};
function getTimestamp(nowTime) {
  return nowTime instanceof Date ? getTimestampFromDate(nowTime) : nowTime;
}
var getTimestampFromHourAndMin = (option) => {
  return option.hour * ONE_HOUR + option.minute * ONE_MINUTE;
};
function getPeriod(currHour) {
  return currHour >= HALF_DAY_HOURS ? TIME_SYSTEM_TEXT.PM : TIME_SYSTEM_TEXT.AM;
}
var getRecoupHour = (currHour, period) => {
  switch (period) {
    case TIME_SYSTEM_TEXT.PM:
      if (currHour < HALF_DAY_HOURS) {
        return HALF_DAY_HOURS;
      }
      break;
    case TIME_SYSTEM_TEXT.AM:
      if (currHour < HALF_DAY_HOURS) {
        if (currHour >= HALF_DAY_HOURS) {
          return -HALF_DAY_HOURS;
        }
      }
      break;
    default:
      break;
  }
  return 0;
};

// src/components/Forms/Picker/TimePicker/utils/TimeBoundary.ts
var getDateBeginning = () => {
  const date = new Date();
  date.setHours(0, 0, 0, 0);
  return date;
};
var TimeBoundary = class {
  constructor(value, direction, timeGap) {
    this.value = value;
    this.timeGap = timeGap;
    if (value) {
      if (direction === "after") {
        this.getAfterNearTime();
      } else {
        this.getBeforeNearTime();
      }
      this.date = new Date(getDateBeginning().setHours(this.hour, this.minute, 0, 0));
    }
  }
  _hour = void 0;
  get hour() {
    return this._hour;
  }
  _minute = void 0;
  get minute() {
    return this._minute;
  }
  _date = void 0;
  get date() {
    return this._date;
  }
  set date(value) {
    if (value) {
      this.timestamp = getTimestampFromDate(value);
    }
    this._date = value;
  }
  timestamp = 0;
  getAfterNearTime() {
    const time = this.getDateTime();
    let hour = time.getHours();
    let minute = time.getMinutes();
    const partCount = Math.ceil(minute / this.timeGap);
    if (partCount >= HOUR_MINUTES / this.timeGap) {
      hour++;
      minute = 0;
    }
    this._hour = hour;
    this._minute = partCount * this.timeGap % HOUR_MINUTES;
  }
  getBeforeNearTime() {
    const time = this.getDateTime();
    this._hour = time.getHours();
    this._minute = Math.floor(time.getMinutes() / this.timeGap) * this.timeGap;
  }
  getDateTime() {
    if (this.value instanceof Date) {
      return this.value;
    }
    const { hour, minute } = getHourAndMinute(this.value ?? 0);
    const date = new Date();
    date.setHours(hour, minute, 0, 0);
    return date;
  }
};
var getRangeBoundary = ({
  min: min2,
  max: max2,
  gap = TIME_GAP
}) => {
  if (min2 !== void 0 && max2 !== void 0) {
    const minTimestamp = getTimestamp(min2);
    const maxTimestamp = getTimestamp(max2);
    if (minTimestamp > maxTimestamp) {
      throw new Error(`JUNO [RcTimePicker]: That boundary min ${minTimestamp} is bigger than max ${maxTimestamp}, please confirm your min and max range props`);
    }
  }
  return {
    min: new TimeBoundary(min2, "after", gap),
    max: new TimeBoundary(max2, "before", gap)
  };
};

// src/components/Forms/Picker/TimePicker/utils/TimePickerUtils.ts
var RcTimePickerUtils = {
  small: {
    width: "160px",
    height: "160px",
    timeSystem: {
      margin: spacing2(1)
    }
  },
  medium: {
    width: "272px",
    height: "208px",
    timeSystem: {
      margin: spacing2(6)
    }
  }
};
var RcTimePickerIconWidths = {
  small: { s12: "40px", s24: "24px" },
  medium: { s12: "56px", s24: "24px" }
};
var RcTimePickerClasses = RcClasses(["popover", "popoverPaper"], "RcTimePicker");

// src/components/Forms/Picker/TimePicker/utils/getNumberPickerBoundary.ts
function getNumberPickerBoundary(currentHour, { range, isTwelveHourSystem }) {
  const currentIsPM = currentHour >= HALF_DAY_HOURS;
  let maxHour = range.max.hour ?? 23;
  let maxMinute = range.max.minute ?? lastMinute;
  let minHour = range.min.hour ?? 0;
  let minMinute = range.min.minute ?? 0;
  if (isTwelveHourSystem) {
    if (currentIsPM) {
      if (minHour < HALF_DAY_HOURS) {
        minHour = 0;
        minMinute = 0;
      }
    } else if (maxHour >= HALF_DAY_HOURS) {
      maxHour = 11;
      maxMinute = lastMinute;
    }
  }
  if (maxMinute !== lastMinute && currentHour < maxHour) {
    maxMinute = lastMinute;
  }
  if (minMinute !== 0 && currentHour > minHour) {
    minMinute = 0;
  }
  if (isTwelveHourSystem) {
    maxHour = maxHour % HALF_DAY_HOURS;
    minHour = minHour % HALF_DAY_HOURS;
  }
  return {
    hour: {
      min: minHour,
      max: maxHour
    },
    minute: {
      min: minMinute,
      max: maxMinute
    }
  };
}

// src/components/Forms/Picker/styles/StyledPopover.tsx
var StyledPopover = styled_components_default(RcPopover)`
  .${RcDatePickerClasses.popoverPaper}, .${RcTimePickerClasses.popoverPaper} {
    ${fakeBorder({ pseudo: true, radius: "lg" })};
  }
`;

// src/components/Forms/Picker/utils/PickerTextField/PickerTextField.tsx
var popoverAnchorOrigin = {
  vertical: "bottom",
  horizontal: "left"
};
var popoverTransformOrigin = {
  vertical: "top",
  horizontal: "left"
};
var PICKER_DISPLAY_NAME = "PickerTextField";
var PickerTextField = forwardRef591((props, ref2) => {
  const {
    onClear,
    InputProps,
    disabled: disabled3,
    action: action3,
    onKeyDown,
    inputProps: { announcementText, ...inputProps } = {},
    PopoverProps: PopoverPropsProp,
    children: children2,
    ActionSymbol,
    clearBtn,
    clearButtonProps,
    value,
    ...rest
  } = props;
  const { current: idForInput } = useRef83((0, import_uniqueId3.default)(`${PICKER_DISPLAY_NAME}-`));
  const [anchorEl, setAnchorEl] = useState37(null);
  const idForHelperText = `${idForInput}-helper-text`;
  const idForInstruction = `${idForInput}-instruction`;
  const handlePickerClick = useEventCallback2((event) => {
    if (!disabled3 && !anchorEl) {
      setAnchorEl(event.currentTarget);
    }
  });
  const handleA11yKeydown = useA11yKeyEvent((event) => {
    setAnchorEl(event.currentTarget);
  });
  const handleKeydown = useEventCallback2((event) => {
    if (disabled3)
      return;
    handleA11yKeydown(event);
    onKeyDown?.(event);
  });
  const handleClearClick = useEventCallback2((e2) => {
    e2.stopPropagation();
    e2.preventDefault();
    onClear?.(e2);
  });
  const _InputProps = useMemo69(() => {
    const iconTitle = clearButtonProps?.title;
    const combineClearProps = clearBtn && combineProps({
      TooltipProps: {
        tooltipForceHide: !iconTitle
      },
      onClick: handleClearClick
    }, clearButtonProps);
    return combineProps({
      readOnly: true,
      endAdornment: /* @__PURE__ */ React674.createElement(React674.Fragment, null, value && /* @__PURE__ */ React674.createElement(RcIconButton, {
        className: "picker-clear",
        variant: "plain",
        tabIndex: -1,
        disabled: disabled3,
        symbol: DeleteCircle_default,
        title: iconTitle,
        "aria-label": iconTitle,
        ...combineClearProps
      }), /* @__PURE__ */ React674.createElement(RcIconButton, {
        className: "picker-action",
        variant: "plain",
        tabIndex: -1,
        disabled: disabled3,
        symbol: ActionSymbol
      })),
      onClick: handlePickerClick,
      onKeyDown: handleKeydown,
      inputProps: {
        "aria-describedby": `${idForHelperText} ${idForInstruction}`,
        "aria-haspopup": true,
        ...inputProps
      }
    }, InputProps);
  }, [
    clearBtn,
    handleClearClick,
    clearButtonProps,
    value,
    disabled3,
    ActionSymbol,
    handlePickerClick,
    handleKeydown,
    idForHelperText,
    idForInstruction,
    inputProps,
    InputProps
  ]);
  const _FormHelperTextProps = useMemo69(() => ({
    id: idForHelperText
  }), [idForHelperText]);
  const onPickerViewClose = useEventCallback2(() => {
    setAnchorEl(null);
  });
  const PopoverProps = useMemo69(() => combineProps({
    onClose: onPickerViewClose
  }, PopoverPropsProp), [PopoverPropsProp, onPickerViewClose]);
  const popoverOpen = Boolean(anchorEl);
  useImperativeHandle16(action3, () => ({
    close: onPickerViewClose
  }), [onPickerViewClose]);
  return /* @__PURE__ */ React674.createElement(React674.Fragment, null, /* @__PURE__ */ React674.createElement(StyledPickerTextField, {
    id: idForInput,
    ref: ref2,
    InputProps: _InputProps,
    FormHelperTextProps: _FormHelperTextProps,
    focused: popoverOpen ? true : void 0,
    disabled: disabled3,
    clearBtn,
    value,
    ...rest
  }), /* @__PURE__ */ React674.createElement(StyledPopover, {
    open: popoverOpen,
    anchorEl,
    onClose: onPickerViewClose,
    anchorOrigin: popoverAnchorOrigin,
    transformOrigin: popoverTransformOrigin,
    ...PopoverProps
  }, children2), /* @__PURE__ */ React674.createElement(RcVisuallyHidden, {
    id: idForInstruction
  }, announcementText));
});
PickerTextField.displayName = PICKER_DISPLAY_NAME;

// src/components/Forms/Picker/DatePicker/Calendar.tsx
var import_moment2 = __toModule(require_moment());
import React680, {
  forwardRef as forwardRef596,
  useLayoutEffect as useLayoutEffect26,
  useMemo as useMemo71,
  useRef as useRef86,
  useState as useState38
} from "react";

// src/components/Forms/Picker/DatePicker/DatePickerHeader.tsx
import React676, { memo as memo419, useRef as useRef84 } from "react";

// src/components/Forms/Select/styles/SelectArrowDownIcon.tsx
import React675, { forwardRef as forwardRef592 } from "react";
var _SelectArrowDownIcon = forwardRef592(({ className, ...rest }, ref2) => /* @__PURE__ */ React675.createElement(RcIcon, {
  ref: ref2,
  className: clsx_m_default("MuiSvgIcon-root", className),
  color: "neutral.f04",
  size: "large",
  symbol: ArrowDown_default,
  ...rest
}));
var SelectArrowDownIcon = styled_components_default(_SelectArrowDownIcon)``;

// src/components/Forms/Picker/DatePicker/styles/StyledDay.tsx
var CurrentDayStyle = css2`
  border: 1px solid ${palette22("neutral", "b04")};
`;
var DayStyle = ({
  current,
  size,
  hidden,
  selected
}) => {
  return css2`
    &.${RcIconButtonClasses.root} {
      width: ${RcDatePickerIconWidths[size]};
      height: ${RcDatePickerIconWidths[size]};
      margin: 0 2px;
      visibility: ${hidden && "hidden"};
      ${typography4("caption1")};
      ${current && !selected && CurrentDayStyle};
    }
  `;
};

// src/components/Forms/Picker/DatePicker/styles/StyledYear.tsx
var StyledYear = styled_components_default(PickerBaseIconButton)`
  &.${RcIconButtonClasses.root} {
    width: 56px;
    min-width: 56px;
    height: 28px;
    margin: 4px 0;
    ${typography4("body1")};
  }
`;

// src/components/Forms/Picker/DatePicker/styles/StyledDatePickerHeader.tsx
var monthInactiveStyle = css2`
  &,
  ${RcIcon} {
    color: ${focusVisibleColor};
  }
`;
var StyledCurrentMonth = styled_components_default.button`
  background: none;
  border: none;
  cursor: pointer;
  outline: inherit;

  ${flexCenterStyle};
  position: relative;
  cursor: pointer;
  margin-left: ${spacing2(5)};
  color: ${textColor3};
  ${typography4("body2")};
  border-radius: ${radius3("sm")};

  padding: ${spacing2(1, 0, 1, 1)};

  ${focusVisibleShadowStyle("sm")};

  ${RcIcon} {
    margin-left: ${spacing2(2)};
    transform: rotate(${({ view }) => view === "day" ? "0" : "180"}deg);
    color: ${palette22("neutral", "f04")};
  }

  ${focusVisible} {
    ${monthInactiveStyle};
  }

  ${nonTouchHoverMedia} {
    &:hover {
      ${monthInactiveStyle};
    }
  }
`;
var SwitchHeaderWrapper = styled_components_default.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;

  ${({ size }) => {
  if (size === "small") {
    return "";
  }
  return css2`
      height: 24px;
      margin-bottom: 12px;
    `;
}}
`;
var SwitchHeaderButtonWrapper = styled_components_default(RcIconButtonGroup)`
  flex: 1;
  display: ${({ view }) => view === "day" ? "flex" : "none"};
  justify-content: flex-end;
  padding-right: 12px;

  ${({ size }) => {
  if (size === "small") {
    return css2`
        flex: 1 1 100%;
      `;
  }
  return css2`
      height: 24px;
    `;
}}
`;
var SwitchHeaderButton = styled_components_default(RcIconButton)`
  &.${RcIconButtonClasses.root} {
    ${RcIcon} {
      font-size: 24px;
    }
  }
`;

// src/components/Forms/Picker/DatePicker/styles/StyledCalendar.tsx
var CalendarSlideTransitionWrapper = styled_components_default(SlideTransition)`
  min-height: 160px;
  margin: ${spacing2(0, 0, 3)};
`;
var ProgressContainer = styled_components_default.div`
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
`;
var WeekWrapper = styled_components_default.div`
  display: flex;
  justify-content: center;

  ${({ size }) => {
  if (size === "small") {
    return css2`
        height: 28px;
      `;
  }
  return css2`
      height: 32px;

      & > div:not(:first-child) {
        margin-left: ${spacing2(1)};
      }
    `;
}};
`;
var StyledDaysHeader = styled_components_default.div`
  ${flexCenterStyle};
  height: 32px;
`;
var StyledDayLabel = styled_components_default(Typography_default)`
  ${({ size }) => {
  if (size === "small") {
    return css2`
        &:not(:first-child) {
          margin-left: ${spacing2(0.5)};
        }
      `;
  }
  return css2`
      width: 32px;

      &:not(:first-child) {
        margin-left: ${spacing2(1)};
      }
    `;
}}

  text-align: center;
  ${typography4("caption1")};
  color: ${palette22("neutral", "f04")};
`;
var DatePickerWrapper = styled_components_default.div`
  ${({ size }) => {
  const { width: width2, height: height2 } = RcDatePickerSizes[size];
  return css2`
      width: ${width2};
      height: ${height2};
    `;
}};

  box-sizing: border-box;
  padding: ${spacing2(3, 0)};
  display: flex;
  flex-direction: column;
  background-color: ${palette22("neutral", "elevation")};
  ${fakeBorder()};
  overflow: hidden;
`;
var DaysWrapper = styled_components_default.div`
  min-height: 216px;
`;
var DayFooterWrapper = styled_components_default.div`
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  bottom: ${spacing2(3)};
  left: 0;
  width: 100%;
`;

// src/components/Forms/Picker/DatePicker/styles/StyledYears.tsx
var YearsWrapper = styled_components_default.ul`
  display: flex;
  margin: 0;
  padding: 0;
  flex-wrap: wrap;
  overflow-y: auto;
  padding-left: 16px;

  li {
    list-style: none;

    &:not(:nth-child(${({ columns }) => columns}n + 1)) {
      margin-left: 4px;
    }
  }
`;

// src/components/Forms/Picker/DatePicker/DatePickerHeader.tsx
var DatePickerHeader = memo419((props) => {
  const {
    focusedDate,
    onMonthChange,
    disablePrevMonth,
    disableNextMonth,
    onViewChange,
    view,
    size,
    classes
  } = props;
  const utils = useUtils();
  const preMonth = utils.getPreviousMonth(focusedDate);
  const nextMonth = utils.getNextMonth(focusedDate);
  const monthLabel = utils.getCalendarHeaderText(focusedDate);
  const changeFromRef = useRef84();
  const selectNextMonth = () => {
    onMonthChange(nextMonth, "left");
    changeFromRef.current = "next";
  };
  const selectPreviousMonth = () => {
    onMonthChange(preMonth, "right");
    changeFromRef.current = "previous";
  };
  const ariaExpanded = view === "year";
  const { getMonthYearAriaLabel, getSwitchMonthAriaLabel } = useScreenReaderContext();
  const monthYearAriaLabel = getMonthYearAriaLabel?.(`${monthLabel}`, ariaExpanded);
  const nextMonthAriaLabel = getSwitchMonthAriaLabel?.(true, utils.getMonthText(focusedDate));
  const previousMonthAriaLabel = getSwitchMonthAriaLabel?.(false, utils.getMonthText(focusedDate));
  return /* @__PURE__ */ React676.createElement(React676.Fragment, null, changeFromRef.current && /* @__PURE__ */ React676.createElement(RcVisuallyHidden, {
    role: "region",
    "aria-live": "assertive"
  }, changeFromRef.current === "next" ? nextMonthAriaLabel : previousMonthAriaLabel), /* @__PURE__ */ React676.createElement(SwitchHeaderWrapper, {
    size,
    className: classes.header
  }, /* @__PURE__ */ React676.createElement(StyledCurrentMonth, {
    role: "button",
    tabIndex: 0,
    view,
    onClick: onViewChange,
    "aria-label": monthYearAriaLabel,
    "aria-expanded": ariaExpanded,
    "data-test-automation-id": "date-picker-month-year",
    className: classes.select
  }, monthLabel, /* @__PURE__ */ React676.createElement(SelectArrowDownIcon, null)), /* @__PURE__ */ React676.createElement(SwitchHeaderButtonWrapper, {
    size,
    gap: 3,
    view
  }, /* @__PURE__ */ React676.createElement(SwitchHeaderButton, {
    color: "neutral.f04",
    size: "small",
    disabled: disablePrevMonth,
    onClick: selectPreviousMonth,
    symbol: ArrowLeft2_default,
    "aria-label": previousMonthAriaLabel,
    "data-picker-action": true,
    "data-test-automation-id": "date-picker-pre-month",
    className: classes.leftArrow
  }), /* @__PURE__ */ React676.createElement(SwitchHeaderButton, {
    color: "neutral.f04",
    size: "small",
    disabled: disableNextMonth,
    onClick: selectNextMonth,
    symbol: ArrowRight_default,
    "aria-label": nextMonthAriaLabel,
    "data-picker-action": true,
    "data-test-automation-id": "date-picker-next-month",
    className: classes.rightArrow
  }))));
});
DatePickerHeader.defaultProps = {
  disablePrevMonth: false,
  disableNextMonth: false
};
DatePickerHeader.displayName = "RcDatePickerHeader";

// src/components/Forms/Picker/DatePicker/Day.tsx
import React677, { forwardRef as forwardRef593, memo as memo420 } from "react";
var _Day = forwardRef593((props, ref2) => {
  const {
    children: children2,
    disabled: disabled3,
    hidden,
    current,
    selected,
    size,
    focused,
    day,
    ...rest
  } = props;
  return /* @__PURE__ */ React677.createElement(PickerBaseIconButton, {
    "aria-pressed": focused,
    ref: ref2,
    size,
    selected,
    "data-picker-focused": focused ? "" : void 0,
    hidden,
    "data-test-automation-class": hidden ? "date-picker-hidden-day" : "date-picker-day",
    "data-test-automation-value": children2,
    disabled: disabled3,
    ...rest
  }, /* @__PURE__ */ React677.createElement(React677.Fragment, null, children2));
});
_Day.displayName = "RcDay";
_Day.defaultProps = {
  disabled: false,
  hidden: false,
  current: false,
  selected: false
};
var Day3 = memo420(styled_components_default(_Day)`
    ${DayStyle}
  `);

// src/components/Forms/Picker/DatePicker/Years.tsx
import React679, { forwardRef as forwardRef595, useLayoutEffect as useLayoutEffect25, useMemo as useMemo70, useRef as useRef85 } from "react";

// src/components/Forms/Picker/DatePicker/Year.tsx
import React678, { forwardRef as forwardRef594, memo as memo421 } from "react";
var Year = memo421(forwardRef594((props, ref2) => {
  const { onSelect, value, selected, disabled: disabled3, focused, children: children2, ...rest } = props;
  const { getYearAriaLabel } = useScreenReaderContext();
  const _handleClick = useEventCallback2(() => onSelect(value));
  const className = clsx_m_default({
    "Year-selected": selected,
    "Year-disabled": disabled3
  });
  const yearAriaLabel = getYearAriaLabel?.(`${value}`, selected);
  const handleClick = !disabled3 ? _handleClick : void 0;
  return /* @__PURE__ */ React678.createElement(StyledYear, {
    radius: "round",
    onClick: handleClick,
    onKeyPress: handleClick,
    ref: ref2,
    selected,
    "aria-pressed": focused,
    "aria-label": yearAriaLabel,
    className,
    "data-test-automation-class": "date-picker-year",
    "data-test-automation-value": children2,
    ...rest
  }, /* @__PURE__ */ React678.createElement(React678.Fragment, null, children2));
}));
Year.displayName = "RcYear";

// src/components/Forms/Picker/DatePicker/Years.tsx
var Years = forwardRef595((props, ref2) => {
  const {
    date,
    onYearChange,
    minDate,
    size,
    maxDate,
    disablePast,
    disableFuture,
    now: now2
  } = props;
  const utils = useUtils();
  const containerRef = useRef85(null);
  const combineRef = useForkRef2(containerRef, ref2);
  const selectedYearRef = useRef85(null);
  const currentYear = utils.getYear(date || now2);
  const years = useMemo70(() => utils.getYearRange(minDate, maxDate), [maxDate, minDate, utils]);
  const onYearSelect = useEventCallback2((year) => {
    const newDate = utils.setYear(date, year);
    onYearChange(newDate);
  });
  const focusedIndexRef = useRef85(0);
  const focusedYear = years[focusedIndexRef.current]?.year();
  const { focusIndex, getItemProps } = useOnlyOneFocusable({
    focusedIndexRef,
    containerRef
  });
  const getOptionDisabled = (year) => Boolean(disablePast && utils.isBeforeYear(year, now2) || disableFuture && utils.isAfterYear(year, now2));
  const columns = size === "small" ? 2 : 4;
  const { onKeyFocusedIndexHandle: handleKeyDown2 } = useKeyboardMoveFocus({
    options: years,
    focusedIndexRef,
    columns,
    infinite: "order",
    onFocusedIndexChange: (event, toIndex) => {
      focusIndex(toIndex);
      event?.preventDefault();
    },
    getOptionDisabled
  });
  useLayoutEffect25(() => {
    const index4 = years.findIndex((x2) => utils.getYear(x2) === currentYear);
    focusIndex(index4);
  }, []);
  return /* @__PURE__ */ React679.createElement(YearsWrapper, {
    role: "presentation",
    "aria-label": " ",
    columns,
    ref: combineRef,
    onKeyDown: handleKeyDown2
  }, years.map((year, index4) => {
    const yearNumber = utils.getYear(year);
    const selected = yearNumber === currentYear;
    const focused = yearNumber === focusedYear;
    const disabled3 = getOptionDisabled(year);
    return /* @__PURE__ */ React679.createElement("li", {
      key: utils.getYearText(year)
    }, /* @__PURE__ */ React679.createElement(Year, {
      ...getItemProps(index4),
      ref: focused ? selectedYearRef : void 0,
      key: utils.getYearText(year),
      selected,
      focused: yearNumber === focusedYear,
      value: yearNumber,
      onSelect: onYearSelect,
      disabled: disabled3
    }, utils.getYearText(year)));
  }));
});
Years.displayName = "RcYears";

// src/components/Forms/Picker/DatePicker/Calendar.tsx
var Calendar2 = forwardRef596(({
  onMonthChange,
  size,
  date,
  shouldDisableDate,
  dateRange,
  todayButtonText,
  loadingIndicator,
  disablePast,
  disableFuture,
  renderDay,
  classes,
  handleDaySelect,
  getInvalidateDateInRange
}, ref2) => {
  const utils = useUtils();
  const calendarRef = useRef86(null);
  const previousFocusDate = usePrevious(() => focusedDate);
  const previousView = usePrevious(() => view);
  const weeks = useRef86([]);
  import_moment2.default.locale(utils.locale);
  const { current: weekdays } = useResultRef(() => utils.getWeekdays());
  const { now: now2, isTodayDisabled } = useMemo71(() => {
    const nowDate = utils.date();
    return {
      now: nowDate,
      isTodayDisabled: shouldDisableDate(nowDate)
    };
  }, [shouldDisableDate, utils]);
  const [focusedDate, setFocusedDate] = useState38(date);
  const [view, setView] = useState38("day");
  const [slideDirection, setSlideDirection] = useState38("left");
  const [loadingQueue, setLoadingQueue] = useState38(0);
  const { min: min2, max: max2 } = dateRange;
  const currentMonthNumber = utils.getMonth(focusedDate);
  const pickClasses = useMemo71(() => pick(classes, ["header", "leftArrow", "rightArrow", "select"]), [classes]);
  const sameMonthDate = isSameYearAndMonth({ source: focusedDate, comparing: previousFocusDate || null }, utils);
  if (!sameMonthDate) {
    weeks.current = utils.getWeekArray(focusedDate);
  }
  const viewChange = view !== previousView;
  const pushToLoadingQueue = () => {
    setLoadingQueue(loadingQueue + 1);
  };
  const popFromLoadingQueue = () => {
    setLoadingQueue(loadingQueue <= 0 ? 0 : loadingQueue - 1);
  };
  const handleMonthChange = useEventCallback2((newMonth, direction) => {
    setSlideDirection(direction);
    setFocusedDate(getInvalidateDateInRange(newMonth) || newMonth);
    if (onMonthChange) {
      const returnVal = onMonthChange(newMonth);
      if (returnVal) {
        pushToLoadingQueue();
        returnVal.then(() => {
          popFromLoadingQueue();
        });
      }
    }
  });
  const handleChangeView = useEventCallback2(() => {
    setView(view === "day" ? "year" : "day");
  });
  const disableNextMonth = useMemo71(() => {
    const nextStartDay = utils.startOfMonth(utils.getNextMonth(focusedDate));
    return !!getInvalidateDateInRange(nextStartDay);
  }, [focusedDate, getInvalidateDateInRange, utils]);
  const disablePrevMonth = useMemo71(() => {
    const prevLatestDay = utils.endOfMonth(utils.getPreviousMonth(focusedDate));
    return !!getInvalidateDateInRange(prevLatestDay);
  }, [focusedDate, getInvalidateDateInRange, utils]);
  const backToToday = useEventCallback2(() => {
    handleDaySelect(now2);
  });
  const handleKeyDown2 = useEventCallback2((event) => {
    const moveDay = (value) => {
      const day = utils.addDays(focusedDate, value);
      if (day && !shouldDisableDate(day)) {
        const newMonthNumber = utils.getMonth(day);
        if (newMonthNumber !== currentMonthNumber) {
          return handleMonthChange(day, newMonthNumber > currentMonthNumber ? "left" : "right");
        }
        setFocusedDate(day);
      }
    };
    const goToDate = (day) => {
      setFocusedDate(getInvalidateDateInRange(day) || day);
    };
    const confirmDate = () => {
      event.stopPropagation();
      handleDaySelect(focusedDate);
    };
    runKeyHandler(event.nativeEvent, {
      ArrowUp: () => moveDay(-7),
      ArrowDown: () => moveDay(7),
      ArrowLeft: () => moveDay(-1),
      ArrowRight: () => moveDay(1),
      Home: () => goToDate(utils.startOfMonth(focusedDate)),
      End: () => goToDate(utils.endOfMonth(focusedDate)),
      Enter: confirmDate,
      " ": confirmDate
    });
  });
  const { getBackToTodayAriaLabel, getDayAriaLabel } = useScreenReaderContext();
  const backToTodayAriaLabel = getBackToTodayAriaLabel?.();
  const header3 = useMemo71(() => /* @__PURE__ */ React680.createElement(StyledDaysHeader, null, weekdays.map((day) => /* @__PURE__ */ React680.createElement(StyledDayLabel, {
    size,
    key: day,
    variant: "caption"
  }, day))), [size, weekdays]);
  const renderDays = (week) => {
    const selectedDate = date;
    return week.map((day) => {
      const disabled3 = shouldDisableDate(day);
      const isDayInCurrentMonth = utils.getMonth(day) === currentMonthNumber;
      const dayText = utils.getDayText(day);
      const selected = utils.isSameDay(day, selectedDate);
      const ariaLabel = getDayAriaLabel?.(selected, `${utils.getDatePickerHeaderText(day)} ${utils.getYearText(day)}`);
      const focused = utils.isSameDay(focusedDate, day);
      const dayComponent = /* @__PURE__ */ React680.createElement(Day3, {
        size,
        disabled: disabled3,
        current: utils.isSameDay(day, now2),
        hidden: !isDayInCurrentMonth,
        selected,
        tabIndex: focused ? 0 : -1,
        focused,
        day,
        "aria-label": ariaLabel
      }, dayText);
      const handleClick = !disabled3 && isDayInCurrentMonth ? () => handleDaySelect(day) : void 0;
      return /* @__PURE__ */ React680.createElement("div", {
        role: "cell",
        key: day.toString(),
        onClick: handleClick,
        onKeyPress: handleClick
      }, renderDay ? renderDay(day, focusedDate, isDayInCurrentMonth, dayComponent) : dayComponent);
    });
  };
  const renderBody = () => {
    const loadingElement = loadingIndicator ? loadingIndicator : /* @__PURE__ */ React680.createElement(CircularProgress_default, null);
    switch (view) {
      case "day":
        return /* @__PURE__ */ React680.createElement(DaysWrapper, {
          role: "presentation",
          "aria-label": " "
        }, header3, /* @__PURE__ */ React680.createElement(CalendarSlideTransitionWrapper, {
          className: classes.calendarSlider,
          slideDirection,
          transKey: currentMonthNumber
        }, loadingQueue > 0 ? /* @__PURE__ */ React680.createElement(ProgressContainer, {
          className: classes.progress
        }, loadingElement) : /* @__PURE__ */ React680.createElement("div", {
          role: "rowgroup",
          "data-transition-tag": true,
          onKeyDown: handleKeyDown2
        }, weeks.current.map((week) => /* @__PURE__ */ React680.createElement(WeekWrapper, {
          role: "row",
          size,
          key: `week-${week[0].toString()}`
        }, renderDays(week))))), /* @__PURE__ */ React680.createElement(DayFooterWrapper, {
          className: classes.footer
        }, /* @__PURE__ */ React680.createElement(RcButton, {
          variant: "plain",
          onClick: backToToday,
          disabled: isTodayDisabled,
          "aria-label": backToTodayAriaLabel,
          "data-test-automation-id": "date-picker-today"
        }, todayButtonText)));
      case "year":
        return /* @__PURE__ */ React680.createElement(Years, {
          date: focusedDate,
          size,
          minDate: min2,
          maxDate: max2,
          onYearChange: (day) => {
            setView("day");
            const validateDate = getInvalidateDateInRange(day) || day;
            setFocusedDate(validateDate);
          },
          disablePast,
          disableFuture,
          now: now2
        });
      default:
        return null;
    }
  };
  useLayoutEffect26(() => {
    if (sameMonthDate && !viewChange) {
      focusDayElement();
    }
  });
  useLayoutEffect26(() => {
    if (previousView && view === "day" && viewChange) {
      focusDayElement();
    }
  }, [previousView, view, viewChange]);
  useLayoutEffect26(() => {
    focusDayElement();
    calendarRef.current = document.querySelector(`.${RcDatePickerClasses.popover} .MuiPopover-paper`);
    const unsubscribe = transitionendSubscriber(calendarRef.current, onTransitionEnd);
    return () => {
      unsubscribe();
    };
  }, []);
  return /* @__PURE__ */ React680.createElement(DatePickerWrapper, {
    size,
    ref: ref2
  }, /* @__PURE__ */ React680.createElement(DatePickerHeader, {
    classes: pickClasses,
    size,
    focusedDate,
    slideDirection,
    view,
    onMonthChange: handleMonthChange,
    onViewChange: handleChangeView,
    disablePrevMonth,
    disableNextMonth
  }), renderBody());
});
Calendar2.defaultProps = {};
Calendar2.displayName = "RcCalendar";

// src/components/Forms/Picker/DatePicker/DatePicker.tsx
var defaultMinDate = new Date("1900-01-01");
var defaultMaxDate = new Date("2100-01-01");
var DEFAULT_FORMAT = "MM/DD/YYYY";
var InnerRcDatePicker = forwardRef597((props, ref2) => {
  const {
    date,
    value = date,
    onChange,
    formatString,
    locale,
    todayButtonText,
    minDate: minDateProp,
    maxDate: maxDateProp,
    min: min2,
    max: max2,
    disableFuture,
    disablePast,
    loadingIndicator,
    onMonthChange,
    renderDay,
    disabled: disabled3,
    shouldDisableDate: shouldDisableDateProp,
    size,
    onClose,
    onClear,
    classes,
    PopoverProps: PopoverPropsProp,
    screenReaderProps,
    ...rest
  } = props;
  const utils = useUtils();
  const [controlledValue, setControlledValue] = useControlled({
    controlled: value,
    default: null,
    name: "RcDatePicker"
  });
  const emitValueRef = useRef87(null);
  const maxDate = minDateProp || max2;
  const minDate = maxDateProp || min2;
  const actionRef = useRef87(null);
  const dateRange = useMemo72(() => ({
    min: (0, import_moment3.default)(minDate || defaultMinDate),
    max: (0, import_moment3.default)(maxDate || defaultMaxDate)
  }), [minDate, maxDate]);
  const getInvalidateDateInRange = useEventCallback2((day) => invalidateDateInRange(day, { dateRange, now: utils.date(), disableFuture, disablePast }, utils));
  const shouldDisableDate = useEventCallback2((day) => {
    return Boolean(getInvalidateDateInRange(day)) || Boolean(shouldDisableDateProp?.(day));
  });
  const getClosestEnableDate = useCallback34((currDate) => (0, import_date_utils.findClosestEnabledDate)({
    date: currDate,
    utils,
    minDate: utils.date(dateRange.min),
    maxDate: utils.date(dateRange.max),
    disablePast: Boolean(disablePast),
    disableFuture: Boolean(disableFuture),
    shouldDisableDate
  }), [
    dateRange.max,
    dateRange.min,
    disableFuture,
    disablePast,
    shouldDisableDate,
    utils
  ]);
  const initDate = useMemo72(() => {
    return getClosestEnableDate((0, import_moment3.default)(utils.date()));
  }, [getClosestEnableDate, utils]);
  const momentValue = useMemo72(() => controlledValue ? (0, import_moment3.default)(controlledValue) : null, [controlledValue]);
  const nowDate = momentValue || initDate;
  const textFiledValue = useMemo72(() => momentValue ? utils.format(momentValue, formatString) : "", [momentValue, utils, formatString]);
  const PopoverProps = useMemo72(() => combineProps({
    classes: combineClasses({
      root: RcDatePickerClasses.popover,
      paper: RcDatePickerClasses.popoverPaper
    }, {
      root: classes?.popover,
      paper: classes?.popoverPaper
    }),
    onClose
  }, PopoverPropsProp), [PopoverPropsProp, classes, onClose]);
  const calendarClasses = useMemo72(() => combineClasses(omit3(RcDatePickerClasses, ["popover", "popoverPaper"]), omit3(classes, ["popover", "popoverPaper"])), [classes]);
  const handleChange = (toDate, fromUserSelect) => {
    actionRef.current?.close();
    setControlledValue(toDate);
    emitValueRef.current = toDate;
    onChange?.(toDate, fromUserSelect);
  };
  const handleClear = useEventCallback2((evt) => {
    onClear?.(evt);
    handleChange?.(null);
  });
  const handleDaySelect = (day, fromUserSelect = true) => {
    const newDay = day ? utils.startOfDay(day).toDate() : null;
    handleChange(newDay, fromUserSelect);
  };
  useEffect60(() => {
    if (momentValue && value !== emitValueRef.current && shouldDisableDate(momentValue)) {
      const closestEnabledDate = getClosestEnableDate(momentValue);
      handleDaySelect(closestEnabledDate, false);
    }
  }, [value]);
  return /* @__PURE__ */ React681.createElement(PickerTextField, {
    ref: ref2,
    action: actionRef,
    onClear: handleClear,
    PopoverProps,
    value: textFiledValue,
    disabled: disabled3,
    ActionSymbol: DateBorder_default,
    ...rest
  }, /* @__PURE__ */ React681.createElement(ScreenReaderProvider, {
    screenReaderProps
  }, /* @__PURE__ */ React681.createElement(Calendar2, {
    size,
    classes: calendarClasses,
    date: nowDate,
    dateRange,
    handleDaySelect,
    disableFuture,
    disablePast,
    loadingIndicator,
    onMonthChange,
    renderDay,
    shouldDisableDate,
    getInvalidateDateInRange,
    todayButtonText,
    formatString
  })));
});
var _RcDatePicker = forwardRef597((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcDatePicker" });
  return /* @__PURE__ */ React681.createElement(MuiPickersUtilsProvider, {
    utils: index_esm_default,
    locale: props.locale,
    libInstance: import_moment3.default
  }, /* @__PURE__ */ React681.createElement(InnerRcDatePicker, {
    ref: ref2,
    ...props
  }));
});
var RcDatePicker = styled_components_default(withDeprecatedCheck(_RcDatePicker, [
  {
    prop: "minDate",
    time: "2021-3",
    comment: `Min date @DateIOType, using min instead `
  },
  {
    prop: "maxDate",
    time: "2021-3",
    comment: `Max date @DateIOType, using max instead `
  },
  {
    prop: "date",
    time: "2021-3",
    comment: `please use value to replace that `
  }
], "RcDatePicker"))``;
RcDatePicker.defaultProps = {
  clearBtn: true,
  formatString: DEFAULT_FORMAT,
  size: "medium",
  todayButtonText: "Today",
  locale: "en",
  label: "Date"
};
RcDatePicker.displayName = "RcDatePicker";

// src/components/Forms/Picker/TimePicker/NumberPicker.tsx
import React683, {
  forwardRef as forwardRef599,
  memo as memo422,
  useImperativeHandle as useImperativeHandle17,
  useMemo as useMemo73,
  useRef as useRef88
} from "react";

// src/components/Forms/Picker/TimePicker/styles/StyledNumberPicker.tsx
var StyledNumberPicker = styled_components_default.div`
  display: flex;
  flex-direction: column;

  outline: none;
  border: 1px solid transparent;
  position: relative;

  ${focusVisibleShadowStyle("lg")};

  ${focusVisible} {
    ${RcIconButton} {
      ${`&:not(.${RcIconButtonClasses.disabled})`} .icon {
        color: ${palette22("interactive", "f01")};
      }
    }
  }

  > * + * {
    margin-top: ${spacing2(2)};
  }
`;

// src/components/Forms/Picker/TimePicker/styles/StyledTimeIconButton.tsx
import React682, { forwardRef as forwardRef598 } from "react";
var _StyledTimeIconButton = forwardRef598(({ itemLength, wrapperSize, ...rest }, ref2) => {
  return /* @__PURE__ */ React682.createElement(PickerBaseIconButton, {
    ref: ref2,
    ...rest
  });
});
var StyledTimeIconButton = styled_components_default(_StyledTimeIconButton)`
  && {
    ${({ wrapperSize, itemLength }) => {
  const iconWidth = RcTimePickerIconWidths[wrapperSize];
  if (itemLength > HALF_DAY_HOURS) {
    return css2`
          width: ${iconWidth.s12};
          height: ${iconWidth.s24};
        `;
  }
  return css2`
        width: ${iconWidth.s12};
        height: ${iconWidth.s12};
      `;
}};

    ${({ wrapperSize }) => typography4(wrapperSize === "medium" ? "title1" : "subheading1")};
  }
`;

// src/components/Forms/Picker/TimePicker/NumberPicker.tsx
var _NumberPicker = forwardRef599((props, ref2) => {
  const {
    onClick,
    value,
    onUpdateValue,
    onKeyDown,
    source,
    automationId,
    size,
    min: minProp,
    max: maxProp,
    onClose,
    step,
    onInnerChange,
    renderValue,
    getScreenReaderLabel,
    ...rest
  } = props;
  const forceUpdate = useForceUpdate();
  const [innerValueRef, setInnerValue] = useRefState(value, forceUpdate);
  const rangeRef = useRef88({ max: maxProp, min: minProp });
  useDepsChange(() => {
    rangeRef.current = { max: maxProp, min: minProp };
  }, [maxProp, minProp]);
  useChange(() => {
    if (innerValueRef.current !== value) {
      setInnerValue(value, false);
    }
  }, () => value);
  const innerValue = innerValueRef.current;
  const index4 = Math.floor(innerValue / step);
  const isFirst = index4 === 0;
  const isLatest = index4 === source.length - 1;
  const firstValue = source[0];
  const latestValue = source[source.length - 1];
  const decreaseValue = isFirst ? latestValue : source[index4 - 1];
  const increaseValue = isLatest ? firstValue : source[index4 + 1];
  const { min: min2, max: max2 } = rangeRef.current;
  const decreaseDisabled = isFirst ? !!(max2 !== void 0 && latestValue > max2) : !!(min2 !== void 0 && decreaseValue < min2);
  const increaseDisabled = isLatest ? !!(min2 !== void 0 && firstValue < min2) : !!(max2 !== void 0 && increaseValue > max2);
  const showValue = useMemo73(() => {
    if (renderValue) {
      return renderValue(innerValue);
    }
    return pad(innerValue);
  }, [innerValue, renderValue]);
  const label3 = getScreenReaderLabel?.(showValue);
  const handleKeyDown2 = useEventCallback2((event) => {
    const keydownSubmit = () => {
      event.stopPropagation();
      onUpdateValue(innerValueRef.current);
      onClose(event);
    };
    const handleInnerValueChange = (toValue2) => {
      setInnerValue(toValue2);
      onInnerChange?.(toValue2);
    };
    runKeyHandler(event, {
      ArrowUp: () => {
        if (increaseDisabled) {
          return;
        }
        handleInnerValueChange(increaseValue);
      },
      ArrowDown: () => {
        if (decreaseDisabled) {
          return;
        }
        handleInnerValueChange(decreaseValue);
      },
      Enter: keydownSubmit,
      " ": keydownSubmit
    });
    onKeyDown?.(event);
  });
  useImperativeHandle17(ref2, () => ({
    value: innerValue,
    setRange: (newRange) => {
      const range = rangeRef.current;
      if (range.max !== newRange.max || range.min !== newRange.min) {
        let currentValue = -1;
        if (newRange.max !== void 0 && innerValueRef.current > newRange.max) {
          currentValue = newRange.max;
        }
        if (newRange.min !== void 0 && innerValueRef.current < newRange.min) {
          currentValue = newRange.min;
        }
        rangeRef.current = newRange;
        if (currentValue !== -1) {
          setInnerValue(currentValue, false);
        }
        forceUpdate();
      }
    }
  }), [forceUpdate, innerValue, innerValueRef, setInnerValue]);
  const iconSize = (() => {
    switch (size) {
      case "small":
        return "medium";
      case "medium":
      default:
        return "large";
    }
  })();
  return /* @__PURE__ */ React683.createElement(StyledNumberPicker, {
    tabIndex: 0,
    onKeyDown: handleKeyDown2,
    "aria-live": "assertive",
    "aria-label": label3,
    ...rest
  }, /* @__PURE__ */ React683.createElement(StyledTimeIconButton, {
    tabIndex: -1,
    size: iconSize,
    color: "neutral.f04",
    wrapperSize: size,
    disabled: increaseDisabled,
    onClick: () => {
      onUpdateValue(increaseValue);
    },
    symbol: ArrowUp_default,
    "data-test-automation-id": automationId && `${automationId}-prev-pagination`,
    "aria-label": "Arrow Up"
  }), /* @__PURE__ */ React683.createElement(StyledTimeIconButton, {
    wrapperSize: size,
    tabIndex: -1,
    onClick,
    "data-test-automation-id": automationId && `${automationId}-text`
  }, /* @__PURE__ */ React683.createElement(React683.Fragment, null, showValue)), /* @__PURE__ */ React683.createElement(StyledTimeIconButton, {
    tabIndex: -1,
    size: iconSize,
    color: "neutral.f04",
    wrapperSize: size,
    disabled: decreaseDisabled,
    onClick: () => {
      onUpdateValue(decreaseValue);
    },
    symbol: ArrowDown_default,
    "data-test-automation-id": automationId && `${automationId}-next-pagination`,
    "aria-label": "Arrow Down"
  }));
});
var NumberPicker = styled_components_default(memo422(_NumberPicker))``;
NumberPicker.displayName = "NumberPicker";

// src/components/Forms/Picker/TimePicker/ToggleText.tsx
import React684, {
  forwardRef as forwardRef600,
  memo as memo423,
  useImperativeHandle as useImperativeHandle18
} from "react";

// src/components/Forms/Picker/TimePicker/styles/StyledPickerPopperWrap.tsx
var StyledPickerPopperWrap = styled_components_default.div`
  ${({ size }) => {
  const { width: width2, height: height2 } = RcTimePickerUtils[size];
  return css2`
      ${flexCenterStyle};
      box-sizing: border-box;
      width: ${width2};
      height: ${height2};
      padding: ${spacing2(3, 4)};
      color: ${palette22("neutral", "f06")};
    `;
}}
`;

// src/components/Forms/Picker/TimePicker/styles/StyledSelectionItem.tsx
var StyledSelectionItem = styled_components_default(StyledTimeIconButton)`
  && {
    ${typography4("body1")};
    /* when itemLength is 4 which makes it to become two line, so add padding for it. */
    margin: ${({ itemLength, wrapperSize }) => spacing2(wrapperSize === "small" && itemLength === 4 ? 2 : 1)};
  }
`;

// src/components/Forms/Picker/TimePicker/styles/StyledSelectionView.tsx
var StyledSelectionView = styled_components_default.div`
  ${({ size }) => {
  const { width: width2, height: height2 } = RcTimePickerUtils[size];
  return css2`
      ${flexCenterStyle};
      box-sizing: border-box;
      padding: ${spacing2(2)};
      flex-wrap: wrap;
      width: ${width2};
      height: ${height2};
      margin: ${spacing2(-3, -4)};
    `;
}};
`;

// src/components/Forms/Picker/TimePicker/ToggleText.tsx
var _ToggleText = memo423(forwardRef600(({
  onUpdateValue,
  onInnerChange,
  value,
  size,
  disabled: disabled3,
  getScreenReaderLabel,
  onClose,
  ...rest
}, ref2) => {
  const [innerValueRef, setInnerValue] = useRefState(value);
  useChange(() => {
    if (innerValueRef.current !== value) {
      setInnerValue(value, false);
    }
  }, () => value);
  const innerValue = innerValueRef.current;
  const label3 = getScreenReaderLabel?.(innerValue);
  const nextValue = innerValue === TIME_SYSTEM_TEXT.AM ? TIME_SYSTEM_TEXT.PM : TIME_SYSTEM_TEXT.AM;
  const handleClick = useEventCallback2((event) => {
    if (disabled3 || !isClick(event))
      return;
    onUpdateValue(nextValue);
  });
  const handleToggleKeyDown = useEventCallback2((event) => {
    if (disabled3) {
      return;
    }
    const togglePeriod = () => {
      setInnerValue(nextValue);
      onInnerChange?.(nextValue);
    };
    const keydownSubmit = () => {
      event.stopPropagation();
      onUpdateValue(innerValue);
      onClose(event);
    };
    runKeyHandler(event.nativeEvent, {
      ArrowUp: togglePeriod,
      ArrowDown: togglePeriod,
      Enter: keydownSubmit,
      " ": keydownSubmit
    });
  });
  useImperativeHandle18(ref2, () => ({
    value: innerValue
  }), [innerValue]);
  return /* @__PURE__ */ React684.createElement(StyledTimeIconButton, {
    wrapperSize: size,
    onClick: handleClick,
    onKeyDown: handleToggleKeyDown,
    disabled: disabled3,
    color: "informative.f02",
    "aria-live": "assertive",
    "aria-label": label3,
    ...rest
  }, /* @__PURE__ */ React684.createElement(React684.Fragment, null, innerValue));
}));
var ToggleText = styled_components_default(_ToggleText)`
  margin-left: ${({ size }) => RcTimePickerUtils[size].timeSystem.margin};
`;
ToggleText.displayName = "ToggleText";

// src/components/Forms/Picker/TimePicker/SelectionView.tsx
import React685 from "react";
var SelectionView = (props) => {
  const {
    source,
    onClick,
    value,
    automationId,
    size,
    min: minProp,
    max: maxProp,
    isTwelveHourSystem
  } = props;
  const min2 = minProp !== void 0 && isTwelveHourSystem ? minProp % HALF_DAY_HOURS : minProp;
  const max2 = maxProp !== void 0 && isTwelveHourSystem ? maxProp % HALF_DAY_HOURS : maxProp;
  const handleClick = (toValue2, disabled3) => {
    if (disabled3) {
      return void 0;
    }
    return () => onClick(toValue2);
  };
  const showValue = parseNumberToString(value, isTwelveHourSystem);
  return /* @__PURE__ */ React685.createElement(StyledSelectionView, {
    size
  }, source.map((v2) => {
    const disabled3 = !!(max2 !== void 0 && v2 > max2 || min2 !== void 0 && v2 < min2);
    const itemShowValue = parseNumberToString(v2, isTwelveHourSystem);
    return /* @__PURE__ */ React685.createElement(StyledSelectionItem, {
      disabled: disabled3,
      radius: "round",
      wrapperSize: size,
      key: v2,
      onClick: handleClick(v2, disabled3),
      selected: itemShowValue === showValue,
      "data-test-automation-id": automationId && `${automationId}-${itemShowValue}`,
      itemLength: source.length
    }, /* @__PURE__ */ React685.createElement(React685.Fragment, null, itemShowValue));
  }));
};
SelectionView.displayName = "SelectionView";

// src/components/Forms/Picker/TimePicker/TimePicker.tsx
import React686, {
  forwardRef as forwardRef601,
  useCallback as useCallback35,
  useLayoutEffect as useLayoutEffect27,
  useMemo as useMemo74,
  useRef as useRef89,
  useState as useState39
} from "react";
var _RcTimePicker = forwardRef601((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTimePicker" });
  const {
    isTwelveHourSystem,
    value,
    onChange,
    disabled: disabled3,
    dateMode,
    min: min2,
    max: max2,
    size,
    onKeyDown,
    onClear,
    HourPickerProps,
    MinutePickerProps,
    PeriodToggleProps,
    PopoverProps: PopoverPropsProp,
    InputProps: InputPropsProp,
    classes,
    defaultPickerValue,
    ...rest
  } = props;
  const actionRef = useRef89(null);
  const hourRef = useRef89(null);
  const minuteRef = useRef89(null);
  const periodRef = useRef89(null);
  const textFiledValueRef = useRef89("");
  const [selectionShowType, setSelectionType] = useState39("none");
  const { nowTime, isShowTextfieldValue } = (() => {
    if (value !== null)
      return { nowTime: value, isShowTextfieldValue: true };
    if (defaultPickerValue)
      return { nowTime: defaultPickerValue, isShowTextfieldValue: false };
    return { nowTime: null, isShowTextfieldValue: false };
  })();
  const isHaveValue = nowTime !== null;
  const isDateMode = nowTime instanceof Date || dateMode;
  const currentTimestamp = getTimestamp(nowTime);
  const currentHourMinute = getHourAndMinute(currentTimestamp);
  const isHourView = selectionShowType === "hour";
  const currentPeriod = getPeriod(currentHourMinute.hour);
  const recoupHour = isTwelveHourSystem && currentPeriod === TIME_SYSTEM_TEXT.PM ? HALF_DAY_HOURS : 0;
  const range = useMemo74(() => {
    return getRangeBoundary({ min: min2, max: max2 });
  }, [max2, min2]);
  const getEmitInitDate = useEventCallback2(() => {
    const date = nowTime !== null ? new Date(nowTime) : new Date();
    const { hour, minute } = currentHourMinute;
    date.setHours(hour, minute, 0, 0);
    return date;
  });
  const handleChange = useCallback35((toValue2) => {
    if (onChange) {
      if (isDateMode) {
        onChange(toValue2);
      } else {
        onChange(toValue2 ? getTimestampFromDate(toValue2) : null);
      }
    }
  }, [isDateMode, onChange]);
  const updateTime = (option) => {
    const {
      hour = hourRef.current?.value,
      minute = minuteRef.current?.value,
      period = periodRef.current?.value
    } = option;
    const time = getEmitInitDate();
    if (minute !== void 0) {
      time.setMinutes(minute);
    }
    if (hour !== void 0) {
      time.setHours(hour + recoupHour);
    }
    if (period !== void 0) {
      const currHour = time.getHours();
      if (period === TIME_SYSTEM_TEXT.PM) {
        if (currHour < HALF_DAY_HOURS) {
          time.setHours(currHour + HALF_DAY_HOURS);
        }
      } else if (currHour >= HALF_DAY_HOURS) {
        time.setHours(currHour - HALF_DAY_HOURS);
      }
    }
    const toTimestamp = getTimestamp(time);
    if (range.max.date && toTimestamp > range.max.timestamp) {
      time.setHours(range.max.hour);
      time.setMinutes(range.max.minute);
    } else if (range.min.date && toTimestamp < range.min.timestamp) {
      time.setHours(range.min.hour);
      time.setMinutes(range.min.minute);
    }
    handleChange(time);
  };
  const handleHourChange = useEventCallback2((hour) => {
    updateTime({ hour });
  });
  const handleMinuteChange = useEventCallback2((minute) => updateTime({ minute }));
  const onTogglePeriod = useEventCallback2((period) => updateTime({ period }));
  const handleClear = useEventCallback2((e2) => {
    onClear?.(e2);
    handleChange(null);
  });
  const handleSelectionViewClick = useEventCallback2((toValue2) => {
    updateTime(isHourView ? { hour: toValue2 } : { minute: toValue2 });
    setSelectionType("none");
  });
  const closeMenu = useEventCallback2(() => {
    actionRef.current?.close();
  });
  const setHourSelectionShow = useEventCallback2(() => setSelectionType("hour"));
  const setMinuteSelectionShow = useEventCallback2(() => setSelectionType("minute"));
  const handlePopoverKeydown = useEventCallback2((event) => {
    const onConfirmAndClose = () => {
      updateTime({});
      closeMenu();
    };
    runKeyHandler(event, {
      Enter: onConfirmAndClose,
      " ": onConfirmAndClose,
      Escape: closeMenu
    });
  });
  const handleHourInnerChange = useEventCallback2((hour) => {
    const minuteInstance = minuteRef.current;
    const periodInstance = periodRef.current;
    const currRecoupHour = getRecoupHour(hour, periodInstance?.value);
    const newRange = getNumberPickerBoundary(hour + currRecoupHour, {
      range,
      isTwelveHourSystem
    });
    minuteInstance.setRange(newRange.minute);
  });
  const handlePeriodInnerChange = useEventCallback2((period) => {
    const minuteInstance = minuteRef.current;
    const hourInstance = hourRef.current;
    const currHour = hourInstance.value;
    const currRecoupHour = getRecoupHour(currHour, period);
    const newRange = getNumberPickerBoundary(currHour + currRecoupHour, {
      range,
      isTwelveHourSystem
    });
    hourInstance.setRange(newRange.hour);
    minuteInstance.setRange(newRange.minute);
  });
  const renderHourValue = useEventCallback2((hourValue2) => {
    return parseNumberToString(hourValue2, isTwelveHourSystem);
  });
  const PopoverProps = useMemo74(() => combineProps({
    classes: combineClasses({
      root: RcTimePickerClasses.popover,
      paper: RcTimePickerClasses.popoverPaper
    }, {
      root: classes?.popover,
      paper: classes?.popoverPaper
    }),
    onKeyDown: handlePopoverKeydown,
    TransitionProps: {
      onEnter: () => setSelectionType("none")
    }
  }, PopoverPropsProp), [PopoverPropsProp, classes, handlePopoverKeydown]);
  useLayoutEffect27(() => {
    if (currentTimestamp === null)
      return;
    const time = getEmitInitDate();
    if (range.max.date && currentTimestamp > range.max.timestamp) {
      time.setHours(range.max.hour);
      time.setMinutes(range.max.minute);
      handleChange(time);
    } else if (range.min.date && currentTimestamp < range.min.timestamp) {
      time.setHours(range.min.hour);
      time.setMinutes(range.min.minute);
      handleChange(time);
    }
  }, [currentTimestamp, range, handleChange, getEmitInitDate]);
  useDepsChange(() => {
    if (!isShowTextfieldValue) {
      textFiledValueRef.current = "";
      return;
    }
    const { hour, minute } = currentHourMinute;
    const formattedTime = getFormattedTime({
      hour,
      minute,
      period: currentPeriod
    }, isTwelveHourSystem);
    textFiledValueRef.current = formattedTime;
  }, [
    currentHourMinute.hour,
    currentHourMinute.minute,
    currentTimestamp,
    isTwelveHourSystem,
    currentPeriod
  ]);
  const originalHourValue = isHaveValue ? currentHourMinute.hour : range.min.hour || 0;
  const boundary = useMemo74(() => getNumberPickerBoundary(originalHourValue, {
    range,
    isTwelveHourSystem
  }), [isTwelveHourSystem, originalHourValue, range]);
  const toggleTextDisabled = useMemo74(() => {
    return !!(range.min.hour && (range.min.hour >= HALF_DAY_HOURS || range.max.hour && range.min.hour < HALF_DAY_HOURS && range.max.hour < HALF_DAY_HOURS));
  }, [range.max.hour, range.min.hour]);
  const hourValue = isTwelveHourSystem ? originalHourValue % HALF_DAY_HOURS : originalHourValue;
  const minuteValue = isHaveValue ? currentHourMinute.minute : boundary.minute.min;
  const periodValue = isHaveValue ? currentPeriod : getPeriod(originalHourValue);
  return /* @__PURE__ */ React686.createElement(PickerTextField, {
    ref: ref2,
    action: actionRef,
    onClear: handleClear,
    value: textFiledValueRef.current,
    disabled: disabled3,
    PopoverProps,
    ActionSymbol: TimeBorder_default,
    ...rest
  }, /* @__PURE__ */ React686.createElement(StyledPickerPopperWrap, {
    size
  }, selectionShowType === "none" ? /* @__PURE__ */ React686.createElement(React686.Fragment, null, /* @__PURE__ */ React686.createElement(NumberPicker, {
    ref: hourRef,
    size,
    onInnerChange: handleHourInnerChange,
    onClick: setHourSelectionShow,
    onClose: closeMenu,
    value: hourValue,
    ...boundary.hour,
    onUpdateValue: handleHourChange,
    step: 1,
    source: isTwelveHourSystem ? twelveHourSystemSource : twentyFourHourSystemSource,
    renderValue: renderHourValue,
    automationId: "time-picker-hour",
    ...HourPickerProps
  }), /* @__PURE__ */ React686.createElement(RcBox, {
    textAlign: "center",
    width: "48px"
  }, ":"), /* @__PURE__ */ React686.createElement(NumberPicker, {
    ref: minuteRef,
    size,
    ...boundary.minute,
    onUpdateValue: handleMinuteChange,
    onClick: setMinuteSelectionShow,
    onClose: closeMenu,
    value: minuteValue,
    source: minuteSource,
    step: TIME_GAP,
    automationId: "time-picker-minute",
    ...MinutePickerProps
  }), isTwelveHourSystem && /* @__PURE__ */ React686.createElement("div", null, /* @__PURE__ */ React686.createElement(ToggleText, {
    ref: periodRef,
    size,
    disabled: toggleTextDisabled,
    onUpdateValue: onTogglePeriod,
    onInnerChange: handlePeriodInnerChange,
    onClose: closeMenu,
    value: periodValue,
    ...PeriodToggleProps
  }))) : /* @__PURE__ */ React686.createElement(SelectionView, {
    size,
    ...isHourView ? boundary.hour : boundary.minute,
    source: isHourView ? isTwelveHourSystem ? twelveHourSystemSource : twentyFourHourSystemSource : minuteSource,
    isTwelveHourSystem: isHourView && isTwelveHourSystem,
    value: isHourView ? hourValue : minuteValue,
    onClick: handleSelectionViewClick,
    automationId: `time-picker-${selectionShowType}`
  })));
});
var RcTimePicker = styled_components_default(_RcTimePicker)``;
RcTimePicker.defaultProps = {
  clearBtn: true,
  dateMode: false,
  size: "medium",
  HourPickerProps: {
    getScreenReaderLabel: (hour) => `Hour: ${hour}, use up and down arrow keys to change hour time by 1`
  },
  MinutePickerProps: {
    getScreenReaderLabel: (minute) => `Minute: ${minute}, use up and down arrow keys to change minutes time by 15 minutes`
  },
  PeriodToggleProps: {
    getScreenReaderLabel: (period) => `${period}, use up or down arrow keys to switch between AM or PM`
  }
};
RcTimePicker.displayName = "RcTimePicker";
var ExportType3 = RcTimePicker;

// src/components/Forms/RadioGroup/RadioGroup.tsx
import React687, { forwardRef as forwardRef602 } from "react";
var _RcRadioGroup = forwardRef602((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcRadioGroup" });
  const { classes: classesProp, children: children2, ...rest } = props;
  return /* @__PURE__ */ React687.createElement(RadioGroup_default, {
    ...rest,
    ref: ref2,
    classes: classesProp
  }, children2);
});
var RcRadioGroup = styled_components_default(_RcRadioGroup)``;
RcRadioGroup.defaultProps = {};
RcRadioGroup.displayName = "RcRadioGroup";

// src/components/Forms/Select/Select.tsx
import React692, { forwardRef as forwardRef607, useMemo as useMemo77 } from "react";

// src/components/VirtualizedMenu/VirtualizedMenu.tsx
import React689, { forwardRef as forwardRef604, useMemo as useMemo76, useRef as useRef91 } from "react";

// src/components/VirtualizedMenu/VirtualizedMenuList.tsx
var import_react_is13 = __toModule(require_react_is2());
import React688, {
  forwardRef as forwardRef603,
  useImperativeHandle as useImperativeHandle19,
  useMemo as useMemo75,
  useRef as useRef90
} from "react";
var _RcVirtualizedMenuList = forwardRef603((inProps, ref2) => {
  const props = useThemeProps({
    props: inProps,
    name: "RcVirtualizedMenuList"
  });
  const {
    action: action3,
    autoFocus = false,
    VirtuosoProps: VirtuosoProps2,
    autoFocusItem = false,
    children: childrenProp,
    className,
    classes,
    disabledItemsFocusable = false,
    disableListWrap = false,
    variant = "selectedMenu",
    maxHeight: maxHeight2 = "100%",
    autoClose,
    position: position4,
    onClose,
    ...rest
  } = props;
  const theme = RcUseTheme();
  const { document: document2 } = useRcPortalWindowContext();
  const vlRef = useRef90(null);
  const innerListRef = React688.useRef(null);
  const handleRef = useForkRef2(innerListRef, ref2);
  const rangeChangedRef = useRef90({ startIndex: 0, endIndex: 0 });
  const isMountedRef = useMountState();
  let hasSearchText = false;
  let activeItemIndex = -1;
  const items = React688.Children.map(childrenProp, (child, index4) => {
    if (!React688.isValidElement(child)) {
      return;
    }
    if (isShowJunoWarning) {
      if ((0, import_react_is13.isFragment)(child)) {
        logInDev({
          component: "RcVirtualizedMenuList",
          message: [
            "Material-UI: The Menu component doesn't accept a Fragment as a child.",
            "Consider providing an array instead."
          ].join("\n")
        });
      }
    }
    if (!child.props.disabled) {
      if (variant === "selectedMenu" && child.props.selected) {
        activeItemIndex = index4;
      } else if (activeItemIndex === -1) {
        activeItemIndex = index4;
      }
    }
    if (child.props["data-search-text"] !== void 0) {
      hasSearchText = true;
    }
    return child;
  });
  const itemCount = items.length;
  const focusedIndexRef = useRef90(activeItemIndex);
  focusedIndexRef.current = activeItemIndex;
  const onContainerHeightChange = useEventCallback2((changeHeight) => {
    const scroller = scrollerRef.current;
    if (scroller?.style) {
      scroller.style.height = `${changeHeight}px`;
    }
  });
  const { totalListHeightChanged, style: style3, containerHeighRef } = useDynamicHeight({
    itemCount,
    maxContainerHeight: maxHeight2,
    onContainerHeightChange
  });
  const modifyScrollPosition = () => vlRef.current?.scrollBy({ top: -8 });
  const {
    scrollerRef,
    scrollerRefFn,
    itemsRendered,
    scrollToHighlightedIndex
  } = useHighlightScroll({
    containerHeighRef,
    scrollToIndex: (location) => {
      vlRef.current?.scrollToIndex(location);
      if (location.index === 0)
        modifyScrollPosition();
      debounceFocusIndex(focusedIndexRef.current);
    }
  });
  const { focusIndex, getItemProps } = useOnlyOneFocusable({
    focusedIndexRef,
    containerRef: innerListRef,
    retryOptions: { retryTimes: 10, intervalTime: 20 }
  });
  const debounceFocusIndex = useDebounce(focusIndex, 20);
  const { onKeyFocusedIndexHandle, getNextFocusableOption } = useKeyboardMoveFocus({
    options: items,
    focusedIndexRef,
    infinite: !disableListWrap,
    onFocusedIndexChange: (event, toIndex) => {
      scrollToHighlightedIndex(focusedIndexRef.current, toIndex);
      focusedIndexRef.current = toIndex;
      debounceFocusIndex(focusedIndexRef.current);
      event.preventDefault();
    },
    getOptionDisabled: (child) => {
      return !disabledItemsFocusable && (child.props.disabled || child.props["aria-disabled"] || child.props["data-disabled-focus"] || isRcElement(child, ["RcDivider", "RcVirtualizedDivider"]));
    },
    getOptionSearchText: hasSearchText ? (child) => {
      return child.props["data-search-text"];
    } : void 0
  });
  const hiddenRef = useRef90(null);
  const events = useHiddenTabindex(hiddenRef);
  const onMounted = useEventCallback2(() => {
    if (autoFocus) {
      innerListRef.current?.focus();
    }
    if (disabledItemsFocusable) {
      modifyScrollPosition();
      debounceFocusIndex(0);
    } else {
      const initFocusedIndex = getNextFocusableOption();
      if (autoFocusItem) {
        setTimeout(() => {
          vlRef.current?.scrollToIndex(initFocusedIndex);
          modifyScrollPosition();
          debounceFocusIndex(initFocusedIndex);
        }, 0);
      }
    }
  });
  useImperativeHandle19(action3, () => ({
    scrollIntoViewAndFocus: onMounted,
    adjustStyleForScrollbar: () => {
      const listElm = innerListRef.current;
      const scrollElm = scrollerRef.current;
      if (typeof maxHeight2 === "number" && scrollElm.clientHeight === maxHeight2) {
        const scrollbarSize = `${getScrollbarSize2()}px`;
        const styleDirection = theme.direction === "rtl" ? "paddingLeft" : "paddingRight";
        listElm.style[styleDirection] = scrollbarSize;
        listElm.style.width = `calc(100% + ${scrollbarSize})`;
        scrollElm.style.overflowX = "hidden";
      }
    },
    adjustContainerHeight: (value) => {
      containerHeighRef.current = value;
      onContainerHeightChange(value);
    }
  }));
  const components = useMemo75(() => ({
    Header: StyledMenuListPadding,
    Footer: StyledMenuListPadding,
    List: React688.forwardRef(({ children: children2, ...listRest }, listRef) => {
      const toRef = useForkRef2(handleRef, listRef);
      return /* @__PURE__ */ React688.createElement(RcList, {
        role: "menu",
        ref: toRef,
        ...combineProps(listRest, rest)
      }, children2);
    }),
    Item: ({ children: child, ...itemRest }) => {
      const index4 = itemRest["data-index"];
      return React688.cloneElement(child, {
        ...itemRest,
        "aria-posinset": index4,
        "aria-setsize": itemCount,
        ...getItemProps(index4)
      });
    }
  }), []);
  const combine2 = combineProps({
    tabIndex: -1,
    scrollerRef: (scrollElm) => {
      scrollerRefFn(scrollElm);
      if (position4 && scrollElm) {
        const viewPortElm = scrollElm.firstChild;
        if (viewPortElm) {
          viewPortElm.style.position = position4;
        }
      }
      if (!isMountedRef.current) {
        onMounted();
      }
    },
    onKeyDown: onKeyFocusedIndexHandle,
    itemsRendered,
    rangeChanged: (range) => {
      rangeChangedRef.current = range;
      const focusedIndex = focusedIndexRef.current;
      const listElm = scrollerRef.current;
      if (listElm && document2.activeElement && document2.activeElement !== listElm && listElm.contains(document2.activeElement) && isOutOfRange(focusedIndex, range)) {
        listElm.focus();
      }
    },
    totalListHeightChanged,
    style: style3,
    ...events
  }, VirtuosoProps2);
  return /* @__PURE__ */ React688.createElement(React688.Fragment, null, /* @__PURE__ */ React688.createElement(RcVisuallyHidden, {
    ref: hiddenRef,
    onFocus: () => {
      if (isOutOfRange(focusedIndexRef.current, rangeChangedRef.current)) {
        scrollToHighlightedIndex(rangeChangedRef.current?.startIndex || 0, focusedIndexRef.current);
      } else {
        debounceFocusIndex(focusedIndexRef.current);
      }
    }
  }), /* @__PURE__ */ React688.createElement(Virtuoso, {
    ref: vlRef,
    data: items,
    itemContent: (index4, data) => data,
    totalCount: itemCount,
    components,
    ...combine2
  }));
});
var RcVirtualizedMenuList = styled_components_default(_RcVirtualizedMenuList)``;
RcVirtualizedMenuList.defaultProps = {};
RcVirtualizedMenuList.displayName = "RcVirtualizedMenuList";

// src/components/VirtualizedMenu/VirtualizedMenu.tsx
var _RcVirtualizedMenu = forwardRef604((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcVirtualizedMenu" });
  const {
    autoFocus = true,
    children: children2,
    classes: classesProp,
    disableAutoFocusItem = false,
    MenuListProps: { maxHeight: maxHeight2 = 416, onKeyDown, ...MenuListProps } = {},
    onClose,
    open,
    TransitionProps: TransitionPropsProp,
    PaperProps: PaperPropsProp = {},
    PopoverClasses,
    transitionDuration = "auto",
    variant = "selectedMenu",
    ...rest
  } = props;
  const { document: document2 } = useRcPortalWindowContext();
  const popoverRef = useRef91(null);
  const handleRef = useForkRef2(ref2, popoverRef);
  const menuListActionRef = useRef91(null);
  const classes = useMemo76(() => combineClasses(RcVirtualizedMenuClasses, classesProp), [classesProp]);
  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;
  const TransitionProps4 = useMemo76(() => combineProps({
    onEntering: () => {
      menuListActionRef.current?.adjustStyleForScrollbar();
      menuListActionRef.current?.scrollIntoViewAndFocus();
    },
    onEntered: () => {
      const popoverElm = popoverRef.current;
      const paperElm = popoverElm.querySelector(`.${RcVirtualizedMenuClasses.paper}`);
      const newHeight = paperElm.clientHeight;
      if (newHeight !== maxHeight2) {
        menuListActionRef.current?.adjustContainerHeight(newHeight);
      }
    }
  }, TransitionPropsProp), [maxHeight2, TransitionPropsProp]);
  const PaperProps = combineProps({
    classes: {
      root: classes?.paper
    }
  }, PaperPropsProp);
  const handleListKeyDown = useEventCallback2((event) => {
    onKeyDown?.(event);
    if (event.key === "Tab") {
      event.preventDefault();
      if (onClose) {
        onClose(event, "tabKeyDown");
      }
    }
  });
  return /* @__PURE__ */ React689.createElement(RcPopover, {
    ref: handleRef,
    container: document2.body,
    classes: PopoverClasses,
    onClose,
    open,
    transitionDuration,
    PaperProps,
    TransitionProps: TransitionProps4,
    ...rest
  }, /* @__PURE__ */ React689.createElement(RcVirtualizedMenuList, {
    position: "unset",
    action: menuListActionRef,
    autoFocus,
    autoFocusItem,
    maxHeight: maxHeight2,
    variant,
    onKeyDown: handleListKeyDown,
    ...MenuListProps,
    className: clsx_m_default(classes.list, MenuListProps.className)
  }, children2));
});
var RcVirtualizedMenu = styled_components_default(_RcVirtualizedMenu)`
  ${VirtualizedMenuStyle}
`;
RcVirtualizedMenu.defaultProps = {
  autoFocus: true,
  variant: "selectedMenu",
  getContentAnchorEl: null,
  anchorReference: "anchorEl",
  anchorOrigin: { vertical: "bottom", horizontal: "left" }
};

// src/components/VirtualizedMenu/VirtualizedDivider/VirtualizedDivider.tsx
import React690, { forwardRef as forwardRef605 } from "react";
var _RcVirtualizedDivider = forwardRef605((inProps, ref2) => {
  const props = useThemeProps({
    props: inProps,
    name: "RcVirtualizedDivider"
  });
  const { className, ...rest } = props;
  return /* @__PURE__ */ React690.createElement("li", {
    className,
    "data-disabled-focus": true
  }, /* @__PURE__ */ React690.createElement(RcDivider, {
    ...rest,
    ref: ref2
  }));
});
var RcVirtualizedDivider = styled_components_default(_RcVirtualizedDivider)`
  padding: ${spacing2(2, 0)};
  list-style: none;
`;
RcVirtualizedDivider.defaultProps = {};
RcVirtualizedDivider.displayName = "RcVirtualizedDivider";

// src/components/Forms/Select/utils/SelectInput/SelectInput.tsx
import React691, { forwardRef as forwardRef606, useState as useState40 } from "react";
var import_react_is14 = __toModule(require_react_is2());
var import_utils248 = __toModule(require_utils());
function areEqualValues2(a2, b2) {
  if (typeof b2 === "object" && b2 !== null) {
    return a2 === b2;
  }
  return String(a2) === String(b2);
}
function isEmpty2(display) {
  return display == null || typeof display === "string" && !display.trim();
}
var SelectInput3 = forwardRef606((props, ref2) => {
  const {
    MenuComponent = Menu_default,
    "aria-label": ariaLabel,
    autoFocus,
    autoWidth,
    children: children2,
    classes = {},
    className,
    defaultValue,
    disabled: disabled3,
    displayEmpty,
    IconComponent = SelectArrowDownIcon,
    inputRef: inputRefProp,
    labelId,
    MenuProps = {},
    multiple,
    name,
    onBlur,
    onChange,
    onClose,
    onFocus,
    onOpen,
    open: openProp,
    readOnly,
    renderValue,
    SelectDisplayProps = {},
    tabIndex: tabIndexProp,
    type: type3,
    value: valueProp,
    ...other
  } = props;
  const [value, setValueState] = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: "Select"
  });
  const inputRef = React691.useRef(null);
  const displayRef = React691.useRef(null);
  const [displayNode, setDisplayNode] = React691.useState(null);
  const { current: isOpenControlled } = React691.useRef(openProp != null);
  const [menuMinWidthState, setMenuMinWidthState] = useState40();
  const [openState, setOpenState] = React691.useState(false);
  const handleRef = useForkRef(ref2, inputRefProp);
  const handleDisplayRef = React691.useCallback((node4) => {
    displayRef.current = node4;
    if (node4) {
      setDisplayNode(node4);
    }
  }, []);
  React691.useImperativeHandle(handleRef, () => ({
    focus: () => {
      displayRef.current.focus();
    },
    node: inputRef.current,
    value
  }), [value]);
  React691.useEffect(() => {
    if (autoFocus) {
      displayRef.current.focus();
    }
  }, [autoFocus]);
  React691.useEffect(() => {
    const label3 = ownerDocument(displayRef.current).getElementById(labelId);
    if (label3) {
      const handler = () => {
        if (getSelection().isCollapsed) {
          displayRef.current.focus();
        }
      };
      label3.addEventListener("click", handler);
      return () => {
        label3.removeEventListener("click", handler);
      };
    }
    return void 0;
  }, [labelId]);
  const update4 = (open2, event) => {
    if (open2) {
      if (onOpen) {
        onOpen(event);
      }
    } else if (onClose) {
      onClose(event);
    }
    if (!isOpenControlled) {
      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);
      setOpenState(open2);
    }
  };
  const handleMouseDown = (event) => {
    if (event.button !== 0) {
      return;
    }
    event.preventDefault();
    displayRef.current.focus();
    update4(true, event);
  };
  const handleClose = (event) => {
    update4(false, event);
  };
  const childrenArray = React691.Children.toArray(children2);
  const handleChange = (event) => {
    const index4 = childrenArray.map((child2) => child2.props.value).indexOf(event.target.value);
    if (index4 === -1) {
      return;
    }
    const child = childrenArray[index4];
    setValueState(child.props.value);
    if (onChange) {
      onChange(event, child);
    }
  };
  const handleItemClick = (child) => (event) => {
    let newValue;
    if (multiple) {
      newValue = Array.isArray(value) ? value.slice() : [];
      const itemIndex = value.indexOf(child.props.value);
      if (itemIndex === -1) {
        newValue.push(child.props.value);
      } else {
        newValue.splice(itemIndex, 1);
      }
    } else {
      newValue = child.props.value;
    }
    if (child.props.onClick) {
      child.props.onClick(event);
    }
    if (value !== newValue) {
      setValueState(newValue);
      if (onChange) {
        event.persist();
        Object.defineProperty(event, "target", {
          writable: true,
          value: { value: newValue, name }
        });
        onChange(event, child);
      }
    }
    if (!multiple) {
      update4(false, event);
    }
  };
  const handleKeyDown2 = (event) => {
    if (!readOnly) {
      const validKeys = [
        " ",
        "ArrowUp",
        "ArrowDown",
        "Enter"
      ];
      if (validKeys.indexOf(event.key) !== -1) {
        event.preventDefault();
        update4(true, event);
      }
    }
  };
  const open = displayNode !== null && (isOpenControlled ? openProp : openState);
  const handleBlur = (event) => {
    if (!open && onBlur) {
      event.persist();
      Object.defineProperty(event, "target", {
        writable: true,
        value: { value, name }
      });
      onBlur(event);
    }
  };
  delete other["aria-invalid"];
  let display;
  let displaySingle;
  const displayMultiple = [];
  let computeDisplay = false;
  let foundMatch = false;
  if ((0, import_utils248.isFilled)({ value }) || displayEmpty) {
    if (renderValue) {
      display = renderValue(value);
    } else {
      computeDisplay = true;
    }
  }
  const items = childrenArray.map((child) => {
    if (!React691.isValidElement(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is14.isFragment)(child)) {
        console.error([
          "Material-UI: The Select component doesn't accept a Fragment as a child.",
          "Consider providing an array instead."
        ].join("\n"));
      }
    }
    let selected;
    if (multiple) {
      if (!Array.isArray(value)) {
        throw new Error("Material-UI: The `value` prop must be an array when using the `Select` component with `multiple`.");
      }
      selected = value.some((v2) => areEqualValues2(v2, child.props.value));
      if (selected && computeDisplay) {
        displayMultiple.push(child.props.children);
      }
    } else {
      selected = areEqualValues2(value, child.props.value);
      if (selected && computeDisplay) {
        displaySingle = child.props.children;
      }
    }
    if (selected) {
      foundMatch = true;
    }
    return React691.cloneElement(child, {
      "aria-selected": selected ? "true" : void 0,
      onClick: handleItemClick(child),
      onKeyUp: (event) => {
        if (event.key === " ") {
          event.preventDefault();
        }
        if (child.props.onKeyUp) {
          child.props.onKeyUp(event);
        }
      },
      role: "option",
      selected,
      value: void 0,
      "data-value": child.props.value
    });
  });
  if (true) {
    React691.useEffect(() => {
      if (!foundMatch && !multiple && value !== "") {
        const values6 = childrenArray.map((child) => child.props.value);
        console.warn([
          `Material-UI: You have provided an out-of-range value \`${value}\` for the select ${name ? `(name="${name}") ` : ""}component.`,
          "Consider providing a value that matches one of the available options or ''.",
          `The available values are ${values6.filter((x2) => x2 != null).map((x2) => `\`${x2}\``).join(", ") || '""'}.`
        ].join("\n"));
      }
    }, [foundMatch, childrenArray, multiple, name, value]);
  }
  if (computeDisplay) {
    display = multiple ? displayMultiple.join(", ") : displaySingle;
  }
  let menuMinWidth = menuMinWidthState;
  if (!autoWidth && isOpenControlled && displayNode) {
    menuMinWidth = displayNode.clientWidth;
  }
  let tabIndex;
  if (typeof tabIndexProp !== "undefined") {
    tabIndex = tabIndexProp;
  } else {
    tabIndex = disabled3 ? void 0 : 0;
  }
  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : void 0);
  return /* @__PURE__ */ React691.createElement(React691.Fragment, null, /* @__PURE__ */ React691.createElement("div", {
    ref: handleDisplayRef,
    tabIndex,
    role: "button",
    "aria-disabled": disabled3 ? "true" : void 0,
    "aria-expanded": open ? "true" : void 0,
    "aria-haspopup": "listbox",
    "aria-label": ariaLabel,
    "aria-labelledby": [labelId, buttonId].filter(Boolean).join(" ") || void 0,
    onKeyDown: handleKeyDown2,
    onMouseDown: disabled3 || readOnly ? void 0 : handleMouseDown,
    onBlur: handleBlur,
    onFocus,
    ...SelectDisplayProps,
    className: clsx_m_default(classes.root, classes.select, classes.selectMenu, classes.disabled && {
      [classes.disabled]: disabled3
    }, className, SelectDisplayProps.className),
    id: buttonId
  }, isEmpty2(display) ? /* @__PURE__ */ React691.createElement("span", {
    dangerouslySetInnerHTML: { __html: "&#8203;" }
  }) : display), /* @__PURE__ */ React691.createElement("input", {
    value: Array.isArray(value) ? value.join(",") : value,
    name,
    ref: inputRef,
    "aria-hidden": true,
    onChange: handleChange,
    tabIndex: -1,
    disabled: disabled3,
    className: classes.nativeInput,
    autoFocus,
    ...other
  }), /* @__PURE__ */ React691.createElement(IconComponent, {
    disabled: disabled3,
    className: clsx_m_default(classes.icon, classes.iconOpen && {
      [classes.iconOpen]: open
    }, classes.disabled && {
      [classes.disabled]: disabled3
    })
  }), /* @__PURE__ */ React691.createElement(MenuComponent, {
    id: `menu-${name || ""}`,
    anchorEl: displayNode,
    open,
    onClose: handleClose,
    ...MenuProps,
    MenuListProps: {
      "aria-labelledby": labelId,
      role: "listbox",
      disableListWrap: true,
      ...MenuProps.MenuListProps
    },
    PaperProps: {
      ...MenuProps.PaperProps,
      style: {
        minWidth: menuMinWidth,
        ...MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null
      }
    }
  }, items));
});
SelectInput3.defaultProps = {};
SelectInput3.displayName = "SelectInput";

// src/components/Forms/Select/utils/SelectUtils.ts
var RcSelectClasses = RcClasses(["icon"], "RcSelect");
var RcSelectInputClasses = RcClasses(["root", "focused", "error", "disabled"], "RcSelectInput");
var RcSelectInputWhenPlaceholderClasses = RcClasses(["input"], "RcSelectInputWhenPlaceholder");
var RcLineSelectInputClasses = RcClasses(["input"], "RcLineSelectInput");
var RcBoxSelectInputClasses = RcClasses(["root", "focused", "input", "error", "disabled"], "RcBoxSelectInput");
var RcSelectInputClassesMap = {
  box: RcBoxSelectInputClasses,
  line: RcLineSelectInputClasses
};
var RcBoxSelectInputHeights = {
  medium: 32,
  large: 40
};
var RcSelectTextField = RcTextField;

// src/components/Forms/Select/styles/StyledSelect.tsx
var boxBackgroundColor = palette22("neutral", "b03");
var boxActionBackgroundColor = palette22("action", "grayDark");
var lineSelectStyle = css2`
  .${RcLineSelectInputClasses.input} {
    ${({ textVariant }) => typography4(textVariant || "subheading1")};
    line-height: unset;

    &:focus {
      background-color: ${setOpacity(palette22("action", "grayDark"), "08")};
    }
  }
`;
var boxSelectStyle = ({
  color: color2
}) => css2`
  > .${RcBoxSelectInputClasses.root} {
    margin-top: ${({ label: label3 }) => label3 && spacing2(5)};
    box-sizing: border-box;
    height: ${({ size }) => px2(RcBoxSelectInputHeights[size])};
    border-radius: ${radius3("lg")};
    background-color: ${boxBackgroundColor};

    &:not(.${RcBoxSelectInputClasses.disabled}):hover {
      background-color: ${setOpacity(boxActionBackgroundColor, "12")};
    }

    &:before {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border-radius: ${radius3("lg")};

      transition: none;
      border-bottom: none !important;
      pointer-events: none;
      ${fakeBorder({ color: palette22("highContrast") })};
    }

    &:after {
      display: none;
    }
  }

  > .${RcBoxSelectInputClasses.focused} {
    background-color: ${setOpacity(boxActionBackgroundColor, "16")};

    &:before {
      ${fakeBorder({ color: color2 })};
    }
  }

  > .${RcBoxSelectInputClasses.error} {
    &:before {
      ${fakeBorder({ color: palette22("danger", "f02") })};
    }
  }

  > .${RcBoxSelectInputClasses.disabled} {
    background-color: ${setOpacity(palette22("action", "grayLight"), "12")};
    &:before {
      ${fakeBorder({ color: "transparent", allowTransparent: true })};
    }
  }

  .${RcBoxSelectInputClasses.input} {
    padding: ${spacing2(1.5, 6, 1.5, 2)};
    ${({ textVariant }) => typography4(textVariant || "body1")};
    line-height: ${({ size }) => px2(RcBoxSelectInputHeights[size] - 12)};

    &:focus {
      background: transparent;
    }
  }
`;
var selectStyle = (props) => {
  const { variant, placeholder: placeholder2, color: colorProp } = props;
  const color2 = getParsePaletteColor(colorProp, palette22("interactive", "f01"));
  return css2`
    .${RcSelectClasses.icon} {
      color: ${palette22("neutral", "f04")};
    }

    .${RcSelectInputClasses.focused} {
      .${RcSelectClasses.icon} {
        color: ${color2};
      }
    }

    .${RcSelectInputClasses.error} {
      .${RcSelectClasses.icon} {
        color: ${palette22("danger", "f02")};
      }
    }

    .${RcSelectInputWhenPlaceholderClasses.input} {
      color: ${placeholderColor};
      &:before {
        content: ${`'${placeholder2}'`};
        border: none;
      }
    }

    .${RcSelectInputClasses.disabled} {
      color: ${disabledColor};
      .${RcSelectClasses.icon} {
        color: ${disabledColor};
      }
    }

    ${variant === "line" && lineSelectStyle};
    ${variant === "box" && boxSelectStyle({ ...props, color: color2 })};
  `;
};

// src/components/Forms/Select/Select.tsx
var leftBottomAnchorOrigin = {
  horizontal: "left",
  vertical: "bottom"
};
var _RcSelect = forwardRef607((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcSelect" });
  const {
    children: children2,
    onChange,
    defaultValue,
    SelectInputProps: SelectInputPropsProp,
    MenuProps,
    textVariant,
    placeholder: placeholder2,
    renderValue,
    displayEmpty,
    variant,
    size,
    value,
    virtualize,
    focused,
    gutterBottom,
    helperText,
    color: color2,
    label: label3,
    id: id3,
    className,
    validate,
    InputProps,
    required: required2,
    fullWidth,
    disabled: disabled3,
    error: error4,
    ...rest
  } = props;
  const hasDefaultValue = hasValue2(defaultValue);
  const nonValue = !hasValue2(value) && !hasDefaultValue || !displayEmpty && value === "";
  const applyClasses = useMemo77(() => {
    const variantClasses = RcSelectInputClassesMap[variant];
    return combineClasses(RcSelectInputClasses, variantClasses);
  }, [variant]);
  const _SelectProps = useMemo77(() => {
    const additionProps = {
      MenuComponent: void 0,
      MenuProps: void 0
    };
    if (rest?.multiple) {
      additionProps.MenuComponent = RcMenu;
      additionProps.MenuProps = {
        anchorOrigin: leftBottomAnchorOrigin
      };
    }
    if (virtualize) {
      additionProps.MenuComponent = RcVirtualizedMenu;
      additionProps.MenuProps = {
        anchorOrigin: {
          vertical: "top",
          horizontal: "left"
        },
        transformOrigin: { horizontal: 0, vertical: 8 }
      };
    }
    additionProps.MenuProps = combineProps(additionProps.MenuProps, MenuProps);
    return {
      renderValue,
      classes: combineClasses(RcSelectClasses, rest?.classes),
      IconComponent: SelectArrowDownIcon,
      displayEmpty,
      inputComponent: SelectInput3,
      inputProps: {
        ...additionProps,
        ...rest?.inputProps,
        ...SelectInputPropsProp
      },
      ...rest
    };
  }, [
    rest,
    virtualize,
    renderValue,
    displayEmpty,
    SelectInputPropsProp,
    MenuProps
  ]);
  const _InputProps = useMemo77(() => {
    let result = InputProps;
    if (placeholder2 && nonValue) {
      result = combineProps({
        classes: combineClasses(RcSelectInputWhenPlaceholderClasses, applyClasses),
        disableUnderline: variant === "box"
      }, result);
    }
    return combineProps({
      classes: applyClasses
    }, result);
  }, [InputProps, placeholder2, nonValue, applyClasses, variant]);
  const valueIsNumber = typeof value === "number";
  const currValue = valueIsNumber ? value : value || "";
  return /* @__PURE__ */ React692.createElement(RcSelectTextField, {
    ref: ref2,
    id: id3,
    className,
    onChange,
    color: color2,
    select: true,
    focused,
    gutterBottom,
    helperText,
    label: label3,
    value: hasDefaultValue ? void 0 : currValue,
    defaultValue,
    validate,
    required: required2,
    fullWidth,
    disabled: disabled3,
    error: error4,
    InputProps: _InputProps,
    clearBtn: false,
    placeholder: placeholder2,
    SelectProps: _SelectProps
  }, children2);
});
var RcSelect = styled_components_default(_RcSelect)`
  ${selectStyle};
`;
RcSelect.displayName = "RcSelect";
RcSelect.defaultProps = {
  size: "medium",
  variant: "line"
};

// src/components/Forms/Select/PlainSelect/PlainSelect.tsx
import React695, { forwardRef as forwardRef610, useMemo as useMemo80, useState as useState43 } from "react";

// src/components/Menu/MenuList/MenuList.tsx
import React693, {
  forwardRef as forwardRef608,
  memo as memo424,
  useContext as useContext29,
  useMemo as useMemo78,
  useState as useState41
} from "react";

// src/components/Menu/MenuList/utils/MenuListUtils.ts
var RcMenuListClasses = RcClasses([], "RcMenuList");

// src/components/Menu/MenuList/MenuList.tsx
var MemoMuiListMenu = memo424(MenuList_default);
var _RcMenuList = forwardRef608((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcMenuList" });
  const {
    classes: classesProp,
    children: children2,
    autoClose,
    onClose: onCloseProp,
    maxHeight: maxHeight2,
    ...rest
  } = props;
  const [focusedMenuItemId, setFocusedMenuItemId] = useState41(null);
  const id3 = useId2("menu-list", true);
  const classes = useMemo78(() => combineClasses(RcMenuListClasses, classesProp), [classesProp]);
  const subMenuContext = useContext29(RcSubMenuContext);
  const ctxValue = useMemo78(() => ({
    menuListId: id3,
    autoClose: !!autoClose || subMenuContext.autoClose,
    focusedMenuItemId,
    setFocusedMenuItemId,
    onClose: onCloseProp
  }), [autoClose, focusedMenuItemId, id3, onCloseProp, subMenuContext.autoClose]);
  return /* @__PURE__ */ React693.createElement(RcMenuListContext.Provider, {
    value: ctxValue
  }, /* @__PURE__ */ React693.createElement(MemoMuiListMenu, {
    ...rest,
    ref: ref2,
    classes
  }, children2));
});
var RcMenuList = styled_components_default(_RcMenuList)`
  ${MenuListStyle};
`;
RcMenuList.defaultProps = {
  variant: "selectedMenu"
};
RcMenuList.displayName = "RcMenuList";

// src/components/Menu/SubMenu/SubMenu.tsx
import React694, {
  forwardRef as forwardRef609,
  memo as memo425,
  useContext as useContext30,
  useLayoutEffect as useLayoutEffect28,
  useMemo as useMemo79,
  useRef as useRef92,
  useState as useState42
} from "react";

// src/components/Menu/SubMenu/styles/SubMenuStyle.tsx
var StyledListItemSecondaryAction = styled_components_default(RcListItemSecondaryAction)`
  position: relative;
  transform: none;
  right: 0;
  top: 0;
`;
var StyledGrow = styled_components_default(Grow_default)`
  transform-origin: 'center top';
`;
var SubMenuStyle = () => {
  return css2``;
};

// src/components/Menu/SubMenu/utils/SubMenuUtils.ts
var RcSubMenuClasses = RcClasses([], "RcSubMenu");

// src/components/Menu/SubMenu/SubMenu.tsx
var POPPER_OFFSET = 2;
var MemoMenuList = memo425(RcMenuList);
var _RcSubMenu = forwardRef609((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcSubMenu" });
  const {
    classes: classesProp,
    children: children2,
    title: titleProp,
    disabled: disabled3,
    onKeyDown,
    onMouseEnter,
    onMouseLeave,
    MenuListProps,
    PopperProps = {},
    onClose,
    ...rest
  } = props;
  const _popperRef = useRef92(null);
  const popperRef = useForkRef2(_popperRef, PopperProps.ref || null);
  const popperId = useId2(PopperProps.id);
  const menuItemIdRef = useRef92(null);
  const [anchorEl, setAnchorEl] = useState42(null);
  const [open, setOpen] = useState42(false);
  const menuListContext = useContext30(RcMenuListContext);
  const menuContext = useContext30(RcMenuContext);
  const subMenuContext = useContext30(RcSubMenuContext);
  const { externalWindow } = useRcPortalWindowContext();
  const handleClose = useEventCallback2((e2, reason) => {
    onClose?.(e2, reason);
    menuListContext?.onClose?.(e2, reason);
  });
  const handleItemKeyDown = useEventCallback2((e2) => {
    const { key } = e2;
    const { ArrowRight: ArrowRight2, Space, Enter } = a11yKeyboard;
    if ([ArrowRight2, Space, Enter].includes(key)) {
      openPopper(e2);
    }
    onKeyDown?.(e2);
  });
  const handleItemMouseEnter = useEventCallback2((e2) => {
    openPopper(e2);
    onMouseEnter?.(e2);
  });
  const handleItemMouseLeave = useEventCallback2((e2) => {
    onMouseLeave?.(e2);
    if (!_popperRef.current || !e2.currentTarget) {
      return;
    }
    const { clientX } = e2;
    const { left: left2, width: width2 } = _popperRef.current.getBoundingClientRect();
    const isMoveToPopper = left2 < clientX + POPPER_OFFSET && clientX - POPPER_OFFSET < left2 + width2;
    if (!isMoveToPopper) {
      closePopper();
      handleClose(e2, "subMenuItemAnchorMouseLeave");
    }
  });
  const classes = useMemo79(() => combineClasses(RcSubMenuClasses, classesProp), [classesProp]);
  const title = useMemo79(() => typeof titleProp === "string" ? /* @__PURE__ */ React694.createElement(RcListItemText, null, titleProp) : titleProp, [titleProp]);
  const {
    onKeyDown: onPopperKeyDown,
    onMouseLeave: onPopperMouseLeave,
    ...restPopperProps
  } = PopperProps;
  const openPopper = useEventCallback2((event) => {
    if (!disabled3 && event.currentTarget) {
      setAnchorEl(event.currentTarget);
      setOpen(true);
    }
  });
  const closePopper = useEventCallback2(() => {
    setOpen(false);
    setAnchorEl(null);
  });
  const handleCloseSubMenu = useEventCallback2(() => {
    anchorEl?.focus();
    closePopper();
  });
  const handlePopperKeyDown = useEventCallback2((e2) => {
    const { key } = e2;
    const { ArrowLeft: ArrowLeft3, Escape, Tab: Tab3 } = a11yKeyboard;
    e2.stopPropagation();
    if (key === ArrowLeft3) {
      handleCloseSubMenu();
      handleClose(e2, "subMenuItemArrowLeftKeyDown");
    } else if ([Escape, Tab3].includes(key)) {
      const reason = key === Escape ? "escapeKeyDown" : "tabKeyDown";
      handleCloseSubMenu();
      menuContext.closeMenu(e2, reason);
      subMenuContext?.closeSubMenu?.(e2, reason);
      handleClose(e2, reason);
    }
    onPopperKeyDown?.(e2);
  });
  const handlePopperClickAway = useEventCallback2((e2) => {
    if (anchorEl && e2.target && !anchorEl.contains(e2.target)) {
      closePopper();
      handleClose(e2, "backdropClick");
    }
  });
  const handlePopperMouseLeave = useEventCallback2((e2) => {
    closePopper();
    onPopperMouseLeave?.(e2);
    if (!anchorEl || !e2.currentTarget) {
      return;
    }
    const { clientX } = e2;
    const { left: left2, width: width2 } = anchorEl.getBoundingClientRect();
    const isMoveToAnchor = left2 < clientX + POPPER_OFFSET && clientX - POPPER_OFFSET < left2 + width2;
    if (!isMoveToAnchor) {
      handleClose(e2, "popperMouseLeave");
    }
  });
  useLayoutEffect28(() => {
    if (open && menuListContext.menuListId !== "" && menuListContext.focusedMenuItemId !== menuItemIdRef.current) {
      handleCloseSubMenu();
    }
  }, [
    handleCloseSubMenu,
    menuListContext.focusedMenuItemId,
    menuListContext.menuListId,
    open
  ]);
  useLayoutEffect28(() => {
    if (open && menuListContext.menuListId === "" && menuContext.focusedMenuItemId !== menuItemIdRef.current) {
      handleCloseSubMenu();
    }
  }, [
    handleCloseSubMenu,
    menuContext.focusedMenuItemId,
    menuListContext.menuListId,
    open
  ]);
  const ctxValue = useMemo79(() => ({
    autoClose: menuListContext.autoClose,
    closeSubMenu: (e2, reason) => {
      handleCloseSubMenu();
      subMenuContext?.closeSubMenu?.(e2, reason);
      menuListContext?.onClose?.(e2, reason);
    }
  }), [handleCloseSubMenu, menuListContext, subMenuContext]);
  const modifiers2 = useMemo79(() => ({
    flip: {
      enabled: true
    },
    offset: {
      offset: -8
    },
    preventOverflow: {
      enabled: true,
      boundariesElement: externalWindow ? "window" : "viewport"
    }
  }), [externalWindow]);
  return /* @__PURE__ */ React694.createElement(React694.Fragment, null, /* @__PURE__ */ React694.createElement(RcMenuItem, {
    "aria-controls": popperId,
    ...rest,
    ref: ref2,
    disabled: disabled3,
    classes,
    onKeyDown: handleItemKeyDown,
    onMouseEnter: handleItemMouseEnter,
    onMouseLeave: handleItemMouseLeave,
    idRef: menuItemIdRef,
    isSubMenuItem: true,
    "aria-haspopup": "true",
    "aria-expanded": open
  }, title, /* @__PURE__ */ React694.createElement(StyledListItemSecondaryAction, null, /* @__PURE__ */ React694.createElement(RcIcon, {
    size: "medium",
    color: "neutral.f04",
    symbol: ArrowRight_default
  }))), /* @__PURE__ */ React694.createElement(RcPopper, {
    role: "menu",
    id: popperId,
    container: externalWindow?.document.body,
    placement: "right-start",
    ...restPopperProps,
    ref: popperRef,
    open,
    anchorEl,
    transition: true,
    modifiers: modifiers2,
    onKeyDown: handlePopperKeyDown,
    onMouseLeave: handlePopperMouseLeave
  }, ({ TransitionProps: TransitionProps4 }) => /* @__PURE__ */ React694.createElement(StyledGrow, {
    ...TransitionProps4,
    timeout: "auto"
  }, /* @__PURE__ */ React694.createElement(RcPaper, null, /* @__PURE__ */ React694.createElement(RcSubMenuContext.Provider, {
    value: ctxValue
  }, /* @__PURE__ */ React694.createElement(ClickAwayListener_default, {
    onClickAway: handlePopperClickAway
  }, /* @__PURE__ */ React694.createElement(MemoMenuList, {
    ...MenuListProps,
    autoFocusItem: true
  }, children2)))))));
});
var RcSubMenu = styled_components_default(_RcSubMenu)`
  ${SubMenuStyle};
`;
RcSubMenu.defaultProps = {};
RcSubMenu.displayName = "RcSubMenu";

// src/components/Forms/Select/PlainSelect/utils/PlainSelectUtils.tsx
var RcPlainSelectInputClasses = RcClasses(["root", "input"], "RcPlainSelectInput");
var RcPlainSelectTouchRippleClasses = RcClasses(["child", "root"], "RcPlainSelect-TouchRipple");
function switchVariantToButtonVariant(variant) {
  switch (variant) {
    case "plainIcon":
      return "plain";
    case "round":
      return "text";
    default:
      return variant;
  }
}

// src/components/Forms/Select/PlainSelect/styles/StyledSelect.tsx
var roundVariant = ["round", "plainIcon"];
var plainSelectStyle = ({
  variant,
  disabled: disabled3
}) => {
  const isText = variant === "text";
  const isRound = roundVariant.includes(variant);
  return css2`
    width: auto;

    ${RcButton} {
      ${RcIcon} {
        margin-right: 0;
      }
    }

    ${RcListItemText} {
      margin-right: 0;
    }

    .${RcTextFieldClasses.root} {
      margin-bottom: 0;
    }

    .${RcPlainSelectInputClasses.root} {
      width: auto;
      pointer-events: none;
    }

    .${RcPlainSelectInputClasses.input} {
      padding: 0;
      height: auto;
    }

    ${RcButton} {
      pointer-events: ${!disabled3 && "auto"};
      min-width: unset;
      padding-left: ${spacing2(isText ? 4 : 1)};
      padding-right: ${spacing2(isText ? 1 : 0)};
      border-radius: ${isRound && radius3("xxl")};

      ${SelectArrowDownIcon} {
        margin: ${spacing2(0, 0, 0, isRound ? 0 : 1)};
      }

      ${isRound && css2`
        padding-top: ${spacing2(1.5)};
        padding-bottom: ${spacing2(1.5)};

        ${focusVisible}, &.Mui-focusVisible {
          .${RcPlainSelectTouchRippleClasses.root} {
            background-color: currentColor;
            opacity: ${opacity3("32")};
          }
          .${RcPlainSelectTouchRippleClasses.child} {
            display: none;
          }
        }
      `}
    }
  `;
};

// src/components/Forms/Select/PlainSelect/PlainSelect.tsx
var defaultButtonProps = {
  TouchRippleProps: { classes: RcPlainSelectTouchRippleClasses }
};
var EmptyIcon2 = () => null;
var displayName = "RcPlainSelect";
var plainAnchorOrigin = {
  horizontal: "left",
  vertical: "bottom"
};
var _RcPlainSelect = forwardRef610(({
  children: children2,
  className,
  classes,
  value: valueProp,
  defaultValue,
  renderValue,
  variant,
  ButtonProps,
  innerRef,
  SelectInputProps: SelectInputProps2,
  InputProps,
  disabled: disabled3,
  autoFocus,
  size,
  virtualize,
  fullWidth,
  color: color2,
  IconComponent,
  onOpen: onOpenProp,
  onClose: onCloseProp,
  onChange: onChangeProp,
  ...rest
}, ref2) => {
  const [value, setValue] = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: displayName
  });
  const [open, setOpen] = useState43(false);
  const isEmpty3 = !hasValue2(value);
  if (isEmpty3) {
    logInDev({
      component: displayName,
      message: "[Juno]: Plain Select must have init value",
      level: "error"
    });
  }
  const display = useMemo80(() => {
    const item = children2.find((child) => {
      return child.props["value"] === value;
    });
    return item?.props["children"];
  }, [children2, value]);
  const _renderValue = (newValue) => {
    const _variant = switchVariantToButtonVariant(variant);
    return /* @__PURE__ */ React695.createElement(RcButton, {
      ref: ref2,
      innerRef,
      disabled: disabled3,
      size,
      color: color2,
      fullWidth,
      autoFocus,
      variant: _variant,
      "aria-label": "open menu",
      "aria-haspopup": "listbox",
      ...combineProps(defaultButtonProps, ButtonProps)
    }, renderValue ? renderValue(newValue) : display, IconComponent && /* @__PURE__ */ React695.createElement(IconComponent, {
      open
    }) || /* @__PURE__ */ React695.createElement(SelectArrowDownIcon, {
      color: void 0,
      className: open ? "MuiSelect-iconOpen" : ""
    }));
  };
  const _SelectInputProps = useMemo80(() => {
    return combineProps({
      MenuComponent: virtualize ? RcVirtualizedMenu : RcMenu,
      MenuProps: {
        anchorOrigin: plainAnchorOrigin
      },
      SelectDisplayProps: {
        tabIndex: void 0,
        "aria-haspopup": void 0,
        role: void 0
      }
    }, SelectInputProps2);
  }, [SelectInputProps2, virtualize]);
  const _InputProps = useMemo80(() => {
    return combineProps({
      classes: RcPlainSelectInputClasses,
      disableUnderline: true
    }, InputProps);
  }, [InputProps]);
  return /* @__PURE__ */ React695.createElement(RcSelect, {
    className,
    value,
    variant: "none",
    disabled: disabled3,
    IconComponent: EmptyIcon2,
    onOpen: (e2) => {
      setOpen(true);
      onOpenProp?.(e2);
    },
    onClose: (e2) => {
      setOpen(false);
      onCloseProp?.(e2);
    },
    onChange: (e2, v2) => {
      setValue(e2.target.value);
      onChangeProp?.(e2, v2);
    },
    SelectInputProps: _SelectInputProps,
    InputProps: _InputProps,
    renderValue: _renderValue,
    fullWidth,
    color: color2,
    ...rest
  }, children2);
});
var RcPlainSelect = styled_components_default(_RcPlainSelect)`
  ${plainSelectStyle}
`;
RcPlainSelect.defaultProps = {
  variant: "text",
  size: "medium"
};
RcPlainSelect.displayName = displayName;

// src/components/Forms/Slider/Slider.tsx
import React696, { forwardRef as forwardRef611, useMemo as useMemo81 } from "react";

// src/components/Forms/Slider/utils/SliderUtil.ts
var RcSliderClasses = RcClasses(["thumb", "active", "trackInverted", "track", "focusVisible", "disabled"], "RcSlider");

// src/components/Forms/Slider/styles/SliderStyle.tsx
var SliderStyle = (props) => {
  const [currColor, contrastBgColor] = getContrastBgColor(props);
  const actionThumbColor = setOpacity(currColor, "16");
  return css2`
    color: ${currColor};

    &.${RcSliderClasses.trackInverted} {
      .${RcSliderClasses.track} {
        background-color: ${contrastBgColor};
      }
    }

    .${RcSliderClasses.thumb} {
      &.${RcSliderClasses.focusVisible} {
        box-shadow: 0 0 0 8px ${actionThumbColor};
      }

      ${nonTouchHoverMedia} {
        &:hover {
          box-shadow: 0 0 0 8px ${actionThumbColor};
        }
      }

      &.${RcSliderClasses.active} {
        box-shadow: 0 0 0 14px ${actionThumbColor};
      }
    }

    &.${RcSliderClasses.disabled} {
      color: ${palette22("disabled", "f02")};
    }
  `;
};

// src/components/Forms/Slider/Slider.tsx
var _RcSlider = forwardRef611((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcSlider" });
  const { classes: classesProp, color: color2, children: children2, ...rest } = props;
  const classes = useMemo81(() => combineClasses(RcSliderClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React696.createElement(Slider_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcSlider = styled_components_default(_RcSlider)`
  ${SliderStyle}
`;
RcSlider.defaultProps = {
  valueLabelDisplay: "auto",
  color: "interactive.f01"
};
RcSlider.displayName = "RcSlider";

// src/components/Forms/Textarea/Textarea.tsx
import React697, { forwardRef as forwardRef612, useMemo as useMemo82 } from "react";

// src/components/Forms/Textarea/utils/TextareaUtils.ts
var RcTextareaInputClasses = RcClasses(["inputMultiline", "root"], "RcTextareaInput");

// src/components/Forms/Textarea/styles/TextareaStyle.tsx
var TextareaStyle = ({
  disabled: disabled3
}) => {
  return css2`
    .${RcTextareaInputClasses.inputMultiline} {
      margin: ${spacing2(1)} 0 0 0;

      background: ${palette22("neutral", "b03")};
      ${fakeBorder()};
      ${!disabled3 && css2`
        ${nonTouchHoverMedia} {
          &:hover {
            background: transparent;
          }
        }
      `};
    }

    .${RcTextareaInputClasses.root} {
      padding: 0;
    }
  `;
};

// src/components/Forms/Textarea/Textarea.tsx
var _RcTextarea = forwardRef612((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTextarea" });
  const {
    classes,
    InputProps: InputPropsProp,
    rows: rowsProp,
    minRows,
    maxRows,
    ...rest
  } = props;
  const InputProps = useMemo82(() => combineProps({
    classes: RcTextareaInputClasses
  }, InputPropsProp), [InputPropsProp]);
  let rows = rowsProp;
  if (minRows || maxRows) {
    rows = void 0;
  }
  return /* @__PURE__ */ React697.createElement(RcTextField, {
    ...rest,
    rows,
    minRows,
    maxRows,
    multiline: true,
    InputProps,
    clearBtn: false,
    ref: ref2
  });
});
var RcTextarea = styled_components_default(_RcTextarea)`
  ${TextareaStyle}
`;
RcTextarea.defaultProps = {
  rows: 3
};
RcTextarea.displayName = "RcTextarea";

// src/components/Grid/Grid.tsx
import React698, { forwardRef as forwardRef613, useMemo as useMemo83 } from "react";

// src/components/Grid/styles/GridStyle.tsx
var GridStyle = () => {
  return css2``;
};

// src/components/Grid/utils/GridUtils.ts
var RcGridClasses = RcClasses([], "RcGrid");

// src/components/Grid/Grid.tsx
var _RcGrid = forwardRef613((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcGrid" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo83(() => combineClasses(RcGridClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React698.createElement(Grid_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcGrid = styled_components_default(_RcGrid)`
  ${GridStyle}
`;
RcGrid.defaultProps = {};
RcGrid.displayName = "RcGrid";

// src/components/Hidden/Hidden.tsx
var RcHidden = Hidden_default;
RcHidden.displayName = "RcHidden";

// src/components/ImageView/ImageView.tsx
var import_cloneDeep = __toModule(require_cloneDeep());
var import_values = __toModule(require_values());
import React699, {
  createRef
} from "react";
var StyledLoadingPage = styled_components_default.div`
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
`;
var StyledBackground = styled_components_default.div`
  display: block;
  overflow: hidden;
  box-shadow: ${({ theme }) => theme.shadows[7]};
  visibility: ${({ visibility: visibility2 }) => visibility2};
  user-select: none;
  height: ${({ height: height2 }) => height2}px;
  width: ${({ width: width2 }) => width2}px;
`;
var HiddenImage = styled_components_default.img`
  visibility: hidden;
  display: none;
`;
function isThumbnailMode(props) {
  return props.thumbnailSrc && props.thumbnailSrc !== props.src;
}
var _RcImageView = class extends React699.Component {
  _imageRef = createRef();
  _canvasRef = createRef();
  constructor(props) {
    super(props);
    const { performanceTracerStart } = this.props;
    performanceTracerStart?.();
    this.state = this.getInitState(props);
    const { width: width2, height: height2, onSizeLoad } = this.props;
    if (width2 && height2 && onSizeLoad) {
      onSizeLoad?.(Number(width2), Number(height2));
    }
  }
  getInitState(props) {
    if (isThumbnailMode(props)) {
      return (0, import_cloneDeep.default)(_RcImageView.initThumbnailModeState);
    }
    return (0, import_cloneDeep.default)(_RcImageView.initState);
  }
  getImageRef = () => this.props.imageRef || this._imageRef;
  _errorView() {
    if (!this.error) {
      return null;
    }
    return /* @__PURE__ */ React699.createElement(StyledLoadingPage, null, /* @__PURE__ */ React699.createElement(RcIcon, {
      size: "xxxlarge",
      color: "neutral.f02",
      symbol: ImageBroken_default
    }));
  }
  _hiddenRawLoader() {
    const { loadings, errors, currentShow } = this.state;
    const { onSizeLoad, src } = this.props;
    return currentShow !== "raw" && /* @__PURE__ */ React699.createElement(HiddenImage, {
      src,
      onLoad: (event) => {
        const { naturalWidth, naturalHeight } = event.currentTarget;
        onSizeLoad?.(naturalWidth, naturalHeight);
        this.setState({
          loadings: {
            ...loadings,
            raw: false
          },
          currentShow: "raw"
        });
      },
      onError: () => {
        this.setState({
          loadings: {
            ...loadings,
            raw: false
          },
          errors: {
            ...errors,
            raw: true
          }
        });
      }
    });
  }
  get error() {
    const { errors } = this.state;
    return (0, import_values.default)(errors).every((status) => status);
  }
  _drawToCanvas = (imgBitmap) => {
    const canvasE = this._canvasRef.current;
    if (!canvasE) {
      return;
    }
    const ctx = canvasE.getContext("2d");
    if (ctx) {
      if (!imgBitmap) {
        return;
      }
      const { width: naturalWidth, height: naturalHeight } = imgBitmap;
      canvasE.width = naturalWidth;
      canvasE.height = naturalHeight;
      ctx.drawImage(imgBitmap, 0, 0, naturalWidth, naturalHeight, 0, 0, naturalWidth, naturalHeight);
    }
  };
  _loadHandler = async (event) => {
    const { loadings, currentShow } = this.state;
    const { onSizeLoad, onLoad } = this.props;
    if (currentShow === "raw") {
      const { naturalWidth, naturalHeight } = event.currentTarget;
      onSizeLoad?.(naturalWidth, naturalHeight);
      onLoad?.();
      const { performanceTracerEnd } = this.props;
      performanceTracerEnd?.();
    }
    this.setState({
      loadings: {
        ...loadings,
        [currentShow]: false
      }
    });
    if (!this._canvasRef.current) {
      return;
    }
    const target = event.target;
    if ("createImageBitmap" in window) {
      const bitmap = await createImageBitmap(target);
      this._drawToCanvas(bitmap);
    } else {
      this._drawToCanvas(target);
    }
  };
  _errorHandler = () => {
    const { loadings, errors, currentShow } = this.state;
    const { onError } = this.props;
    if (currentShow === "raw") {
      onError?.();
    }
    this.setState({
      loadings: {
        ...loadings,
        [currentShow]: false
      },
      errors: {
        ...errors,
        [currentShow]: true
      }
    });
    onError?.();
  };
  get _imageAttributes() {
    const {
      onSizeLoad,
      onLoad,
      onError,
      loadingPlaceHolder,
      imageRef: viewRef,
      thumbnailSrc,
      src,
      performanceTracerEnd,
      performanceTracerStart,
      ...rest
    } = this.props;
    return { ...rest, ref: this.getImageRef() };
  }
  rawImageLoader = () => {
    const { currentShow } = this.state;
    const { thumbnailSrc, src } = this.props;
    const currentShowSrc = currentShow === "raw" ? src : thumbnailSrc;
    if (!currentShowSrc) {
      return null;
    }
    const pathName = new URL(currentShowSrc).pathname;
    const isGif = /\.gif$/.test(pathName);
    if (isGif) {
      return /* @__PURE__ */ React699.createElement("img", {
        src: currentShowSrc,
        alt: "",
        onLoad: this._loadHandler,
        onError: this._errorHandler,
        ...this._imageAttributes
      });
    }
    return /* @__PURE__ */ React699.createElement(React699.Fragment, null, this.canvasRenderer(), /* @__PURE__ */ React699.createElement(HiddenImage, {
      src: currentShowSrc,
      onLoad: this._loadHandler,
      onError: this._errorHandler
    }));
  };
  canvasRenderer = () => {
    return /* @__PURE__ */ React699.createElement(StyledBackground, {
      ...this._imageAttributes,
      visibility: this.error ? "hidden" : "visible"
    }, /* @__PURE__ */ React699.createElement("canvas", {
      ref: this._canvasRef,
      style: { width: "100%" }
    }));
  };
  render() {
    return /* @__PURE__ */ React699.createElement(React699.Fragment, null, this.rawImageLoader(), this._hiddenRawLoader(), this._errorView());
  }
};
var RcImageView = _RcImageView;
__publicField(RcImageView, "initState", {
  loadings: {
    raw: true
  },
  errors: {
    raw: false
  },
  currentShow: "raw"
});
__publicField(RcImageView, "initThumbnailModeState", {
  loadings: {
    raw: true,
    thumbnail: true
  },
  errors: {
    raw: false,
    thumbnail: false
  },
  currentShow: "thumbnail"
});

// src/components/InlineEditable/InlineEditable.tsx
import React700, {
  forwardRef as forwardRef614,
  useEffect as useEffect61,
  useMemo as useMemo84,
  useRef as useRef93,
  useState as useState44
} from "react";
var import_isString2 = __toModule(require_isString());
var import_trimEnd = __toModule(require_trimEnd());

// src/components/InlineEditable/utils/InlineEditableUtils.ts
var RcInlineEditableClasses = RcClasses(["label", "placeholder", "textField", "saving"], "RcInlineEditable");

// src/components/InlineEditable/styles/textFieldStyle.tsx
var interactionStyle = css2`
  background-color: ${palette22("neutral", "b01")};
`;
var baseInputStyles = css2`
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: ${radius3("lg")};

  ::placeholder {
    font: inherit;
    opacity: 0;
    color: ${palette22("neutral", "f03")};
  }

  &:hover {
    ${interactionStyle};
    border: 1px solid ${palette22("neutral", "l02")};
  }

  &:focus {
    ${interactionStyle};
    border: 2px solid ${palette22("interactive", "f01")};
    color: inherit;

    ::placeholder {
      opacity: 1;
    }

    & ~ .${RcInlineEditableClasses.label} {
      visibility: hidden;
    }
  }
`;
var inputStyle = css2`
  ${baseInputStyles}
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
`;
var textareaStyle = css2`
  ${baseInputStyles};
  height: 100%;
  overflow: hidden;
  resize: none;
`;

// src/components/InlineEditable/styles/InlineEditableStyle.tsx
var InlineEditableStyle = ({ variant, multiline, fullWidth, disabled: disabled3, color: color2 }) => {
  return css2`
      ${typography4(variant)};
      position: relative;
      display: inline-block;
      width: ${multiline || fullWidth ? "100%" : "auto"};
      min-width: 32px;
      margin: -4px;
      color: ${getParsePaletteColor(color2)};

      &.${RcInlineEditableClasses.saving} {
        pointer-events: none;
      }

      .${RcInlineEditableClasses.label} {
        margin: 4px;
        position: relative;
        outline: none;
        box-sizing: border-box;
        pointer-events: ${disabled3 ? "initial" : "none"};
        ${ellipsis()};
        overflow-wrap: ${multiline && "anywhere"};
        white-space: ${multiline ? "pre-wrap" : "pre"};

        ${""}
        ::after {
          content: ' ';
          width: 0;
          visibility: hidden;
          display: inline-block;
        }

        ${""}
        user-select: ${!disabled3 && "none"};
      }

      .${RcInlineEditableClasses.placeholder} {
        ${""}
        user-select: none;
        color: ${placeholderColor};
      }

      .${RcInlineEditableClasses.textField} {
        ${multiline ? textareaStyle : inputStyle}
      }
    `;
};

// src/components/InlineEditable/InlineEditable.tsx
var _RcInlineEditable = forwardRef614((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcInlineEditable" });
  const {
    onSave,
    automationId,
    tooltipTitle,
    shouldRemoveNode = true,
    TooltipProps,
    onChange,
    onKeyDown,
    onFocus,
    onBlur,
    onMouseDown,
    value,
    variant,
    multiline,
    disabled: disabled3,
    maxLength,
    placeholder: placeholder2,
    fullWidth,
    title,
    classes: classesProp,
    color: color2,
    className,
    saving: savingProp,
    inputProps,
    ...rest
  } = props;
  const [isEditing, setEditing] = useState44(false);
  const [isSaving, setSaving] = useState44(false);
  const [draftRef, setDraft] = useRefState("");
  const isNotNeedSaveWhenBlurRef = useRef93(false);
  const textFieldRef = useRef93();
  const labelRef = useRef93(null);
  const saving = isSaving || savingProp;
  const handleSave = async (newValue, reason) => {
    const outputValue = multiline ? (0, import_trimEnd.default)(newValue) : newValue.trim();
    if (value !== newValue) {
      if (onChange) {
        onChange?.(outputValue, reason);
      } else if (onSave) {
        setSaving(true);
        await onSave?.(outputValue);
        setSaving(false);
      }
    }
  };
  const handleKeyDown2 = useEventCallback2((e2) => {
    onKeyDown?.(e2);
    const { key, shiftKey } = e2;
    if (!isEditing || multiline && key === "Enter" && shiftKey) {
      return;
    }
    const moveFocus2 = () => {
      e2.stopPropagation();
      e2.preventDefault();
      if (textFieldRef.current) {
        isNotNeedSaveWhenBlurRef.current = true;
        textFieldRef.current.blur();
        labelRef.current?.focus({ preventScroll: true });
      }
    };
    switch (key) {
      case "Enter":
        moveFocus2();
        handleSave(draftRef.current, "confirm");
        break;
      case "Escape":
        moveFocus2();
        break;
      default:
        break;
    }
  });
  const handleFocus = useEventCallback2((e2) => {
    onFocus?.(e2);
    setEditing(true);
  });
  const focusTextField = useEventCallback2((e2) => {
    if (e2.key === "Enter") {
      textFieldRef.current?.focus({ preventScroll: true });
      e2.preventDefault();
    }
  });
  const handleBlur = useEventCallback2((e2) => {
    onBlur?.(e2);
    clearWindowSelection();
    const isNeedSave = !isNotNeedSaveWhenBlurRef.current;
    if (isNeedSave) {
      handleSave(draftRef.current, "leave");
    }
    setEditing(false);
    isNotNeedSaveWhenBlurRef.current = false;
  });
  const handleMouseDown = useEventCallback2((e2) => {
    onMouseDown?.(e2);
    if (disabled3)
      return;
    setEditing(true);
  });
  const handleDraftChange = useEventCallback2((e2) => {
    setDraft(e2.target.value);
  });
  const handleFocusCapture = useEventCallback2((e2) => {
    e2.stopPropagation();
  });
  const classes = useMemo84(() => combineClasses(RcInlineEditableClasses, classesProp), [classesProp]);
  useEffect61(() => {
    return () => {
      if (shouldRemoveNode && textFieldRef && textFieldRef.current) {
        clearReactReferencesInNode(textFieldRef.current);
      }
    };
  }, []);
  const Component7 = multiline ? "textarea" : "input";
  useDepsChange(() => {
    if (!(isEditing || saving)) {
      setDraft(value, false);
    }
  }, [isEditing, saving, value]);
  const draft = draftRef.current;
  const displayValue = isEditing || saving ? draft : value;
  const toTooltipTitle = ((0, import_isString2.default)(TooltipProps?.title) ? TooltipProps?.title : void 0) ?? tooltipTitle;
  const children2 = /* @__PURE__ */ React700.createElement("div", {
    ref: ref2,
    "data-test-automation-id": automationId,
    onKeyDown: handleKeyDown2,
    className: clsx_m_default(className, {
      [classes.saving]: saving
    }),
    onMouseDown: handleMouseDown,
    ...rest
  }, disabled3 ? null : /* @__PURE__ */ React700.createElement(Component7, {
    ref: textFieldRef,
    value: draft,
    autoComplete: "off",
    maxLength,
    placeholder: placeholder2,
    ...{
      ...multiline ? {} : {
        type: "text",
        "aria-label": toTooltipTitle
      }
    },
    ...combineProps({
      onChange: handleDraftChange,
      onFocus: handleFocus,
      onBlurCapture: handleBlur,
      className: classes.textField
    }, inputProps)
  }), /* @__PURE__ */ React700.createElement("div", {
    ref: labelRef,
    title: title || displayValue,
    className: clsx_m_default(classes.label, {
      [classes.placeholder]: !displayValue
    }),
    tabIndex: -1,
    onFocusCapture: handleFocusCapture,
    onKeyDown: disabled3 || saving ? void 0 : focusTextField
  }, displayValue || placeholder2));
  if (!disabled3 && toTooltipTitle && (TooltipProps || tooltipTitle)) {
    return /* @__PURE__ */ React700.createElement(RcTooltip, {
      tooltipForceHide: isEditing,
      disableFocusListener: true,
      ...TooltipProps,
      title: toTooltipTitle
    }, children2);
  }
  return children2;
});
var RcInlineEditable = styled_components_default(_RcInlineEditable)`
  ${InlineEditableStyle}
`;
RcInlineEditable.defaultProps = {
  variant: "body1",
  color: "neutral.f06"
};
RcInlineEditable.displayName = "RcInlineEditable";

// src/components/Link/Link.tsx
import React701, { forwardRef as forwardRef615 } from "react";

// src/components/Link/utils/LinkUtils.ts
var RcLinkTypographies = {
  small: "caption1",
  medium: "body1",
  large: "headline1"
};

// src/components/Link/styles/StyledLink.tsx
var LinkStyle = ({
  disabled: disabled3,
  color: colorProp,
  size,
  underline,
  variant
}) => {
  const color2 = disabled3 ? palette22("disabled", "f02") : colorProp === "primary" ? palette22("informative", "f02") : getParsePaletteColor(colorProp);
  return css2`
    text-decoration: ${underline ? "underline" : "none"};
    ${typography4(RcLinkTypographies[size] || variant)};
    color: ${color2};

    &:focus {
      outline: none;
    }

    ${focusVisible} {
      text-decoration: underline;
    }

    ${!disabled3 ? css2`
          cursor: pointer;

          ${nonTouchHoverMedia} {
            &:hover {
              text-decoration: underline;
            }
          }

          &:active {
            color: ${setOpacity(color2, "24", true)};
          }
        ` : css2`
          pointer-events: none;
        `};
  `;
};

// src/components/Link/Link.tsx
var _RcLink = forwardRef615((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcLink" });
  const {
    handleOnClick: _handleOnClick,
    Component: ComponentProp,
    onKeyDown,
    onClick,
    disabled: disabled3,
    children: children2,
    tabIndex,
    color: color2,
    underline,
    variant,
    ...rest
  } = props;
  const handleOnClick = _handleOnClick ? _handleOnClick : onClick;
  const handleOnKeyDown = useA11yKeyEvent(handleOnClick, {
    checkKeys: ["Enter"]
  });
  const Component7 = ComponentProp;
  return /* @__PURE__ */ React701.createElement(Component7, {
    ...rest,
    tabIndex: disabled3 ? -1 : tabIndex,
    ref: ref2,
    onClick: handleOnClick,
    onKeyDown: onKeyDown || handleOnKeyDown
  }, children2);
});
var RcLink = styled_components_default(withDeprecatedCheck(_RcLink, [
  {
    prop: "size",
    time: "2021-4",
    comment: `@deprecated size of Link, default is medium, please use variant directly
   * \`small\` => \`caption1\`
   * \`medium\` => \`body1\`
   * \`large\` => \`headline1\`
   */`
  },
  {
    prop: "handleOnClick",
    time: "2021-4",
    comment: `@deprecated use onClick replace that */`
  }
], "RcLink"))`
  ${LinkStyle}
`;
RcLink.defaultProps = {
  variant: "body1",
  color: "informative.f02",
  disabled: false,
  Component: "a"
};
RcLink.displayName = "RcLink";

// src/components/Loading/Loading.tsx
import React703 from "react";

// src/components/Loading/styles/StyledLoadingPage.tsx
import React702 from "react";
var StyledLoadingPage2 = styled_components_default.div`
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 0px;
  left: 0px;
  opacity: ${({ backgroundType }) => backgroundType ? opacity3("40", true) : 1};
  background: ${palette22("neutral", "b01")};
  z-index: 1000;
`;
var RcDefaultLoadingWithDelay = withDelay(({ backgroundType, size, disableShrink }) => /* @__PURE__ */ React702.createElement(StyledLoadingPage2, {
  "data-test-automation-id": "loading-page",
  backgroundType
}, /* @__PURE__ */ React702.createElement(RcCircularProgress, {
  size,
  disableShrink
})));

// src/components/Loading/Loading.tsx
var RcLoading = (inProps) => {
  const props = useThemeProps({ props: inProps, name: "RcLoading" });
  const {
    LoadingComponent = RcDefaultLoadingWithDelay,
    keepVisible = true,
    keepMounted = true,
    loading,
    LoadingProps: {
      delay = 0,
      backgroundType = "mask",
      size = 42,
      ...LoadingProps
    } = {},
    children: children2
  } = props;
  const childrenWhenLoading = !keepMounted && loading ? null : children2;
  const getCloneNode = () => {
    if (childrenWhenLoading && React703.isValidElement(childrenWhenLoading) && childrenWhenLoading.type !== React703.Fragment) {
      return /* @__PURE__ */ React703.createElement(RcBox, {
        clone: true,
        display: "none"
      }, childrenWhenLoading);
    }
    logInDev({
      component: "RcLoading",
      message: "please confirm your children is a valid html element to set style, when you use `keepVisible=false`"
    });
    return childrenWhenLoading;
  };
  return /* @__PURE__ */ React703.createElement(React703.Fragment, null, loading && /* @__PURE__ */ React703.createElement(LoadingComponent, {
    delay,
    backgroundType,
    size,
    ...LoadingProps
  }), keepVisible || !loading ? childrenWhenLoading : getCloneNode());
};

// src/components/Pagination/Pagination/Pagination.tsx
import React710, { forwardRef as forwardRef618, useMemo as useMemo85 } from "react";

// node_modules/@material-ui/lab/esm/Pagination/Pagination.js
var import_prop_types123 = __toModule(require_prop_types());
import {
  createElement as createElement130,
  forwardRef as forwardRef617
} from "react";

// node_modules/@material-ui/lab/esm/Pagination/usePagination.js
function usePagination() {
  var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _props$boundaryCount = props.boundaryCount, boundaryCount = _props$boundaryCount === void 0 ? 1 : _props$boundaryCount, _props$componentName = props.componentName, componentName2 = _props$componentName === void 0 ? "usePagination" : _props$componentName, _props$count = props.count, count2 = _props$count === void 0 ? 1 : _props$count, _props$defaultPage = props.defaultPage, defaultPage = _props$defaultPage === void 0 ? 1 : _props$defaultPage, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, _props$hideNextButton = props.hideNextButton, hideNextButton = _props$hideNextButton === void 0 ? false : _props$hideNextButton, _props$hidePrevButton = props.hidePrevButton, hidePrevButton = _props$hidePrevButton === void 0 ? false : _props$hidePrevButton, handleChange = props.onChange, pageProp = props.page, _props$showFirstButto = props.showFirstButton, showFirstButton = _props$showFirstButto === void 0 ? false : _props$showFirstButto, _props$showLastButton = props.showLastButton, showLastButton = _props$showLastButton === void 0 ? false : _props$showLastButton, _props$siblingCount = props.siblingCount, siblingCount = _props$siblingCount === void 0 ? 1 : _props$siblingCount, other = _objectWithoutProperties(props, ["boundaryCount", "componentName", "count", "defaultPage", "disabled", "hideNextButton", "hidePrevButton", "onChange", "page", "showFirstButton", "showLastButton", "siblingCount"]);
  var _useControlled = useControlled({
    controlled: pageProp,
    default: defaultPage,
    name: componentName2,
    state: "page"
  }), _useControlled2 = _slicedToArray(_useControlled, 2), page = _useControlled2[0], setPageState = _useControlled2[1];
  var handleClick = function handleClick2(event, value) {
    if (!pageProp) {
      setPageState(value);
    }
    if (handleChange) {
      handleChange(event, value);
    }
  };
  var range = function range2(start3, end2) {
    var length = end2 - start3 + 1;
    return Array.from({
      length
    }, function(_18, i2) {
      return start3 + i2;
    });
  };
  var startPages = range(1, Math.min(boundaryCount, count2));
  var endPages = range(Math.max(count2 - boundaryCount + 1, boundaryCount + 1), count2);
  var siblingsStart = Math.max(Math.min(page - siblingCount, count2 - boundaryCount - siblingCount * 2 - 1), boundaryCount + 2);
  var siblingsEnd = Math.min(Math.max(page + siblingCount, boundaryCount + siblingCount * 2 + 2), endPages[0] - 2);
  var itemList = [].concat(_toConsumableArray(showFirstButton ? ["first"] : []), _toConsumableArray(hidePrevButton ? [] : ["previous"]), _toConsumableArray(startPages), _toConsumableArray(siblingsStart > boundaryCount + 2 ? ["start-ellipsis"] : boundaryCount + 1 < count2 - boundaryCount ? [boundaryCount + 1] : []), _toConsumableArray(range(siblingsStart, siblingsEnd)), _toConsumableArray(siblingsEnd < count2 - boundaryCount - 1 ? ["end-ellipsis"] : count2 - boundaryCount > boundaryCount ? [count2 - boundaryCount] : []), _toConsumableArray(endPages), _toConsumableArray(hideNextButton ? [] : ["next"]), _toConsumableArray(showLastButton ? ["last"] : []));
  var buttonPage = function buttonPage2(type3) {
    switch (type3) {
      case "first":
        return 1;
      case "previous":
        return page - 1;
      case "next":
        return page + 1;
      case "last":
        return count2;
      default:
        return null;
    }
  };
  var items = itemList.map(function(item) {
    return typeof item === "number" ? {
      onClick: function onClick(event) {
        handleClick(event, item);
      },
      type: "page",
      page: item,
      selected: item === page,
      disabled: disabled3,
      "aria-current": item === page ? "true" : void 0
    } : {
      onClick: function onClick(event) {
        handleClick(event, buttonPage(item));
      },
      type: item,
      page: buttonPage(item),
      selected: false,
      disabled: disabled3 || item.indexOf("ellipsis") === -1 && (item === "next" || item === "last" ? page >= count2 : page <= 1)
    };
  });
  return _extends({
    items
  }, other);
}

// node_modules/@material-ui/lab/esm/PaginationItem/PaginationItem.js
var import_prop_types122 = __toModule(require_prop_types());
import {
  createElement as createElement129,
  forwardRef as forwardRef616
} from "react";

// node_modules/@material-ui/lab/esm/internal/svg-icons/FirstPage.js
import {
  createElement as createElement125
} from "react";
var FirstPage_default = createSvgIcon(/* @__PURE__ */ createElement125("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage");

// node_modules/@material-ui/lab/esm/internal/svg-icons/LastPage.js
import {
  createElement as createElement126
} from "react";
var LastPage_default = createSvgIcon(/* @__PURE__ */ createElement126("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage");

// node_modules/@material-ui/lab/esm/internal/svg-icons/NavigateBefore.js
import {
  createElement as createElement127
} from "react";
var NavigateBefore_default = createSvgIcon(/* @__PURE__ */ createElement127("path", {
  d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "NavigateBefore");

// node_modules/@material-ui/lab/esm/internal/svg-icons/NavigateNext.js
import {
  createElement as createElement128
} from "react";
var NavigateNext_default = createSvgIcon(/* @__PURE__ */ createElement128("path", {
  d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "NavigateNext");

// node_modules/@material-ui/lab/esm/PaginationItem/PaginationItem.js
var styles151 = function styles152(theme) {
  return {
    root: _extends({}, theme.typography.body2, {
      borderRadius: 32 / 2,
      textAlign: "center",
      boxSizing: "border-box",
      minWidth: 32,
      height: 32,
      padding: "0 6px",
      margin: "0 3px",
      color: theme.palette.text.primary
    }),
    page: {
      transition: theme.transitions.create(["color", "background-color"], {
        duration: theme.transitions.duration.short
      }),
      "&:hover": {
        backgroundColor: theme.palette.action.hover,
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      },
      "&$focusVisible": {
        backgroundColor: theme.palette.action.focus
      },
      "&$selected": {
        backgroundColor: theme.palette.action.selected,
        "&:hover, &$focusVisible": {
          backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: theme.palette.action.selected
          }
        },
        "&$disabled": {
          opacity: 1,
          color: theme.palette.action.disabled,
          backgroundColor: theme.palette.action.selected
        }
      },
      "&$disabled": {
        opacity: theme.palette.action.disabledOpacity
      }
    },
    sizeSmall: {
      minWidth: 26,
      height: 26,
      borderRadius: 26 / 2,
      margin: "0 1px",
      padding: "0 4px",
      "& $icon": {
        fontSize: theme.typography.pxToRem(18)
      }
    },
    sizeLarge: {
      minWidth: 40,
      height: 40,
      borderRadius: 40 / 2,
      padding: "0 10px",
      fontSize: theme.typography.pxToRem(15),
      "& $icon": {
        fontSize: theme.typography.pxToRem(22)
      }
    },
    textPrimary: {
      "&$selected": {
        color: theme.palette.primary.contrastText,
        backgroundColor: theme.palette.primary.main,
        "&:hover, &$focusVisible": {
          backgroundColor: theme.palette.primary.dark,
          "@media (hover: none)": {
            backgroundColor: theme.palette.primary.main
          }
        },
        "&$disabled": {
          color: theme.palette.action.disabled
        }
      }
    },
    textSecondary: {
      "&$selected": {
        color: theme.palette.secondary.contrastText,
        backgroundColor: theme.palette.secondary.main,
        "&:hover, &$focusVisible": {
          backgroundColor: theme.palette.secondary.dark,
          "@media (hover: none)": {
            backgroundColor: theme.palette.secondary.main
          }
        },
        "&$disabled": {
          color: theme.palette.action.disabled
        }
      }
    },
    outlined: {
      border: "1px solid ".concat(theme.palette.type === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"),
      "&$selected": {
        "&$disabled": {
          border: "1px solid ".concat(theme.palette.action.disabledBackground)
        }
      }
    },
    outlinedPrimary: {
      "&$selected": {
        color: theme.palette.primary.main,
        border: "1px solid ".concat(alpha(theme.palette.primary.main, 0.5)),
        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),
        "&:hover, &$focusVisible": {
          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity + theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        "&$disabled": {
          color: theme.palette.action.disabled
        }
      }
    },
    outlinedSecondary: {
      "&$selected": {
        color: theme.palette.secondary.main,
        border: "1px solid ".concat(alpha(theme.palette.secondary.main, 0.5)),
        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.activatedOpacity),
        "&:hover, &$focusVisible": {
          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.activatedOpacity + theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        "&$disabled": {
          color: theme.palette.action.disabled
        }
      }
    },
    rounded: {
      borderRadius: theme.shape.borderRadius
    },
    ellipsis: {
      height: "auto",
      "&$disabled": {
        opacity: theme.palette.action.disabledOpacity
      }
    },
    focusVisible: {},
    disabled: {},
    selected: {},
    icon: {
      fontSize: theme.typography.pxToRem(20),
      margin: "0 -8px"
    }
  };
};
var PaginationItem = /* @__PURE__ */ forwardRef616(function PaginationItem2(props, ref2) {
  var classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "standard" : _props$color, component = props.component, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, page = props.page, _props$selected = props.selected, selected = _props$selected === void 0 ? false : _props$selected, _props$shape = props.shape, shape2 = _props$shape === void 0 ? "round" : _props$shape, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, _props$type = props.type, type3 = _props$type === void 0 ? "page" : _props$type, _props$variant = props.variant, variant = _props$variant === void 0 ? "text" : _props$variant, other = _objectWithoutProperties(props, ["classes", "className", "color", "component", "disabled", "page", "selected", "shape", "size", "type", "variant"]);
  var theme = useTheme2();
  var normalizedIcons = theme.direction === "rtl" ? {
    previous: NavigateNext_default,
    next: NavigateBefore_default,
    last: FirstPage_default,
    first: LastPage_default
  } : {
    previous: NavigateBefore_default,
    next: NavigateNext_default,
    first: FirstPage_default,
    last: LastPage_default
  };
  var Icon = normalizedIcons[type3];
  return type3 === "start-ellipsis" || type3 === "end-ellipsis" ? /* @__PURE__ */ createElement129("div", {
    ref: ref2,
    className: clsx_m_default(classes.root, classes.ellipsis, disabled3 && classes.disabled, size !== "medium" && classes["size".concat(capitalize(size))])
  }, "\u2026") : /* @__PURE__ */ createElement129(ButtonBase_default, _extends({
    ref: ref2,
    component,
    disabled: disabled3,
    focusVisibleClassName: classes.focusVisible,
    className: clsx_m_default(classes.root, classes.page, classes[variant], classes[shape2], className, color2 !== "standard" && classes["".concat(variant).concat(capitalize(color2))], disabled3 && classes.disabled, selected && classes.selected, size !== "medium" && classes["size".concat(capitalize(size))])
  }, other), type3 === "page" && page, Icon ? /* @__PURE__ */ createElement129(Icon, {
    className: classes.icon
  }) : null);
});
true ? PaginationItem.propTypes = {
  classes: import_prop_types122.default.object.isRequired,
  className: import_prop_types122.default.string,
  color: import_prop_types122.default.oneOf(["standard", "primary", "secondary"]),
  component: import_prop_types122.default.elementType,
  disabled: import_prop_types122.default.bool,
  page: import_prop_types122.default.number,
  selected: import_prop_types122.default.bool,
  shape: import_prop_types122.default.oneOf(["round", "rounded"]),
  size: import_prop_types122.default.oneOf(["small", "medium", "large"]),
  type: import_prop_types122.default.oneOf(["page", "first", "last", "next", "previous", "start-ellipsis", "end-ellipsis"]),
  variant: import_prop_types122.default.oneOf(["text", "outlined"])
} : void 0;
var PaginationItem_default = withStyles_default2(styles151, {
  name: "MuiPaginationItem"
})(PaginationItem);

// node_modules/@material-ui/lab/esm/Pagination/Pagination.js
var styles153 = {
  root: {},
  ul: {
    display: "flex",
    flexWrap: "wrap",
    alignItems: "center",
    padding: 0,
    margin: 0,
    listStyle: "none"
  }
};
function defaultGetAriaLabel(type3, page, selected) {
  if (type3 === "page") {
    return "".concat(selected ? "" : "Go to ", "page ").concat(page);
  }
  return "Go to ".concat(type3, " page");
}
var Pagination = /* @__PURE__ */ forwardRef617(function Pagination2(props, ref2) {
  var boundaryCount = props.boundaryCount, classes = props.classes, className = props.className, _props$color = props.color, color2 = _props$color === void 0 ? "standard" : _props$color, count2 = props.count, defaultPage = props.defaultPage, disabled3 = props.disabled, _props$getItemAriaLab = props.getItemAriaLabel, getItemAriaLabel = _props$getItemAriaLab === void 0 ? defaultGetAriaLabel : _props$getItemAriaLab, hideNextButton = props.hideNextButton, hidePrevButton = props.hidePrevButton, onChange = props.onChange, page = props.page, _props$renderItem = props.renderItem, renderItem = _props$renderItem === void 0 ? function(item) {
    return /* @__PURE__ */ createElement130(PaginationItem_default, item);
  } : _props$renderItem, _props$shape = props.shape, shape2 = _props$shape === void 0 ? "round" : _props$shape, showFirstButton = props.showFirstButton, showLastButton = props.showLastButton, siblingCount = props.siblingCount, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, _props$variant = props.variant, variant = _props$variant === void 0 ? "text" : _props$variant, other = _objectWithoutProperties(props, ["boundaryCount", "classes", "className", "color", "count", "defaultPage", "disabled", "getItemAriaLabel", "hideNextButton", "hidePrevButton", "onChange", "page", "renderItem", "shape", "showFirstButton", "showLastButton", "siblingCount", "size", "variant"]);
  var _usePagination = usePagination(_extends({}, props, {
    componentName: "Pagination"
  })), items = _usePagination.items;
  return /* @__PURE__ */ createElement130("nav", _extends({
    "aria-label": "pagination navigation",
    className: clsx_m_default(classes.root, className),
    ref: ref2
  }, other), /* @__PURE__ */ createElement130("ul", {
    className: classes.ul
  }, items.map(function(item, index4) {
    return /* @__PURE__ */ createElement130("li", {
      key: index4
    }, renderItem(_extends({}, item, {
      color: color2,
      "aria-label": getItemAriaLabel(item.type, item.page, item.selected),
      shape: shape2,
      size,
      variant
    })));
  })));
});
true ? Pagination.propTypes = {
  boundaryCount: import_prop_types123.default.number,
  classes: import_prop_types123.default.object,
  className: import_prop_types123.default.string,
  color: import_prop_types123.default.oneOf(["primary", "secondary", "standard"]),
  count: import_prop_types123.default.number,
  defaultPage: import_prop_types123.default.number,
  disabled: import_prop_types123.default.bool,
  getItemAriaLabel: import_prop_types123.default.func,
  hideNextButton: import_prop_types123.default.bool,
  hidePrevButton: import_prop_types123.default.bool,
  onChange: import_prop_types123.default.func,
  page: import_prop_types123.default.number,
  renderItem: import_prop_types123.default.func,
  shape: import_prop_types123.default.oneOf(["round", "rounded"]),
  showFirstButton: import_prop_types123.default.bool,
  showLastButton: import_prop_types123.default.bool,
  siblingCount: import_prop_types123.default.number,
  size: import_prop_types123.default.oneOf(["large", "medium", "small"]),
  variant: import_prop_types123.default.oneOf(["outlined", "text"])
} : void 0;
var Pagination_default = withStyles_default2(styles153, {
  name: "MuiPagination"
})(Pagination);

// src/components/Pagination/Pagination/styles/StyledPagination.tsx
var paginationStyle = () => {
  return css2``;
};

// src/components/Pagination/Pagination/utils/PaginationUtils.ts
var RcPaginationClasses = RcClasses([], "RcPagination");

// src/components/Pagination/Pagination/Pagination.tsx
var _RcPagination = forwardRef618((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcPagination" });
  const { classes: classesProp, ...reset2 } = props;
  const classes = useMemo85(() => combineProps(RcPaginationClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React710.createElement(Pagination_default, {
    ref: ref2,
    classes,
    ...reset2
  });
});
var RcPagination = styled_components_default(_RcPagination)`
  ${paginationStyle}
`;
RcPagination.defaultProps = {};
RcPagination.displayName = "RcPagination";

// src/components/Pagination/PaginationItem/PaginationItem.tsx
import React711, { forwardRef as forwardRef619, useMemo as useMemo86 } from "react";

// src/components/Pagination/PaginationItem/utils/PaginationItemUtils.ts
var RcPaginationItemClasses = RcClasses([], "RcPaginationItem");

// src/components/Pagination/PaginationItem/PaginationItem.tsx
var _RcPaginationItem = forwardRef619((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcPaginationItem" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo86(() => combineProps(RcPaginationItemClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React711.createElement(PaginationItem_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcPaginationItem = overridableStyled(_RcPaginationItem)``;
RcPaginationItem.defaultProps = {};
RcPaginationItem.displayName = "RcPaginationItem";

// src/components/PopupBox/PopupBox.tsx
import React712, { forwardRef as forwardRef620 } from "react";
var _RcPopupBox = forwardRef620((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcPopupBox" });
  const {
    childrenSize,
    title,
    footer,
    loadingOverlay,
    loading,
    confirmButtonText,
    confirmButtonProps,
    onConfirm,
    cancelButtonText,
    cancelButtonProps,
    onCancel,
    TitleProps,
    ContentProps,
    disableBackdropClick: disableBackdropClickProp,
    ActionsProps,
    children: children2,
    onClose,
    open,
    ...rest
  } = props;
  const isXsmall = childrenSize === "small";
  const isLoading = loading || loadingOverlay;
  const disableBackdropClick = disableBackdropClickProp ?? isLoading;
  const handleClose = useEventCallback2((e2, reason) => {
    if (reason === "backdropClick" && disableBackdropClick) {
      return;
    }
    onClose?.(e2, reason);
    onCancel?.(e2, reason);
  });
  return /* @__PURE__ */ React712.createElement(RcDialog, {
    ref: ref2,
    childrenSize,
    disableEscapeKeyDown: isLoading,
    onClose: handleClose,
    open,
    ...rest
  }, /* @__PURE__ */ React712.createElement(RcLoading, {
    loading: loadingOverlay
  }, /* @__PURE__ */ React712.createElement(RcDialogTitle, {
    "data-test-automation-id": "DialogTitle",
    ...TitleProps
  }, title), /* @__PURE__ */ React712.createElement(RcDialogContent, {
    "data-test-automation-id": "DialogContent",
    ...ContentProps
  }, typeof children2 === "string" ? /* @__PURE__ */ React712.createElement(RcDialogContentText, null, children2) : children2), footer !== null && /* @__PURE__ */ React712.createElement(RcDialogActions, {
    "data-test-automation-id": "DialogActions",
    ...ActionsProps
  }, footer || /* @__PURE__ */ React712.createElement(React712.Fragment, null, cancelButtonText && /* @__PURE__ */ React712.createElement(RcButton, {
    fullWidth: isXsmall,
    variant: "text",
    onClick: (e2) => onCancel?.(e2, "cancelClick"),
    "data-test-automation-id": "DialogCancelButton",
    disabled: loading,
    ...cancelButtonProps
  }, cancelButtonText), confirmButtonText && /* @__PURE__ */ React712.createElement(RcButton, {
    fullWidth: isXsmall,
    onClick: onConfirm,
    variant: "contained",
    "data-test-automation-id": "DialogOKButton",
    disabled: loading,
    loading,
    ...confirmButtonProps
  }, confirmButtonText)))));
});
var RcPopupBox = styled_components_default(_RcPopupBox)``;
RcPopupBox.defaultProps = {};

// src/components/Portal/Portal.tsx
import React713 from "react";
var _RcPortal = (inProps) => {
  const props = useThemeProps({ props: inProps, name: "RcPortal" });
  return /* @__PURE__ */ React713.createElement(Portal_default, {
    ...props
  });
};
var RcPortal = _RcPortal;

// src/components/Rating/Rating.tsx
import React717, { forwardRef as forwardRef622, useCallback as useCallback36, useMemo as useMemo87 } from "react";

// node_modules/@material-ui/lab/esm/Rating/Rating.js
var import_prop_types124 = __toModule(require_prop_types());
import {
  Fragment as Fragment12,
  createElement as createElement132,
  forwardRef as forwardRef621,
  useRef as useRef94,
  useState as useState45
} from "react";

// node_modules/@material-ui/lab/esm/internal/svg-icons/Star.js
import {
  createElement as createElement131
} from "react";
var Star_default2 = createSvgIcon(/* @__PURE__ */ createElement131("path", {
  d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
}), "Star");

// node_modules/@material-ui/lab/esm/Rating/Rating.js
function clamp3(value, min2, max2) {
  if (value < min2) {
    return min2;
  }
  if (value > max2) {
    return max2;
  }
  return value;
}
function getDecimalPrecision2(num) {
  var decimalPart = num.toString().split(".")[1];
  return decimalPart ? decimalPart.length : 0;
}
function roundValueToPrecision(value, precision) {
  if (value == null) {
    return value;
  }
  var nearest = Math.round(value / precision) * precision;
  return Number(nearest.toFixed(getDecimalPrecision2(precision)));
}
var styles154 = function styles155(theme) {
  return {
    root: {
      display: "inline-flex",
      position: "relative",
      fontSize: theme.typography.pxToRem(24),
      color: "#ffb400",
      cursor: "pointer",
      textAlign: "left",
      WebkitTapHighlightColor: "transparent",
      "&$disabled": {
        opacity: 0.5,
        pointerEvents: "none"
      },
      "&$focusVisible $iconActive": {
        outline: "1px solid #999"
      }
    },
    sizeSmall: {
      fontSize: theme.typography.pxToRem(18)
    },
    sizeLarge: {
      fontSize: theme.typography.pxToRem(30)
    },
    readOnly: {
      pointerEvents: "none"
    },
    disabled: {},
    focusVisible: {},
    visuallyhidden: {
      border: 0,
      clip: "rect(0 0 0 0)",
      height: 1,
      margin: -1,
      color: "#000",
      overflow: "hidden",
      padding: 0,
      position: "absolute",
      top: 20,
      width: 1
    },
    pristine: {
      "input:focus + &": {
        top: 0,
        bottom: 0,
        position: "absolute",
        outline: "1px solid #999",
        width: "100%"
      }
    },
    label: {
      cursor: "inherit"
    },
    icon: {
      display: "flex",
      transition: theme.transitions.create("transform", {
        duration: theme.transitions.duration.shortest
      }),
      pointerEvents: "none"
    },
    iconEmpty: {
      color: theme.palette.action.disabled
    },
    iconFilled: {},
    iconHover: {},
    iconFocus: {},
    iconActive: {
      transform: "scale(1.2)"
    },
    decimal: {
      position: "relative"
    }
  };
};
function IconContainer(props) {
  var value = props.value, other = _objectWithoutProperties(props, ["value"]);
  return /* @__PURE__ */ createElement132("span", other);
}
true ? IconContainer.propTypes = {
  value: import_prop_types124.default.number.isRequired
} : void 0;
var defaultIcon3 = /* @__PURE__ */ createElement132(Star_default2, {
  fontSize: "inherit"
});
function defaultLabelText(value) {
  return "".concat(value, " Star").concat(value !== 1 ? "s" : "");
}
var Rating = /* @__PURE__ */ forwardRef621(function Rating2(props, ref2) {
  var classes = props.classes, className = props.className, _props$defaultValue = props.defaultValue, defaultValue = _props$defaultValue === void 0 ? null : _props$defaultValue, _props$disabled = props.disabled, disabled3 = _props$disabled === void 0 ? false : _props$disabled, emptyIcon = props.emptyIcon, _props$emptyLabelText = props.emptyLabelText, emptyLabelText = _props$emptyLabelText === void 0 ? "Empty" : _props$emptyLabelText, _props$getLabelText = props.getLabelText, getLabelText = _props$getLabelText === void 0 ? defaultLabelText : _props$getLabelText, _props$icon = props.icon, icon = _props$icon === void 0 ? defaultIcon3 : _props$icon, _props$IconContainerC = props.IconContainerComponent, IconContainerComponent = _props$IconContainerC === void 0 ? IconContainer : _props$IconContainerC, _props$max = props.max, max2 = _props$max === void 0 ? 5 : _props$max, nameProp = props.name, onChange = props.onChange, onChangeActive = props.onChangeActive, onMouseLeave = props.onMouseLeave, onMouseMove = props.onMouseMove, _props$precision = props.precision, precision = _props$precision === void 0 ? 1 : _props$precision, _props$readOnly = props.readOnly, readOnly = _props$readOnly === void 0 ? false : _props$readOnly, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, valueProp = props.value, other = _objectWithoutProperties(props, ["classes", "className", "defaultValue", "disabled", "emptyIcon", "emptyLabelText", "getLabelText", "icon", "IconContainerComponent", "max", "name", "onChange", "onChangeActive", "onMouseLeave", "onMouseMove", "precision", "readOnly", "size", "value"]);
  var name = useId(nameProp);
  var _useControlled = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: "Rating"
  }), _useControlled2 = _slicedToArray(_useControlled, 2), valueDerived = _useControlled2[0], setValueState = _useControlled2[1];
  var valueRounded = roundValueToPrecision(valueDerived, precision);
  var theme = useTheme2();
  var _React$useState = useState45({
    hover: -1,
    focus: -1
  }), _React$useState$ = _React$useState[0], hover = _React$useState$.hover, focus2 = _React$useState$.focus, setState = _React$useState[1];
  var value = valueRounded;
  if (hover !== -1) {
    value = hover;
  }
  if (focus2 !== -1) {
    value = focus2;
  }
  var _useIsFocusVisible = useIsFocusVisible(), isFocusVisible2 = _useIsFocusVisible.isFocusVisible, onBlurVisible = _useIsFocusVisible.onBlurVisible, focusVisibleRef = _useIsFocusVisible.ref;
  var _React$useState2 = useState45(false), focusVisible2 = _React$useState2[0], setFocusVisible = _React$useState2[1];
  var rootRef = useRef94();
  var handleFocusRef = useForkRef(focusVisibleRef, rootRef);
  var handleRef = useForkRef(handleFocusRef, ref2);
  var handleMouseMove = function handleMouseMove2(event) {
    if (onMouseMove) {
      onMouseMove(event);
    }
    var rootNode = rootRef.current;
    var _rootNode$getBounding = rootNode.getBoundingClientRect(), right2 = _rootNode$getBounding.right, left2 = _rootNode$getBounding.left;
    var _rootNode$firstChild$ = rootNode.firstChild.getBoundingClientRect(), width2 = _rootNode$firstChild$.width;
    var percent2;
    if (theme.direction === "rtl") {
      percent2 = (right2 - event.clientX) / (width2 * max2);
    } else {
      percent2 = (event.clientX - left2) / (width2 * max2);
    }
    var newHover = roundValueToPrecision(max2 * percent2 + precision / 2, precision);
    newHover = clamp3(newHover, precision, max2);
    setState(function(prev) {
      return prev.hover === newHover && prev.focus === newHover ? prev : {
        hover: newHover,
        focus: newHover
      };
    });
    setFocusVisible(false);
    if (onChangeActive && hover !== newHover) {
      onChangeActive(event, newHover);
    }
  };
  var handleMouseLeave = function handleMouseLeave2(event) {
    if (onMouseLeave) {
      onMouseLeave(event);
    }
    var newHover = -1;
    setState({
      hover: newHover,
      focus: newHover
    });
    if (onChangeActive && hover !== newHover) {
      onChangeActive(event, newHover);
    }
  };
  var handleChange = function handleChange2(event) {
    var newValue = parseFloat(event.target.value);
    setValueState(newValue);
    if (onChange) {
      onChange(event, newValue);
    }
  };
  var handleClear = function handleClear2(event) {
    if (event.clientX === 0 && event.clientY === 0) {
      return;
    }
    setState({
      hover: -1,
      focus: -1
    });
    setValueState(null);
    if (onChange && parseFloat(event.target.value) === valueRounded) {
      onChange(event, null);
    }
  };
  var handleFocus = function handleFocus2(event) {
    if (isFocusVisible2(event)) {
      setFocusVisible(true);
    }
    var newFocus = parseFloat(event.target.value);
    setState(function(prev) {
      return {
        hover: prev.hover,
        focus: newFocus
      };
    });
    if (onChangeActive && focus2 !== newFocus) {
      onChangeActive(event, newFocus);
    }
  };
  var handleBlur = function handleBlur2(event) {
    if (hover !== -1) {
      return;
    }
    if (focusVisible2 !== false) {
      setFocusVisible(false);
      onBlurVisible();
    }
    var newFocus = -1;
    setState(function(prev) {
      return {
        hover: prev.hover,
        focus: newFocus
      };
    });
    if (onChangeActive && focus2 !== newFocus) {
      onChangeActive(event, newFocus);
    }
  };
  var item = function item2(state, labelProps) {
    var id3 = "".concat(name, "-").concat(String(state.value).replace(".", "-"));
    var container = /* @__PURE__ */ createElement132(IconContainerComponent, {
      value: state.value,
      className: clsx_m_default(classes.icon, state.filled ? classes.iconFilled : classes.iconEmpty, state.hover && classes.iconHover, state.focus && classes.iconFocus, state.active && classes.iconActive)
    }, emptyIcon && !state.filled ? emptyIcon : icon);
    if (readOnly) {
      return /* @__PURE__ */ createElement132("span", _extends({
        key: state.value
      }, labelProps), container);
    }
    return /* @__PURE__ */ createElement132(Fragment12, {
      key: state.value
    }, /* @__PURE__ */ createElement132("label", _extends({
      className: classes.label,
      htmlFor: id3
    }, labelProps), container, /* @__PURE__ */ createElement132("span", {
      className: classes.visuallyhidden
    }, getLabelText(state.value))), /* @__PURE__ */ createElement132("input", {
      onFocus: handleFocus,
      onBlur: handleBlur,
      onChange: handleChange,
      onClick: handleClear,
      disabled: disabled3,
      value: state.value,
      id: id3,
      type: "radio",
      name,
      checked: state.checked,
      className: classes.visuallyhidden
    }));
  };
  return /* @__PURE__ */ createElement132("span", _extends({
    ref: handleRef,
    onMouseMove: handleMouseMove,
    onMouseLeave: handleMouseLeave,
    className: clsx_m_default(classes.root, className, size !== "medium" && classes["size".concat(capitalize(size))], disabled3 && classes.disabled, focusVisible2 && classes.focusVisible, readOnly && classes.readOnly),
    role: readOnly ? "img" : null,
    "aria-label": readOnly ? getLabelText(value) : null
  }, other), Array.from(new Array(max2)).map(function(_18, index4) {
    var itemValue = index4 + 1;
    if (precision < 1) {
      var items = Array.from(new Array(1 / precision));
      return /* @__PURE__ */ createElement132("span", {
        key: itemValue,
        className: clsx_m_default(classes.decimal, itemValue === Math.ceil(value) && (hover !== -1 || focus2 !== -1) && classes.iconActive)
      }, items.map(function($2, indexDecimal) {
        var itemDecimalValue = roundValueToPrecision(itemValue - 1 + (indexDecimal + 1) * precision, precision);
        return item({
          value: itemDecimalValue,
          filled: itemDecimalValue <= value,
          hover: itemDecimalValue <= hover,
          focus: itemDecimalValue <= focus2,
          checked: itemDecimalValue === valueRounded
        }, {
          style: items.length - 1 === indexDecimal ? {} : {
            width: itemDecimalValue === value ? "".concat((indexDecimal + 1) * precision * 100, "%") : "0%",
            overflow: "hidden",
            zIndex: 1,
            position: "absolute"
          }
        });
      }));
    }
    return item({
      value: itemValue,
      active: itemValue === value && (hover !== -1 || focus2 !== -1),
      filled: itemValue <= value,
      hover: itemValue <= hover,
      focus: itemValue <= focus2,
      checked: itemValue === valueRounded
    });
  }), !readOnly && !disabled3 && valueRounded == null && /* @__PURE__ */ createElement132(Fragment12, null, /* @__PURE__ */ createElement132("input", {
    value: "",
    id: "".concat(name, "-empty"),
    type: "radio",
    name,
    defaultChecked: true,
    className: classes.visuallyhidden
  }), /* @__PURE__ */ createElement132("label", {
    className: classes.pristine,
    htmlFor: "".concat(name, "-empty")
  }, /* @__PURE__ */ createElement132("span", {
    className: classes.visuallyhidden
  }, emptyLabelText))));
});
true ? Rating.propTypes = {
  classes: import_prop_types124.default.object,
  className: import_prop_types124.default.string,
  defaultValue: import_prop_types124.default.number,
  disabled: import_prop_types124.default.bool,
  emptyIcon: import_prop_types124.default.node,
  emptyLabelText: import_prop_types124.default.node,
  getLabelText: import_prop_types124.default.func,
  icon: import_prop_types124.default.node,
  IconContainerComponent: import_prop_types124.default.elementType,
  max: import_prop_types124.default.number,
  name: chainPropTypes(import_prop_types124.default.string, function(props) {
    if (!props.readOnly && !props.name) {
      return new Error(["Material-UI: The prop `name` is required (when `readOnly` is false).", "Additionally, the input name should be unique within the parent form."].join("\n"));
    }
    return null;
  }),
  onChange: import_prop_types124.default.func,
  onChangeActive: import_prop_types124.default.func,
  onMouseLeave: import_prop_types124.default.func,
  onMouseMove: import_prop_types124.default.func,
  precision: chainPropTypes(import_prop_types124.default.number, function(props) {
    if (props.precision < 0.1) {
      return new Error(["Material-UI: The prop `precision` should be above 0.1.", "A value below this limit has an imperceptible impact."].join("\n"));
    }
    return null;
  }),
  readOnly: import_prop_types124.default.bool,
  size: import_prop_types124.default.oneOf(["large", "medium", "small"]),
  value: import_prop_types124.default.number
} : void 0;
var Rating_default = withStyles_default2(styles154, {
  name: "MuiRating"
})(Rating);

// src/components/Rating/styles/RatingStyle.tsx
import React716 from "react";

// src/components/Rating/utils/RatingUtils.ts
var RcRatingClasses = RcClasses([
  "readOnly",
  "disabled",
  "focusVisible",
  "pristine",
  "label",
  "icon",
  "iconEmpty",
  "iconFilled",
  "iconActive"
], "RcRating");

// src/components/Rating/styles/RatingStyle.tsx
var getColor = ({ emphasized, color: color2 }) => {
  return emphasized ? palette22("warning", "f01") : getParsePaletteColor(color2);
};
var RatingStyle = (props) => {
  const { icon, emptyIcon, emphasized, color: color2 } = props;
  const isIcon = React716.isValidElement(icon) && React716.isValidElement(emptyIcon) && isRcElement(icon, ["RcIcon"]) && isRcElement(emptyIcon, ["RcIcon"]);
  return css2`
    &.${RcRatingClasses.focusVisible}
      .${RcRatingClasses.iconActive},
      input:focus
      + .${RcRatingClasses.pristine} {
      outline: none;
      border-radius: ${radius3("xxl")};
      box-shadow: 0 0 0 1px ${focusVisibleColor};
    }

    .${RcRatingClasses.iconActive} {
      transform: scale(1, 1);
    }

    .${RcRatingClasses.label} {
      padding: 0 8px;
    }

    .${RcRatingClasses.iconFilled} {
      color: ${getColor};
    }

    .${RcRatingClasses.iconEmpty} {
      color: ${palette22("neutral", "f04")};
    }

    &.${RcRatingClasses.disabled} {
      opacity: 1;

      .${RcRatingClasses.iconFilled} {
        ${isIcon ? css2`
              color: ${color2 === "neutral.f06" && !emphasized ? palette22("neutral", "f04") : setOpacity(getColor(props), "40", true)};
            ` : css2`
              opacity: ${opacity3("64")};
            `}
      }

      .${RcRatingClasses.iconEmpty} {
        color: ${palette22("disabled", "f02")};
      }
    }

    &.${RcRatingClasses.readOnly} .${RcRatingClasses.icon} {
      padding: 0 8px;
    }
  `;
};

// src/components/Rating/Rating.tsx
var defaultSize = "xlarge";
var defaultIcon4 = /* @__PURE__ */ React717.createElement(RcIcon, {
  size: defaultSize,
  symbol: Star_default
});
var defaultEmptyIcon = /* @__PURE__ */ React717.createElement(RcIcon, {
  size: defaultSize,
  symbol: StarBorder_default
});
var _RcRating = forwardRef622((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcRating" });
  const {
    TooltipProps,
    disableTooltip,
    classes: classesProp,
    onChangeActive: onChangeActiveProp,
    max: max2,
    tooltips,
    emphasized,
    color: color2,
    ...rest
  } = props;
  const tooltipOpenStatus = useMemo87(() => {
    const tooltipOpenStatus2 = [];
    for (let i2 = 0; i2 < max2; i2++) {
      tooltipOpenStatus2.push(false);
    }
    return tooltipOpenStatus2;
  }, [max2]);
  const IconContainer2 = useCallback36((containerProps) => {
    const { value: itemValue, children: children2, ...other } = containerProps;
    return /* @__PURE__ */ React717.createElement("span", {
      ...other
    }, !disableTooltip && tooltips?.[itemValue - 1] ? /* @__PURE__ */ React717.createElement(RcTooltip, {
      title: tooltips[itemValue - 1],
      open: !!tooltipOpenStatus[itemValue - 1],
      ...TooltipProps
    }, children2) : children2);
  }, [disableTooltip, tooltips, tooltipOpenStatus, TooltipProps]);
  const onChangeActive = useEventCallback2((e2, value) => {
    tooltipOpenStatus.forEach((v2, i2) => {
      tooltipOpenStatus[i2] = i2 === value - 1;
    });
    onChangeActiveProp?.(e2, value);
  });
  const classes = useMemo87(() => combineClasses(RcRatingClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React717.createElement(Rating_default, {
    ref: ref2,
    classes,
    max: max2,
    IconContainerComponent: IconContainer2,
    onChangeActive,
    ...rest
  });
});
var RcRating = styled_components_default(_RcRating)`
  ${RatingStyle}
`;
RcRating.defaultProps = {
  icon: defaultIcon4,
  emptyIcon: defaultEmptyIcon,
  tooltips: [],
  emphasized: true,
  disableTooltip: false,
  name: "rating",
  color: "neutral.f06",
  max: 5
};
RcRating.displayName = "RcRating";

// src/components/Responsive/Responsive.tsx
import React718, { useRef as useRef95, useState as useState46 } from "react";

// src/components/Responsive/utils/getMatchedBreakpoint.ts
var bpListL2S = [...breakpointList].reverse();
var getMatchedBreakpoint = (width2, breakpointMap) => bpListL2S.find((bp) => width2 >= breakpointMap[bp]) || null;

// src/components/Responsive/Responsive.tsx
var RcResponsive = (inProps) => {
  const props = useThemeProps({ props: inProps, name: "RcResponsive" });
  const theme = RcUseTheme();
  const {
    children: children2,
    responsiveTarget,
    resizeThrottle,
    breakpointMap = theme.breakpoints.values
  } = props;
  const { externalWindow } = useRcPortalWindowContext();
  const currentWindow = externalWindow ?? window;
  const bodyRef = useRef95(currentWindow.document.body);
  const targetRef = responsiveTarget ?? bodyRef;
  const [contextValue, setContextValue] = useState46(() => {
    const target = targetRef.current;
    if (target) {
      const width2 = target.clientWidth;
      return getMatchedBreakpoint(width2, breakpointMap);
    }
    return;
  });
  useResizeObserver(targetRef, () => {
    if (!targetRef.current)
      return;
    const width2 = targetRef.current.clientWidth;
    const matchedBreakpoint = getMatchedBreakpoint(width2, breakpointMap);
    setContextValue(matchedBreakpoint);
  }, { mode: "throttle", time: resizeThrottle });
  return /* @__PURE__ */ React718.createElement(RcResponsiveContext.Provider, {
    value: contextValue
  }, children2);
};
RcResponsive.defaultProps = {
  resizeThrottle: 200
};
RcResponsive.displayName = "RcResponsive";

// src/components/Snackbar/Snackbar.tsx
import React720, { forwardRef as forwardRef624, useMemo as useMemo89 } from "react";

// src/components/Snackbar/SnackbarContent/SnackbarContent.tsx
import React719, {
  forwardRef as forwardRef623,
  isValidElement as isValidElement19,
  useMemo as useMemo88
} from "react";

// src/components/Snackbar/SnackbarContent/utils/SnackbarContentUtils.tsx
var RcSnackbarContentColors = {
  success: {
    textColor: "neutral.f01",
    bgColor: "success.b04"
  },
  error: {
    textColor: "neutral.f01",
    bgColor: "danger.b04"
  },
  info: {
    textColor: "neutral.f01",
    bgColor: "neutral.b04"
  },
  warn: {
    textColor: "neutral.f07",
    bgColor: "warning.b03"
  }
};
var RcSnackbarContentClasses = RcClasses(["message", "action"], "RcSnackbarContent");
var RcSnackbarContentPaddings = {
  small: spacing2(1, 4),
  medium: spacing2(3, 4)
};
var RcSnackbarContentLoadingSizes = {
  small: 16,
  medium: 20
};
var RcSnackbarContentLineHeight = px2(24);

// src/components/Snackbar/SnackbarContent/styles/StyledSnackbarContent.tsx
var contentBgColor = ({ type: type3 }) => getParsePaletteColor(RcSnackbarContentColors[type3].bgColor);
var contentTextColor = ({ type: type3 }) => getParsePaletteColor(RcSnackbarContentColors[type3].textColor);
var snackbarContentStyle = ({ fullWidth, square, messageAlign, size }) => {
  let radiusValue = radius3("lg");
  if (square) {
    radiusValue = 0;
  } else if (fullWidth && square !== false) {
    radiusValue = 0;
  }
  return css2`
      ${typography4("body1")};
      line-height: ${RcSnackbarContentLineHeight};
      overflow: hidden;
      background-color: ${contentBgColor};
      color: ${contentTextColor};
      box-shadow: ${shadows4(4)};
      border-radius: ${radiusValue};
      min-width: 248px;
      max-width: ${fullWidth ? "100%" : "640px"};
      width: ${fullWidth && "100%"};
      box-sizing: border-box;
      margin: 0 auto;
      pointer-events: auto;
      align-items: baseline;
      padding: ${RcSnackbarContentPaddings[size]};

      .${RcSnackbarContentClasses.message} {
        margin: auto;
        flex: 1;
        padding: ${spacing2(0)};
        text-align: ${messageAlign};

        word-break: break-word;

        a {
          color: ${palette22("informative", "f02")};
          font-style: italic;
        }
      }

      .${RcSnackbarContentClasses.action} {
        text-decoration: underline;
        margin-right: 0;
        height: ${RcSnackbarContentLineHeight};
      }
    `;
};

// src/components/Snackbar/SnackbarContent/SnackbarContent.tsx
var _RcSnackbarContent = forwardRef623((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcSnackbarContent" });
  const {
    classes: classesProp,
    loading,
    size,
    messageAlign,
    type: type3,
    fullWidth,
    action: actionProp,
    ...rest
  } = props;
  const classes = useMemo88(() => combineClasses(RcSnackbarContentClasses, classesProp), [classesProp]);
  const action3 = useMemo88(() => {
    const getItem = (item) => {
      if (isValidElement19(item) && isRcElement(item, ["RcSnackbarAction"])) {
        if (size !== RcSnackbarContent.defaultProps.size) {
          return item;
        }
        return React719.cloneElement(item, { size });
      }
      return item;
    };
    if (actionProp instanceof Array) {
      return actionProp.map(getItem);
    }
    return getItem(actionProp);
  }, [actionProp, size]);
  return /* @__PURE__ */ React719.createElement(SnackbarContent_default, {
    ...rest,
    ref: ref2,
    classes,
    action: loading ? /* @__PURE__ */ React719.createElement(RcCircularProgress, {
      color: "inherit",
      size: RcSnackbarContentLoadingSizes[size]
    }) : action3
  });
});
var RcSnackbarContent = styled_components_default(withDeprecatedCheck(_RcSnackbarContent, [
  {
    prop: "ariaLabel",
    time: "2021-3",
    comment: `please use \`aria-label\` directly `
  }
], "RcSnackbarContent"))`
  ${snackbarContentStyle}
`;
RcSnackbarContent.defaultProps = {
  type: "success",
  messageAlign: "center",
  size: "medium"
};
RcSnackbarContent.displayName = "RcSnackbarContent";

// src/components/Snackbar/styles/SnackbarStyle.tsx
var SnackbarStyle = () => {
  return css2``;
};

// src/components/Snackbar/utils/SnackbarUtils.ts
var RcSnackbarClasses = RcClasses([], "RcSnackbar");

// src/components/Snackbar/Snackbar.tsx
var _RcSnackbar = forwardRef624((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcSnackbar" });
  const {
    classes: classesProp,
    size,
    type: type3,
    message,
    action: action3,
    ContentProps,
    children: children2,
    TransitionProps: TransitionPropsProp,
    ...rest
  } = props;
  const classes = useMemo89(() => combineClasses(RcSnackbarClasses, classesProp), [classesProp]);
  const onExited = useUnmountPortalHandler(TransitionPropsProp?.onExited);
  const TransitionProps4 = { ...TransitionPropsProp, onExited };
  return /* @__PURE__ */ React720.createElement(Snackbar_default, {
    ref: ref2,
    classes,
    TransitionProps: TransitionProps4,
    ...rest
  }, children2 || /* @__PURE__ */ React720.createElement(RcSnackbarContent, {
    size,
    type: type3,
    message,
    action: action3,
    ...ContentProps
  }));
});
var RcSnackbar = styled_components_default(_RcSnackbar)`
  ${SnackbarStyle}
`;
RcSnackbar.defaultProps = {
  TransitionComponent: Slide_default,
  anchorOrigin: {
    vertical: "top",
    horizontal: "center"
  }
};
RcSnackbar.displayName = "RcSnackbar";

// src/components/Snackbar/SnackbarAction/SnackbarAction.tsx
import React721, { useMemo as useMemo90 } from "react";

// src/components/Snackbar/SnackbarAction/utils/SnackbarActionUtils.tsx
var RcSnackbarActionClasses = RcClasses(["text", "icon"], "RcSnackbarAction");

// src/components/Snackbar/SnackbarAction/styles/StyledSnackbarContent.tsx
var snackbarContentActionStyle = ({ color: color2 }) => {
  return css2`
    color: ${color2 && getParsePaletteColor(color2)};

    &.${RcSnackbarActionClasses.text} {
      ${typography4("body2")};
      line-height: ${RcSnackbarContentLineHeight};
      text-decoration: underline;
    }

    & + &.${RcSnackbarActionClasses.text} {
      margin-left: ${spacing2(3)};
    }

    & + &.${RcSnackbarActionClasses.icon} {
      margin-left: ${spacing2(4)};
    }

    &:active {
      opacity: ${opacity3("24", true)};
    }

    &:disabled {
      opacity: ${opacity3("24")};
    }

    &.Mui-focusVisible,
    ${focusVisible} {
      ${fakeBorder({
    pseudo: true,
    color: "currentColor",
    inset: false,
    radius: "sm"
  })}
    }
  `;
};

// src/components/Snackbar/SnackbarAction/SnackbarAction.tsx
var _RcSnackbarAction = (inProps) => {
  const props = useThemeProps({ props: inProps, name: "RcSnackbarAction" });
  const {
    children: children2,
    variant,
    size,
    icon,
    symbol = icon,
    classes: classesProp,
    color: color2,
    className: classNameProp,
    ...rest
  } = props;
  const className = useMemo90(() => clsx_m_default(classNameProp, {
    [RcSnackbarActionClasses.text]: variant === "text",
    [RcSnackbarActionClasses.icon]: variant === "icon"
  }), [classNameProp, variant]);
  const classes = useMemo90(() => omit3(classesProp, ["text", "icon"]), [classesProp]);
  return /* @__PURE__ */ React721.createElement(ButtonBase_default, {
    className,
    classes,
    ...rest
  }, variant === "icon" ? /* @__PURE__ */ React721.createElement(RcIcon, {
    size,
    symbol
  }, children2) : children2);
};
var RcSnackbarAction = styled_components_default(_RcSnackbarAction)`
  ${snackbarContentActionStyle}
`;
RcSnackbarAction.displayName = "RcSnackbarAction";
RcSnackbarAction.defaultProps = {
  disableRipple: true,
  variant: "text",
  size: RcSnackbarContent.defaultProps.size
};

// src/components/Stepper/Step/Step.tsx
import React722, { forwardRef as forwardRef625, useMemo as useMemo91 } from "react";

// src/components/Stepper/Step/utils/StepUtils.ts
var RcStepClasses = RcClasses(["root", "horizontal"], "RcStep");

// src/components/Stepper/Step/styles/StepStyle.tsx
var stepPadding = spacing2(4);
var StepStyle = () => {
  return css2`
    &.${RcStepClasses.horizontal} {
      padding-left: ${stepPadding};
      padding-right: ${stepPadding};
    }
  `;
};

// src/components/Stepper/Step/Step.tsx
var _RcStep = forwardRef625((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcStep" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo91(() => combineClasses(RcStepClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React722.createElement(Step_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcStep = styled_components_default(_RcStep)`
  ${StepStyle}
`;
RcStep.defaultProps = {};
RcStep.displayName = "RcStep";

// src/components/Stepper/StepButton/StepButton.tsx
import React726, {
  cloneElement as cloneElement28,
  forwardRef as forwardRef628,
  useMemo as useMemo94
} from "react";

// src/components/Stepper/StepLabel/StepLabel.tsx
import React725, { forwardRef as forwardRef627, useMemo as useMemo93 } from "react";

// src/components/Stepper/StepIcon/StepIcon.tsx
import React724, { forwardRef as forwardRef626, useMemo as useMemo92 } from "react";

// src/components/Stepper/StepIcon/utils/StepIconUtils.ts
import { useRef as useRef96 } from "react";
var RcStepIconClasses = RcClasses(["root", "active", "text"], "RcStepIcon");
var iconColor = palette22("interactive", "b02");
var iconTextColor = palette22("neutral", "f01");
var useIsEditable = ({ active, completed }) => {
  const completedTimesRef = useRef96(0);
  const isEditRef = useRef96(false);
  const { current: completedTimes } = completedTimesRef;
  const { current: isEdit } = isEditRef;
  if (completedTimes === 0 && !active && completed) {
    completedTimesRef.current = 1;
  } else if (completedTimes === 1 && !completed) {
    completedTimesRef.current = 0;
  }
  if (completedTimes === 1) {
    if (!isEdit && active) {
      isEditRef.current = true;
    } else if (isEdit && !active) {
      isEditRef.current = false;
    }
  }
  return isEditRef.current;
};

// src/components/Stepper/StepIcon/styles/StepIconStyle.tsx
var StepIconStyle = () => {
  return css2`
    .${RcStepIconClasses.root} {
      color: ${palette22("neutral", "b04")};
    }

    .${RcStepIconClasses.active} {
      color: ${iconColor};
    }

    .${RcStepIconClasses.text} {
      fill: ${iconTextColor};
      ${typography4("body1", true)};
      /* for font size change with font */
      transform: translateY(1px);
    }
  `;
};

// src/components/Stepper/StepIcon/styles/StyledCircleIcon.tsx
import React723 from "react";
var _StyledCircleIcon = ({
  isEdit,
  ...rest
}) => {
  return /* @__PURE__ */ React723.createElement(RcIcon, {
    ...rest
  });
};
var StyledCircleIcon = styled_components_default(_StyledCircleIcon)`
  width: 24px;
  height: 24px;
  ${flexCenterStyle};
  color: ${iconTextColor};
  svg {
    stroke-width: ${({ isEdit }) => isEdit ? 1 : 2}px;
  }
  border-radius: ${radius3("circle")};
  background: ${iconColor};
`;

// src/components/Stepper/StepIcon/StepIcon.tsx
var _RcStepIcon = forwardRef626((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcStepIcon" });
  const {
    icon: iconProp,
    classes: classesProp,
    editable,
    completed,
    children: children2,
    ...rest
  } = props;
  const classes = useMemo92(() => combineClasses(RcStepIconClasses, classesProp), [classesProp]);
  const isEdit = useIsEditable(props);
  const icon = useMemo92(() => {
    if (editable) {
      return /* @__PURE__ */ React724.createElement(StyledCircleIcon, {
        isEdit: true,
        symbol: Edit_default,
        size: "small"
      });
    }
    return completed ? /* @__PURE__ */ React724.createElement(StyledCircleIcon, {
      isEdit,
      symbol: isEdit ? Edit_default : Check_default,
      size: "small"
    }) : iconProp;
  }, [editable, completed, isEdit, iconProp]);
  return /* @__PURE__ */ React724.createElement(StepIcon_default, {
    ...rest,
    ref: ref2,
    classes,
    icon
  });
});
var RcStepIcon = styled_components_default(_RcStepIcon)`
  ${StepIconStyle}
`;
RcStepIcon.defaultProps = {};
RcStepIcon.displayName = "RcStepIcon";

// src/components/Stepper/StepLabel/utils/StepLabelUtils.ts
var RcStepLabelClasses = RcClasses([
  "disabled",
  "label",
  "active",
  "alternativeLabel",
  "labelContainer",
  "error"
], "RcStepLabel");

// src/components/Stepper/StepLabel/styles/StepLabelStyle.tsx
var StepLabelStyle = () => {
  return css2`
    ${StepIconStyle};

    .${RcStepLabelClasses.labelContainer} {
      .${RcStepLabelClasses.alternativeLabel} {
        margin-top: ${spacing2(3)};
      }
    }

    .${RcStepLabelClasses.label} {
      ${typography4("body1")};

      color: ${palette22("neutral", "f04")};
    }

    .${RcStepLabelClasses.active} {
      ${typography4("body2")};

      color: ${palette22("neutral", "f06")};
    }

    &.${RcStepLabelClasses.error} {
      .${RcStepIconClasses.root} {
        color: ${palette22("danger", "f02")};
      }

      .${RcStepLabelClasses.label} {
        color: ${palette22("danger", "f02")};
      }
    }

    &.${RcStepLabelClasses.disabled} {
      .${RcStepIconClasses.root} {
        color: ${palette22("disabled", "f02")};
      }

      .${RcStepLabelClasses.label} {
        color: ${palette22("disabled", "f02")};
      }
    }
  `;
};

// src/components/Stepper/StepLabel/StepLabel.tsx
var _RcStepLabel = forwardRef627((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcStepLabel" });
  const {
    classes: classesProp,
    StepIconProps: StepIconPropsProp,
    children: children2,
    disabled: disabled3,
    editable,
    onClick,
    ...rest
  } = props;
  const classes = useMemo93(() => combineClasses(RcStepLabelClasses, classesProp), [classesProp]);
  const StepIconProps = useMemo93(() => combineProps({ editable }, StepIconPropsProp), [StepIconPropsProp, editable]);
  return /* @__PURE__ */ React725.createElement(StepLabel_default, {
    ref: ref2,
    StepIconComponent: RcStepIcon,
    StepIconProps,
    classes,
    disabled: disabled3,
    onClick: disabled3 ? void 0 : onClick,
    ...rest
  }, children2);
});
var RcStepLabel = styled_components_default(_RcStepLabel)`
  ${StepLabelStyle}
`;
RcStepLabel.defaultProps = {};
RcStepLabel.muiName = StepLabel_default.muiName;
RcStepLabel.displayName = "RcStepLabel";

// src/components/Stepper/StepButton/utils/StepButtonUtils.ts
var RcStepButtonClasses = RcClasses(["touchRipple"], "RcStepButton");

// src/components/Stepper/StepButton/styles/StepButtonStyle.tsx
var StepButtonStyle = () => {
  return css2`
    .${RcStepButtonClasses.touchRipple} {
      z-index: 1;
    }
  `;
};

// src/components/Stepper/StepButton/StepButton.tsx
var _RcStepButton = forwardRef628((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcStepButton" });
  const {
    classes: classesProp,
    children: childrenProp,
    icon,
    optional,
    error: error4,
    StepLabelProps,
    editable,
    ...rest
  } = props;
  const classes = useMemo94(() => combineClasses(RcStepButtonClasses, classesProp), [classesProp]);
  const children2 = useMemo94(() => {
    const childProps = combineProps({
      icon,
      optional,
      error: error4,
      StepIconProps: { editable }
    }, StepLabelProps);
    return isRcElement(childrenProp, ["RcStepLabel"]) ? cloneElement28(childrenProp, childProps) : /* @__PURE__ */ React726.createElement(RcStepLabel, {
      ...childProps
    }, childrenProp);
  }, [StepLabelProps, childrenProp, editable, error4, icon, optional]);
  return /* @__PURE__ */ React726.createElement(StepButton_default, {
    ...rest,
    icon,
    optional,
    ref: ref2,
    classes
  }, children2);
});
var RcStepButton = styled_components_default(_RcStepButton)`
  ${StepButtonStyle}
`;
RcStepButton.defaultProps = {
  alternativeLabel: true
};
RcStepButton.displayName = "RcStepButton";

// src/components/Stepper/StepConnector/StepConnector.tsx
import React727, { forwardRef as forwardRef629, useMemo as useMemo95 } from "react";

// src/components/Stepper/StepConnector/utils/StepConnectorUtils.ts
var RcStepConnectorClasses = RcClasses(["line"], "RcStepConnector");

// src/components/Stepper/StepConnector/styles/StepConnectorStyle.tsx
var StepConnectorStyle = () => {
  return css2`
      .${RcStepConnectorClasses.line} {
        border-color: ${palette22("neutral", "l02")};
      }
    `;
};

// src/components/Stepper/StepConnector/StepConnector.tsx
var _RcStepConnector = forwardRef629((inProps, ref2) => {
  const prop2 = useThemeProps({ props: inProps, name: "RcStepConnector" });
  const { classes: classesProp, ...rest } = prop2;
  const classes = useMemo95(() => combineClasses(RcStepConnectorClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React727.createElement(StepConnector_default, {
    ...rest,
    ref: ref2,
    classes
  });
});
var RcStepConnector = styled_components_default(_RcStepConnector)`
  ${StepConnectorStyle}
`;
RcStepConnector.defaultProps = {};
RcStepConnector.displayName = "RcStepConnector";

// src/components/Stepper/Stepper.tsx
import React728, { forwardRef as forwardRef630, useMemo as useMemo96 } from "react";

// src/components/Stepper/styles/StepperStyle.tsx
var StepperStyle = () => {
  return css2`
    padding: ${spacing2(6, 0, 6, 0)};
  `;
};

// src/components/Stepper/utils/StepperUtils.ts
var RcStepperClasses = RcClasses([], "RcStepper");

// src/components/Stepper/Stepper.tsx
var _RcStepper = forwardRef630((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcStepper" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo96(() => combineClasses(RcStepperClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React728.createElement(Stepper_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcStepper = styled_components_default(_RcStepper)`
  ${StepperStyle}
`;
RcStepper.defaultProps = {
  alternativeLabel: true,
  nonLinear: true,
  connector: /* @__PURE__ */ React728.createElement(RcStepConnector, null)
};
RcStepper.displayName = "RcStepper";

// src/components/TablePagination/TablePagination.tsx
import React731, { forwardRef as forwardRef632, useMemo as useMemo97 } from "react";

// src/components/Toolbar/Toolbar.tsx
import React729, { forwardRef as forwardRef631 } from "react";
var _RcToolbar = forwardRef631((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcToolbar" });
  return /* @__PURE__ */ React729.createElement(Toolbar_default, {
    ref: ref2,
    ...props
  });
});
var RcToolbar = styled_components_default(_RcToolbar)``;
RcToolbar.displayName = "RcToolbar";

// src/components/TablePagination/styles/TablePaginationActions.tsx
import React730, { memo as memo426 } from "react";
var TablePaginationActionsWrapper = styled_components_default.div`
  display: flex;
  margin-left: ${spacing2(5)};
`;
var RcTablePaginationActions = memo426((props) => {
  const {
    onPageChange,
    page,
    count: count2,
    rowsPerPage,
    className,
    backIconButtonProps,
    nextIconButtonProps
  } = props;
  const handleBackButtonClick = (event) => {
    onPageChange(event, page - 1);
  };
  const handleNextButtonClick = (event) => {
    onPageChange(event, page + 1);
  };
  const prevDisabled = page === 0;
  const nextDisabled = count2 !== -1 ? page >= Math.ceil(count2 / rowsPerPage) - 1 : false;
  return /* @__PURE__ */ React730.createElement(TablePaginationActionsWrapper, {
    className
  }, /* @__PURE__ */ React730.createElement(RcIconButton, {
    symbol: ArrowLeft2_default,
    onClick: handleBackButtonClick,
    size: "medium",
    disabled: prevDisabled,
    ...combineProps({ TooltipProps: { tooltipForceHide: prevDisabled } }, backIconButtonProps)
  }), /* @__PURE__ */ React730.createElement(RcIconButton, {
    symbol: ArrowRight_default,
    onClick: handleNextButtonClick,
    size: "medium",
    disabled: nextDisabled,
    ...combineProps({ TooltipProps: { tooltipForceHide: nextDisabled } }, nextIconButtonProps)
  }));
});

// src/components/TablePagination/utils/TablePaginationUtils.ts
var RcTablePaginationClasses = RcClasses([
  "root",
  "toolbar",
  "spacer",
  "menuItem",
  "caption",
  "input",
  "selectRoot",
  "select",
  "selectIcon",
  "actions"
], "RcTablePagination");
function defaultLabelDisplayedRows({
  from,
  to,
  count: count2
}) {
  return `${from}-${to} of ${count2 !== -1 ? count2 : `more than ${to}`}`;
}
var defaultLabelOfPage = ({ totalPage }) => `of ${totalPage} pages`;

// src/components/TablePagination/styles/TablePaginationStyle.tsx
var TablePaginationMenuItem = styled_components_default(RcMenuItem)`
  min-width: unset;
`;
var TablePaginationStyle = () => {
  return css2`
      display: flex;
      align-items: center;
      justify-content: flex-end;
      color: ${palette22("neutral", "f06")};
      ${typography4("body1")};

      &:last-child {
        padding: 0;
      }

      .${RcTablePaginationClasses.toolbar} {
        min-height: 52px;
        padding-right: 2px;
      }

      .${RcTablePaginationClasses.selectRoot} {
        margin-right: ${spacing2(7)};
        max-width: none;
      }

      .${RcLineSelectInputClasses.input} {
        font-size: inherit;
        padding: ${spacing2(1.5, 6, 1.5, 2)};
      }

      .${RcTablePaginationClasses.toolbar} {
        min-height: 52px;
        padding-right: 2px;
      }

      .${RcTablePaginationClasses.caption} {
        flex-shrink: 0;
        margin: 0px;
      }

      ${RcSelect} {
        width: auto;
      }

      .${RcSelectClasses.icon} {
        transform: scale(0.75);
      }
    `;
};
var TablePaginationRoot = styled_components_default(TableCell_default)``;

// src/components/TablePagination/TablePagination.tsx
var _RcTablePagination = forwardRef632((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTablePagination" });
  const {
    classes: classesProp,
    type: type3 = "displayedRows",
    ActionsComponent = RcTablePaginationActions,
    className,
    colSpan: colSpanProp,
    component = TableCell_default,
    count: count2,
    labelDisplayedRows = defaultLabelDisplayedRows,
    labelOfPage = defaultLabelOfPage,
    labelRowsPerPage = "Rows per page:",
    onPageChange,
    onRowsPerPageChange,
    rowsPerPageOptions = [10, 25, 50, 100],
    SelectProps = {},
    page,
    rowsPerPage,
    backIconButtonProps,
    nextIconButtonProps,
    ...rest
  } = props;
  const MenuItemComponent = SelectProps.native ? "option" : TablePaginationMenuItem;
  const totalPage = Math.ceil(count2 / rowsPerPage);
  const isPageSelection = type3 === "pageSelection";
  const classes = useMemo97(() => combineClasses(RcTablePaginationClasses, classesProp), [classesProp]);
  let colSpan;
  if (component === TableCell_default || component === "td") {
    colSpan = colSpanProp || 1e3;
  }
  const getLabelDisplayedRowsTo = () => {
    if (count2 === -1)
      return (page + 1) * rowsPerPage;
    return rowsPerPage === -1 ? count2 : Math.min(count2, (page + 1) * rowsPerPage);
  };
  const menuItems = useMemo97(() => {
    const menus = [];
    if (!isPageSelection)
      return menus;
    for (let i2 = 0; i2 < totalPage; i2++) {
      menus.push(/* @__PURE__ */ React731.createElement(MenuItemComponent, {
        value: i2,
        selected: i2 === page,
        key: i2,
        className: classes.menuItem,
        onClick: (e2) => {
          onPageChange?.(e2, i2);
        }
      }, i2 + 1));
    }
    return menus;
  }, [
    MenuItemComponent,
    classes,
    isPageSelection,
    onPageChange,
    page,
    totalPage
  ]);
  return /* @__PURE__ */ React731.createElement(TablePaginationRoot, {
    colSpan,
    ref: ref2,
    as: component,
    className: clsx_m_default(classes.root, className),
    ...rest
  }, /* @__PURE__ */ React731.createElement(RcToolbar, {
    className: classes.toolbar
  }, /* @__PURE__ */ React731.createElement("div", {
    className: classes.spacer
  }), rowsPerPageOptions.length > 1 && /* @__PURE__ */ React731.createElement(RcTypography, {
    color: "inherit",
    variant: "body1",
    className: classes.caption
  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /* @__PURE__ */ React731.createElement(RcSelect, {
    className: classes.selectRoot,
    InputProps: { disableUnderline: true },
    value: rowsPerPage,
    onChange: onRowsPerPageChange,
    ...SelectProps
  }, rowsPerPageOptions.map((rowsPerPageOption) => {
    const value = rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption;
    const label3 = rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption;
    return /* @__PURE__ */ React731.createElement(MenuItemComponent, {
      className: classes.menuItem,
      key: value,
      value
    }, label3);
  })), isPageSelection ? /* @__PURE__ */ React731.createElement(React731.Fragment, null, /* @__PURE__ */ React731.createElement(RcSelect, {
    value: page,
    InputProps: { disableUnderline: true },
    renderValue: (p) => p + 1,
    virtualize: true
  }, menuItems), /* @__PURE__ */ React731.createElement("p", {
    className: classes.caption
  }, labelOfPage({ totalPage }))) : /* @__PURE__ */ React731.createElement("p", {
    className: classes.caption
  }, labelDisplayedRows({
    from: count2 === 0 ? 0 : page * rowsPerPage + 1,
    to: getLabelDisplayedRowsTo(),
    count: count2 === -1 ? -1 : count2,
    page
  })), /* @__PURE__ */ React731.createElement(ActionsComponent, {
    className: classes.actions,
    backIconButtonProps,
    count: count2,
    nextIconButtonProps,
    onPageChange,
    page,
    rowsPerPage
  })));
});
var RcTablePagination = styled_components_default(_RcTablePagination)`
  ${TablePaginationStyle}
`;
RcTablePagination.displayName = "RcTablePagination";

// src/components/Tables/Table.tsx
import React732, { forwardRef as forwardRef633, useMemo as useMemo98 } from "react";

// src/components/Tables/types.ts
var TABLE_BORDER_TYPE;
(function(TABLE_BORDER_TYPE2) {
  TABLE_BORDER_TYPE2["BORDERED"] = "table-bordered";
  TABLE_BORDER_TYPE2["NONE"] = "";
})(TABLE_BORDER_TYPE || (TABLE_BORDER_TYPE = {}));
var TABLE_STICKY_TYPE;
(function(TABLE_STICKY_TYPE2) {
  TABLE_STICKY_TYPE2["STICKY"] = "table-sticky";
  TABLE_STICKY_TYPE2["NONE"] = "";
})(TABLE_STICKY_TYPE || (TABLE_STICKY_TYPE = {}));
var TABLE_TYPE;
(function(TABLE_TYPE2) {
  TABLE_TYPE2["AUTO"] = "table-auto";
  TABLE_TYPE2["MODAL"] = "table-modal";
  TABLE_TYPE2["CARD"] = "table-card";
  TABLE_TYPE2["FULL"] = "table-full";
})(TABLE_TYPE || (TABLE_TYPE = {}));
var COLUMN_TEXT_ALIGN;
(function(COLUMN_TEXT_ALIGN2) {
  COLUMN_TEXT_ALIGN2["LEFT"] = "left";
  COLUMN_TEXT_ALIGN2["RIGHT"] = "right";
})(COLUMN_TEXT_ALIGN || (COLUMN_TEXT_ALIGN = {}));
var ORDER_TABLE_BY;
(function(ORDER_TABLE_BY2) {
  ORDER_TABLE_BY2[ORDER_TABLE_BY2["ASC"] = 0] = "ASC";
  ORDER_TABLE_BY2[ORDER_TABLE_BY2["DESC"] = 1] = "DESC";
  ORDER_TABLE_BY2[ORDER_TABLE_BY2["NONE"] = 2] = "NONE";
})(ORDER_TABLE_BY || (ORDER_TABLE_BY = {}));
var ARIA_SORT_VALUES;
(function(ARIA_SORT_VALUES2) {
  ARIA_SORT_VALUES2["ASC"] = "ascending";
  ARIA_SORT_VALUES2["DESC"] = "descending";
  ARIA_SORT_VALUES2["NONE"] = "none";
  ARIA_SORT_VALUES2["OTHER"] = "other";
})(ARIA_SORT_VALUES || (ARIA_SORT_VALUES = {}));
var SORT_ICON_CLASS;
(function(SORT_ICON_CLASS2) {
  SORT_ICON_CLASS2["SORT_UP"] = "icon-sort-up";
  SORT_ICON_CLASS2["SORT_DOWN"] = "icon-sort-down";
})(SORT_ICON_CLASS || (SORT_ICON_CLASS = {}));

// src/components/Tables/styled.ts
var TableWrapper = styled_components_default("div")`
  height: 100%;
  width: 100%;
  overflow: auto;

  background-color: ${palette22("neutral", "b01")};
  &.${TABLE_BORDER_TYPE.BORDERED} {
    border-radius: 4px;
    border: 1px solid ${palette22("neutral", "l02")};
  }
`;
var StyledTable = styled_components_default("table")`
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;
  display: table;
  /* scroll when viewport is less than 960px including the 332px from left navs */
  min-width: ${spacing2(157)};

  @media only screen and (max-width: ${spacing2(157)}) {
    table-layout: auto;
  }

  &.${TABLE_STICKY_TYPE.STICKY} th {
    position: sticky;
    top: 0;
  }

  thead {
    border-bottom: 1px solid ${palette22("neutral", "l02")};
    width: 100%;
    position: sticky;
    top: 0;
    display: table-header-group;
    z-index: 5;
  }

  tbody {
    display: table-row-group;
  }

  tr {
    display: table-row;
    padding-left: ${spacing2(4)};

    th,
    td {
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      box-sizing: border-box;
      vertical-align: middle;
    }
    td:first-child {
      padding-left: ${spacing2(4)};
      margin-left: -${spacing2(4)};
    }
    td:not(:first-child) {
      padding-left: ${spacing2(4)};
      padding-right: ${spacing2(4)};
    }
  }

  &.${TABLE_TYPE.MODAL} tr td {
    overflow: hidden;
    height: 40px;
  }

  &.${TABLE_TYPE.CARD} tr td {
    overflow: hidden;
    height: 52px;
  }

  &.${TABLE_TYPE.FULL} tr td {
    overflow: hidden;
    height: 64px;
  }

  &.${TABLE_TYPE.AUTO} tr td {
    overflow: hidden;
    padding: ${spacing2(3, 4)};
    height: auto;
  }
`;
var StyledTableRow = styled_components_default("tr")`
  height: 25px;
  display: table-row;
  font-size: 12px;
  text-align: left;
  vertical-align: middle;
`;
var StyledSortIconWrapper = styled_components_default.div`
  padding-left: 8px;
  padding-right: 8px;
  vertical-align: middle;
  display: inline-flex;

  & path {
    fill: ${palette22("neutral", "f04")};
  }
`;
var StyledTableHeadText = styled_components_default.div`
  text-overflow: ellipsis;
  overflow: auto;
`;
var StyledTableHeadCell = styled_components_default("th")`
  color: ${(props) => props.sortDirection === ORDER_TABLE_BY.NONE ? palette22("neutral", "f06") : palette22("interactive", "f01")};
  user-select: none;
  text-align: left;
  background-color: ${(props) => props.sortDirection === ORDER_TABLE_BY.NONE ? palette22("neutral", "b02") : palette22("neutral", "b03")};
  z-index: 100;
  line-height: 32px;
  width: ${(props) => props.width};
  padding-top: 0;
  padding-bottom: 0;
  display: table-cell;
  white-space: nowrap;
  overflow: hidden;

  & > div {
    border: 1px solid inherit;
    padding-left: ${spacing2(4)};
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }

  ${({ hasSortKey }) => hasSortKey && css2`
      ${focusWithin} {
        background-color: ${palette22("neutral", "b03")};
        ${fakeBorder()};
        cursor: pointer;
        outline: none;
      }
      position: relative;
      ${focusVisibleShadowStyle()};
    `}
`;
var StyledTableHeadCellContent = styled_components_default.div`
  display: flex;
  align-items: center;

  flex-direction: ${({ textAlign: textAlign2 }) => textAlign2 === COLUMN_TEXT_ALIGN.RIGHT ? "row-reverse" : "row"};
  padding-left: ${({ textAlign: textAlign2 }) => textAlign2 === COLUMN_TEXT_ALIGN.RIGHT ? 0 : spacing2(4)};
  padding-right: ${({ textAlign: textAlign2 }) => textAlign2 === COLUMN_TEXT_ALIGN.RIGHT ? spacing2(4) : 0};
`;

// src/components/Tables/Table.tsx
var _RcTable = forwardRef633((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTable" });
  const {
    header: header3,
    children: children2,
    desc,
    tableSticky,
    tableType,
    tableBorder,
    classes,
    className
  } = props;
  const containerClass = useMemo98(() => {
    return clsx_m_default(className, classes?.root, {
      [TABLE_BORDER_TYPE.BORDERED]: tableBorder === TABLE_BORDER_TYPE.BORDERED
    });
  }, [className, classes, tableBorder]);
  const tableClass = useMemo98(() => {
    return clsx_m_default(classes?.table, tableType || TABLE_TYPE.CARD, {
      [TABLE_STICKY_TYPE.STICKY]: tableSticky === TABLE_STICKY_TYPE.STICKY
    });
  }, [classes, tableSticky, tableType]);
  return /* @__PURE__ */ React732.createElement(TableWrapper, {
    className: containerClass
  }, /* @__PURE__ */ React732.createElement(StyledTable, {
    className: tableClass,
    "aria-label": desc,
    ref: ref2
  }, header3 ? header3 : null, /* @__PURE__ */ React732.createElement("tbody", null, children2)));
});
var RcTable = styled_components_default(_RcTable)``;

// src/components/Tables/TableHead.tsx
import React734 from "react";

// src/components/Tables/TableHeadCell.tsx
var import_isFunction = __toModule(require_isFunction());
var import_isNumber = __toModule(require_isNumber());
import React733, { useMemo as useMemo99 } from "react";
var RcTableHeadCell = (inProps) => {
  const props = useThemeProps({ props: inProps, name: "RcTableHeadCell" });
  const { automationID, title, width: width2, sortDirection, sortKey, textAlign: textAlign2 } = props;
  const onClick = () => {
    const { sortHandler, sortKey: sortKey2, sortDirection: sortDirection2 } = props;
    if (sortKey2 === void 0 || !sortHandler) {
      return;
    }
    if (sortDirection2 === ORDER_TABLE_BY.ASC) {
      sortHandler(ORDER_TABLE_BY.DESC, sortKey2);
    } else {
      sortHandler(ORDER_TABLE_BY.ASC, sortKey2);
    }
  };
  const onKeyDown = useA11yKeyEvent(onClick);
  const shouldSort = () => {
    const { sortHandler, sortKey: sortKey2 } = props;
    return (0, import_isFunction.default)(sortHandler) && (0, import_isNumber.default)(sortKey2);
  };
  const sortDirectionArrow = useMemo99(() => {
    let sortClass = "";
    switch (sortDirection) {
      case ORDER_TABLE_BY.ASC:
        sortClass = SORT_ICON_CLASS.SORT_UP;
        break;
      case ORDER_TABLE_BY.DESC:
        sortClass = SORT_ICON_CLASS.SORT_DOWN;
        break;
      default:
    }
    if (shouldSort()) {
      return /* @__PURE__ */ React733.createElement(StyledSortIconWrapper, {
        className: sortClass
      }, /* @__PURE__ */ React733.createElement(RcIcon, {
        symbol: sortDirection === ORDER_TABLE_BY.ASC ? JumpToUnread_default : JumpToLatest_default,
        size: "small"
      }));
    }
    return /* @__PURE__ */ React733.createElement(React733.Fragment, null);
  }, [shouldSort, sortDirection]);
  const ariaSort = {
    ...sortDirection !== void 0 && [ORDER_TABLE_BY.ASC, ORDER_TABLE_BY.DESC].includes(sortDirection) && {
      "aria-sort": ARIA_SORT_VALUES[ORDER_TABLE_BY[sortDirection]]
    }
  };
  const headCellSortProps = {
    ...shouldSort() && {
      onKeyDown,
      ...ariaSort
    }
  };
  const cellContentSortProps = {
    ...shouldSort() && {
      role: "button",
      onClickCapture: onClick
    }
  };
  const hasSortKey = sortKey !== void 0;
  return /* @__PURE__ */ React733.createElement(StyledTableHeadCell, {
    scope: "col",
    tabIndex: hasSortKey ? 0 : void 0,
    width: width2,
    hasSortKey,
    sortDirection,
    "data-test-automation-value": automationID,
    "data-test-automation-class": "table-header-cell",
    ...headCellSortProps
  }, /* @__PURE__ */ React733.createElement(StyledTableHeadCellContent, {
    textAlign: textAlign2,
    ...cellContentSortProps
  }, /* @__PURE__ */ React733.createElement(StyledTableHeadText, null, title), sortDirectionArrow));
};

// src/components/Tables/TableHead.tsx
var RcTableHeadView = (inProps) => {
  const props = useThemeProps({ props: inProps, name: "RcTableHeadView" });
  const { columnData, sortMap, sortHandler } = props;
  return /* @__PURE__ */ React734.createElement("thead", null, /* @__PURE__ */ React734.createElement(StyledTableRow, null, columnData.map((column) => {
    const sortDirection = sortMap && sortMap.sortKey === column.sortKey ? sortMap.sortDirection : ORDER_TABLE_BY.NONE;
    return /* @__PURE__ */ React734.createElement(RcTableHeadCell, {
      key: `${column.sortKey}-${column.title}`,
      width: column.width,
      title: column.title,
      sortDirection,
      sortKey: column.sortKey,
      sortHandler,
      textAlign: column.textAlign,
      automationID: column.automationID
    });
  })));
};

// src/components/Tables/TableRow.tsx
var RcTableRow = styled_components_default.tr`
  outline: none;

  &:not(:last-child) {
    border-bottom: 1px solid ${palette22("neutral", "l02")};
  }

  &:hover {
    background-color: ${setOpacity(palette22("action", "grayLight"), "08")};
  }
`;

// src/components/Tables/TableBodyCellContent.tsx
import React735, { forwardRef as forwardRef634 } from "react";
var _RcTableBodyCellContent = forwardRef634(({ children: children2, noWrap = true, ...rest }, ref2) => /* @__PURE__ */ React735.createElement(RcTypography, {
  ref: ref2,
  noWrap,
  component: "div",
  color: "neutral.f05",
  ...rest
}, children2));
var RcTableBodyCellContent = styled_components_default(_RcTableBodyCellContent)`
  text-align: ${({ textAlign: textAlign2 }) => textAlign2};
`;

// src/components/Tabs/Tabs/Tabs.tsx
import React739, { forwardRef as forwardRef638, useMemo as useMemo103 } from "react";

// src/components/Tabs/Tabs/MoreMenuTabs/MoreMenuTabs.tsx
var import_isEqual = __toModule(require_isEqual());
import React738, {
  createRef as createRef2,
  forwardRef as forwardRef637,
  useEffect as useEffect62,
  useMemo as useMemo102,
  useRef as useRef97,
  useState as useState48
} from "react";

// src/components/Tabs/Tabs/MoreMenuTab/MoreMenuTab.tsx
import React737, { forwardRef as forwardRef636, useMemo as useMemo101, useState as useState47 } from "react";

// src/components/Tabs/Tab/Tab.tsx
import React736, { forwardRef as forwardRef635, useMemo as useMemo100 } from "react";

// src/components/Tabs/Tab/utils/TabUtils.ts
var RcTabClasses = RcClasses(["labelIcon", "wrapper", "selected"], "RcTab");

// src/components/Tabs/Tab/styles/TabStyle.tsx
var getMinHeight = (size) => size === "large" ? 60 : 32;
var TabStyle = (props) => {
  const { size, direction: directionProp } = props;
  const isVertical = directionProp === "vertical";
  return css2`
    text-transform: none;
    box-sizing: border-box;
    ${typography4("body1")};
    color: ${palette22("tab", "default")};

    &.${RcTabClasses.selected} {
      ${typography4("body2")};
      color: ${palette22("tab", "selected")};
    }

    min-height: ${px2(getMinHeight(size))};
    min-width: 32px;

    ${directionProp !== void 0 && css2`
      .${RcTabClasses.wrapper} {
        flex-direction: ${isVertical ? "row" : "column"};
      }

      &.${RcTabClasses.labelIcon} .${RcTabClasses.wrapper} > *:first-child {
        margin-bottom: ${isVertical && "unset"};
        // 6px is follow mui
        margin-right: ${isVertical && "6px"};
      }
    `}
  `;
};

// src/components/Tabs/Tab/Tab.tsx
var _RcTab = forwardRef635((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTab" });
  const { classes: classesProp, children: children2, direction, ...rest } = props;
  const classes = useMemo100(() => combineProps(RcTabClasses, classesProp), [classesProp]);
  return /* @__PURE__ */ React736.createElement(Tab_default, {
    ...rest,
    ref: ref2,
    classes
  });
});
var RcTab = styled_components_default(_RcTab)`
  ${TabStyle}
`;
RcTab.defaultProps = {
  size: "small"
};
RcTab.displayName = "RcTab";

// src/components/Tabs/Tabs/MoreMenuTabs/utils/MoreMenuTabsUtils.ts
var DEFAULT_SIZE = {
  width: 0,
  height: 0
};
var computeChildBySize = (labelArray, fixLabel, limitSize) => {
  let plainArr = [];
  let groupArr = [];
  let sumSize = 0;
  let groupFlag = false;
  labelArray.forEach((_label) => {
    const { key: label3, size } = _label;
    if (groupFlag === false && sumSize + size < limitSize) {
      sumSize += size;
      plainArr.push(label3);
    } else {
      groupFlag = true;
      groupArr.push(label3);
    }
  });
  if (fixLabel && groupArr.includes(fixLabel)) {
    plainArr = [];
    groupArr = [];
    let fixLabelSize = 0;
    labelArray.forEach((_label) => {
      const { key: label3, size } = _label;
      if (label3 === fixLabel) {
        fixLabelSize = size;
      }
    });
    let sumFixSize = 0;
    let groupFlag2 = false;
    labelArray.forEach((_label) => {
      const { key: label3, size } = _label;
      if (label3 === fixLabel) {
        return;
      }
      if (groupFlag2 === false && sumFixSize + size < limitSize - fixLabelSize) {
        sumFixSize += size;
        plainArr.push(label3);
      } else {
        groupFlag2 = true;
        groupArr.push(label3);
      }
    });
    plainArr.push(fixLabel);
  }
  return {
    plainArr,
    groupArr
  };
};
var getDomBoundingClientSize = (dom) => {
  if (!dom || dom.nodeType !== 1) {
    return DEFAULT_SIZE;
  }
  const { width: width2, height: height2 } = dom.getBoundingClientRect();
  return {
    width: width2,
    height: height2
  };
};
var getKey = (keyProp, idx) => {
  return `childIdx_${idx}${keyProp ? `_propKey_${keyProp}` : ""}`;
};
var parseKey = (key) => {
  const match2 = /^(?:childIdx_)(\d+)(?:_propKey_)?(.*)/gi.exec(key);
  return {
    index: match2?.[1],
    key: match2?.[2].replace(/^\.\$/i, "")
  };
};

// src/components/Tabs/Tabs/MoreMenuTab/styles/MoreMenuTabStyle.tsx
var MoreMenuTabStyle = ({
  orientation
}) => {
  const isVertical = orientation === "vertical";
  return css2`
    position: absolute;
    bottom: 0;

    ${isVertical ? css2`
          width: 100%;
        ` : css2`
          top: 0;
          right: 0;
        `}
  `;
};

// src/components/Tabs/Tabs/MoreMenuTab/MoreMenuTab.tsx
var DEFAULT_MORE_MENU_TAB_LABEL = "more_menu_tab";
var _MoreMenuTab = forwardRef636((props, ref2) => {
  const {
    menuItems,
    MenuProps = {},
    TooltipProps,
    onChange,
    MoreIcon: MoreIconProp,
    ...rest
  } = props;
  const {
    id: menuIdProp,
    onClose: onMenuCloseProp,
    ...MenuPropsRest
  } = MenuProps;
  const menuId = useId2(menuIdProp);
  const [anchorEl, setAnchorEl] = useState47(null);
  const MoreIcon = useMemo101(() => {
    const Icon = MoreIconProp || /* @__PURE__ */ React737.createElement(RcIcon, {
      size: "medium",
      color: "neutral.f04",
      symbol: MoreHoriz_default
    });
    if (TooltipProps?.title) {
      return /* @__PURE__ */ React737.createElement(RcTooltip, {
        ...TooltipProps
      }, Icon);
    }
    return Icon;
  }, [MoreIconProp, TooltipProps]);
  const handleTabClick = useEventCallback2((event) => {
    setAnchorEl(event.currentTarget);
  });
  const handleMenuClose = useEventCallback2((event, reason) => {
    setAnchorEl(null);
    onMenuCloseProp?.(event, reason);
  });
  const MenuList3 = useMemo101(() => {
    if (!menuItems || menuItems.length === 0) {
      return null;
    }
    return menuItems.map((item, idx) => {
      const {
        icon,
        label: label3,
        value,
        disabled: disabled3,
        onClick,
        selected,
        ...menuItemRest
      } = item;
      const handleClick = (event) => {
        onChange?.(event, value);
        onClick?.(event);
      };
      return /* @__PURE__ */ React737.createElement(RcMenuItem, {
        key: getKey(menuItemRest.key, idx),
        disabled: disabled3,
        selected,
        value,
        onClick: handleClick,
        "data-test-automation-id": menuItemRest["data-test-automation-id"]
      }, icon ? /* @__PURE__ */ React737.createElement(RcListItemIcon, null, icon) : null, /* @__PURE__ */ React737.createElement(RcListItemText, {
        primary: label3 || value
      }));
    });
  }, [menuItems, onChange]);
  return /* @__PURE__ */ React737.createElement(React737.Fragment, null, /* @__PURE__ */ React737.createElement(RcTab, {
    ...rest,
    ref: ref2,
    onClick: handleTabClick,
    label: MoreIcon,
    value: DEFAULT_MORE_MENU_TAB_LABEL,
    "aria-haspopup": "true",
    "aria-controls": menuId
  }), /* @__PURE__ */ React737.createElement(RcMenu, {
    autoClose: true,
    ...MenuPropsRest,
    id: menuId,
    anchorEl,
    open: Boolean(anchorEl),
    variant: "menu",
    onClose: handleMenuClose
  }, MenuList3));
});
var MoreMenuTab = styled_components_default(_MoreMenuTab)`
  ${MoreMenuTabStyle}
`;
MoreMenuTab.defaultProps = {
  label: DEFAULT_MORE_MENU_TAB_LABEL,
  value: DEFAULT_MORE_MENU_TAB_LABEL
};
MoreMenuTab.displayName = "MoreMenuTab";

// src/components/Tabs/Tabs/MoreMenuTabs/MoreMenuTabs.tsx
var findChildrenByKey = (childrenProp, key) => {
  let children2;
  React738.Children.forEach(childrenProp, (child, idx) => {
    if (React738.isValidElement(child)) {
      const keyString = typeof child.key === "string" ? child.key : "";
      if (getKey(keyString, idx) === key) {
        children2 = child;
      }
    }
  });
  return children2;
};
var _MoreMenuTabs = forwardRef637((props, ref2) => {
  const {
    orientation,
    children: childrenProp,
    value: valueProp,
    onChange,
    MoreButtonProps = {},
    ...rest
  } = props;
  const { onGroupInfoChange, ...MoreButtonPropsRest } = MoreButtonProps;
  const isVertical = orientation === "vertical";
  const oriStr = isVertical ? "height" : "width";
  const innerRef = useRef97(null);
  const moreTabRef = useRef97(null);
  const tabsRef = useForkRef2(innerRef, ref2);
  const tabRefsMapRef = useRef97();
  const moreTabSizeRef = useRef97(DEFAULT_SIZE);
  const allTabsSizeRef = useRef97(DEFAULT_SIZE);
  const tabsTabChildRef = useRef97([]);
  const tabsSizeRef = useRef97(DEFAULT_SIZE);
  const groupingRef = useRef97();
  const [menuTabChild, setMenuTabChild] = useState48([]);
  const [useMoreMode, setUseMoreMode] = useState48(true);
  const sizeChangeResolve = useRef97(true);
  const forceUpdate = useForceUpdate();
  const sizeChange = (size) => {
    if (tabsSizeRef.current.height !== size.height || tabsSizeRef.current.width !== size.width) {
      tabsSizeRef.current = size;
      forceUpdate();
    }
  };
  const throttleTabsSizeChange = useThrottle(sizeChange, 300);
  useResizeObserver(innerRef, ([entry]) => {
    const { width: width2, height: height2 } = entry.contentRect;
    const obj = { width: width2, height: height2 };
    sizeChangeResolve.current = false;
    throttleTabsSizeChange(obj);
  }, { mode: "none" });
  const tabsSize = tabsSizeRef.current;
  if (tabRefsMapRef.current === void 0) {
    const getRefsMapAndSetDefaultTabChildren = () => {
      const tabRefs2 = new Map();
      const tabsTabDefaultChild2 = [];
      React738.Children.forEach(childrenProp, (child, index4) => {
        const { ref: ref3, value } = child.props;
        const innerRef2 = createRef2();
        const tabRef = ref3 ? useForkRef2(innerRef2, ref3) : innerRef2;
        const childrenValue = value || index4;
        const children2 = React738.cloneElement(child, {
          ref: tabRef,
          value: childrenValue
        });
        const keyString = typeof child.key === "string" ? child.key : "";
        tabRefs2.set(getKey(keyString, index4), {
          ref: tabRef,
          size: null,
          index: index4,
          value: childrenValue
        });
        tabsTabDefaultChild2.push(children2);
      });
      return {
        tabRefs: tabRefs2,
        tabsTabDefaultChild: tabsTabDefaultChild2
      };
    };
    const { tabRefs, tabsTabDefaultChild } = getRefsMapAndSetDefaultTabChildren();
    tabRefsMapRef.current = tabRefs;
    tabsTabChildRef.current = tabsTabDefaultChild;
  }
  useEffect62(() => {
    const tabRefsMap = tabRefsMapRef.current;
    if (tabRefsMap?.size !== void 0) {
      const allTabsSize = { ...DEFAULT_SIZE };
      tabRefsMap.forEach((value, key) => {
        const { width: width2, height: height2 } = getDomBoundingClientSize(value.ref.current);
        allTabsSize.width += width2;
        allTabsSize.height += height2;
        const newRef = {
          ref: value.ref,
          size: { width: width2, height: height2 },
          index: value.index,
          value: value.value
        };
        tabRefsMap.set(key, newRef);
      });
      allTabsSizeRef.current = allTabsSize;
    }
    const moreElm = moreTabRef?.current;
    if (moreElm) {
      const size = getDomBoundingClientSize(moreElm);
      moreTabSizeRef.current = size;
    }
  }, []);
  useEffect62(() => {
    let currSelectMenuItem;
    const tabRefsMap = tabRefsMapRef.current;
    if (tabRefsMap) {
      currSelectMenuItem = [...tabRefsMap].find(([, mapValue]) => {
        return valueProp === mapValue.value || valueProp === mapValue.index;
      });
    }
    const computeGroupingInfo = (tabsTabLabel, menuTabLabel) => {
      const newGrouping = {
        tabs: tabsTabLabel,
        menu: menuTabLabel
      };
      if (!(0, import_isEqual.default)(groupingRef.current, newGrouping)) {
        groupingRef.current = newGrouping;
        onGroupInfoChange?.([
          tabsTabLabel.map((key) => parseKey(key)),
          menuTabLabel.map((key) => parseKey(key))
        ]);
      }
    };
    const computeWhetherToUseMoreMode = (tabsSize2, allTabsSize) => {
      if (allTabsSize.width === 0 || allTabsSize.height === 0 || tabsSize2.width === 0 || tabsSize2.height === 0) {
        return false;
      }
      if (!isVertical) {
        return allTabsSize.width > tabsSize2.width;
      }
      return allTabsSize.height > tabsSize2.height;
    };
    const computedMoreModeChild = (tabRefsMap2) => {
      const labelArray = [];
      tabRefsMap2.forEach((value, key) => {
        labelArray.push({
          key,
          size: value.size ? value.size[oriStr] : 0
        });
      });
      const limitSize = tabsSize[oriStr] - moreTabSizeRef.current[oriStr];
      const { plainArr: tabsTabLabel, groupArr: menuTabLabel } = computeChildBySize(labelArray, currSelectMenuItem?.[0], limitSize);
      computeGroupingInfo(tabsTabLabel, menuTabLabel);
      const tabsTabChild = tabsTabLabel.map((key) => findChildrenByKey(childrenProp, key));
      const menuTabChild2 = menuTabLabel.map((key) => findChildrenByKey(childrenProp, key));
      tabsTabChildRef.current = tabsTabChild;
      setMenuTabChild(menuTabChild2);
    };
    const computedStandardModeChild = (tabRefsMap2) => {
      const tabsTabLabel = [];
      tabRefsMap2.forEach((value, key) => {
        tabsTabLabel.push(key);
      });
      computeGroupingInfo(tabsTabLabel, []);
      const tabsTabChild = tabsTabLabel.map((key) => findChildrenByKey(childrenProp, key));
      tabsTabChildRef.current = tabsTabChild;
      setMenuTabChild([]);
    };
    const computeTabChild = (tabsSize2) => {
      const useMoreMode2 = computeWhetherToUseMoreMode(tabsSize2, allTabsSizeRef.current);
      setUseMoreMode(useMoreMode2);
      if (tabRefsMap) {
        useMoreMode2 ? computedMoreModeChild(tabRefsMap) : computedStandardModeChild(tabRefsMap);
      }
    };
    if (tabsSize.width !== 0 && tabsSize.height !== 0) {
      if (groupingRef.current?.tabs.includes(currSelectMenuItem?.[0] || "") && sizeChangeResolve.current === true) {
        return;
      }
      computeTabChild(tabsSize);
      sizeChangeResolve.current = true;
    }
  }, [
    childrenProp,
    isVertical,
    onGroupInfoChange,
    oriStr,
    tabsSize,
    valueProp
  ]);
  const MoreMenuTabCmp = useMemo102(() => {
    const menuItems = React738.Children.map(menuTabChild, (child) => {
      return { ...child.props };
    });
    return useMoreMode ? /* @__PURE__ */ React738.createElement(MoreMenuTab, {
      ...MoreButtonPropsRest,
      key: DEFAULT_MORE_MENU_TAB_LABEL,
      size: rest.size,
      menuItems,
      ref: moreTabRef,
      onChange,
      orientation
    }) : null;
  }, [
    MoreButtonPropsRest,
    menuTabChild,
    onChange,
    orientation,
    rest.size,
    useMoreMode
  ]);
  return /* @__PURE__ */ React738.createElement(Tabs_default, {
    ...rest,
    ref: tabsRef,
    value: valueProp,
    variant: "standard",
    indicatorColor: "primary",
    textColor: "primary",
    onChange,
    orientation
  }, tabsTabChildRef.current, MoreMenuTabCmp);
});
var MoreMenuTabs = styled_components_default(_MoreMenuTabs)``;
MoreMenuTabs.displayName = "MoreMenuTabs";

// src/components/Tabs/Tabs/utils/TabsUtils.ts
var RcTabsClasses = RcClasses(["indicator"], "RcTabs");

// src/components/Tabs/Tabs/styles/TabsStyle.tsx
var TabsStyle = () => {
  return css2`
    min-height: auto;

    .${RcTabsClasses.indicator} {
      background-color: ${palette22("tab", "selected")};
    }
  `;
};

// src/components/Tabs/Tabs/Tabs.tsx
var _RcTabs = forwardRef638((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTabs" });
  const {
    classes: classesProp,
    children: childrenProp,
    variant: variantProp,
    size,
    MoreButtonProps,
    ...rest
  } = props;
  const isMore = variantProp === "moreMenu";
  const classes = useMemo103(() => combineProps(RcTabsClasses, classesProp), [classesProp]);
  const children2 = React739.Children.map(childrenProp, (child) => React739.cloneElement(child, { size }));
  if (isMore) {
    return /* @__PURE__ */ React739.createElement(MoreMenuTabs, {
      ...rest,
      ref: ref2,
      classes,
      size,
      MoreButtonProps
    }, children2);
  }
  return /* @__PURE__ */ React739.createElement(Tabs_default, {
    ...rest,
    ref: ref2,
    classes,
    variant: isMore ? "standard" : variantProp,
    indicatorColor: "primary",
    textColor: "primary"
  }, children2);
});
var RcTabs = styled_components_default(_RcTabs)`
  ${TabsStyle}
`;
RcTabs.defaultProps = {
  variant: "standard",
  size: "small"
};
RcTabs.displayName = "RcTabs";

// node_modules/@material-ui/lab/esm/TabContext/TabContext.js
var PropTypes121 = __toModule(require_prop_types());
import {
  createContext as createContext24,
  createElement as createElement133,
  useContext as useContext31,
  useEffect as useEffect63,
  useMemo as useMemo104,
  useState as useState49
} from "react";
var Context = createContext24(null);
if (true) {
  Context.displayName = "TabContext";
}
function useUniquePrefix() {
  var _React$useState = useState49(null), id3 = _React$useState[0], setId = _React$useState[1];
  useEffect63(function() {
    setId("mui-p-".concat(Math.round(Math.random() * 1e5)));
  }, []);
  return id3;
}
function TabContext(props) {
  var children2 = props.children, value = props.value;
  var idPrefix = useUniquePrefix();
  var context = useMemo104(function() {
    return {
      idPrefix,
      value
    };
  }, [idPrefix, value]);
  return /* @__PURE__ */ createElement133(Context.Provider, {
    value: context
  }, children2);
}
true ? TabContext.propTypes = {
  children: PropTypes121.node,
  value: PropTypes121.string.isRequired
} : void 0;
function useTabContext() {
  return useContext31(Context);
}
function getPanelId(context, value) {
  var idPrefix = context.idPrefix;
  if (idPrefix === null) {
    return null;
  }
  return "".concat(context.idPrefix, "-P-").concat(value);
}
function getTabId(context, value) {
  var idPrefix = context.idPrefix;
  if (idPrefix === null) {
    return null;
  }
  return "".concat(context.idPrefix, "-T-").concat(value);
}

// src/components/Tabs/TabContext/TabContext.tsx
var RcTabContext = TabContext;
RcTabContext.displayName = "RcTabContext";

// src/components/Tabs/TabList/TabList.tsx
import React741, { forwardRef as forwardRef639, useMemo as useMemo105 } from "react";

// src/components/Tabs/TabList/styles/TabListStyle.tsx
var TabListStyle = () => {
  return css2``;
};

// src/components/Tabs/TabList/utils/TabListUtils.ts
var RcTabListClasses = RcClasses([], "RcTabList");

// src/components/Tabs/TabList/TabList.tsx
var _RcTabList = forwardRef639((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTabList" });
  const { classes: classesProp, children: childrenProp, ...rest } = props;
  const classes = useMemo105(() => combineClasses(RcTabListClasses, classesProp), [classesProp]);
  const context = useTabContext();
  if (context === null) {
    throw new TypeError("[RcTabList] No TabContext provided");
  }
  const children2 = React741.Children.map(childrenProp, (child) => {
    const { value } = child.props;
    return React741.cloneElement(child, {
      "aria-controls": getPanelId(context, value),
      id: getTabId(context, value)
    });
  });
  return /* @__PURE__ */ React741.createElement(RcTabs, {
    ...rest,
    ref: ref2,
    classes,
    value: context.value
  }, children2);
});
var RcTabList = styled_components_default(_RcTabList)`
  ${TabListStyle}
`;
RcTabList.defaultProps = {};
RcTabList.displayName = "RcTabList";

// src/components/Tabs/TabPanel/TabPanel.tsx
import React743, { forwardRef as forwardRef641, useMemo as useMemo106 } from "react";

// node_modules/@material-ui/lab/esm/TabPanel/TabPanel.js
var import_prop_types125 = __toModule(require_prop_types());
import {
  createElement as createElement134,
  forwardRef as forwardRef640
} from "react";
var styles156 = function styles157(theme) {
  return {
    root: {
      padding: theme.spacing(3)
    }
  };
};
var TabPanel = /* @__PURE__ */ forwardRef640(function TabPanel2(props, ref2) {
  var children2 = props.children, className = props.className, classes = props.classes, value = props.value, other = _objectWithoutProperties(props, ["children", "className", "classes", "value"]);
  var context = useTabContext();
  if (context === null) {
    throw new TypeError("No TabContext provided");
  }
  var id3 = getPanelId(context, value);
  var tabId = getTabId(context, value);
  return /* @__PURE__ */ createElement134("div", _extends({
    "aria-labelledby": tabId,
    className: clsx_m_default(classes.root, className),
    hidden: value !== context.value,
    id: id3,
    ref: ref2,
    role: "tabpanel"
  }, other), value === context.value && children2);
});
true ? TabPanel.propTypes = {
  children: import_prop_types125.default.node,
  classes: import_prop_types125.default.object,
  className: import_prop_types125.default.string,
  value: import_prop_types125.default.string.isRequired
} : void 0;
var TabPanel_default = withStyles_default2(styles156, {
  name: "MuiTabPanel"
})(TabPanel);

// src/components/Tabs/TabPanel/styles/TabPanelStyle.tsx
var TabPanelStyle = () => {
  return css2``;
};

// src/components/Tabs/TabPanel/utils/TabPanelUtils.ts
var RcTabPanelClasses = RcClasses([], "RcTabPanel");

// src/components/Tabs/TabPanel/TabPanel.tsx
var _RcTabPanel = forwardRef641((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTabPanel" });
  const { classes: classesProp, children: children2, ...rest } = props;
  const classes = useMemo106(() => combineClasses(RcTabPanelClasses, classesProp), [classesProp]);
  const context = useTabContext();
  if (context === null) {
    throw new TypeError("[RcTabList] No RcTabContext provided");
  }
  return /* @__PURE__ */ React743.createElement(TabPanel_default, {
    ...rest,
    ref: ref2,
    classes
  }, children2);
});
var RcTabPanel = styled_components_default(_RcTabPanel)`
  ${TabPanelStyle}
`;
RcTabPanel.defaultProps = {};
RcTabPanel.displayName = "RcTabPanel";

// src/components/Tag/Tag.tsx
import React744, { forwardRef as forwardRef642, memo as memo427 } from "react";

// src/components/Tag/utils/TagUtils.ts
var colorMap2 = {
  primary: "highlight.b03",
  secondary: "neutral.b04",
  main: "interactive.b02"
};

// src/components/Tag/styles/TagStyle.tsx
var TagStyle = ({
  textColor: textColor4,
  color: color2,
  borderColor: borderColor2,
  radius: radiusProp
}) => {
  const backgroundColor3 = getParsePaletteColor(typeof color2 === "string" && colorMap2[color2] || color2);
  return css2`
    display: inline-block;

    background-color: ${backgroundColor3};
    color: ${getParsePaletteColor(textColor4)};
    ${borderColor2 && css2`
      border: 1px solid ${getParsePaletteColor(borderColor2)};
    `};

    border-radius: ${radius3(radiusProp)};
    text-align: center;
    padding: ${spacing2(0, 2)};
    ${typography4("caption1")};
    min-width: ${spacing2(9)};
    max-width: ${spacing2(41)};
    ${ellipsis}
  `;
};

// src/components/Tag/Tag.tsx
var _RcTag = memo427(forwardRef642((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcTag" });
  const {
    color: color2,
    children: children2,
    content: content3,
    textColor: textColor4,
    borderColor: borderColor2,
    radius: radius4,
    ...rest
  } = props;
  return /* @__PURE__ */ React744.createElement("span", {
    ...rest,
    ref: ref2
  }, content3 || children2);
}));
var RcTag = styled_components_default(withDeprecatedCheck(_RcTag, [
  {
    prop: "content",
    comment: "you should replace with children",
    time: "2021-1"
  }
]))`
  ${TagStyle}
`;
RcTag.defaultProps = {
  color: "highlight.b03",
  textColor: "neutral.f01",
  radius: "xl"
};
RcTag.displayName = "RcTag";

// src/components/Text/Text.tsx
import React745, { forwardRef as forwardRef643, useMemo as useMemo107, useRef as useRef98, useState as useState50 } from "react";
var import_isString3 = __toModule(require_isString());

// src/components/Text/styles/StyledText.tsx
var highlightClassName = "highlight-term";
var textStyle = (props) => {
  const { titleWhenOverflow, flexFull } = props;
  return css2`
    ${typeof titleWhenOverflow === "number" && css2`
      overflow: hidden;
      display: -webkit-box;
      -webkit-line-clamp: ${titleWhenOverflow};
      -webkit-box-orient: vertical;
      white-space: normal;
    `};

    flex: ${flexFull && "1 1 auto"};

    &.${highlightClassName} {
      color: ${palette22("highlight", "f01")} !important;
      background-color: ${palette22("highlight", "b02")} !important;
    }
  `;
};

// src/components/Text/Text.tsx
var _RcText = forwardRef643((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcText" });
  const {
    children: children2,
    className: classNameProp,
    flexFull,
    highlight: highlight3,
    title,
    titleWhenOverflow,
    useRcTooltip,
    TooltipProps: TooltipPropsProp,
    ...rest
  } = props;
  const [isShowTitle, setIsShowTitle] = useState50(true);
  const innerRef = useRef98(null);
  const textRef = useForkRef2(innerRef, ref2);
  if (titleWhenOverflow) {
    useOverflow(innerRef, (state) => setIsShowTitle(state));
  }
  const className = useMemo107(() => clsx_m_default(classNameProp, { [highlightClassName]: highlight3 }), [classNameProp, highlight3]);
  const TooltipProps = useMemo107(() => combineProps({
    tooltipForceHide: !isShowTitle
  }, TooltipPropsProp), [TooltipPropsProp, isShowTitle]);
  return /* @__PURE__ */ React745.createElement(RcTypography, {
    ref: textRef,
    title: isShowTitle || useRcTooltip ? title || ((0, import_isString3.default)(children2) ? children2 : void 0) : void 0,
    TooltipProps,
    useRcTooltip,
    variant: highlight3 ? "inherit" : void 0,
    component: highlight3 ? "span" : void 0,
    className,
    ...rest
  }, children2);
});
var RcText = styled_components_default(_RcText)`
  ${textStyle}
`;
RcText.defaultProps = {
  noWrap: true
};

// src/components/Text/TextWithEllipsis.tsx
import React746, { forwardRef as forwardRef644 } from "react";
var _RcTextWithEllipsis = forwardRef644((props, ref2) => {
  useDeprecatedLog({
    component: "RcTextWithEllipsis",
    message: "should not use that, just use `RcText` with `titleWhenOverflow` and `flexFull`"
  });
  return /* @__PURE__ */ React746.createElement(Typography_default, {
    ...props,
    ref: ref2
  });
});
var RcTextWithEllipsis = styled_components_default(_RcTextWithEllipsis)`
  ${ellipsis()};
  flex: 1 1 auto;
`;

// src/components/Thumbnail/Thumbnail.tsx
import React747, { forwardRef as forwardRef645, memo as memo428 } from "react";

// src/components/Thumbnail/utils/ThumbnailUtils.ts
var RcThumbnailSizes = {
  small: 20,
  large: 36
};

// src/components/Thumbnail/styles/StyledThumbnail.tsx
var StyledThumbnail = styled_components_default.span`
  ${({ size, src }) => css2`
    width: ${RcThumbnailSizes[size]}px;
    height: ${RcThumbnailSizes[size]}px;
    background-image: url(${src});
    border-radius: ${radius3(size === "small" ? "sm" : "lg")};
  `};
  display: inline-block;
  background-color: ${palette22("neutral", "b03")};
  ${fakeBorder()};
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
`;

// src/components/Thumbnail/Thumbnail.tsx
var _RcThumbnail = forwardRef645((inProps, ref2) => {
  const props = useThemeProps({ props: inProps, name: "RcThumbnail" });
  const { url, src = url, iconType, size, symbol, ...rest } = props;
  return /* @__PURE__ */ React747.createElement(React747.Fragment, null, src ? /* @__PURE__ */ React747.createElement(StyledThumbnail, {
    ref: ref2,
    src,
    size,
    "data-test-automation-id": "thumbnail",
    ...rest
  }) : /* @__PURE__ */ React747.createElement(RcIcon, {
    ref: ref2,
    "data-test-automation-id": "iconThumbnail",
    ...rest,
    size: size === "small" ? "small" : "xxxlarge",
    symbol
  }, iconType));
});
var RcThumbnail = styled_components_default(withDeprecatedCheck(memo428(_RcThumbnail), [
  {
    prop: "iconType",
    time: "2021-2",
    comment: "Please use symbol to set icon"
  },
  {
    prop: "url",
    time: "2021-2",
    comment: "Please use src to set url"
  }
], "RcThumbnail"))``;
RcThumbnail.defaultProps = {
  size: "large"
};
RcThumbnail.displayName = "RcThumbnail";

// src/components/index.ts
__reExport(components_exports, Transitions_exports);

// src/index.ts
__reExport(src_exports, components_exports);

// framer/src/index.ts
__reExport(src_exports2, src_exports);
export {
  ARIA_SORT_VALUES,
  COLUMN_TEXT_ALIGN,
  CSSTransition_default as CSSTransition,
  CheckboxStyle,
  ClickAwayListener_default as ClickAwayListener,
  ConnectSymbol,
  Connectable,
  DEFAULT_FORMAT,
  DEFAULT_GET_OPTION_LABEL,
  DEFAULT_KEY_TO_CHIPS,
  DEFAULT_LIMIT_CHIPS,
  DialPadButton,
  GroupedVirtuoso,
  HALF_DAY_HOURS,
  HOUR_MINUTES,
  NumberPicker,
  ONE_HOUR,
  ORDER_TABLE_BY,
  PortalManager,
  PortalStore,
  RcAccordion,
  RcAccordionDetails,
  RcAccordionSummary,
  RcAlert,
  RcAppBar,
  RcAutocompleteDefaultFilterOptions,
  ExportType as RcAvatar,
  RcBackdrop,
  RcBadge,
  RcBox,
  RcButton,
  RcButtonBase,
  RcButtonGroup,
  RcCard,
  RcCardActionArea,
  RcCardActions,
  RcCardContent,
  RcCardHeader,
  RcCardHoverActions,
  RcCardMedia,
  RcCardSelectionArea,
  RcCheckbox,
  RcCheckboxClasses,
  RcChip,
  RcCircularProgress,
  RcClasses,
  RcCollapse,
  RcDatePicker,
  RcDatePickerClasses,
  RcDefaultDarkTheme,
  RcDefaultHighContrastTheme,
  RcDetachedWindow,
  RcDetachedWindowStylesProvider,
  RcDialDelete,
  RcDialPad,
  RcDialTextField,
  RcDialer,
  RcDialerPadSounds_default as RcDialerPadSounds,
  RcDialog,
  RcDialogActions,
  RcDialogContent,
  RcDialogContentText,
  RcDialogContext,
  RcDialogTitle,
  RcDivider,
  ExportType2 as RcDownshift,
  RcDownshiftDefaultFilterOptions,
  RcDownshiftDefaultRenderNoOptions,
  RcDownshiftInput,
  RcDownshiftInputClasses,
  RcDragDropContext,
  RcDragHandle,
  RcDraggable,
  RcDrawer,
  RcDroppable,
  RcFade,
  RcForm,
  RcFormContext,
  RcFormControl,
  RcFormControlLabel,
  RcFormGroup,
  RcFormHelperText,
  RcFormLabel,
  RcGlobalScrollBarStyle,
  RcGrid,
  RcGrow,
  RcHidden,
  RcHighlight,
  RcIcon,
  RcIconButton,
  RcIconButtonGroup,
  RcIconService,
  RcImageView,
  RcInlineEditable,
  RcInputLabel,
  RcLinearProgress,
  RcLink,
  RcList,
  RcListItem,
  RcListItemAvatar,
  RcListItemIcon,
  RcListItemSecondaryAction,
  RcListItemText,
  RcListSubheader,
  RcLoading,
  RcMenu,
  RcMenuContext,
  RcMenuItem,
  RcMenuList,
  RcMenuListContext,
  RcMobileThemes,
  RcOutlineTextFieldIconSizes,
  RcPagination,
  RcPaginationItem,
  RcPaper,
  RcPlainSelect,
  RcPopover,
  RcPopper,
  RcPopupBox,
  RcPortal,
  RcPortalHost,
  RcPortalWindowContext,
  RcPresence,
  RcRadio,
  RcRadioGroup,
  RcRating,
  RcResponsive,
  RcResponsiveContext,
  RcSelect,
  RcSlide,
  RcSlider,
  RcSnackbar,
  RcSnackbarAction,
  RcSnackbarContent,
  RcSnackbarContentClasses,
  RcSnackbarContentColors,
  RcSnackbarContentLineHeight,
  RcSnackbarContentLoadingSizes,
  RcSnackbarContentPaddings,
  RcSplitButton,
  RcStep,
  RcStepButton,
  RcStepConnector,
  RcStepIcon,
  RcStepLabel,
  RcStepper,
  RcSubMenu,
  RcSubMenuContext,
  RcSuggestionList,
  RcSuggestionListClasses,
  RcSwitch,
  RcSwitchClasses,
  RcTab,
  RcTabContext,
  RcTabList,
  RcTabPanel,
  RcTable,
  RcTableBodyCellContent,
  RcTableHeadCell,
  RcTableHeadView,
  RcTablePagination,
  RcTableRow,
  RcTabs,
  RcTag,
  RcText,
  RcTextField,
  RcTextWithEllipsis,
  RcTextarea,
  RcThemeContext,
  RcThemeHandler,
  RcThemeIds,
  RcThemeProvider,
  RcThemeSwitcherDefaultTheme,
  RcThemeSwitcherProvider,
  RcThemes,
  RcThumbnail,
  ExportType3 as RcTimePicker,
  RcTimePickerClasses,
  RcTimePickerIconWidths,
  RcTimePickerUtils,
  RcToggleButton,
  RcToggleButtonGroup,
  RcToolbar,
  RcTooltip,
  RcTypography,
  RcVirtualizedDivider,
  RcVirtualizedMenu,
  RcVirtualizedMenuList,
  RcVisuallyHidden,
  RcZoom,
  RcZoomFrom,
  RcZoomInFadeOut,
  ReplaceTransition_default as ReplaceTransition,
  SORT_ICON_CLASS,
  SelectionView,
  StyleSheetManager,
  StyledAvatar,
  StyledSortIconWrapper,
  StyledTable,
  StyledTableHeadCell,
  StyledTableHeadCellContent,
  StyledTableHeadText,
  StyledTableRow,
  SwitchStyle,
  SwitchTransition_default as SwitchTransition,
  TABLE_BORDER_TYPE,
  TABLE_STICKY_TYPE,
  TABLE_TYPE,
  TIME_GAP,
  TableWrapper,
  ThemeConsumer,
  ThemeProvider2 as ThemeProvider,
  ThrottleScheduler,
  TimeBoundary,
  ToggleText,
  Transition_default as Transition,
  TransitionGroup_default as TransitionGroup,
  UniqIdUtil,
  UnmountSymbol,
  Virtuoso,
  VirtuosoGrid,
  a11yKeyboard,
  a11yKeyboardCode,
  backgroundTransition,
  breakpointList,
  checkDefaultPrevented,
  clearReactReferencesInNode,
  clearWindowSelection,
  colorOptions,
  combineClasses,
  combineProps,
  config_default as config,
  configure,
  createGlobalStyle,
  createPromise,
  createTheme_default2 as createTheme,
  css2 as css,
  darken2 as darken,
  deepmerge2 as deepmerge,
  doAlpha,
  downshiftComponentName,
  elevationOptions,
  ellipsis,
  fakeBorder,
  flexCenterStyle,
  flexWidth,
  focusVisible,
  focusVisibleColor,
  focusVisibleShadowStyle,
  focusWithin,
  getAvatarColorTokenFromId,
  getAvatarShortName,
  getContrastBgColor,
  getDialPadValueOnlyRegex,
  getFormattedTime,
  getHourAndMinute,
  getMatchDetail,
  getNumberPickerBoundary,
  getPanelId,
  getParsePaletteColor,
  getPeriod,
  getRangeBoundary,
  getRecoupHour,
  getResizeObserver,
  getScrollbarSize2 as getScrollbarSize,
  getSelectionPosition,
  getTabId,
  getTimestamp,
  getTimestampFromDate,
  getTimestampFromHourAndMin,
  getTransitionProps2 as getTransitionProps,
  hasValue2 as hasValue,
  icon_exports as iconList,
  iconOptions,
  isClick,
  isElmEqualOrContainRef,
  isFilled2 as isFilled,
  isItemCanSelected,
  isOutOfRange,
  isRcElement,
  isRef,
  isShowJunoWarning,
  isUrl,
  keyframes,
  lastMinute,
  lightAlpha,
  lighten2 as lighten,
  lineClamp,
  logInDev,
  minuteSource,
  moveIndexInTwoDimension,
  nonStyleButton,
  nonTouchHoverMedia,
  omit3 as omit,
  opacity3 as opacity,
  outerSize,
  overridableStyled,
  pad,
  palette4 as palette,
  palette22 as palette2,
  paletteContrastText,
  parseColor,
  parseNumber,
  parseNumberToString,
  pick,
  preloadImg,
  px2 as px,
  pxToNumber,
  radius3 as radius,
  radiusOptions,
  rcConfiguration,
  reflow3 as reflow,
  removeClassName,
  rippleEnter,
  rippleStyle,
  setAlpha,
  setOpacity,
  setSelectionPosition,
  setTransitionStyle,
  shadowBorder,
  shadows4 as shadows,
  shallowEqual,
  spacing2 as spacing,
  spacingUnit,
  stringArrToRegExp,
  styled_components_default as styled,
  swapArrayLocs,
  themeOptions,
  toSpacing,
  twelveHourSystemSource,
  twentyFourHourSystemSource,
  typography4 as typography,
  typographyOptions,
  typographyProp,
  useA11yKeyEvent,
  useAnnouncer,
  useAudio,
  useAvatarColorToken,
  useAvatarShortName,
  useChange,
  useDebounce,
  useDeprecatedLog,
  useDepsChange,
  useDialKeyboard,
  useDownshift,
  useDownshiftError,
  useDownshiftGroup,
  useDownshiftTag,
  useDynamicHeight,
  useEventCallback2 as useEventCallback,
  useEventListener,
  useEver,
  useFixedEndSelection,
  useForceUpdate,
  useForkRef2 as useForkRef,
  useHiddenTabindex,
  useHighlightScroll,
  useIconService,
  useId2 as useId,
  useInterval,
  useKeyAudio,
  useKeyDownOnce,
  useKeyboardMoveFocus,
  useLongPress,
  useMountState,
  useOnReRender,
  useOnlyOneFocusable,
  useOverflow,
  usePortalManagerWithID,
  usePrevious,
  useRcFormContext,
  useRcPortalWindowContext,
  useRefState,
  useResizeObserver,
  useResponsiveContext,
  useResponsiveMatch,
  useResultRef,
  useRetry,
  useSleep,
  useSuggestionList,
  useTabContext,
  RcUseTheme as useTheme,
  useThemeProps,
  useThemeSwitcher,
  useThrottle,
  useTouchMouseEvent,
  useUnmountPortalHandler,
  visuallyHiddenStyles,
  withDelay,
  withDeprecatedCheck,
  withResponsive,
  withTheme,
  withTooltip,
  zIndex3 as zIndex
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/**
 * A better abstraction over CSS.
 *
 * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
 * @website https://github.com/cssinjs/jss
 * @license MIT
 */
/** @license Material-UI v4.11.2
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license Material-UI v4.11.4
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license Material-UI v4.12.1
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license Material-UI v4.12.3
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1-lts
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! moment.js
//! momentjs.com
//! version : 2.29.1
