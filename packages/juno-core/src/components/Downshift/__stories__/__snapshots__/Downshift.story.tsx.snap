// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift 1`] = `
.c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
  className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
    htmlFor="downshift-0-input"
    id="downshift-0-label"
  >
    Downshift
  </label>
  <div
    aria-disabled={false}
    aria-label="Downshift"
    aria-required={false}
    className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
    onClick={[Function]}
    onCompositionEnd={[Function]}
    onCompositionStart={[Function]}
    onPaste={[Function]}
  >
    <div
      className="RcDownshiftInput-container"
      onClick={[Function]}
    >
      <input
        aria-autocomplete="list"
        aria-expanded={false}
        aria-haspopup={true}
        aria-invalid={false}
        autoComplete="off"
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        id="downshift-0-input"
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Search and select"
        required={false}
        role="combobox"
        type="text"
        value=""
      />
    </div>
    <div
      className="c3"
    >
      <div
        className="MuiBox-root MuiBox-root-147"
      >
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
          disabled={false}
          id="downshift-0-clear-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 delete_circle icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
        <div
          className="c4 c5 c10"
          color="neutral.f04"
          size="medium"
          type="button"
        />
      </div>
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c4 c11 RcIconButton-root"
        disabled={false}
        id="downshift-0-toggle-button"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c8 arrow-down icon"
        >
          <svg
            className="c9"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
            />
          </svg>
          
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift Autocomplete 1`] = `
.c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c12 .c4 {
  margin-left: 12px;
}

.c12 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-focused .c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c1 .RcTextFieldInput-focused .c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .c6 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c1 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .c6 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

<div
  className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
    data-shrink={true}
    htmlFor="downshift-0-input"
    id="downshift-0-label"
  >
    Downshift
  </label>
  <div
    aria-disabled={false}
    aria-label="Downshift"
    aria-required={false}
    className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
    onClick={[Function]}
    onCompositionEnd={[Function]}
    onCompositionStart={[Function]}
    onPaste={[Function]}
  >
    <div
      className="RcDownshiftInput-container"
      onClick={[Function]}
    >
      <input
        aria-autocomplete="list"
        aria-expanded={false}
        aria-haspopup={true}
        aria-invalid={false}
        autoComplete="off"
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        id="downshift-0-input"
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        required={false}
        role="combobox"
        type="text"
        value="Afghanistan"
      />
    </div>
    <div
      className="c3"
    >
      <div
        className="MuiBox-root MuiBox-root-163"
      >
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
          disabled={false}
          id="downshift-0-clear-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 delete_circle icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
        <div
          className="c4 c5 c10"
          color="neutral.f04"
          size="medium"
          type="button"
        />
      </div>
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c4 c11 RcIconButton-root"
        disabled={false}
        id="downshift-0-toggle-button"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c8 arrow-down icon"
        >
          <svg
            className="c9"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
            />
          </svg>
          
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift Debug 1`] = `
.c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
  className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
    htmlFor="downshift-0-input"
    id="downshift-0-label"
  >
    Downshift
  </label>
  <div
    aria-disabled={false}
    aria-label="Downshift"
    aria-required={false}
    className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
    onClick={[Function]}
    onCompositionEnd={[Function]}
    onCompositionStart={[Function]}
    onPaste={[Function]}
  >
    <div
      className="RcDownshiftInput-container"
      onClick={[Function]}
    >
      <input
        aria-autocomplete="list"
        aria-expanded={false}
        aria-haspopup={true}
        aria-invalid={false}
        autoComplete="off"
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        id="downshift-0-input"
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Search and select"
        required={false}
        role="combobox"
        type="text"
        value=""
      />
    </div>
    <div
      className="c3"
    >
      <div
        className="MuiBox-root MuiBox-root-148"
      >
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
          disabled={false}
          id="downshift-0-clear-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 delete_circle icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
        <div
          className="c4 c5 c10"
          color="neutral.f04"
          size="medium"
          type="button"
        />
      </div>
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c4 c11 RcIconButton-root"
        disabled={false}
        id="downshift-0-toggle-button"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c8 arrow-down icon"
        >
          <svg
            className="c9"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
            />
          </svg>
          
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift Disabled 1`] = `
Array [
  .c7 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 36px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Downshift
    </label>
    <div
      aria-disabled={false}
      aria-label="Downshift"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Search and select"
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c3"
      >
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c5 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c6 arrow-down icon"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
  </div>,
  .c0 {
  font-size: 1.5rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 32px;
  color: #121212;
}

.c1 {
  font-size: 1rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
  color: #666666;
}

.c2.highlight-term {
  color: #121212 !important;
  background-color: #FFDFB1 !important;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<h5
    className="MuiTypography-root c0 MuiTypography-paragraph MuiTypography-displayBlock"
    data-color="neutral.f06"
    data-variant="headline1"
  >
    no skip disabled option highlight
    <br />
    <span
      className="MuiTypography-root c1 c2 MuiTypography-noWrap"
      data-color="neutral.f04"
      data-variant="subheading2"
      title="(if you also like can be focus with mouse, use renderOption to custom your render)"
    >
      (if you also like can be focus with mouse, use renderOption to custom your render)
    </span>
  </h5>,
  .c7 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 36px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Downshift
    </label>
    <div
      aria-disabled={false}
      aria-label="Downshift"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Search and select"
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c3"
      >
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c5 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c6 arrow-down icon"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
  </div>,
  .c0 {
  text-transform: none;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  min-width: 96px;
  min-height: 36px;
  padding: 0px 16px;
}

.c0 .RcButton-startIcon {
  margin-right: 8px;
}

.c0 .RcButton-endIcon {
  margin-left: 8px;
}

.c0.RcButton-text {
  color: #066FAC;
}

.c0.RcButton-text.RcButton-disabled {
  color: #B9B9B9;
}

.c0.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c0.RcButton-contained.RcButton-disabled {
  background-color: #B9B9B9;
  color: #FFFFFF;
}

.c0.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c0.RcButton-outlined.RcButton-disabled {
  color: #B9B9B9;
  border-color: #B9B9B9;
}

.c0.RcButton-outlined:after {
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  border: 1px solid transparent;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

<button
    className="MuiButtonBase-root MuiButton-root MuiButton-contained RcButton-contained c0"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Clear input value
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>,
]
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift Examples 1`] = `
Array [
  .c8 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c6:active {
  color: #666666;
}

.c6.focus-visible,
.c6[data-focus-visible-added] {
  background-color: transparent;
}

.c6.focus-visible:active,
.c6[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c6.focus-visible:after,
.c6[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c6.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c6.RcIconButton-disabled {
  color: #B9B9B9;
}

.c6.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c6.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c6.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c6.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c6.RcIconButton-contained.focus-visible,
.c6.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c6.RcIconButton-contained.focus-visible:before,
.c6.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c6.RcIconButton-contained:active {
  color: #fff;
}

.c6 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c13:active {
  color: #666666;
}

.c13.focus-visible,
.c13[data-focus-visible-added] {
  background-color: transparent;
}

.c13.focus-visible:active,
.c13[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c13.focus-visible:after,
.c13[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c13.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c13.RcIconButton-disabled {
  color: #B9B9B9;
}

.c13.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c13.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c13.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c13.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c13.RcIconButton-contained.focus-visible,
.c13.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c13.RcIconButton-contained.focus-visible:before,
.c13.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c13.RcIconButton-contained:active {
  color: #fff;
}

.c13 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c12 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c4 {
  height: 28px;
  box-sizing: border-box;
  padding: 2px;
  position: relative;
  border-radius: 100vw;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #121212;
  background-color: #F3F3F3;
}

.c4.RcChip-focused,
.c4.focus-visible,
.c4[data-focus-visible-added] {
  background-color: rgba(73,73,73,0.16);
}

.c4.RcChip-focused:after,
.c4.focus-visible:after,
.c4[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  box-shadow: inset 0 0 0 1px #066FAC;
  border-radius: 100vw;
  pointer-events: none;
}

.c4:active {
  background-color: rgba(73,73,73,0.24);
}

.c4.RcChip-disabled {
  color: #B9B9B9;
  opacity: 1;
}

.c4 .RcChip-avatar {
  color: #FFFFFF;
  margin-left: 0px;
  margin-right: -4px;
}

.c4 .RcChip-avatar span {
  width: auto;
  height: auto;
}

.c0 .c5 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c10 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c14 .c5 {
  margin-left: 12px;
}

.c14 .RcTextFieldInput-root .c10 {
  display: none;
}

.c9 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c1 .RcTextFieldInput-focused .c10 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root .c3 {
  margin: 2px;
}

.c2 .RcDownshiftInput-root .c3 .RcChip-deleteIcon {
  margin-left: -6px;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c6:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c6.RcIconButton-contained:hover {
    color: #fff;
  }

  .c6.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c13:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c13.RcIconButton-contained:hover {
    color: #fff;
  }

  .c13.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c4:hover {
    background-color: rgba(73,73,73,0.12);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c1 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .c10 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Country
    </label>
    <div
      aria-disabled={false}
      aria-label="Country"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <div
          className="MuiChip-root c3 c4 MuiChip-deletable"
          data-item-last={false}
          data-tag-index={0}
          data-test-automation-class="selected-item"
          data-test-automation-value="Afghanistan"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          role="button"
          tabIndex={0}
        >
          <span
            className="MuiChip-label"
          >
            Afghanistan
          </span>
          <button
            aria-label="remove"
            className="MuiButtonBase-root c5 c6 MuiChip-deleteIcon RcChip-deleteIcon RcIconButton-root"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
        </div>
        <div
          className="MuiChip-root c3 c4 MuiChip-deletable"
          data-item-last={false}
          data-tag-index={1}
          data-test-automation-class="selected-item"
          data-test-automation-value="Aland Islands"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          role="button"
          tabIndex={-1}
        >
          <span
            className="MuiChip-label"
          >
            Aland Islands
          </span>
          <button
            aria-label="remove"
            className="MuiButtonBase-root c5 c6 MuiChip-deleteIcon RcChip-deleteIcon RcIconButton-root"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
        </div>
        <div
          className="MuiChip-root c3 c4 MuiChip-deletable"
          data-item-last={true}
          data-tag-index={2}
          data-test-automation-class="selected-item"
          data-test-automation-value="If true, the selected option becomes the value of the input when the Autocomplete loses focus unless the user chooses a different option or changes the character string in the input. Callback fired when the popup requests to be closed. Use in controlled mode (see open)."
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          role="button"
          tabIndex={-1}
        >
          <span
            className="MuiChip-label"
          >
            If true, the selected option becomes the value of the input when the Autocomplete loses focus unless the user chooses a different option or changes the character string in the input. Callback fired when the popup requests to be closed. Use in controlled mode (see open).
          </span>
          <button
            aria-label="remove"
            className="MuiButtonBase-root c5 c6 MuiChip-deleteIcon RcChip-deleteIcon RcIconButton-root"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
        </div>
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c9"
      >
        <div
          className="MuiBox-root MuiBox-root-150"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c5 c6 c10 c11 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c5 c6 c12"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c5 c13 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c7 arrow-down icon"
          >
            <svg
              className="c8"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      please select country
    </p>
  </div>,
  .c8 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c10 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c10:active {
  color: #666666;
}

.c10.focus-visible,
.c10[data-focus-visible-added] {
  background-color: transparent;
}

.c10.focus-visible:active,
.c10[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c10.focus-visible:after,
.c10[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c10.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c10.RcIconButton-disabled {
  color: #B9B9B9;
}

.c10.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c10.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c10.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c10.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c10.RcIconButton-contained.focus-visible,
.c10.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c10.RcIconButton-contained.focus-visible:before,
.c10.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c10.RcIconButton-contained:active {
  color: #fff;
}

.c10 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: default;
  font-size: 20px;
}

.c6:active {
  color: #666666;
}

.c6.focus-visible,
.c6[data-focus-visible-added] {
  background-color: transparent;
}

.c6.focus-visible:active,
.c6[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c6.focus-visible:after,
.c6[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c6.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c6.RcIconButton-disabled {
  color: #B9B9B9;
}

.c6.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c6.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c6.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c6.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c6.RcIconButton-contained.focus-visible,
.c6.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c6.RcIconButton-contained.focus-visible:before,
.c6.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c6.RcIconButton-contained:active {
  color: #fff;
}

.c6 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c14 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: default;
  font-size: 24px;
}

.c14:active {
  color: #666666;
}

.c14.focus-visible,
.c14[data-focus-visible-added] {
  background-color: transparent;
}

.c14.focus-visible:active,
.c14[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c14.focus-visible:after,
.c14[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c14.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c14.RcIconButton-disabled {
  color: #B9B9B9;
}

.c14.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c14.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c14.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c14.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c14.RcIconButton-contained.focus-visible,
.c14.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c14.RcIconButton-contained.focus-visible:before,
.c14.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c14.RcIconButton-contained:active {
  color: #fff;
}

.c14 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c13 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c4 {
  height: 28px;
  box-sizing: border-box;
  padding: 2px;
  position: relative;
  border-radius: 100vw;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #121212;
  background-color: #F3F3F3;
}

.c4.RcChip-focused,
.c4.focus-visible,
.c4[data-focus-visible-added] {
  background-color: rgba(73,73,73,0.16);
}

.c4.RcChip-focused:after,
.c4.focus-visible:after,
.c4[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  box-shadow: inset 0 0 0 1px #066FAC;
  border-radius: 100vw;
  pointer-events: none;
}

.c4:active {
  background-color: rgba(73,73,73,0.24);
}

.c4.RcChip-disabled {
  color: #B9B9B9;
  opacity: 1;
}

.c4 .RcChip-avatar {
  color: #FFFFFF;
  margin-left: 0px;
  margin-right: -4px;
}

.c4 .RcChip-avatar span {
  width: auto;
  height: auto;
}

.c0 .c5 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c11 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c15 .c5 {
  margin-left: 12px;
}

.c15 .RcTextFieldInput-root .c11 {
  display: none;
}

.c9 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c1 .RcTextFieldInput-focused .c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root .c3 {
  margin: 2px;
}

.c2 .RcDownshiftInput-root .c3 .RcChip-deleteIcon {
  margin-left: -6px;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c10:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c10.RcIconButton-contained:hover {
    color: #fff;
  }

  .c10.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c6:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c6.RcIconButton-contained:hover {
    color: #fff;
  }

  .c6.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c14:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c14.RcIconButton-contained:hover {
    color: #fff;
  }

  .c14.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c4:hover {
    background-color: rgba(73,73,73,0.12);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c1 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .c11 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink Mui-disabled Mui-disabled RcTextFieldInputLabel-disabled"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Country
    </label>
    <div
      aria-disabled={true}
      aria-label="Country"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline Mui-disabled Mui-disabled RcTextFieldInput-disabled MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <div
          aria-disabled={true}
          className="MuiChip-root c3 c4 Mui-disabled RcChip-disabled MuiChip-deletable"
          data-item-last={false}
          data-tag-index={0}
          data-test-automation-class="selected-item"
          data-test-automation-value="Afghanistan"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          role="button"
          tabIndex={-1}
        >
          <span
            className="MuiChip-label"
          >
            Afghanistan
          </span>
          <button
            aria-disabled={true}
            aria-label="remove"
            className="MuiButtonBase-root c5 c6 MuiChip-deleteIcon RcChip-deleteIcon RcIconButton-root RcIconButton-disabled Mui-disabled"
            disabled={true}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
        </div>
        <div
          aria-disabled={true}
          className="MuiChip-root c3 c4 Mui-disabled RcChip-disabled MuiChip-deletable"
          data-item-last={true}
          data-tag-index={1}
          data-test-automation-class="selected-item"
          data-test-automation-value="Aland Islands"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          role="button"
          tabIndex={-1}
        >
          <span
            className="MuiChip-label"
          >
            Aland Islands
          </span>
          <button
            aria-disabled={true}
            aria-label="remove"
            className="MuiButtonBase-root c5 c6 MuiChip-deleteIcon RcChip-deleteIcon RcIconButton-root RcIconButton-disabled Mui-disabled"
            disabled={true}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
        </div>
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input Mui-disabled Mui-disabled RcTextFieldInput-disabled MuiInputBase-inputAdornedEnd"
          disabled={true}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c9"
      >
        <div
          className="MuiBox-root MuiBox-root-151"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c5 c10 c11 c12 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c5 c10 c13"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-disabled={true}
          aria-hidden={true}
          className="MuiButtonBase-root c5 c14 RcIconButton-root RcIconButton-disabled Mui-disabled"
          disabled={true}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c7 arrow-down icon"
          >
            <svg
              className="c8"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root Mui-disabled RcTextFieldFormHelperText-disabled"
    >
      please select country
    </p>
  </div>,
  .c8 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c6:active {
  color: #666666;
}

.c6.focus-visible,
.c6[data-focus-visible-added] {
  background-color: transparent;
}

.c6.focus-visible:active,
.c6[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c6.focus-visible:after,
.c6[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c6.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c6.RcIconButton-disabled {
  color: #B9B9B9;
}

.c6.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c6.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c6.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c6.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c6.RcIconButton-contained.focus-visible,
.c6.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c6.RcIconButton-contained.focus-visible:before,
.c6.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c6.RcIconButton-contained:active {
  color: #fff;
}

.c6 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #BE3933;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c13:active {
  color: #BE3933;
}

.c13.focus-visible,
.c13[data-focus-visible-added] {
  background-color: transparent;
}

.c13.focus-visible:active,
.c13[data-focus-visible-added]:active {
  color: rgba(190,57,51,0.88);
}

.c13.focus-visible:after,
.c13[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c13.RcIconButton-persistBg {
  background-color: rgba(190,57,51,0.12);
}

.c13.RcIconButton-disabled {
  color: #B9B9B9;
}

.c13.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c13.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c13.RcIconButton-contained {
  color: #fff;
  background-color: #BE3933;
}

.c13.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c13.RcIconButton-contained.focus-visible,
.c13.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c13.RcIconButton-contained.focus-visible:before,
.c13.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c13.RcIconButton-contained:active {
  color: #fff;
}

.c13 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c12 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c4 {
  height: 28px;
  box-sizing: border-box;
  padding: 2px;
  position: relative;
  border-radius: 100vw;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #121212;
  background-color: #F3F3F3;
}

.c4.RcChip-focused,
.c4.focus-visible,
.c4[data-focus-visible-added] {
  background-color: rgba(73,73,73,0.16);
}

.c4.RcChip-focused:after,
.c4.focus-visible:after,
.c4[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  box-shadow: inset 0 0 0 1px #066FAC;
  border-radius: 100vw;
  pointer-events: none;
}

.c4:active {
  background-color: rgba(73,73,73,0.24);
}

.c4.RcChip-disabled {
  color: #B9B9B9;
  opacity: 1;
}

.c4 .RcChip-avatar {
  color: #FFFFFF;
  margin-left: 0px;
  margin-right: -4px;
}

.c4 .RcChip-avatar span {
  width: auto;
  height: auto;
}

.c0 .c5 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c10 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c14 .c5 {
  margin-left: 12px;
}

.c14 .RcTextFieldInput-root .c10 {
  display: none;
}

.c9 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c1 .RcTextFieldInput-focused .c10 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root .c3 {
  margin: 2px;
}

.c2 .RcDownshiftInput-root .c3 .RcChip-deleteIcon {
  margin-left: -6px;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c6:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c6.RcIconButton-contained:hover {
    color: #fff;
  }

  .c6.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c13:hover {
    background-color: transparent;
    color: rgba(190,57,51,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c13.RcIconButton-contained:hover {
    color: #fff;
  }

  .c13.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c4:hover {
    background-color: rgba(73,73,73,0.12);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c1 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .c10 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink Mui-error Mui-error RcTextFieldInputLabel-error"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Country
    </label>
    <div
      aria-disabled={false}
      aria-label="Country"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline Mui-error Mui-error RcTextFieldInput-error MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <div
          className="MuiChip-root c3 c4 MuiChip-deletable"
          data-item-last={false}
          data-tag-index={0}
          data-test-automation-class="selected-item"
          data-test-automation-value="Afghanistan"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          role="button"
          tabIndex={0}
        >
          <span
            className="MuiChip-label"
          >
            Afghanistan
          </span>
          <button
            aria-label="remove"
            className="MuiButtonBase-root c5 c6 MuiChip-deleteIcon RcChip-deleteIcon RcIconButton-root"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
        </div>
        <div
          className="MuiChip-root c3 c4 MuiChip-deletable"
          data-item-last={true}
          data-tag-index={1}
          data-test-automation-class="selected-item"
          data-test-automation-value="Aland Islands"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          role="button"
          tabIndex={-1}
        >
          <span
            className="MuiChip-label"
          >
            Aland Islands
          </span>
          <button
            aria-label="remove"
            className="MuiButtonBase-root c5 c6 MuiChip-deleteIcon RcChip-deleteIcon RcIconButton-root"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
        </div>
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={true}
          autoComplete="off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c9"
      >
        <div
          className="MuiBox-root MuiBox-root-152"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c5 c6 c10 c11 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c5 c6 c12"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c5 c13 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c7 arrow-down icon"
          >
            <svg
              className="c8"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root Mui-error RcTextFieldFormHelperText-error"
    >
      please select country
    </p>
  </div>,
  .c8 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c6:active {
  color: #666666;
}

.c6.focus-visible,
.c6[data-focus-visible-added] {
  background-color: transparent;
}

.c6.focus-visible:active,
.c6[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c6.focus-visible:after,
.c6[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c6.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c6.RcIconButton-disabled {
  color: #B9B9B9;
}

.c6.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c6.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c6.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c6.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c6.RcIconButton-contained.focus-visible,
.c6.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c6.RcIconButton-contained.focus-visible:before,
.c6.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c6.RcIconButton-contained:active {
  color: #fff;
}

.c6 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c13:active {
  color: #666666;
}

.c13.focus-visible,
.c13[data-focus-visible-added] {
  background-color: transparent;
}

.c13.focus-visible:active,
.c13[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c13.focus-visible:after,
.c13[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c13.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c13.RcIconButton-disabled {
  color: #B9B9B9;
}

.c13.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c13.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c13.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c13.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c13.RcIconButton-contained.focus-visible,
.c13.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c13.RcIconButton-contained.focus-visible:before,
.c13.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c13.RcIconButton-contained:active {
  color: #fff;
}

.c13 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c12 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c4 {
  height: 28px;
  box-sizing: border-box;
  padding: 2px;
  position: relative;
  border-radius: 100vw;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #121212;
  background-color: #F3F3F3;
}

.c4.RcChip-focused,
.c4.focus-visible,
.c4[data-focus-visible-added] {
  background-color: rgba(73,73,73,0.16);
}

.c4.RcChip-focused:after,
.c4.focus-visible:after,
.c4[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  box-shadow: inset 0 0 0 1px #46BE59;
  border-radius: 100vw;
  pointer-events: none;
}

.c4:active {
  background-color: rgba(73,73,73,0.24);
}

.c4.RcChip-disabled {
  color: #B9B9B9;
  opacity: 1;
}

.c4 .RcChip-avatar {
  color: #FFFFFF;
  margin-left: 0px;
  margin-right: -4px;
}

.c4 .RcChip-avatar span {
  width: auto;
  height: auto;
}

.c14 .c5 {
  margin-left: 12px;
}

.c14 .RcTextFieldInput-root .c10 {
  display: none;
}

.c0 .c5 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #46BE59;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #46BE59;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c10 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #46BE59;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #46BE59;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c9 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c1 .RcTextFieldInput-focused .c10 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root .c3 {
  margin: 2px;
}

.c2 .RcDownshiftInput-root .c3 .RcChip-deleteIcon {
  margin-left: -6px;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c6:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c6.RcIconButton-contained:hover {
    color: #fff;
  }

  .c6.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c13:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c13.RcIconButton-contained:hover {
    color: #fff;
  }

  .c13.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c4:hover {
    background-color: rgba(73,73,73,0.12);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #46BE59;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c1 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .c10 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Country
    </label>
    <div
      aria-disabled={false}
      aria-label="Country"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <div
          className="MuiChip-root c3 c4 MuiChip-deletable"
          data-item-last={false}
          data-tag-index={0}
          data-test-automation-class="selected-item"
          data-test-automation-value="Afghanistan"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          role="button"
          tabIndex={0}
        >
          <span
            className="MuiChip-label"
          >
            Afghanistan
          </span>
          <button
            aria-label="remove"
            className="MuiButtonBase-root c5 c6 MuiChip-deleteIcon RcChip-deleteIcon RcIconButton-root"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
        </div>
        <div
          className="MuiChip-root c3 c4 MuiChip-deletable"
          data-item-last={true}
          data-tag-index={1}
          data-test-automation-class="selected-item"
          data-test-automation-value="Aland Islands"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          role="button"
          tabIndex={-1}
        >
          <span
            className="MuiChip-label"
          >
            Aland Islands
          </span>
          <button
            aria-label="remove"
            className="MuiButtonBase-root c5 c6 MuiChip-deleteIcon RcChip-deleteIcon RcIconButton-root"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
        </div>
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c9"
      >
        <div
          className="MuiBox-root MuiBox-root-153"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c5 c6 c10 c11 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c7 delete_circle icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c5 c6 c12"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c5 c13 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c7 arrow-down icon"
          >
            <svg
              className="c8"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      please select country
    </p>
  </div>,
  .c0 {
  text-transform: none;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  min-width: 96px;
  min-height: 36px;
  padding: 0px 16px;
}

.c0 .RcButton-startIcon {
  margin-right: 8px;
}

.c0 .RcButton-endIcon {
  margin-left: 8px;
}

.c0.RcButton-text {
  color: #066FAC;
}

.c0.RcButton-text.RcButton-disabled {
  color: #B9B9B9;
}

.c0.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c0.RcButton-contained.RcButton-disabled {
  background-color: #B9B9B9;
  color: #FFFFFF;
}

.c0.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c0.RcButton-outlined.RcButton-disabled {
  color: #B9B9B9;
  border-color: #B9B9B9;
}

.c0.RcButton-outlined:after {
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  border: 1px solid transparent;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<button
    className="MuiButtonBase-root MuiButton-root MuiButton-contained RcButton-contained c0"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Open Children Modal
    </span>
  </button>,
  "  ",
  .c0 {
  text-transform: none;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  min-width: 96px;
  min-height: 36px;
  padding: 0px 16px;
}

.c0 .RcButton-startIcon {
  margin-right: 8px;
}

.c0 .RcButton-endIcon {
  margin-left: 8px;
}

.c0.RcButton-text {
  color: #066FAC;
}

.c0.RcButton-text.RcButton-disabled {
  color: #B9B9B9;
}

.c0.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c0.RcButton-contained.RcButton-disabled {
  background-color: #B9B9B9;
  color: #FFFFFF;
}

.c0.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c0.RcButton-outlined.RcButton-disabled {
  color: #B9B9B9;
  border-color: #B9B9B9;
}

.c0.RcButton-outlined:after {
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  border: 1px solid transparent;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<button
    className="MuiButtonBase-root MuiButton-root MuiButton-contained RcButton-contained c0"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Focus Downshift And Open Outside
    </span>
  </button>,
  "  ",
  .c0 {
  text-transform: none;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  min-width: 96px;
  min-height: 36px;
  padding: 0px 16px;
}

.c0 .RcButton-startIcon {
  margin-right: 8px;
}

.c0 .RcButton-endIcon {
  margin-left: 8px;
}

.c0.RcButton-text {
  color: #066FAC;
}

.c0.RcButton-text.RcButton-disabled {
  color: #B9B9B9;
}

.c0.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c0.RcButton-contained.RcButton-disabled {
  background-color: #B9B9B9;
  color: #FFFFFF;
}

.c0.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c0.RcButton-outlined.RcButton-disabled {
  color: #B9B9B9;
  border-color: #B9B9B9;
}

.c0.RcButton-outlined:after {
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  border: 1px solid transparent;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<button
    className="MuiButtonBase-root MuiButton-root MuiButton-contained RcButton-contained c0"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Reset Downshift
    </span>
  </button>,
]
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift Fixed Item Height 1`] = `
.c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
  className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
    htmlFor="downshift-0-input"
    id="downshift-0-label"
  >
    Downshift
  </label>
  <div
    aria-disabled={false}
    aria-label="Downshift"
    aria-required={false}
    className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
    onClick={[Function]}
    onCompositionEnd={[Function]}
    onCompositionStart={[Function]}
    onPaste={[Function]}
  >
    <div
      className="RcDownshiftInput-container"
      onClick={[Function]}
    >
      <input
        aria-autocomplete="list"
        aria-expanded={false}
        aria-haspopup={true}
        aria-invalid={false}
        autoComplete="off"
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        id="downshift-0-input"
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Search and select"
        required={false}
        role="combobox"
        type="text"
        value=""
      />
    </div>
    <div
      className="c3"
    >
      <div
        className="MuiBox-root MuiBox-root-149"
      >
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
          disabled={false}
          id="downshift-0-clear-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 delete_circle icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
        <div
          className="c4 c5 c10"
          color="neutral.f04"
          size="medium"
          type="button"
        />
      </div>
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c4 c11 RcIconButton-root"
        disabled={false}
        id="downshift-0-toggle-button"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c8 arrow-down icon"
        >
          <svg
            className="c9"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
            />
          </svg>
          
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift Group By 1`] = `
Array [
  .c0 {
  font-size: 1.5rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 32px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<h5
    className="MuiTypography-root c0 MuiTypography-paragraph MuiTypography-displayBlock"
    data-color="neutral.f06"
    data-variant="headline1"
  >
    Normal Group
  </h5>,
  .c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Country
    </label>
    <div
      aria-disabled={false}
      aria-label="Country"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="chrome-off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="What country have you been to?"
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c3"
      >
        <div
          className="MuiBox-root MuiBox-root-155"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c8 delete_circle icon"
            >
              <svg
                className="c9"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c4 c5 c10"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c11 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 arrow-down icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      please select country
    </p>
  </div>,
  .c0 {
  font-size: 1.5rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 32px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<h5
    className="MuiTypography-root c0 MuiTypography-paragraph MuiTypography-displayBlock"
    data-color="neutral.f06"
    data-variant="headline1"
  >
    Expanded Group
  </h5>,
  .c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Address
    </label>
    <div
      aria-disabled={false}
      aria-label="Address"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="chrome-off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="What country have you been to?"
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c3"
      >
        <div
          className="MuiBox-root MuiBox-root-156"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c8 delete_circle icon"
            >
              <svg
                className="c9"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c4 c5 c10"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c11 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 arrow-down icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      please select country
    </p>
  </div>,
  .c0 {
  font-size: 1.5rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 32px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<h5
    className="MuiTypography-root c0 MuiTypography-paragraph MuiTypography-displayBlock"
    data-color="neutral.f06"
    data-variant="headline1"
  >
    Normal Group (Custom render)
  </h5>,
  .c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Country
    </label>
    <div
      aria-disabled={false}
      aria-label="Country"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="chrome-off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="What country have you been to?"
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c3"
      >
        <div
          className="MuiBox-root MuiBox-root-157"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c8 delete_circle icon"
            >
              <svg
                className="c9"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c4 c5 c10"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c11 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 arrow-down icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      please select country
    </p>
  </div>,
  .c0 {
  font-size: 1.5rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 32px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<h5
    className="MuiTypography-root c0 MuiTypography-paragraph MuiTypography-displayBlock"
    data-color="neutral.f06"
    data-variant="headline1"
  >
    Expanded Group (Custom render)
  </h5>,
  .c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Country
    </label>
    <div
      aria-disabled={false}
      aria-label="Country"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="chrome-off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="What country have you been to?"
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c3"
      >
        <div
          className="MuiBox-root MuiBox-root-158"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c8 delete_circle icon"
            >
              <svg
                className="c9"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c4 c5 c10"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c11 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 arrow-down icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      please select country
    </p>
  </div>,
]
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift Lazy Load Examples 1`] = `
.c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
  className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
    htmlFor="downshift-0-input"
    id="downshift-0-label"
  >
    Country
  </label>
  <div
    aria-disabled={false}
    aria-label="Country"
    aria-required={false}
    className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
    onClick={[Function]}
    onCompositionEnd={[Function]}
    onCompositionStart={[Function]}
    onPaste={[Function]}
  >
    <div
      className="RcDownshiftInput-container"
      onClick={[Function]}
    >
      <input
        aria-autocomplete="list"
        aria-expanded={false}
        aria-haspopup={true}
        aria-invalid={false}
        autoComplete="off"
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        id="downshift-0-input"
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="What country have you been to?"
        required={false}
        role="combobox"
        type="text"
        value=""
      />
    </div>
    <div
      className="c3"
    >
      <div
        className="MuiBox-root MuiBox-root-154"
      >
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
          disabled={false}
          id="downshift-0-clear-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 delete_circle icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
        <div
          className="c4 c5 c10"
          color="neutral.f04"
          size="medium"
          type="button"
        />
      </div>
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c4 c11 RcIconButton-root"
        disabled={false}
        id="downshift-0-toggle-button"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c8 arrow-down icon"
        >
          <svg
            className="c9"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
            />
          </svg>
          
        </span>
      </button>
    </div>
  </div>
  <p
    className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
  >
    please select country
  </p>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift With Avatar 1`] = `
Array [
  .c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c12 .c4 {
  margin-left: 12px;
}

.c12 .RcTextFieldInput-root .c6 {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Downshift
    </label>
    <div
      aria-disabled={false}
      aria-label="Downshift"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Search and select"
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c3"
      >
        <div
          className="MuiBox-root MuiBox-root-160"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c8 delete_circle icon"
            >
              <svg
                className="c9"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c4 c5 c10"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c11 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 arrow-down icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
  </div>,
  .c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c12 .c4 {
  margin-left: 12px;
}

.c12 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
    >
      Downshift
    </label>
    <div
      aria-disabled={false}
      aria-label="Downshift"
      aria-required={false}
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
      onCompositionEnd={[Function]}
      onCompositionStart={[Function]}
      onPaste={[Function]}
    >
      <div
        className="RcDownshiftInput-container"
        onClick={[Function]}
      >
        <input
          aria-autocomplete="list"
          aria-expanded={false}
          aria-haspopup={true}
          aria-invalid={false}
          autoComplete="off"
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
          disabled={false}
          id="downshift-0-input"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Search and select"
          required={false}
          role="combobox"
          type="text"
          value=""
        />
      </div>
      <div
        className="c3"
      >
        <div
          className="MuiBox-root MuiBox-root-161"
        >
          <button
            aria-hidden={true}
            className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
            disabled={false}
            id="downshift-0-clear-button"
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="c8 delete_circle icon"
            >
              <svg
                className="c9"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
                />
              </svg>
              
            </span>
          </button>
          <div
            className="c4 c5 c10"
            color="neutral.f04"
            size="medium"
            type="button"
          />
        </div>
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c11 RcIconButton-root"
          disabled={false}
          id="downshift-0-toggle-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 arrow-down icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </button>
      </div>
    </div>
  </div>,
]
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift With Custom Input 1`] = `
.c10 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c9 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c6:active {
  color: #666666;
}

.c6.focus-visible,
.c6[data-focus-visible-added] {
  background-color: transparent;
}

.c6.focus-visible:active,
.c6[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c6.focus-visible:after,
.c6[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c6.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c6.RcIconButton-disabled {
  color: #B9B9B9;
}

.c6.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c6.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c6.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c6.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c6.RcIconButton-contained.focus-visible,
.c6.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c6.RcIconButton-contained.focus-visible:before,
.c6.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c6.RcIconButton-contained:active {
  color: #fff;
}

.c6 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c12 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c12:active {
  color: #666666;
}

.c12.focus-visible,
.c12[data-focus-visible-added] {
  background-color: transparent;
}

.c12.focus-visible:active,
.c12[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c12.focus-visible:after,
.c12[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c12.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c12.RcIconButton-disabled {
  color: #B9B9B9;
}

.c12.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c12.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c12.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c12.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c12.RcIconButton-contained.focus-visible,
.c12.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c12.RcIconButton-contained.focus-visible:before,
.c12.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c12.RcIconButton-contained:active {
  color: #fff;
}

.c12 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c5 {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c7 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c0 .RcOutlineTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .c5 {
  margin-left: 12px;
}

.c0 * + .RcOutlineTextFieldInput-input {
  margin-left: 16px;
}

.c0.RcTextField-root label + .RcOutlineTextFieldInput-root {
  margin-top: 22px;
}

.c0 .RcOutlineTextFieldInput-root {
  -webkit-tap-highlight-color: transparent;
  min-height: 40px;
  background: #FFFFFF;
  padding: 0px 16px;
  border-radius: 4px;
}

.c0 .RcOutlineTextFieldInput-root:before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border-radius: 4px;
  -webkit-transition: none;
  transition: none;
  border-bottom: none !important;
  pointer-events: none;
  box-shadow: inset 0 0 0 1px #C7C7C7;
}

.c0 .RcOutlineTextFieldInput-root:not(.RcOutlineTextFieldInput-focused):not(.RcOutlineTextFieldInput-disabled):hover {
  background: #F9F9F9;
}

.c0 .RcOutlineTextFieldInput-focused:before {
  box-shadow: inset 0 0 0 1px #066FAC;
}

.c0 .RcOutlineTextFieldInput-error:before {
  box-shadow: inset 0 0 0 1px #BE3933;
}

.c0 .RcOutlineTextFieldInput-disabled {
  background: #F3F3F3;
}

.c0 .RcOutlineTextFieldInput-disabled:before {
  box-shadow: inset 0 0 0 1px #B9B9B9;
}

.c4 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c3 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c3 .RcDownshiftInput-root:before,
.c3 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c3 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

.c1 .CustomDownshiftInput-root {
  padding-left: 8px;
  height: auto;
}

.c1 .CustomDownshiftInput-input {
  margin-left: 0;
}

@media (hover:hover) and (pointer:fine) {
  .c6:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c6.RcIconButton-contained:hover {
    color: #fff;
  }

  .c6.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c12:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c12.RcIconButton-contained:hover {
    color: #fff;
  }

  .c12.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
  className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 c3 MuiFormControl-fullWidth"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
    htmlFor="downshift-0-input"
    id="downshift-0-label"
  >
    Downshift
  </label>
  <div
    aria-disabled={false}
    aria-label="Downshift"
    aria-required={false}
    className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcOutlineTextFieldInput-root CustomDownshiftInput-root RcDownshiftInput-root MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
    onClick={[Function]}
    onCompositionEnd={[Function]}
    onCompositionStart={[Function]}
    onPaste={[Function]}
  >
    <div
      className="RcDownshiftInput-container"
      onClick={[Function]}
    >
      <input
        aria-autocomplete="list"
        aria-expanded={false}
        aria-haspopup={true}
        aria-invalid={false}
        autoComplete="off"
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcOutlineTextFieldInput-input CustomDownshiftInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        id="downshift-0-input"
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Search and select"
        required={false}
        role="combobox"
        type="text"
        value=""
      />
    </div>
    <div
      className="c4"
    >
      <div
        className="MuiBox-root MuiBox-root-162"
      >
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c5 c6 c7 c8 RcIconButton-root"
          disabled={false}
          id="downshift-0-clear-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c9 delete_circle icon"
          >
            <svg
              className="c10"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
        <div
          className="c5 c6 c11"
          color="neutral.f04"
          size="medium"
          type="button"
        />
      </div>
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c5 c12 RcIconButton-root"
        disabled={false}
        id="downshift-0-toggle-button"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c9 arrow-down icon"
        >
          <svg
            className="c10"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
            />
          </svg>
          
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/Downshift Downshift With Dynamic 1`] = `
.c9 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 20px;
}

.c5:active {
  color: #666666;
}

.c5.focus-visible,
.c5[data-focus-visible-added] {
  background-color: transparent;
}

.c5.focus-visible:active,
.c5[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c5.focus-visible:after,
.c5[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c5.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c5.RcIconButton-disabled {
  color: #B9B9B9;
}

.c5.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c5.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c5.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c5.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c5.RcIconButton-contained.focus-visible,
.c5.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c5.RcIconButton-contained.focus-visible:before,
.c5.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c5.RcIconButton-contained:active {
  color: #fff;
}

.c5 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
  font-size: 24px;
}

.c11:active {
  color: #666666;
}

.c11.focus-visible,
.c11[data-focus-visible-added] {
  background-color: transparent;
}

.c11.focus-visible:active,
.c11[data-focus-visible-added]:active {
  color: rgba(102,102,102,0.88);
}

.c11.focus-visible:after,
.c11[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c11.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c11.RcIconButton-disabled {
  color: #B9B9B9;
}

.c11.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c11.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c11.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c11.RcIconButton-contained:before {
  content: '';
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
}

.c11.RcIconButton-contained.focus-visible,
.c11.RcIconButton-contained[data-focus-visible-added] {
  color: #fff;
}

.c11.RcIconButton-contained.focus-visible:before,
.c11.RcIconButton-contained[data-focus-visible-added]:before {
  background-color: rgba(255,255,255,0.16);
}

.c11.RcIconButton-contained:active {
  color: #fff;
}

.c11 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c10 {
  position: absolute;
  right: 0;
  pointer-events: none;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 .c4 {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .c6 {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c3 {
  right: 0;
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .RcDownshiftInput-input {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-width: 30px;
}

.c2 .RcDownshiftInput-root {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0 68px 0 0;
}

.c2 .RcDownshiftInput-root:before,
.c2 .RcDownshiftInput-root:after {
  z-index: 1;
}

.c2 .RcDownshiftInput-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow-y: auto;
  max-height: 132px;
  width: 100%;
}

@media (hover:hover) and (pointer:fine) {
  .c5:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c5.RcIconButton-contained:hover {
    color: #fff;
  }

  .c5.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11:hover {
    background-color: transparent;
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcIconButton-contained:hover {
    color: #fff;
  }

  .c11.RcIconButton-contained:hover:before {
    background-color: rgba(255,255,255,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
  className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2 MuiFormControl-fullWidth"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
    htmlFor="downshift-0-input"
    id="downshift-0-label"
  >
    Downshift
  </label>
  <div
    aria-disabled={false}
    aria-label="Downshift"
    aria-required={false}
    className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcDownshiftInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
    onClick={[Function]}
    onCompositionEnd={[Function]}
    onCompositionStart={[Function]}
    onPaste={[Function]}
  >
    <div
      className="RcDownshiftInput-container"
      onClick={[Function]}
    >
      <input
        aria-autocomplete="list"
        aria-expanded={false}
        aria-haspopup={true}
        aria-invalid={false}
        autoComplete="off"
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input RcDownshiftInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        id="downshift-0-input"
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Search and select"
        required={false}
        role="combobox"
        type="text"
        value=""
      />
    </div>
    <div
      className="c3"
    >
      <div
        className="MuiBox-root MuiBox-root-159"
      >
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c4 c5 c6 c7 RcIconButton-root"
          disabled={false}
          id="downshift-0-clear-button"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c8 delete_circle icon"
          >
            <svg
              className="c9"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 0 0-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 0 0 1.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 0 0 1.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 0 0-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
        <div
          className="c4 c5 c10"
          color="neutral.f04"
          size="medium"
          type="button"
        />
      </div>
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c4 c11 RcIconButton-root"
        disabled={false}
        id="downshift-0-toggle-button"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c8 arrow-down icon"
        >
          <svg
            className="c9"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
            />
          </svg>
          
        </span>
      </button>
    </div>
  </div>
</div>
`;
