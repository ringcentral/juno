// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ðŸš€ Cleanup Components/ðŸŒˆAnimations/Transition/ZoomInFadeOut ZoomInFadeOut 1`] = `
Array [
  .c0 {
  color: #121212;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
}

.c0 .RcFormControlLabel-disabled {
  color: #C7C7C7;
}

.c0 .RcCheckbox-root,
.c0 .RcRadio-root {
  margin-left: 0;
  margin-right: 4px;
}

.c0 .RcSwitch-root {
  margin: 12px;
}

.c0.RcFormControlLabel-labelPlacementStart .RcCheckbox-root,
.c0.RcFormControlLabel-labelPlacementStart .RcRadio-root {
  margin-left: 4px;
  margin-right: 0;
}

.c1.RcSwitch-root {
  padding: 0px;
  width: 36px;
  height: 20px;
}

.c1.RcSwitch-root[data-focus-visible-within] {
  border-radius: 100vw;
  box-shadow: 0 0 0 2px #FFFFFF, 0 0 0 4px #066FAC;
}

.c1.RcSwitch-root .RcSwitch-switchBase {
  width: 36px;
  height: 20px;
  padding: 0;
  background-color: transparent;
  -webkit-transform: translateX(-8px);
  -ms-transform: translateX(-8px);
  transform: translateX(-8px);
}

.c1.RcSwitch-root .RcSwitch-switchBase.RcSwitch-checked {
  -webkit-transform: translateX(8px);
  -ms-transform: translateX(8px);
  transform: translateX(8px);
}

.c1.RcSwitch-root .RcSwitch-thumb {
  height: 12px;
  width: 12px;
  background-color: #FFFFFF;
  box-shadow: none;
}

.c1.RcSwitch-root .RcSwitch-track {
  height: 20px;
  opacity: 1;
  margin: 0;
  border-radius: 100vw;
  background-color: #939393;
}

.c1.RcSwitch-root .RcSwitch-checked + .RcSwitch-track {
  background-color: #066FAC;
}

.c1.RcSwitch-root .RcSwitch-disabled + .RcSwitch-track {
  background-color: #C7C7C7;
}

.c1.RcSwitch-root:active .RcSwitch-switchBase:not(.RcSwitch-disabled) + .RcSwitch-track {
  background-color: rgba(147,147,147,0.76);
}

.c1.RcSwitch-root:active .RcSwitch-switchBase:not(.RcSwitch-disabled).RcSwitch-checked + .RcSwitch-track {
  background-color: rgba(6,111,172,0.76);
}

@media (hover:hover) and (pointer:fine) {
  .c1.RcSwitch-root:hover .RcSwitch-switchBase:not(.RcSwitch-disabled) + .RcSwitch-track {
    background-color: rgba(147,147,147,0.92);
  }

  .c1.RcSwitch-root:hover .RcSwitch-switchBase:not(.RcSwitch-disabled).RcSwitch-checked + .RcSwitch-track {
    background-color: rgba(6,111,172,0.92);
  }
}

<label
    className="MuiFormControlLabel-root RcFormControlLabel-root c0"
  >
    <span
      className="MuiSwitch-root RcSwitch-root c1"
    >
      <span
        aria-disabled={false}
        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-426 MuiSwitch-switchBase RcSwitch-switchBase"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={null}
      >
        <span
          className="MuiIconButton-label"
        >
          <input
            checked={false}
            className="PrivateSwitchBase-input-429 MuiSwitch-input"
            onChange={[Function]}
            type="checkbox"
          />
          <span
            className="MuiSwitch-thumb RcSwitch-thumb"
          />
        </span>
      </span>
      <span
        className="MuiSwitch-track RcSwitch-track"
      />
    </span>
    <span
      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
    >
      Show
    </span>
  </label>,
  .c0 {
  height: 300px;
  width: 300px;
  background-color: #FF8800;
  color: #121212;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="c0"
    style={
      Object {
        "opacity": 0,
        "transform": "scale(0)",
        "visibility": "hidden",
      }
    }
  >
    ZoomInFadeOut
  </div>,
]
`;
