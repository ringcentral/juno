// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ðŸš€ Cleanup Components/SplitButton/SplitButton Examples(Icon) SplitButton Examples(Icon) 1`] = `
.c7 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 36px;
}

.c12 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 32px;
}

.c15 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 28px;
}

.c18 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c22 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 20px;
}

.c27 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 16px;
}

.c32 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 12px;
}

.c4 {
  text-transform: none;
  font-size: 0.875rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
  min-width: 96px;
  min-height: 36px;
  padding: 0px 16px;
}

.c4 .RcButton-startIcon {
  margin-right: 8px;
}

.c4 .RcButton-endIcon {
  margin-left: 8px;
}

.c4.RcButton-text {
  color: #066FAC;
}

.c4.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c4.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c4.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c4.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c4.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

.c10 {
  text-transform: none;
  font-size: 0.875rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
}

.c10 .RcButton-startIcon {
  margin-right: 8px;
  margin-left: 0;
}

.c10 .RcButton-endIcon {
  margin-left: 8px;
  margin-right: 0;
}

.c10.RcButton-text {
  color: #066FAC;
  padding: 4px;
  min-width: unset;
  line-height: 1;
}

.c10.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c10.RcButton-text.focus-visible,
.c10.RcButton-text[data-focus-visible-added] {
  background-color: transparent;
}

.c10.RcButton-text.focus-visible:after,
.c10.RcButton-text[data-focus-visible-added]:after {
  pointer-events: none;
  content: '';
  position: absolute;
  inset: 0;
  margin: calc(-0px - 0px);
  border-radius: calc(0px + 4px);
  box-shadow: inset 0 0 0 2px #066FAC;
}

.c10.RcButton-text:active.RcButton-text {
  color: rgba(6,111,172,0.64);
}

.c10.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c10.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c10.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c10.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

.c21 {
  text-transform: none;
  font-size: 0.875rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
  min-width: 88px;
  min-height: 32px;
  padding: 0px 12px;
}

.c21 .RcButton-startIcon {
  margin-right: 8px;
}

.c21 .RcButton-endIcon {
  margin-left: 8px;
}

.c21.RcButton-text {
  color: #066FAC;
}

.c21.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c21.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c21.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c21.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 11px;
}

.c21.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

.c24 {
  text-transform: none;
  font-size: 0.875rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
}

.c24 .RcButton-startIcon {
  margin-right: 8px;
  margin-left: 0;
}

.c24 .RcButton-endIcon {
  margin-left: 8px;
  margin-right: 0;
}

.c24.RcButton-text {
  color: #066FAC;
  padding: 4px;
  min-width: unset;
  line-height: 1;
}

.c24.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c24.RcButton-text.focus-visible,
.c24.RcButton-text[data-focus-visible-added] {
  background-color: transparent;
}

.c24.RcButton-text.focus-visible:after,
.c24.RcButton-text[data-focus-visible-added]:after {
  pointer-events: none;
  content: '';
  position: absolute;
  inset: 0;
  margin: calc(-0px - 0px);
  border-radius: calc(0px + 4px);
  box-shadow: inset 0 0 0 2px #066FAC;
}

.c24.RcButton-text:active.RcButton-text {
  color: rgba(6,111,172,0.64);
}

.c24.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c24.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c24.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 11px;
}

.c24.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

.c26 {
  text-transform: none;
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
  min-width: 0px;
  min-height: 28px;
  padding: 0px 16px;
}

.c26 .RcButton-startIcon {
  margin-right: 6px;
}

.c26 .RcButton-endIcon {
  margin-left: 6px;
}

.c26.RcButton-text {
  color: #066FAC;
}

.c26.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c26.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c26.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c26.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c26.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

.c29 {
  text-transform: none;
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
}

.c29 .RcButton-startIcon {
  margin-right: 6px;
  margin-left: 0;
}

.c29 .RcButton-endIcon {
  margin-left: 6px;
  margin-right: 0;
}

.c29.RcButton-text {
  color: #066FAC;
  padding: 4px;
  min-width: unset;
  line-height: 1;
}

.c29.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c29.RcButton-text.focus-visible,
.c29.RcButton-text[data-focus-visible-added] {
  background-color: transparent;
}

.c29.RcButton-text.focus-visible:after,
.c29.RcButton-text[data-focus-visible-added]:after {
  pointer-events: none;
  content: '';
  position: absolute;
  inset: 0;
  margin: calc(-0px - 0px);
  border-radius: calc(0px + 4px);
  box-shadow: inset 0 0 0 2px #066FAC;
}

.c29.RcButton-text:active.RcButton-text {
  color: rgba(6,111,172,0.64);
}

.c29.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c29.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c29.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c29.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

.c31 {
  text-transform: none;
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
  min-width: 0px;
  min-height: 24px;
  padding: 0px 8px;
}

.c31 .RcButton-startIcon {
  margin-right: 4px;
}

.c31 .RcButton-endIcon {
  margin-left: 4px;
}

.c31.RcButton-text {
  color: #066FAC;
}

.c31.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c31.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c31.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c31.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 7px;
}

.c31.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

.c34 {
  text-transform: none;
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
}

.c34 .RcButton-startIcon {
  margin-right: 4px;
  margin-left: 0;
}

.c34 .RcButton-endIcon {
  margin-left: 4px;
  margin-right: 0;
}

.c34.RcButton-text {
  color: #066FAC;
  padding: 4px;
  min-width: unset;
  line-height: 1;
}

.c34.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c34.RcButton-text.focus-visible,
.c34.RcButton-text[data-focus-visible-added] {
  background-color: transparent;
}

.c34.RcButton-text.focus-visible:after,
.c34.RcButton-text[data-focus-visible-added]:after {
  pointer-events: none;
  content: '';
  position: absolute;
  inset: 0;
  margin: calc(-0px - 0px);
  border-radius: calc(0px + 4px);
  box-shadow: inset 0 0 0 2px #066FAC;
}

.c34.RcButton-text:active.RcButton-text {
  color: rgba(6,111,172,0.64);
}

.c34.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c34.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c34.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 7px;
}

.c34.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

.c8.c8.c8 {
  color: inherit;
  margin-right: 0;
}

.c2 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c2 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c2 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c2 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c2 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c2.RcSplitButton-root {
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  padding-right: 1px;
  border-left: 1px solid transparent;
}

.c2 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c2.RcSplitButton-root {
  border-radius: 100vw;
  overflow: hidden;
}

.c2.RcSplitButton-root .c3 {
  min-height: auto;
}

.c2.RcSplitButton-root .RcSplitButton-TouchRipple-child,
.c2.RcSplitButton-root .RcSplitButton-TouchRipple-ripplePulsate {
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c2.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-left-radius: 100vw;
  border-bottom-left-radius: 100vw;
}

.c2.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-right-radius: 100vw;
  border-bottom-right-radius: 100vw;
}

.c2 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 18px 14px 18px 18px;
}

.c2 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c2 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 36px;
  width: 36px;
}

.c2.RcSplitButton-menuOpen .RcSplitButton-actionButton {
  background: rgba(6,111,172,0.08);
}

.c2.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c9 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c9 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c9 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c9 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c9 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c9.RcSplitButton-root {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
}

.c9 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
  box-shadow: none;
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton.focus-visible,
.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton[data-focus-visible-added] {
  background: rgba(6,111,172,0.08);
}

.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}

.c9.RcSplitButton-root,
.c9 .RcSplitButton-groupedHorizontal {
  border-radius: 50%;
}

.c9.RcSplitButton-root .c3,
.c9 .RcSplitButton-groupedHorizontal .c3 {
  min-height: auto;
}

.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 0;
  box-shadow: none;
}

.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible,
.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added] {
  outline: none;
}

.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible:after,
.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -6px;
  right: -6px;
  bottom: -6px;
  left: -6px;
  box-shadow: 0 0 0 2px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c9 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 36px;
  width: 36px;
}

.c9.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c11 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c11 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c11 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c11 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c11 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c11.RcSplitButton-root {
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c11 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  padding-right: 1px;
  border-left: 1px solid transparent;
}

.c11 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c11.RcSplitButton-root {
  border-radius: 100vw;
  overflow: hidden;
}

.c11.RcSplitButton-root .c3 {
  min-height: auto;
}

.c11.RcSplitButton-root .RcSplitButton-TouchRipple-child,
.c11.RcSplitButton-root .RcSplitButton-TouchRipple-ripplePulsate {
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c11.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-left-radius: 100vw;
  border-bottom-left-radius: 100vw;
}

.c11.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-right-radius: 100vw;
  border-bottom-right-radius: 100vw;
}

.c11 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 16px 12px 16px 16px;
}

.c11 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c11 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 32px;
  width: 32px;
}

.c11.RcSplitButton-menuOpen .RcSplitButton-actionButton {
  background: rgba(6,111,172,0.08);
}

.c11.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c13 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c13 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c13 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c13 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c13 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c13.RcSplitButton-root {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
}

.c13 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
  box-shadow: none;
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton.focus-visible,
.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton[data-focus-visible-added] {
  background: rgba(6,111,172,0.08);
}

.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}

.c13.RcSplitButton-root,
.c13 .RcSplitButton-groupedHorizontal {
  border-radius: 50%;
}

.c13.RcSplitButton-root .c3,
.c13 .RcSplitButton-groupedHorizontal .c3 {
  min-height: auto;
}

.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 0;
  box-shadow: none;
}

.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible,
.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added] {
  outline: none;
}

.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible:after,
.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 2px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c13 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 32px;
  width: 32px;
}

.c13.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c14 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c14 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c14 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c14 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c14 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c14.RcSplitButton-root {
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c14 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  padding-right: 1px;
  border-left: 1px solid transparent;
}

.c14 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c14.RcSplitButton-root {
  border-radius: 100vw;
  overflow: hidden;
}

.c14.RcSplitButton-root .c3 {
  min-height: auto;
}

.c14.RcSplitButton-root .RcSplitButton-TouchRipple-child,
.c14.RcSplitButton-root .RcSplitButton-TouchRipple-ripplePulsate {
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c14.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-left-radius: 100vw;
  border-bottom-left-radius: 100vw;
}

.c14.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-right-radius: 100vw;
  border-bottom-right-radius: 100vw;
}

.c14 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 14px 10px 14px 14px;
}

.c14 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c14 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 28px;
  width: 28px;
}

.c14.RcSplitButton-menuOpen .RcSplitButton-actionButton {
  background: rgba(6,111,172,0.08);
}

.c14.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c16 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c16 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c16 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c16 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c16 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c16.RcSplitButton-root {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
}

.c16 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
  box-shadow: none;
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton.focus-visible,
.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton[data-focus-visible-added] {
  background: rgba(6,111,172,0.08);
}

.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}

.c16.RcSplitButton-root,
.c16 .RcSplitButton-groupedHorizontal {
  border-radius: 50%;
}

.c16.RcSplitButton-root .c3,
.c16 .RcSplitButton-groupedHorizontal .c3 {
  min-height: auto;
}

.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 0;
  box-shadow: none;
}

.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible,
.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added] {
  outline: none;
}

.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible:after,
.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  box-shadow: 0 0 0 2px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c16 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 28px;
  width: 28px;
}

.c16.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c17 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c17 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c17 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c17 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c17 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c17.RcSplitButton-root {
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c17 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  padding-right: 1px;
  border-left: 1px solid transparent;
}

.c17 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c17.RcSplitButton-root {
  border-radius: 100vw;
  overflow: hidden;
}

.c17.RcSplitButton-root .c3 {
  min-height: auto;
}

.c17.RcSplitButton-root .RcSplitButton-TouchRipple-child,
.c17.RcSplitButton-root .RcSplitButton-TouchRipple-ripplePulsate {
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c17.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-left-radius: 100vw;
  border-bottom-left-radius: 100vw;
}

.c17.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-right-radius: 100vw;
  border-bottom-right-radius: 100vw;
}

.c17 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 12px 8px 12px 12px;
}

.c17 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c17 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 24px;
  width: 24px;
}

.c17.RcSplitButton-menuOpen .RcSplitButton-actionButton {
  background: rgba(6,111,172,0.08);
}

.c17.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c19 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c19 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c19 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c19 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c19 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c19.RcSplitButton-root {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
}

.c19 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
  box-shadow: none;
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton.focus-visible,
.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton[data-focus-visible-added] {
  background: rgba(6,111,172,0.08);
}

.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}

.c19.RcSplitButton-root,
.c19 .RcSplitButton-groupedHorizontal {
  border-radius: 50%;
}

.c19.RcSplitButton-root .c3,
.c19 .RcSplitButton-groupedHorizontal .c3 {
  min-height: auto;
}

.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 0;
  box-shadow: none;
}

.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible,
.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added] {
  outline: none;
}

.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible:after,
.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 2px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c19 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 24px;
  width: 24px;
}

.c19.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c20 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c20 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c20 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c20 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c20 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c20.RcSplitButton-root {
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c20 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  padding-right: 1px;
  border-left: 1px solid transparent;
}

.c20 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c20.RcSplitButton-root {
  border-radius: 100vw;
  overflow: hidden;
}

.c20.RcSplitButton-root .c3 {
  min-height: auto;
}

.c20.RcSplitButton-root .RcSplitButton-TouchRipple-child,
.c20.RcSplitButton-root .RcSplitButton-TouchRipple-ripplePulsate {
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c20.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-left-radius: 100vw;
  border-bottom-left-radius: 100vw;
}

.c20.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-right-radius: 100vw;
  border-bottom-right-radius: 100vw;
}

.c20 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 10px 6px 10px 10px;
}

.c20 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c20 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 20px;
  width: 20px;
}

.c20.RcSplitButton-menuOpen .RcSplitButton-actionButton {
  background: rgba(6,111,172,0.08);
}

.c20.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c23 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c23 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c23 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c23 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c23 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c23.RcSplitButton-root {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
}

.c23 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
  box-shadow: none;
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton.focus-visible,
.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton[data-focus-visible-added] {
  background: rgba(6,111,172,0.08);
}

.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}

.c23.RcSplitButton-root,
.c23 .RcSplitButton-groupedHorizontal {
  border-radius: 50%;
}

.c23.RcSplitButton-root .c3,
.c23 .RcSplitButton-groupedHorizontal .c3 {
  min-height: auto;
}

.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 0;
  box-shadow: none;
}

.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible,
.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added] {
  outline: none;
}

.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible:after,
.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -3px;
  right: -3px;
  bottom: -3px;
  left: -3px;
  box-shadow: 0 0 0 2px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c23 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 20px;
  width: 20px;
}

.c23.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c25 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c25 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c25 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c25 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c25 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c25.RcSplitButton-root {
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c25 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  padding-right: 1px;
  border-left: 1px solid transparent;
}

.c25 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c25.RcSplitButton-root {
  border-radius: 100vw;
  overflow: hidden;
}

.c25.RcSplitButton-root .c3 {
  min-height: auto;
}

.c25.RcSplitButton-root .RcSplitButton-TouchRipple-child,
.c25.RcSplitButton-root .RcSplitButton-TouchRipple-ripplePulsate {
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c25.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-left-radius: 100vw;
  border-bottom-left-radius: 100vw;
}

.c25.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-right-radius: 100vw;
  border-bottom-right-radius: 100vw;
}

.c25 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 8px 4px 8px 8px;
}

.c25 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c25 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 16px;
  width: 16px;
}

.c25.RcSplitButton-menuOpen .RcSplitButton-actionButton {
  background: rgba(6,111,172,0.08);
}

.c25.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c28 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c28 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c28 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c28 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c28 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c28.RcSplitButton-root {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
}

.c28 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
  box-shadow: none;
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton.focus-visible,
.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton[data-focus-visible-added] {
  background: rgba(6,111,172,0.08);
}

.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}

.c28.RcSplitButton-root,
.c28 .RcSplitButton-groupedHorizontal {
  border-radius: 50%;
}

.c28.RcSplitButton-root .c3,
.c28 .RcSplitButton-groupedHorizontal .c3 {
  min-height: auto;
}

.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 0;
  box-shadow: none;
}

.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible,
.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added] {
  outline: none;
}

.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible:after,
.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -2px;
  left: -2px;
  box-shadow: 0 0 0 2px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c28 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 16px;
  width: 16px;
}

.c28.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c30 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c30 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c30 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c30 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c30 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c30.RcSplitButton-root {
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c30 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  padding-right: 1px;
  border-left: 1px solid transparent;
}

.c30 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c30.RcSplitButton-root {
  border-radius: 100vw;
  overflow: hidden;
}

.c30.RcSplitButton-root .c3 {
  min-height: auto;
}

.c30.RcSplitButton-root .RcSplitButton-TouchRipple-child,
.c30.RcSplitButton-root .RcSplitButton-TouchRipple-ripplePulsate {
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c30.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-left-radius: 100vw;
  border-bottom-left-radius: 100vw;
}

.c30.RcSplitButton-root .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-right-radius: 100vw;
  border-bottom-right-radius: 100vw;
}

.c30 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 6px 2px 6px 6px;
}

.c30 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c30 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 12px;
  width: 12px;
}

.c30.RcSplitButton-menuOpen .RcSplitButton-actionButton {
  background: rgba(6,111,172,0.08);
}

.c30.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c33 .RcSplitButton-groupedContainedHorizontal:not(:last-child) {
  border-right: unset;
}

.c33 .RcSplitButton-actionButton {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c33 .RcSplitButton-actionButton:after {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c33 .RcSplitButton-controlButton {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c33 .RcSplitButton-controlButton:after {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c33.RcSplitButton-root {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  padding: 0;
  min-width: 24px;
}

.c33 .RcSplitButton-groupedHorizontal:not(.RcSplitButton-actionButton) {
  margin-left: 0;
}

.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
  box-shadow: none;
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton.focus-visible,
.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton[data-focus-visible-added] {
  background: rgba(6,111,172,0.08);
}

.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}

.c33.RcSplitButton-root,
.c33 .RcSplitButton-groupedHorizontal {
  border-radius: 50%;
}

.c33.RcSplitButton-root .c3,
.c33 .RcSplitButton-groupedHorizontal .c3 {
  min-height: auto;
}

.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton {
  min-width: auto;
  padding: 0;
  box-shadow: none;
}

.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible,
.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added] {
  outline: none;
}

.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton.focus-visible:after,
.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -2px;
  left: -2px;
  box-shadow: 0 0 0 2px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-actionButton .c5 {
  margin-right: 0;
}

.c33 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton {
  min-width: 12px;
  width: 12px;
}

.c33.RcSplitButton-menuOpen .RcSplitButton-controlButton {
  background: rgba(6,111,172,0.24);
}

.c0 {
  font-size: 1.25rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 28px;
  color: #121212;
}

.c1 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  color: #666666;
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c10.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c10.RcButton-text:hover {
    color: rgba(6,111,172,0.8);
    background-color: transparent;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c10.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c10.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c21.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c21.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c21.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c24.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c24.RcButton-text:hover {
    color: rgba(6,111,172,0.8);
    background-color: transparent;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c24.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c24.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c26.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c26.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c26.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c29.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c29.RcButton-text:hover {
    color: rgba(6,111,172,0.8);
    background-color: transparent;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c29.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c29.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c31.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c31.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c31.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c34.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c34.RcButton-text:hover {
    color: rgba(6,111,172,0.8);
    background-color: transparent;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c34.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c34.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcSplitButton-root:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c9.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c9 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcSplitButton-root:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c11.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c13.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c13 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c14.RcSplitButton-root:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c14.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c16.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c16 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c17.RcSplitButton-root:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c17.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c19.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c19 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c20.RcSplitButton-root:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c20.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c23.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c23 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c25.RcSplitButton-root:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c25.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c28.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c28 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c30.RcSplitButton-root:hover {
    background: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c30.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c33.RcSplitButton-root:hover .RcSplitButton-controlButton {
    border-left-color: rgba(6,111,172,0.24);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c33 .RcSplitButton-groupedHorizontal.RcSplitButton-controlButton:hover {
    background: rgba(6,111,172,0.08);
  }
}

<div
  className="MuiGrid-root MuiGrid-container"
>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
  >
    <h6
      className="MuiTypography-root c0"
      data-color="neutral.f06"
      data-variant="title2"
    >
      xxxlarge
    </h6>
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      round
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c2 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c6 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c6 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
    <br />
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      plainIcon
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c9 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c10 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c6 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c10 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c6 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
      </button>
    </div>
    <br />
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
  >
    <h6
      className="MuiTypography-root c0"
      data-color="neutral.f06"
      data-variant="title2"
    >
      xxlarge
    </h6>
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      round
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c11 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c12 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c12 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
    <br />
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      plainIcon
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c13 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c10 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c12 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c10 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c12 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
      </button>
    </div>
    <br />
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
  >
    <h6
      className="MuiTypography-root c0"
      data-color="neutral.f06"
      data-variant="title2"
    >
      xlarge
    </h6>
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      round
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c14 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c15 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c15 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
    <br />
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      plainIcon
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c16 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c10 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c15 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c10 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c15 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
      </button>
    </div>
    <br />
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
  >
    <h6
      className="MuiTypography-root c0"
      data-color="neutral.f06"
      data-variant="title2"
    >
      large
    </h6>
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      round
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c17 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c18 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c18 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
    <br />
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      plainIcon
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c19 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c10 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c18 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c10 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c18 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
      </button>
    </div>
    <br />
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
  >
    <h6
      className="MuiTypography-root c0"
      data-color="neutral.f06"
      data-variant="title2"
    >
      medium
    </h6>
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      round
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c20 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c21 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c22 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c21 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c22 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
    <br />
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      plainIcon
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c23 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c24 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c22 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c24 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c22 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
      </button>
    </div>
    <br />
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
  >
    <h6
      className="MuiTypography-root c0"
      data-color="neutral.f06"
      data-variant="title2"
    >
      small
    </h6>
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      round
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c25 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c26 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c27 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c26 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c27 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
    <br />
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      plainIcon
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c28 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c29 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c27 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c29 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c27 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
      </button>
    </div>
    <br />
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
  >
    <h6
      className="MuiTypography-root c0"
      data-color="neutral.f06"
      data-variant="title2"
    >
      xsmall
    </h6>
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      round
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c30 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c31 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c32 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c31 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c32 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
    <br />
    <p
      className="MuiTypography-root c1"
      data-color="neutral.f04"
      data-variant="body1"
    >
      plainIcon
    </p>
    <div
      className="MuiButtonGroup-root RcSplitButton-root c33 MuiButtonGroup-disableElevation MuiButtonGroup-contained"
      role="group"
    >
      <button
        aria-label="mainAction"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c34 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-actionButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            aria-describedby={null}
            className="c5 c32 add icon"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            title="cool"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.899 6.101c5.467 5.467 5.467 14.332 0 19.799s-14.332 5.467-19.799 0C.633 20.433.633 11.568 6.1 6.101s14.332-5.467 19.799 0zm-8.898 8.898L17 9a1 1 0 0 0-1.993-.117L15 9l.001 5.999L9 15a1 1 0 0 0-.117 1.993L9 17l6.001-.001L15 23a1 1 0 0 0 1.993.117L17 23l.001-6.001L23 17a1 1 0 0 0 .117-1.993L23 15l-5.999-.001z"
              />
            </svg>
            
          </span>
        </span>
      </button>
      <button
        aria-haspopup="listbox"
        aria-label="openMenu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c34 MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal RcSplitButton-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal RcSplitButton-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary RcSplitButton-controlButton MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <span
            className="c5 c32 c8 arrow-down icon"
            open={false}
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m16.707 20.293 5.586-5.586A.999.999 0 0 0 21.586 13H10.414a1 1 0 0 0-.707 1.707l5.586 5.586a.999.999 0 0 0 1.414 0z"
              />
            </svg>
            
          </span>
        </span>
      </button>
    </div>
    <br />
  </div>
</div>
`;
