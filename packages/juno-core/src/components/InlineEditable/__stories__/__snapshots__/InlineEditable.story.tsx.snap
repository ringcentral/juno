// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ðŸš€ Cleanup Components/InlineEditable InlineEditable 1`] = `
Array [
  .c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  position: relative;
  display: inline-block;
  width: auto;
  min-width: 32px;
  margin: -4px;
  color: #121212;
}

.c0.RcInlineEditable-saving {
  pointer-events: none;
}

.c0 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: pre;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c0 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c0 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c0 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c0 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c0 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    aria-describedby={null}
    className="c0"
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseOver={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    title="click to edit"
  >
    <input
      aria-label="click to edit"
      autoComplete="off"
      className="RcInlineEditable-textField"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Enter value here"
      type="text"
      value=""
    />
    <div
      className="RcInlineEditable-label RcInlineEditable-placeholder"
      onFocusCapture={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
      title=""
    >
      Enter value here
    </div>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  text-transform: none;
  font-size: 0.875rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
  min-width: 96px;
  min-height: 36px;
  padding: 0px 16px;
}

.c0 .RcButton-startIcon {
  margin-right: 8px;
}

.c0 .RcButton-endIcon {
  margin-left: 8px;
}

.c0.RcButton-text {
  color: #066FAC;
}

.c0.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c0.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c0.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c0.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c0.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

<button
    className="MuiButtonBase-root MuiButton-root MuiButton-contained RcButton-contained c0"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Switch to 
      disabled
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>,
]
`;

exports[`Storyshots ðŸš€ Cleanup Components/InlineEditable InlineEditable custom 1`] = `
Array [
  .c0 {
  font-size: 1.5rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 32px;
  color: #121212;
}

<h5
    className="MuiTypography-root c0 MuiTypography-paragraph MuiTypography-displayBlock"
    data-color="neutral.f06"
    data-variant="headline1"
  >
    Single line
  </h5>,
  .c0 {
  font-size: 1.25rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 28px;
  position: relative;
  display: inline-block;
  width: 100%;
  min-width: 32px;
  margin: -4px;
  color: #121212;
}

.c0.RcInlineEditable-saving {
  pointer-events: none;
}

.c0 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: pre;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c0 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c0 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c0 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c0 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c0 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

<div
    className="c0"
    onKeyDown={[Function]}
    onMouseDown={[Function]}
  >
    <input
      autoComplete="off"
      className="RcInlineEditable-textField"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Enter value here"
      type="text"
      value=""
    />
    <div
      className="RcInlineEditable-label RcInlineEditable-placeholder"
      onFocusCapture={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
      title=""
    >
      Enter value here
    </div>
  </div>,
  <br />,
  <br />,
  <br />,
  <br />,
  .c0 {
  font-size: 1.5rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 32px;
  color: #121212;
}

<h5
    className="MuiTypography-root c0 MuiTypography-paragraph MuiTypography-displayBlock"
    data-color="neutral.f06"
    data-variant="headline1"
  >
    Multi line
  </h5>,
  .c0 {
  font-size: 1.25rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 28px;
  position: relative;
  display: inline-block;
  width: 100%;
  min-width: 32px;
  margin: -4px;
  color: #066FAC;
}

.c0.RcInlineEditable-saving {
  pointer-events: none;
}

.c0 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  overflow-wrap: anywhere;
  white-space: pre-wrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c0 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c0 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  height: 100%;
  overflow: hidden;
  resize: none;
}

.c0 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c0 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c0 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

<div
    className="c0"
    onKeyDown={[Function]}
    onMouseDown={[Function]}
  >
    <textarea
      autoComplete="off"
      className="RcInlineEditable-textField"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Enter value here"
      value=""
    />
    <div
      className="RcInlineEditable-label RcInlineEditable-placeholder"
      onFocusCapture={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
      title=""
    >
      Enter value here
    </div>
  </div>,
]
`;

exports[`Storyshots ðŸš€ Cleanup Components/InlineEditable InlineEditable multiline 1`] = `
.c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  position: relative;
  display: inline-block;
  width: 100%;
  min-width: 32px;
  margin: -4px;
  color: #121212;
}

.c0.RcInlineEditable-saving {
  pointer-events: none;
}

.c0 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  overflow-wrap: anywhere;
  white-space: pre-wrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c0 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c0 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  height: 100%;
  overflow: hidden;
  resize: none;
}

.c0 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c0 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c0 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

<div
  className="c0"
  onKeyDown={[Function]}
  onMouseDown={[Function]}
>
  <textarea
    autoComplete="off"
    className="RcInlineEditable-textField"
    onBlurCapture={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Enter value here"
    value="All-in-one business communications
Message,
video,
phone in one,
so your team can do their best work from anywhere."
  />
  <div
    className="RcInlineEditable-label"
    onFocusCapture={[Function]}
    onKeyDown={[Function]}
    tabIndex={-1}
    title="All-in-one business communications
Message,
video,
phone in one,
so your team can do their best work from anywhere."
  >
    All-in-one business communications
Message,
video,
phone in one,
so your team can do their best work from anywhere.
  </div>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/InlineEditable InlineEditable only enter 1`] = `
.c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  position: relative;
  display: inline-block;
  width: 100%;
  min-width: 32px;
  margin: -4px;
  color: #121212;
}

.c0.RcInlineEditable-saving {
  pointer-events: none;
}

.c0 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  overflow-wrap: anywhere;
  white-space: pre-wrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c0 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c0 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  height: 100%;
  overflow: hidden;
  resize: none;
}

.c0 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c0 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c0 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

<div
  className="c0"
  onKeyDown={[Function]}
  onMouseDown={[Function]}
>
  <textarea
    autoComplete="off"
    className="RcInlineEditable-textField"
    onBlurCapture={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Enter value here"
    value=""
  />
  <div
    className="RcInlineEditable-label RcInlineEditable-placeholder"
    onFocusCapture={[Function]}
    onKeyDown={[Function]}
    tabIndex={-1}
    title=""
  >
    Enter value here
  </div>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/InlineEditable InlineEditable with loading 1`] = `
.c1 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  position: relative;
  display: inline-block;
  width: auto;
  min-width: 32px;
  margin: -4px;
  color: #121212;
}

.c1.RcInlineEditable-saving {
  pointer-events: none;
}

.c1 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: pre;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c1 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c1 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c1 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c1 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c1 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c1 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c1 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c1 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c1 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c1 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c1 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c1 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c1 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c1 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

.c0 .custom-saving {
  box-shadow: 0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12);
  background-color: #F3F3F3;
}

<div
  className="c0"
>
  <div
    aria-describedby={null}
    className="c1"
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseOver={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    title="click to edit"
  >
    <input
      aria-label="click to edit"
      autoComplete="off"
      className="RcInlineEditable-textField"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Enter value here"
      type="text"
      value="show loading style when onChange"
    />
    <div
      className="RcInlineEditable-label"
      onFocusCapture={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
      title="show loading style when onChange"
    >
      show loading style when onChange
    </div>
  </div>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/InlineEditable InlineEditable with tooltip 1`] = `
Array [
  .c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  position: relative;
  display: inline-block;
  width: auto;
  min-width: 32px;
  margin: -4px;
  color: #121212;
}

.c0.RcInlineEditable-saving {
  pointer-events: none;
}

.c0 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: pre;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c0 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c0 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c0 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c0 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c0 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    aria-describedby={null}
    className="c0"
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseOver={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    title="click to edit"
  >
    <input
      aria-label="click to edit"
      autoComplete="off"
      className="RcInlineEditable-textField"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Enter value here"
      type="text"
      value="So value as tooltip when disabled"
    />
    <div
      className="RcInlineEditable-label"
      onFocusCapture={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
      title="So value as tooltip when disabled"
    >
      So value as tooltip when disabled
    </div>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  position: relative;
  display: inline-block;
  width: 100%;
  min-width: 32px;
  margin: -4px;
  color: #121212;
}

.c0.RcInlineEditable-saving {
  pointer-events: none;
}

.c0 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  overflow-wrap: anywhere;
  white-space: pre-wrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c0 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c0 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  height: 100%;
  overflow: hidden;
  resize: none;
}

.c0 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c0 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c0 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    aria-describedby={null}
    className="c0"
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseOver={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    title="click to edit"
  >
    <textarea
      autoComplete="off"
      className="RcInlineEditable-textField"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Enter value here"
      value="So value as tooltip when disabled"
    />
    <div
      className="RcInlineEditable-label"
      onFocusCapture={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
      title="custom title"
    >
      So value as tooltip when disabled
    </div>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  text-transform: none;
  font-size: 0.875rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
  min-width: 96px;
  min-height: 36px;
  padding: 0px 16px;
}

.c0 .RcButton-startIcon {
  margin-right: 8px;
}

.c0 .RcButton-endIcon {
  margin-left: 8px;
}

.c0.RcButton-text {
  color: #066FAC;
}

.c0.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c0.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c0.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c0.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c0.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

<button
    className="MuiButtonBase-root MuiButton-root MuiButton-contained RcButton-contained c0"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Switch to 
      disabled
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>,
]
`;

exports[`Storyshots ðŸš€ Cleanup Components/InlineEditable InlineEditable without placeholder 1`] = `
Array [
  .c0 {
  font-size: 1.25rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 28px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<h6
    className="MuiTypography-root c0"
    data-color="neutral.f06"
    data-variant="title1"
  >
    When not have value and also non placeholder, show size boundary below.
  </h6>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<p
    className="MuiTypography-root c0"
    data-color="neutral.f06"
    data-variant="body1"
  >
    red is InlineEditable container, green is input
  </p>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  text-transform: none;
  font-size: 0.875rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
  min-width: 96px;
  min-height: 36px;
  padding: 0px 16px;
}

.c0 .RcButton-startIcon {
  margin-right: 8px;
}

.c0 .RcButton-endIcon {
  margin-left: 8px;
}

.c0.RcButton-text {
  color: #066FAC;
}

.c0.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c0.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c0.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c0.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c0.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

<button
    className="MuiButtonBase-root MuiButton-root MuiButton-contained RcButton-contained c0"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Switch to 
      disabled
    </span>
  </button>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<p
    className="MuiTypography-root c0"
    data-color="neutral.f06"
    data-variant="body1"
  >
    one line: 
  </p>,
  .c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  position: relative;
  display: inline-block;
  width: auto;
  min-width: 32px;
  margin: -4px;
  color: #121212;
}

.c0.RcInlineEditable-saving {
  pointer-events: none;
}

.c0 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: pre;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c0 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c0 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c0 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c0 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c0 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="c0"
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    style={
      Object {
        "backgroundColor": "#D63E39",
      }
    }
  >
    <input
      autoComplete="off"
      className="RcInlineEditable-textField"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "backgroundColor": "#CEF4CE",
        }
      }
      type="text"
      value=""
    />
    <div
      className="RcInlineEditable-label RcInlineEditable-placeholder"
      onFocusCapture={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
      title=""
    />
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<p
    className="MuiTypography-root c0"
    data-color="neutral.f06"
    data-variant="body1"
  >
    multiple line: 
  </p>,
  .c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  position: relative;
  display: inline-block;
  width: 100%;
  min-width: 32px;
  margin: -4px;
  color: #121212;
}

.c0.RcInlineEditable-saving {
  pointer-events: none;
}

.c0 .RcInlineEditable-label {
  margin: 4px;
  position: relative;
  outline: none;
  box-sizing: border-box;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  overflow-wrap: anywhere;
  white-space: pre-wrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .RcInlineEditable-label::after {
  content: ' ';
  width: 0;
  visibility: hidden;
  display: inline-block;
}

.c0 .RcInlineEditable-placeholder {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #757575;
}

.c0 .RcInlineEditable-textField {
  position: absolute;
  width: 100%;
  border: 1px solid transparent;
  padding: 2px;
  background-color: transparent;
  color: transparent;
  line-height: inherit;
  white-space: pre-wrap;
  box-sizing: border-box;
  font: inherit;
  outline: none;
  border-radius: 4px;
  height: 100%;
  overflow: hidden;
  resize: none;
}

.c0 .RcInlineEditable-textField::-webkit-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::-moz-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:-ms-input-placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField::placeholder {
  font: inherit;
  opacity: 0;
  color: #757575;
}

.c0 .RcInlineEditable-textField:hover {
  background-color: #FFFFFF;
  border: 1px solid #E5E5E5;
}

.c0 .RcInlineEditable-textField:focus {
  background-color: #FFFFFF;
  border: 2px solid #066FAC;
  color: inherit;
}

.c0 .RcInlineEditable-textField:focus::-webkit-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::-moz-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus:-ms-input-placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus::placeholder {
  opacity: 1;
}

.c0 .RcInlineEditable-textField:focus ~ .RcInlineEditable-label {
  visibility: hidden;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="c0"
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    style={
      Object {
        "backgroundColor": "#D63E39",
      }
    }
  >
    <textarea
      autoComplete="off"
      className="RcInlineEditable-textField"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "backgroundColor": "#CEF4CE",
        }
      }
      value=""
    />
    <div
      className="RcInlineEditable-label RcInlineEditable-placeholder"
      onFocusCapture={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
      title=""
    />
  </div>,
]
`;
