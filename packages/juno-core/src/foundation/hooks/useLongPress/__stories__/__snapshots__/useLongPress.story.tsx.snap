// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ðŸ”§ Foundation/Hooks/useLongPress useLongPress 1`] = `
Array [
  .c0 {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 20px;
  color: #121212;
}

.c1 {
  font-family: Lato,Helvetica,Arial,sans-serif;
}

.c2.highlight-term {
  color: #121212 !important;
  background-color: #FFDFB1 !important;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<p
    className="MuiTypography-root c0"
    data-color="neutral.f06"
    data-variant="body1"
  >
    Provide longPress helper, both
     
    <span
      className="MuiTypography-root c1 c2 highlight-term MuiTypography-noWrap"
      data-color="initial"
      data-variant="inherit"
      title="\`click\`/\`tab\`/\`keydown"
    >
      \`click\`/\`tab\`/\`keydown
    </span>
    ('a11y keyboard')\` will trigger event
    <li>
      - Trigger \`onTap\` when user action leave small than delay time.
    </li>
    <li>
      - Trigger \`onPress\` when action time is long than delay time.
    </li>
  </p>,
  .c0 {
  text-transform: none;
  font-size: 0.875rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  border-radius: 4px;
  min-width: 96px;
  min-height: 36px;
  padding: 0px 16px;
}

.c0 .RcButton-startIcon {
  margin-right: 8px;
}

.c0 .RcButton-endIcon {
  margin-left: 8px;
}

.c0.RcButton-text {
  color: #066FAC;
}

.c0.RcButton-text.RcButton-disabled {
  color: #C7C7C7;
}

.c0.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c0.RcButton-contained.RcButton-disabled {
  background-color: #E5E5E5;
  color: #939393;
}

.c0.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 15px;
}

.c0.RcButton-outlined.RcButton-disabled {
  color: #C7C7C7;
  border-color: #C7C7C7;
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

<button
    className="MuiButtonBase-root MuiButton-root MuiButton-contained RcButton-contained c0"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Trigger event
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="MuiBox-root MuiBox-root-14"
    style={
      Object {
        "overflowX": "hidden",
      }
    }
  />,
]
`;
